/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/mixins/Draggable.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::BoxWithBorder graphBackground;
    touchgfx::GraphWrapAndClear<150> My_graph;
    touchgfx::GraphElementBoxes My_graphBoxes1;
    touchgfx::GraphElementHistogram My_graphHistogram1;
    touchgfx::GraphElementGridY My_graphMajorYAxisGrid;
    touchgfx::GraphLabelsX My_graphMajorXAxisLabel;
    touchgfx::GraphLabelsY My_graphMajorYAxisLabel;
    touchgfx::Draggable< touchgfx::TextAreaWithOneWildcard > txt_area;
    touchgfx::TextArea txt_area2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TXT_AREA_SIZE = 100;
    touchgfx::Unicode::UnicodeChar txt_areaBuffer[TXT_AREA_SIZE];

private:

    /*
     * Delay Variable Declarations
     */
    static const uint16_t INTERACTION1_DURATION = 600;
    uint16_t interaction1Counter;
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractDataGraph&, const touchgfx::AbstractDataGraph::GraphClickEvent&> graphClickedCallback;
    void graphClickedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphClickEvent& value);

};

#endif // MAINVIEWBASE_HPP
