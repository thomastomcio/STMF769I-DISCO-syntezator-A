
STM32F769I_DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00021bc4  08000200  08000200  00010200  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000041a0  08021dc8  08021dc8  00031dc8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 0000000c  08025f68  08025f68  00035f68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08025f74  08025f74  000660ac  2**0
                  CONTENTS
  5 .ARM          00000008  08025f74  08025f74  00035f74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  08025f7c  08025f7c  000660ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000020  08025f7c  08025f7c  00035f7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000010  08025f9c  08025f9c  00035f9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000154  20000000  08025fac  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          00016b80  20000154  08026100  00040154  2**2
                  ALLOC
 11 ._user_heap_stack 00003004  20016cd4  08026100  00046cd4  2**0
                  ALLOC
 12 .ARM.attributes 0000002e  00000000  00000000  000660ac  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00000000  90000000  90000000  000660da  2**0
                  CONTENTS
 14 FontFlashSection 00016018  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000094  90016018  90016018  00066018  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   0003a12d  00000000  00000000  000660da  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_info   000b4845  00000000  00000000  000a0207  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_abbrev 00013c03  00000000  00000000  00154a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_aranges 00002d00  00000000  00000000  00168650  2**3
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_str    0015860e  00000000  00000000  0016b350  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_ranges 00004500  00000000  00000000  002c3960  2**3
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_loc    000231b2  00000000  00000000  002c7e60  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_macro  0003f532  00000000  00000000  002eb012  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .comment      000000fa  00000000  00000000  0032a544  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00008d34  00000000  00000000  0032a640  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000200 <__do_global_dtors_aux>:
 8000200:	b510      	push	{r4, lr}
 8000202:	4c05      	ldr	r4, [pc, #20]	; (8000218 <__do_global_dtors_aux+0x18>)
 8000204:	7823      	ldrb	r3, [r4, #0]
 8000206:	b933      	cbnz	r3, 8000216 <__do_global_dtors_aux+0x16>
 8000208:	4b04      	ldr	r3, [pc, #16]	; (800021c <__do_global_dtors_aux+0x1c>)
 800020a:	b113      	cbz	r3, 8000212 <__do_global_dtors_aux+0x12>
 800020c:	4804      	ldr	r0, [pc, #16]	; (8000220 <__do_global_dtors_aux+0x20>)
 800020e:	f3af 8000 	nop.w
 8000212:	2301      	movs	r3, #1
 8000214:	7023      	strb	r3, [r4, #0]
 8000216:	bd10      	pop	{r4, pc}
 8000218:	20000154 	.word	0x20000154
 800021c:	00000000 	.word	0x00000000
 8000220:	08021dac 	.word	0x08021dac

08000224 <frame_dummy>:
 8000224:	b508      	push	{r3, lr}
 8000226:	4b03      	ldr	r3, [pc, #12]	; (8000234 <frame_dummy+0x10>)
 8000228:	b11b      	cbz	r3, 8000232 <frame_dummy+0xe>
 800022a:	4903      	ldr	r1, [pc, #12]	; (8000238 <frame_dummy+0x14>)
 800022c:	4803      	ldr	r0, [pc, #12]	; (800023c <frame_dummy+0x18>)
 800022e:	f3af 8000 	nop.w
 8000232:	bd08      	pop	{r3, pc}
 8000234:	00000000 	.word	0x00000000
 8000238:	20000158 	.word	0x20000158
 800023c:	08021dac 	.word	0x08021dac

08000240 <memchr>:
 8000240:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000244:	2a10      	cmp	r2, #16
 8000246:	db2b      	blt.n	80002a0 <memchr+0x60>
 8000248:	f010 0f07 	tst.w	r0, #7
 800024c:	d008      	beq.n	8000260 <memchr+0x20>
 800024e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000252:	3a01      	subs	r2, #1
 8000254:	428b      	cmp	r3, r1
 8000256:	d02d      	beq.n	80002b4 <memchr+0x74>
 8000258:	f010 0f07 	tst.w	r0, #7
 800025c:	b342      	cbz	r2, 80002b0 <memchr+0x70>
 800025e:	d1f6      	bne.n	800024e <memchr+0xe>
 8000260:	b4f0      	push	{r4, r5, r6, r7}
 8000262:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000266:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800026a:	f022 0407 	bic.w	r4, r2, #7
 800026e:	f07f 0700 	mvns.w	r7, #0
 8000272:	2300      	movs	r3, #0
 8000274:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000278:	3c08      	subs	r4, #8
 800027a:	ea85 0501 	eor.w	r5, r5, r1
 800027e:	ea86 0601 	eor.w	r6, r6, r1
 8000282:	fa85 f547 	uadd8	r5, r5, r7
 8000286:	faa3 f587 	sel	r5, r3, r7
 800028a:	fa86 f647 	uadd8	r6, r6, r7
 800028e:	faa5 f687 	sel	r6, r5, r7
 8000292:	b98e      	cbnz	r6, 80002b8 <memchr+0x78>
 8000294:	d1ee      	bne.n	8000274 <memchr+0x34>
 8000296:	bcf0      	pop	{r4, r5, r6, r7}
 8000298:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800029c:	f002 0207 	and.w	r2, r2, #7
 80002a0:	b132      	cbz	r2, 80002b0 <memchr+0x70>
 80002a2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002a6:	3a01      	subs	r2, #1
 80002a8:	ea83 0301 	eor.w	r3, r3, r1
 80002ac:	b113      	cbz	r3, 80002b4 <memchr+0x74>
 80002ae:	d1f8      	bne.n	80002a2 <memchr+0x62>
 80002b0:	2000      	movs	r0, #0
 80002b2:	4770      	bx	lr
 80002b4:	3801      	subs	r0, #1
 80002b6:	4770      	bx	lr
 80002b8:	2d00      	cmp	r5, #0
 80002ba:	bf06      	itte	eq
 80002bc:	4635      	moveq	r5, r6
 80002be:	3803      	subeq	r0, #3
 80002c0:	3807      	subne	r0, #7
 80002c2:	f015 0f01 	tst.w	r5, #1
 80002c6:	d107      	bne.n	80002d8 <memchr+0x98>
 80002c8:	3001      	adds	r0, #1
 80002ca:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ce:	bf02      	ittt	eq
 80002d0:	3001      	addeq	r0, #1
 80002d2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002d6:	3001      	addeq	r0, #1
 80002d8:	bcf0      	pop	{r4, r5, r6, r7}
 80002da:	3801      	subs	r0, #1
 80002dc:	4770      	bx	lr
 80002de:	bf00      	nop

080002e0 <__aeabi_uldivmod>:
 80002e0:	b953      	cbnz	r3, 80002f8 <__aeabi_uldivmod+0x18>
 80002e2:	b94a      	cbnz	r2, 80002f8 <__aeabi_uldivmod+0x18>
 80002e4:	2900      	cmp	r1, #0
 80002e6:	bf08      	it	eq
 80002e8:	2800      	cmpeq	r0, #0
 80002ea:	bf1c      	itt	ne
 80002ec:	f04f 31ff 	movne.w	r1, #4294967295
 80002f0:	f04f 30ff 	movne.w	r0, #4294967295
 80002f4:	f000 b972 	b.w	80005dc <__aeabi_idiv0>
 80002f8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002fc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000300:	f000 f806 	bl	8000310 <__udivmoddi4>
 8000304:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000308:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800030c:	b004      	add	sp, #16
 800030e:	4770      	bx	lr

08000310 <__udivmoddi4>:
 8000310:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000314:	9e08      	ldr	r6, [sp, #32]
 8000316:	4604      	mov	r4, r0
 8000318:	4688      	mov	r8, r1
 800031a:	2b00      	cmp	r3, #0
 800031c:	d14b      	bne.n	80003b6 <__udivmoddi4+0xa6>
 800031e:	428a      	cmp	r2, r1
 8000320:	4615      	mov	r5, r2
 8000322:	d967      	bls.n	80003f4 <__udivmoddi4+0xe4>
 8000324:	fab2 f282 	clz	r2, r2
 8000328:	b14a      	cbz	r2, 800033e <__udivmoddi4+0x2e>
 800032a:	f1c2 0720 	rsb	r7, r2, #32
 800032e:	fa01 f302 	lsl.w	r3, r1, r2
 8000332:	fa20 f707 	lsr.w	r7, r0, r7
 8000336:	4095      	lsls	r5, r2
 8000338:	ea47 0803 	orr.w	r8, r7, r3
 800033c:	4094      	lsls	r4, r2
 800033e:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000342:	0c23      	lsrs	r3, r4, #16
 8000344:	fbb8 f7fe 	udiv	r7, r8, lr
 8000348:	fa1f fc85 	uxth.w	ip, r5
 800034c:	fb0e 8817 	mls	r8, lr, r7, r8
 8000350:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000354:	fb07 f10c 	mul.w	r1, r7, ip
 8000358:	4299      	cmp	r1, r3
 800035a:	d909      	bls.n	8000370 <__udivmoddi4+0x60>
 800035c:	18eb      	adds	r3, r5, r3
 800035e:	f107 30ff 	add.w	r0, r7, #4294967295
 8000362:	f080 811b 	bcs.w	800059c <__udivmoddi4+0x28c>
 8000366:	4299      	cmp	r1, r3
 8000368:	f240 8118 	bls.w	800059c <__udivmoddi4+0x28c>
 800036c:	3f02      	subs	r7, #2
 800036e:	442b      	add	r3, r5
 8000370:	1a5b      	subs	r3, r3, r1
 8000372:	b2a4      	uxth	r4, r4
 8000374:	fbb3 f0fe 	udiv	r0, r3, lr
 8000378:	fb0e 3310 	mls	r3, lr, r0, r3
 800037c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000380:	fb00 fc0c 	mul.w	ip, r0, ip
 8000384:	45a4      	cmp	ip, r4
 8000386:	d909      	bls.n	800039c <__udivmoddi4+0x8c>
 8000388:	192c      	adds	r4, r5, r4
 800038a:	f100 33ff 	add.w	r3, r0, #4294967295
 800038e:	f080 8107 	bcs.w	80005a0 <__udivmoddi4+0x290>
 8000392:	45a4      	cmp	ip, r4
 8000394:	f240 8104 	bls.w	80005a0 <__udivmoddi4+0x290>
 8000398:	3802      	subs	r0, #2
 800039a:	442c      	add	r4, r5
 800039c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 80003a0:	eba4 040c 	sub.w	r4, r4, ip
 80003a4:	2700      	movs	r7, #0
 80003a6:	b11e      	cbz	r6, 80003b0 <__udivmoddi4+0xa0>
 80003a8:	40d4      	lsrs	r4, r2
 80003aa:	2300      	movs	r3, #0
 80003ac:	e9c6 4300 	strd	r4, r3, [r6]
 80003b0:	4639      	mov	r1, r7
 80003b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003b6:	428b      	cmp	r3, r1
 80003b8:	d909      	bls.n	80003ce <__udivmoddi4+0xbe>
 80003ba:	2e00      	cmp	r6, #0
 80003bc:	f000 80eb 	beq.w	8000596 <__udivmoddi4+0x286>
 80003c0:	2700      	movs	r7, #0
 80003c2:	e9c6 0100 	strd	r0, r1, [r6]
 80003c6:	4638      	mov	r0, r7
 80003c8:	4639      	mov	r1, r7
 80003ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003ce:	fab3 f783 	clz	r7, r3
 80003d2:	2f00      	cmp	r7, #0
 80003d4:	d147      	bne.n	8000466 <__udivmoddi4+0x156>
 80003d6:	428b      	cmp	r3, r1
 80003d8:	d302      	bcc.n	80003e0 <__udivmoddi4+0xd0>
 80003da:	4282      	cmp	r2, r0
 80003dc:	f200 80fa 	bhi.w	80005d4 <__udivmoddi4+0x2c4>
 80003e0:	1a84      	subs	r4, r0, r2
 80003e2:	eb61 0303 	sbc.w	r3, r1, r3
 80003e6:	2001      	movs	r0, #1
 80003e8:	4698      	mov	r8, r3
 80003ea:	2e00      	cmp	r6, #0
 80003ec:	d0e0      	beq.n	80003b0 <__udivmoddi4+0xa0>
 80003ee:	e9c6 4800 	strd	r4, r8, [r6]
 80003f2:	e7dd      	b.n	80003b0 <__udivmoddi4+0xa0>
 80003f4:	b902      	cbnz	r2, 80003f8 <__udivmoddi4+0xe8>
 80003f6:	deff      	udf	#255	; 0xff
 80003f8:	fab2 f282 	clz	r2, r2
 80003fc:	2a00      	cmp	r2, #0
 80003fe:	f040 808f 	bne.w	8000520 <__udivmoddi4+0x210>
 8000402:	1b49      	subs	r1, r1, r5
 8000404:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000408:	fa1f f885 	uxth.w	r8, r5
 800040c:	2701      	movs	r7, #1
 800040e:	fbb1 fcfe 	udiv	ip, r1, lr
 8000412:	0c23      	lsrs	r3, r4, #16
 8000414:	fb0e 111c 	mls	r1, lr, ip, r1
 8000418:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800041c:	fb08 f10c 	mul.w	r1, r8, ip
 8000420:	4299      	cmp	r1, r3
 8000422:	d907      	bls.n	8000434 <__udivmoddi4+0x124>
 8000424:	18eb      	adds	r3, r5, r3
 8000426:	f10c 30ff 	add.w	r0, ip, #4294967295
 800042a:	d202      	bcs.n	8000432 <__udivmoddi4+0x122>
 800042c:	4299      	cmp	r1, r3
 800042e:	f200 80cd 	bhi.w	80005cc <__udivmoddi4+0x2bc>
 8000432:	4684      	mov	ip, r0
 8000434:	1a59      	subs	r1, r3, r1
 8000436:	b2a3      	uxth	r3, r4
 8000438:	fbb1 f0fe 	udiv	r0, r1, lr
 800043c:	fb0e 1410 	mls	r4, lr, r0, r1
 8000440:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000444:	fb08 f800 	mul.w	r8, r8, r0
 8000448:	45a0      	cmp	r8, r4
 800044a:	d907      	bls.n	800045c <__udivmoddi4+0x14c>
 800044c:	192c      	adds	r4, r5, r4
 800044e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000452:	d202      	bcs.n	800045a <__udivmoddi4+0x14a>
 8000454:	45a0      	cmp	r8, r4
 8000456:	f200 80b6 	bhi.w	80005c6 <__udivmoddi4+0x2b6>
 800045a:	4618      	mov	r0, r3
 800045c:	eba4 0408 	sub.w	r4, r4, r8
 8000460:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000464:	e79f      	b.n	80003a6 <__udivmoddi4+0x96>
 8000466:	f1c7 0c20 	rsb	ip, r7, #32
 800046a:	40bb      	lsls	r3, r7
 800046c:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000470:	ea4e 0e03 	orr.w	lr, lr, r3
 8000474:	fa01 f407 	lsl.w	r4, r1, r7
 8000478:	fa20 f50c 	lsr.w	r5, r0, ip
 800047c:	fa21 f30c 	lsr.w	r3, r1, ip
 8000480:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000484:	4325      	orrs	r5, r4
 8000486:	fbb3 f9f8 	udiv	r9, r3, r8
 800048a:	0c2c      	lsrs	r4, r5, #16
 800048c:	fb08 3319 	mls	r3, r8, r9, r3
 8000490:	fa1f fa8e 	uxth.w	sl, lr
 8000494:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000498:	fb09 f40a 	mul.w	r4, r9, sl
 800049c:	429c      	cmp	r4, r3
 800049e:	fa02 f207 	lsl.w	r2, r2, r7
 80004a2:	fa00 f107 	lsl.w	r1, r0, r7
 80004a6:	d90b      	bls.n	80004c0 <__udivmoddi4+0x1b0>
 80004a8:	eb1e 0303 	adds.w	r3, lr, r3
 80004ac:	f109 30ff 	add.w	r0, r9, #4294967295
 80004b0:	f080 8087 	bcs.w	80005c2 <__udivmoddi4+0x2b2>
 80004b4:	429c      	cmp	r4, r3
 80004b6:	f240 8084 	bls.w	80005c2 <__udivmoddi4+0x2b2>
 80004ba:	f1a9 0902 	sub.w	r9, r9, #2
 80004be:	4473      	add	r3, lr
 80004c0:	1b1b      	subs	r3, r3, r4
 80004c2:	b2ad      	uxth	r5, r5
 80004c4:	fbb3 f0f8 	udiv	r0, r3, r8
 80004c8:	fb08 3310 	mls	r3, r8, r0, r3
 80004cc:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 80004d0:	fb00 fa0a 	mul.w	sl, r0, sl
 80004d4:	45a2      	cmp	sl, r4
 80004d6:	d908      	bls.n	80004ea <__udivmoddi4+0x1da>
 80004d8:	eb1e 0404 	adds.w	r4, lr, r4
 80004dc:	f100 33ff 	add.w	r3, r0, #4294967295
 80004e0:	d26b      	bcs.n	80005ba <__udivmoddi4+0x2aa>
 80004e2:	45a2      	cmp	sl, r4
 80004e4:	d969      	bls.n	80005ba <__udivmoddi4+0x2aa>
 80004e6:	3802      	subs	r0, #2
 80004e8:	4474      	add	r4, lr
 80004ea:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80004ee:	fba0 8902 	umull	r8, r9, r0, r2
 80004f2:	eba4 040a 	sub.w	r4, r4, sl
 80004f6:	454c      	cmp	r4, r9
 80004f8:	46c2      	mov	sl, r8
 80004fa:	464b      	mov	r3, r9
 80004fc:	d354      	bcc.n	80005a8 <__udivmoddi4+0x298>
 80004fe:	d051      	beq.n	80005a4 <__udivmoddi4+0x294>
 8000500:	2e00      	cmp	r6, #0
 8000502:	d069      	beq.n	80005d8 <__udivmoddi4+0x2c8>
 8000504:	ebb1 050a 	subs.w	r5, r1, sl
 8000508:	eb64 0403 	sbc.w	r4, r4, r3
 800050c:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000510:	40fd      	lsrs	r5, r7
 8000512:	40fc      	lsrs	r4, r7
 8000514:	ea4c 0505 	orr.w	r5, ip, r5
 8000518:	e9c6 5400 	strd	r5, r4, [r6]
 800051c:	2700      	movs	r7, #0
 800051e:	e747      	b.n	80003b0 <__udivmoddi4+0xa0>
 8000520:	f1c2 0320 	rsb	r3, r2, #32
 8000524:	fa20 f703 	lsr.w	r7, r0, r3
 8000528:	4095      	lsls	r5, r2
 800052a:	fa01 f002 	lsl.w	r0, r1, r2
 800052e:	fa21 f303 	lsr.w	r3, r1, r3
 8000532:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000536:	4338      	orrs	r0, r7
 8000538:	0c01      	lsrs	r1, r0, #16
 800053a:	fbb3 f7fe 	udiv	r7, r3, lr
 800053e:	fa1f f885 	uxth.w	r8, r5
 8000542:	fb0e 3317 	mls	r3, lr, r7, r3
 8000546:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800054a:	fb07 f308 	mul.w	r3, r7, r8
 800054e:	428b      	cmp	r3, r1
 8000550:	fa04 f402 	lsl.w	r4, r4, r2
 8000554:	d907      	bls.n	8000566 <__udivmoddi4+0x256>
 8000556:	1869      	adds	r1, r5, r1
 8000558:	f107 3cff 	add.w	ip, r7, #4294967295
 800055c:	d22f      	bcs.n	80005be <__udivmoddi4+0x2ae>
 800055e:	428b      	cmp	r3, r1
 8000560:	d92d      	bls.n	80005be <__udivmoddi4+0x2ae>
 8000562:	3f02      	subs	r7, #2
 8000564:	4429      	add	r1, r5
 8000566:	1acb      	subs	r3, r1, r3
 8000568:	b281      	uxth	r1, r0
 800056a:	fbb3 f0fe 	udiv	r0, r3, lr
 800056e:	fb0e 3310 	mls	r3, lr, r0, r3
 8000572:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000576:	fb00 f308 	mul.w	r3, r0, r8
 800057a:	428b      	cmp	r3, r1
 800057c:	d907      	bls.n	800058e <__udivmoddi4+0x27e>
 800057e:	1869      	adds	r1, r5, r1
 8000580:	f100 3cff 	add.w	ip, r0, #4294967295
 8000584:	d217      	bcs.n	80005b6 <__udivmoddi4+0x2a6>
 8000586:	428b      	cmp	r3, r1
 8000588:	d915      	bls.n	80005b6 <__udivmoddi4+0x2a6>
 800058a:	3802      	subs	r0, #2
 800058c:	4429      	add	r1, r5
 800058e:	1ac9      	subs	r1, r1, r3
 8000590:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000594:	e73b      	b.n	800040e <__udivmoddi4+0xfe>
 8000596:	4637      	mov	r7, r6
 8000598:	4630      	mov	r0, r6
 800059a:	e709      	b.n	80003b0 <__udivmoddi4+0xa0>
 800059c:	4607      	mov	r7, r0
 800059e:	e6e7      	b.n	8000370 <__udivmoddi4+0x60>
 80005a0:	4618      	mov	r0, r3
 80005a2:	e6fb      	b.n	800039c <__udivmoddi4+0x8c>
 80005a4:	4541      	cmp	r1, r8
 80005a6:	d2ab      	bcs.n	8000500 <__udivmoddi4+0x1f0>
 80005a8:	ebb8 0a02 	subs.w	sl, r8, r2
 80005ac:	eb69 020e 	sbc.w	r2, r9, lr
 80005b0:	3801      	subs	r0, #1
 80005b2:	4613      	mov	r3, r2
 80005b4:	e7a4      	b.n	8000500 <__udivmoddi4+0x1f0>
 80005b6:	4660      	mov	r0, ip
 80005b8:	e7e9      	b.n	800058e <__udivmoddi4+0x27e>
 80005ba:	4618      	mov	r0, r3
 80005bc:	e795      	b.n	80004ea <__udivmoddi4+0x1da>
 80005be:	4667      	mov	r7, ip
 80005c0:	e7d1      	b.n	8000566 <__udivmoddi4+0x256>
 80005c2:	4681      	mov	r9, r0
 80005c4:	e77c      	b.n	80004c0 <__udivmoddi4+0x1b0>
 80005c6:	3802      	subs	r0, #2
 80005c8:	442c      	add	r4, r5
 80005ca:	e747      	b.n	800045c <__udivmoddi4+0x14c>
 80005cc:	f1ac 0c02 	sub.w	ip, ip, #2
 80005d0:	442b      	add	r3, r5
 80005d2:	e72f      	b.n	8000434 <__udivmoddi4+0x124>
 80005d4:	4638      	mov	r0, r7
 80005d6:	e708      	b.n	80003ea <__udivmoddi4+0xda>
 80005d8:	4637      	mov	r7, r6
 80005da:	e6e9      	b.n	80003b0 <__udivmoddi4+0xa0>

080005dc <__aeabi_idiv0>:
 80005dc:	4770      	bx	lr
 80005de:	bf00      	nop

080005e0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80005e0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000618 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005e4:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005e6:	e003      	b.n	80005f0 <LoopCopyDataInit>

080005e8 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005e8:	4b0c      	ldr	r3, [pc, #48]	; (800061c <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005ea:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005ec:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005ee:	3104      	adds	r1, #4

080005f0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005f0:	480b      	ldr	r0, [pc, #44]	; (8000620 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005f2:	4b0c      	ldr	r3, [pc, #48]	; (8000624 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005f4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005f6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005f8:	d3f6      	bcc.n	80005e8 <CopyDataInit>
  ldr  r2, =_sbss
 80005fa:	4a0b      	ldr	r2, [pc, #44]	; (8000628 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005fc:	e002      	b.n	8000604 <LoopFillZerobss>

080005fe <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005fe:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000600:	f842 3b04 	str.w	r3, [r2], #4

08000604 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000604:	4b09      	ldr	r3, [pc, #36]	; (800062c <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000606:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000608:	d3f9      	bcc.n	80005fe <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 800060a:	f004 fbb9 	bl	8004d80 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800060e:	f020 fbf9 	bl	8020e04 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000612:	f000 fad1 	bl	8000bb8 <main>
  bx  lr    
 8000616:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8000618:	20080000 	.word	0x20080000
  ldr  r3, =_sidata
 800061c:	08025fac 	.word	0x08025fac
  ldr  r0, =_sdata
 8000620:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000624:	20000154 	.word	0x20000154
  ldr  r2, =_sbss
 8000628:	20000154 	.word	0x20000154
  ldr  r3, = _ebss
 800062c:	20016cd4 	.word	0x20016cd4

08000630 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000630:	e7fe      	b.n	8000630 <ADC_IRQHandler>
 8000632:	0000      	movs	r0, r0
 8000634:	0000      	movs	r0, r0
	...

08000638 <data_parse>:
{

	uint8_t freq = 0;

	//if (!notes_to_play.empty()) grana = notes_to_play[0];
	if (play_flag)
 8000638:	4b33      	ldr	r3, [pc, #204]	; (8000708 <data_parse+0xd0>)
 800063a:	781b      	ldrb	r3, [r3, #0]
{
 800063c:	b570      	push	{r4, r5, r6, lr}
 800063e:	4c33      	ldr	r4, [pc, #204]	; (800070c <data_parse+0xd4>)
 8000640:	4d33      	ldr	r5, [pc, #204]	; (8000710 <data_parse+0xd8>)
 8000642:	ed2d 8b08 	vpush	{d8-d11}
 8000646:	b082      	sub	sp, #8
	if (play_flag)
 8000648:	2b00      	cmp	r3, #0
 800064a:	d041      	beq.n	80006d0 <data_parse+0x98>
	{
		freq = 440*pow(2, (grana-69)/12.);
 800064c:	4b31      	ldr	r3, [pc, #196]	; (8000714 <data_parse+0xdc>)
    inline _GLIBCXX_CONSTEXPR
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    pow(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return pow(__type(__x), __type(__y));
 800064e:	eeb2 7b08 	vmov.f64	d7, #40	; 0x41400000  12.0
 8000652:	eeb0 0b00 	vmov.f64	d0, #0	; 0x40000000  2.0
 8000656:	781b      	ldrb	r3, [r3, #0]
 8000658:	3b45      	subs	r3, #69	; 0x45
 800065a:	ee01 3a10 	vmov	s2, r3
 800065e:	eeb8 1bc1 	vcvt.f64.s32	d1, s2
		for(int j=0; j < BUFF_SIZE/2; j++)
		{

			buff_out[j+position]=32500*(sin((2*M_PI*j*freq)/AUDIO_FREQUENCY_48K));//*((__IO uint16_t *)(AUDIO_FILE_ADDRESS + PLAY_HEADER + i));
 8000662:	ed9f bb21 	vldr	d11, [pc, #132]	; 80006e8 <data_parse+0xb0>
 8000666:	ee81 1b07 	vdiv.f64	d1, d1, d7
 800066a:	f01f f871 	bl	801f750 <pow>
 800066e:	6826      	ldr	r6, [r4, #0]
		for(int j=0; j < BUFF_SIZE/2; j++)
 8000670:	2400      	movs	r4, #0
		freq = 440*pow(2, (grana-69)/12.);
 8000672:	ed9f 7b1f 	vldr	d7, [pc, #124]	; 80006f0 <data_parse+0xb8>
			buff_out[j+position]=32500*(sin((2*M_PI*j*freq)/AUDIO_FREQUENCY_48K));//*((__IO uint16_t *)(AUDIO_FILE_ADDRESS + PLAY_HEADER + i));
 8000676:	ed9f ab20 	vldr	d10, [pc, #128]	; 80006f8 <data_parse+0xc0>
 800067a:	ed9f 9b21 	vldr	d9, [pc, #132]	; 8000700 <data_parse+0xc8>
		freq = 440*pow(2, (grana-69)/12.);
 800067e:	ee20 0b07 	vmul.f64	d0, d0, d7
 8000682:	eefc 7bc0 	vcvt.u32.f64	s15, d0
 8000686:	edcd 7a01 	vstr	s15, [sp, #4]
 800068a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800068e:	ee08 3a10 	vmov	s16, r3
			buff_out[j+position]=32500*(sin((2*M_PI*j*freq)/AUDIO_FREQUENCY_48K));//*((__IO uint16_t *)(AUDIO_FILE_ADDRESS + PLAY_HEADER + i));
 8000692:	eeb8 8bc8 	vcvt.f64.s32	d8, s16
 8000696:	ee07 4a90 	vmov	s15, r4
 800069a:	eeb8 0be7 	vcvt.f64.s32	d0, s15
 800069e:	ee20 0b0b 	vmul.f64	d0, d0, d11
 80006a2:	ee20 0b08 	vmul.f64	d0, d0, d8
 80006a6:	ee80 0b0a 	vdiv.f64	d0, d0, d10
 80006aa:	f01f f815 	bl	801f6d8 <sin>
 80006ae:	19a3      	adds	r3, r4, r6
		for(int j=0; j < BUFF_SIZE/2; j++)
 80006b0:	3401      	adds	r4, #1
			buff_out[j+position]=32500*(sin((2*M_PI*j*freq)/AUDIO_FREQUENCY_48K));//*((__IO uint16_t *)(AUDIO_FILE_ADDRESS + PLAY_HEADER + i));
 80006b2:	ee20 0b09 	vmul.f64	d0, d0, d9
		for(int j=0; j < BUFF_SIZE/2; j++)
 80006b6:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
			buff_out[j+position]=32500*(sin((2*M_PI*j*freq)/AUDIO_FREQUENCY_48K));//*((__IO uint16_t *)(AUDIO_FILE_ADDRESS + PLAY_HEADER + i));
 80006ba:	eebc 0bc0 	vcvt.u32.f64	s0, d0
 80006be:	ee10 2a10 	vmov	r2, s0
 80006c2:	f825 2013 	strh.w	r2, [r5, r3, lsl #1]
		for(int j=0; j < BUFF_SIZE/2; j++)
 80006c6:	d1e6      	bne.n	8000696 <data_parse+0x5e>
//		else if (dana & 0xf0 == 0xE0)
//		{
//
//		}
//	}
}
 80006c8:	b002      	add	sp, #8
 80006ca:	ecbd 8b08 	vpop	{d8-d11}
 80006ce:	bd70      	pop	{r4, r5, r6, pc}
			buff_out[j+position] = 0;
 80006d0:	6820      	ldr	r0, [r4, #0]
 80006d2:	4619      	mov	r1, r3
 80006d4:	181a      	adds	r2, r3, r0
		for(int j=0; j < BUFF_SIZE/2; j++)
 80006d6:	3301      	adds	r3, #1
 80006d8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
			buff_out[j+position] = 0;
 80006dc:	f825 1012 	strh.w	r1, [r5, r2, lsl #1]
		for(int j=0; j < BUFF_SIZE/2; j++)
 80006e0:	d1f8      	bne.n	80006d4 <data_parse+0x9c>
 80006e2:	e7f1      	b.n	80006c8 <data_parse+0x90>
 80006e4:	f3af 8000 	nop.w
 80006e8:	54442d18 	.word	0x54442d18
 80006ec:	401921fb 	.word	0x401921fb
 80006f0:	00000000 	.word	0x00000000
 80006f4:	407b8000 	.word	0x407b8000
 80006f8:	00000000 	.word	0x00000000
 80006fc:	40e77000 	.word	0x40e77000
 8000700:	00000000 	.word	0x00000000
 8000704:	40dfbd00 	.word	0x40dfbd00
 8000708:	20000170 	.word	0x20000170
 800070c:	200128e0 	.word	0x200128e0
 8000710:	200129ec 	.word	0x200129ec
 8000714:	20000178 	.word	0x20000178

08000718 <Midi_process>:
{
 8000718:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if(new_note_number_byte)
 800071c:	4b49      	ldr	r3, [pc, #292]	; (8000844 <Midi_process+0x12c>)
 800071e:	4f4a      	ldr	r7, [pc, #296]	; (8000848 <Midi_process+0x130>)
 8000720:	781a      	ldrb	r2, [r3, #0]
 8000722:	4698      	mov	r8, r3
 8000724:	b1ea      	cbz	r2, 8000762 <Midi_process+0x4a>
       *  available.
       */
      void
      push_back(const value_type& __x)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8000726:	4b49      	ldr	r3, [pc, #292]	; (800084c <Midi_process+0x134>)
 8000728:	e9d3 a201 	ldrd	sl, r2, [r3, #4]
 800072c:	4699      	mov	r9, r3
 800072e:	4592      	cmp	sl, r2
 8000730:	d024      	beq.n	800077c <Midi_process+0x64>

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8000732:	f1ba 0f00 	cmp.w	sl, #0
 8000736:	d003      	beq.n	8000740 <Midi_process+0x28>
	  {
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8000738:	4b45      	ldr	r3, [pc, #276]	; (8000850 <Midi_process+0x138>)
 800073a:	781b      	ldrb	r3, [r3, #0]
 800073c:	f88a 3000 	strb.w	r3, [sl]
				     __x);
	    ++this->_M_impl._M_finish;
 8000740:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8000744:	3301      	adds	r3, #1
 8000746:	f8c9 3004 	str.w	r3, [r9, #4]
		new_note_number_byte = false;
 800074a:	2300      	movs	r3, #0
		grana = notes_to_play[0];
 800074c:	f8d9 2000 	ldr.w	r2, [r9]
		new_note_number_byte = false;
 8000750:	f888 3000 	strb.w	r3, [r8]
		grana = notes_to_play[0];
 8000754:	7811      	ldrb	r1, [r2, #0]
 8000756:	4a3f      	ldr	r2, [pc, #252]	; (8000854 <Midi_process+0x13c>)
 8000758:	7011      	strb	r1, [r2, #0]
		play_flag=1;
 800075a:	2201      	movs	r2, #1
 800075c:	703a      	strb	r2, [r7, #0]
		counter=0;
 800075e:	4a3e      	ldr	r2, [pc, #248]	; (8000858 <Midi_process+0x140>)
 8000760:	6013      	str	r3, [r2, #0]
	if(play_flag && counter < 15)
 8000762:	783b      	ldrb	r3, [r7, #0]
 8000764:	2b00      	cmp	r3, #0
 8000766:	d048      	beq.n	80007fa <Midi_process+0xe2>
 8000768:	4a3b      	ldr	r2, [pc, #236]	; (8000858 <Midi_process+0x140>)
 800076a:	6813      	ldr	r3, [r2, #0]
 800076c:	2b0e      	cmp	r3, #14
 800076e:	dc44      	bgt.n	80007fa <Midi_process+0xe2>
		counter ++;
 8000770:	3301      	adds	r3, #1
 8000772:	6013      	str	r3, [r2, #0]
}
 8000774:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	data_parse();
 8000778:	f7ff bf5e 	b.w	8000638 <data_parse>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800077c:	681d      	ldr	r5, [r3, #0]
 800077e:	ebaa 0505 	sub.w	r5, sl, r5

      // Called by _M_fill_insert, _M_insert_aux etc.
      size_type
      _M_check_len(size_type __n, const char* __s) const
      {
	if (max_size() - size() < __n)
 8000782:	1c6b      	adds	r3, r5, #1
 8000784:	d102      	bne.n	800078c <Midi_process+0x74>
	  __throw_length_error(__N(__s));
 8000786:	4835      	ldr	r0, [pc, #212]	; (800085c <Midi_process+0x144>)
 8000788:	f01e ffa3 	bl	801f6d2 <_ZSt20__throw_length_errorPKc>
    max(const _Tp& __a, const _Tp& __b)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return  __a < __b ? __b : __a;
      if (__a < __b)
 800078c:	2d00      	cmp	r5, #0
 800078e:	bf14      	ite	ne
 8000790:	462c      	movne	r4, r5
 8000792:	2401      	moveq	r4, #1
 8000794:	192c      	adds	r4, r5, r4

	const size_type __len = size() + std::max(size(), __n);
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8000796:	d202      	bcs.n	800079e <Midi_process+0x86>
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8000798:	b91c      	cbnz	r4, 80007a2 <Midi_process+0x8a>
 800079a:	4626      	mov	r6, r4
 800079c:	e005      	b.n	80007aa <Midi_process+0x92>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 800079e:	f04f 34ff 	mov.w	r4, #4294967295
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80007a2:	4620      	mov	r0, r4
 80007a4:	f01e ff5a 	bl	801f65c <_Znwj>
 80007a8:	4606      	mov	r6, r0
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80007aa:	42ee      	cmn	r6, r5
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
 80007ac:	bf1e      	ittt	ne
 80007ae:	4b28      	ldrne	r3, [pc, #160]	; (8000850 <Midi_process+0x138>)
 80007b0:	781b      	ldrbne	r3, [r3, #0]
 80007b2:	5573      	strbne	r3, [r6, r5]
#endif
	  __new_finish = pointer();

	  __new_finish
	    = std::__uninitialized_move_if_noexcept_a
	    (this->_M_impl._M_start, __position.base(),
 80007b4:	f8d9 5000 	ldr.w	r5, [r9]
					   is_copy_assignable<_Tp>>;
	  // trivial types can have deleted assignment
	  static_assert( __assignable::type::value, "type is not assignable" );
#endif
	  const ptrdiff_t _Num = __last - __first;
	  if (_Num)
 80007b8:	ebba 0b05 	subs.w	fp, sl, r5
 80007bc:	d004      	beq.n	80007c8 <Midi_process+0xb0>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 80007be:	465a      	mov	r2, fp
 80007c0:	4629      	mov	r1, r5
 80007c2:	4630      	mov	r0, r6
 80007c4:	f020 fb5d 	bl	8020e82 <memmove>
	  const ptrdiff_t _Num = __last - __first;
 80007c8:	f8d9 2004 	ldr.w	r2, [r9, #4]
	     __new_start, _M_get_Tp_allocator());

	  ++__new_finish;
 80007cc:	f10b 0301 	add.w	r3, fp, #1
	  if (_Num)
 80007d0:	ebb2 0b0a 	subs.w	fp, r2, sl
 80007d4:	4433      	add	r3, r6
 80007d6:	d005      	beq.n	80007e4 <Midi_process+0xcc>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 80007d8:	4618      	mov	r0, r3
 80007da:	465a      	mov	r2, fp
 80007dc:	4651      	mov	r1, sl
 80007de:	f020 fb50 	bl	8020e82 <memmove>
 80007e2:	4603      	mov	r3, r0
	  return __result + _Num;
 80007e4:	449b      	add	fp, r3
	if (__p)
 80007e6:	b115      	cbz	r5, 80007ee <Midi_process+0xd6>
	::operator delete(__p);
 80007e8:	4628      	mov	r0, r5
 80007ea:	f01e ff5f 	bl	801f6ac <_ZdlPv>
      _M_deallocate(this->_M_impl._M_start,
		    this->_M_impl._M_end_of_storage
		    - this->_M_impl._M_start);
      this->_M_impl._M_start = __new_start;
      this->_M_impl._M_finish = __new_finish;
      this->_M_impl._M_end_of_storage = __new_start + __len;
 80007ee:	4434      	add	r4, r6
      this->_M_impl._M_finish = __new_finish;
 80007f0:	e9c9 6b00 	strd	r6, fp, [r9]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 80007f4:	f8c9 4008 	str.w	r4, [r9, #8]
 80007f8:	e7a7      	b.n	800074a <Midi_process+0x32>
      { return begin() == end(); }
 80007fa:	4c14      	ldr	r4, [pc, #80]	; (800084c <Midi_process+0x134>)
 80007fc:	e9d4 0200 	ldrd	r0, r2, [r4]
	else if(!notes_to_play.empty() && counter >= 15)
 8000800:	4282      	cmp	r2, r0
 8000802:	d01d      	beq.n	8000840 <Midi_process+0x128>
 8000804:	4d14      	ldr	r5, [pc, #80]	; (8000858 <Midi_process+0x140>)
 8000806:	682b      	ldr	r3, [r5, #0]
 8000808:	2b0e      	cmp	r3, #14
 800080a:	dd16      	ble.n	800083a <Midi_process+0x122>
      operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
      { _M_current += __n; return *this; }

      __normal_iterator
      operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
      { return __normal_iterator(_M_current + __n); }
 800080c:	1c41      	adds	r1, r0, #1
      if (__position + 1 != end())
 800080e:	428a      	cmp	r2, r1
 8000810:	d003      	beq.n	800081a <Midi_process+0x102>
	  if (_Num)
 8000812:	1a52      	subs	r2, r2, r1
 8000814:	d001      	beq.n	800081a <Midi_process+0x102>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 8000816:	f020 fb34 	bl	8020e82 <memmove>
      --this->_M_impl._M_finish;
 800081a:	6863      	ldr	r3, [r4, #4]
 800081c:	6822      	ldr	r2, [r4, #0]
 800081e:	3b01      	subs	r3, #1
		if(!notes_to_play.empty())
 8000820:	429a      	cmp	r2, r3
 8000822:	6063      	str	r3, [r4, #4]
			grana = notes_to_play[0];
 8000824:	bf17      	itett	ne
 8000826:	4b0b      	ldrne	r3, [pc, #44]	; (8000854 <Midi_process+0x13c>)
			play_flag=0;
 8000828:	2300      	moveq	r3, #0
			grana = notes_to_play[0];
 800082a:	7812      	ldrbne	r2, [r2, #0]
 800082c:	701a      	strbne	r2, [r3, #0]
			play_flag=1;
 800082e:	bf18      	it	ne
 8000830:	2301      	movne	r3, #1
			play_flag=0;
 8000832:	703b      	strb	r3, [r7, #0]
		counter = 0;
 8000834:	2300      	movs	r3, #0
 8000836:	602b      	str	r3, [r5, #0]
 8000838:	e79c      	b.n	8000774 <Midi_process+0x5c>
		play_flag=1;
 800083a:	2301      	movs	r3, #1
		play_flag=0;
 800083c:	703b      	strb	r3, [r7, #0]
 800083e:	e799      	b.n	8000774 <Midi_process+0x5c>
 8000840:	2300      	movs	r3, #0
 8000842:	e7fb      	b.n	800083c <Midi_process+0x124>
 8000844:	20000195 	.word	0x20000195
 8000848:	20000170 	.word	0x20000170
 800084c:	2000017c 	.word	0x2000017c
 8000850:	20000196 	.word	0x20000196
 8000854:	20000178 	.word	0x20000178
 8000858:	20000174 	.word	0x20000174
 800085c:	08021e10 	.word	0x08021e10

08000860 <_GLOBAL__sub_I_counter>:
	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
 8000860:	4b02      	ldr	r3, [pc, #8]	; (800086c <_GLOBAL__sub_I_counter+0xc>)
 8000862:	2200      	movs	r2, #0
 8000864:	e9c3 2200 	strd	r2, r2, [r3]
 8000868:	609a      	str	r2, [r3, #8]
}
 800086a:	4770      	bx	lr
 800086c:	2000017c 	.word	0x2000017c

08000870 <_GLOBAL__sub_D_counter>:
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 8000870:	4b02      	ldr	r3, [pc, #8]	; (800087c <_GLOBAL__sub_D_counter+0xc>)
 8000872:	6818      	ldr	r0, [r3, #0]
	if (__p)
 8000874:	b108      	cbz	r0, 800087a <_GLOBAL__sub_D_counter+0xa>
 8000876:	f01e bf19 	b.w	801f6ac <_ZdlPv>
 800087a:	4770      	bx	lr
 800087c:	2000017c 	.word	0x2000017c

08000880 <PollingInit>:

bool msgRdyFlag = 0;
bool new_note_number_byte=false;

void PollingInit()
{
 8000880:	b510      	push	{r4, lr}
	//BSP_LED_Init(LED2);
	//enable interrupt
//	HAL_UART_Transmit(&huart1, &uartMsgData, 1, 0);
	HAL_UART_Receive_IT(&huart1, &uartMsgData, 1);
 8000882:	4c06      	ldr	r4, [pc, #24]	; (800089c <PollingInit+0x1c>)
 8000884:	2201      	movs	r2, #1
 8000886:	4806      	ldr	r0, [pc, #24]	; (80008a0 <PollingInit+0x20>)
 8000888:	4621      	mov	r1, r4
 800088a:	f007 ff29 	bl	80086e0 <HAL_UART_Receive_IT>
	HAL_UART_Receive_IT(&huart6, &uartMsgData, 1);
 800088e:	4621      	mov	r1, r4
 8000890:	2201      	movs	r2, #1
 8000892:	4804      	ldr	r0, [pc, #16]	; (80008a4 <PollingInit+0x24>)
}
 8000894:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	HAL_UART_Receive_IT(&huart6, &uartMsgData, 1);
 8000898:	f007 bf22 	b.w	80086e0 <HAL_UART_Receive_IT>
 800089c:	20000198 	.word	0x20000198
 80008a0:	200169ec 	.word	0x200169ec
 80008a4:	20016a70 	.word	0x20016a70

080008a8 <PollingRoutine>:
//	if(msgRdyFlag)
//	{
		//msgRdyFlag = 0;
		//osSemaphoreRelease(binarySemUartMsgHandle);
//	}
}
 80008a8:	4770      	bx	lr
	...

080008ac <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 80008ac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	// claim that data is ready to read
	if((prev_uartMsgData & 0xF0) == 0x90)
 80008b0:	4f3b      	ldr	r7, [pc, #236]	; (80009a0 <HAL_UART_RxCpltCallback+0xf4>)
 80008b2:	f8df 8100 	ldr.w	r8, [pc, #256]	; 80009b4 <HAL_UART_RxCpltCallback+0x108>
 80008b6:	783b      	ldrb	r3, [r7, #0]
 80008b8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80008bc:	2b90      	cmp	r3, #144	; 0x90
 80008be:	d106      	bne.n	80008ce <HAL_UART_RxCpltCallback+0x22>
	{
		note_number_byte = uartMsgData;
 80008c0:	f898 2000 	ldrb.w	r2, [r8]
 80008c4:	4b37      	ldr	r3, [pc, #220]	; (80009a4 <HAL_UART_RxCpltCallback+0xf8>)
 80008c6:	701a      	strb	r2, [r3, #0]
		new_note_number_byte = true;
 80008c8:	2201      	movs	r2, #1
 80008ca:	4b37      	ldr	r3, [pc, #220]	; (80009a8 <HAL_UART_RxCpltCallback+0xfc>)
 80008cc:	701a      	strb	r2, [r3, #0]
	}

	//else new_note_number_byte = false;

	msgRdyFlag = 1;
 80008ce:	4b37      	ldr	r3, [pc, #220]	; (80009ac <HAL_UART_RxCpltCallback+0x100>)
 80008d0:	2201      	movs	r2, #1
 80008d2:	701a      	strb	r2, [r3, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 80008d4:	4b36      	ldr	r3, [pc, #216]	; (80009b0 <HAL_UART_RxCpltCallback+0x104>)
 80008d6:	e9d3 a201 	ldrd	sl, r2, [r3, #4]
 80008da:	4699      	mov	r9, r3
 80008dc:	4592      	cmp	sl, r2
 80008de:	d020      	beq.n	8000922 <HAL_UART_RxCpltCallback+0x76>
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80008e0:	f1ba 0f00 	cmp.w	sl, #0
 80008e4:	d003      	beq.n	80008ee <HAL_UART_RxCpltCallback+0x42>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 80008e6:	f898 3000 	ldrb.w	r3, [r8]
 80008ea:	f88a 3000 	strb.w	r3, [sl]
	    ++this->_M_impl._M_finish;
 80008ee:	f8d9 3004 	ldr.w	r3, [r9, #4]
 80008f2:	3301      	adds	r3, #1
 80008f4:	f8c9 3004 	str.w	r3, [r9, #4]
	data_array.push_back(uartMsgData);
	prev_uartMsgData = uartMsgData;
 80008f8:	f898 3000 	ldrb.w	r3, [r8]

	HAL_UART_Transmit(&huart1, &uartMsgData, 1, 0);
 80008fc:	2201      	movs	r2, #1
 80008fe:	492d      	ldr	r1, [pc, #180]	; (80009b4 <HAL_UART_RxCpltCallback+0x108>)
	prev_uartMsgData = uartMsgData;
 8000900:	703b      	strb	r3, [r7, #0]
	HAL_UART_Transmit(&huart1, &uartMsgData, 1, 0);
 8000902:	2300      	movs	r3, #0
 8000904:	482c      	ldr	r0, [pc, #176]	; (80009b8 <HAL_UART_RxCpltCallback+0x10c>)
 8000906:	f008 fa34 	bl	8008d72 <HAL_UART_Transmit>
//		}else data_counter=0;
	//BSP_LED_Toggle(LED1);


	// enable interrupt again
	HAL_UART_Receive_IT(&huart1, &uartMsgData, 1);
 800090a:	2201      	movs	r2, #1
 800090c:	4929      	ldr	r1, [pc, #164]	; (80009b4 <HAL_UART_RxCpltCallback+0x108>)
 800090e:	482a      	ldr	r0, [pc, #168]	; (80009b8 <HAL_UART_RxCpltCallback+0x10c>)
 8000910:	f007 fee6 	bl	80086e0 <HAL_UART_Receive_IT>
	HAL_UART_Receive_IT(&huart6, &uartMsgData, 1);
 8000914:	2201      	movs	r2, #1
 8000916:	4927      	ldr	r1, [pc, #156]	; (80009b4 <HAL_UART_RxCpltCallback+0x108>)
 8000918:	4828      	ldr	r0, [pc, #160]	; (80009bc <HAL_UART_RxCpltCallback+0x110>)


}
 800091a:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	HAL_UART_Receive_IT(&huart6, &uartMsgData, 1);
 800091e:	f007 bedf 	b.w	80086e0 <HAL_UART_Receive_IT>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8000922:	681d      	ldr	r5, [r3, #0]
 8000924:	ebaa 0505 	sub.w	r5, sl, r5
	if (max_size() - size() < __n)
 8000928:	1c6b      	adds	r3, r5, #1
 800092a:	d102      	bne.n	8000932 <HAL_UART_RxCpltCallback+0x86>
	  __throw_length_error(__N(__s));
 800092c:	4824      	ldr	r0, [pc, #144]	; (80009c0 <HAL_UART_RxCpltCallback+0x114>)
 800092e:	f01e fed0 	bl	801f6d2 <_ZSt20__throw_length_errorPKc>
      if (__a < __b)
 8000932:	2d00      	cmp	r5, #0
 8000934:	bf14      	ite	ne
 8000936:	462c      	movne	r4, r5
 8000938:	2401      	moveq	r4, #1
 800093a:	192c      	adds	r4, r5, r4
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 800093c:	d202      	bcs.n	8000944 <HAL_UART_RxCpltCallback+0x98>
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 800093e:	b91c      	cbnz	r4, 8000948 <HAL_UART_RxCpltCallback+0x9c>
 8000940:	4626      	mov	r6, r4
 8000942:	e005      	b.n	8000950 <HAL_UART_RxCpltCallback+0xa4>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8000944:	f04f 34ff 	mov.w	r4, #4294967295
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8000948:	4620      	mov	r0, r4
 800094a:	f01e fe87 	bl	801f65c <_Znwj>
 800094e:	4606      	mov	r6, r0
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8000950:	42ee      	cmn	r6, r5
 8000952:	bf1c      	itt	ne
 8000954:	f898 3000 	ldrbne.w	r3, [r8]
 8000958:	5573      	strbne	r3, [r6, r5]
	    (this->_M_impl._M_start, __position.base(),
 800095a:	f8d9 5000 	ldr.w	r5, [r9]
	  if (_Num)
 800095e:	ebba 0b05 	subs.w	fp, sl, r5
 8000962:	d004      	beq.n	800096e <HAL_UART_RxCpltCallback+0xc2>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 8000964:	465a      	mov	r2, fp
 8000966:	4629      	mov	r1, r5
 8000968:	4630      	mov	r0, r6
 800096a:	f020 fa8a 	bl	8020e82 <memmove>
	  const ptrdiff_t _Num = __last - __first;
 800096e:	f8d9 2004 	ldr.w	r2, [r9, #4]
	  ++__new_finish;
 8000972:	f10b 0301 	add.w	r3, fp, #1
	  if (_Num)
 8000976:	ebb2 0b0a 	subs.w	fp, r2, sl
 800097a:	4433      	add	r3, r6
 800097c:	d005      	beq.n	800098a <HAL_UART_RxCpltCallback+0xde>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 800097e:	4618      	mov	r0, r3
 8000980:	465a      	mov	r2, fp
 8000982:	4651      	mov	r1, sl
 8000984:	f020 fa7d 	bl	8020e82 <memmove>
 8000988:	4603      	mov	r3, r0
	  return __result + _Num;
 800098a:	449b      	add	fp, r3
	if (__p)
 800098c:	b115      	cbz	r5, 8000994 <HAL_UART_RxCpltCallback+0xe8>
	::operator delete(__p);
 800098e:	4628      	mov	r0, r5
 8000990:	f01e fe8c 	bl	801f6ac <_ZdlPv>
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8000994:	4434      	add	r4, r6
      this->_M_impl._M_finish = __new_finish;
 8000996:	e9c9 6b00 	strd	r6, fp, [r9]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 800099a:	f8c9 4008 	str.w	r4, [r9, #8]
 800099e:	e7ab      	b.n	80008f8 <HAL_UART_RxCpltCallback+0x4c>
 80009a0:	20000197 	.word	0x20000197
 80009a4:	20000196 	.word	0x20000196
 80009a8:	20000195 	.word	0x20000195
 80009ac:	20000194 	.word	0x20000194
 80009b0:	20000188 	.word	0x20000188
 80009b4:	20000198 	.word	0x20000198
 80009b8:	200169ec 	.word	0x200169ec
 80009bc:	20016a70 	.word	0x20016a70
 80009c0:	08021e10 	.word	0x08021e10

080009c4 <_GLOBAL__sub_I_uartMsgData>:
	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
 80009c4:	4b02      	ldr	r3, [pc, #8]	; (80009d0 <_GLOBAL__sub_I_uartMsgData+0xc>)
 80009c6:	2200      	movs	r2, #0
 80009c8:	e9c3 2200 	strd	r2, r2, [r3]
 80009cc:	609a      	str	r2, [r3, #8]
}
 80009ce:	4770      	bx	lr
 80009d0:	20000188 	.word	0x20000188

080009d4 <_GLOBAL__sub_D_uartMsgData>:
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 80009d4:	4b02      	ldr	r3, [pc, #8]	; (80009e0 <_GLOBAL__sub_D_uartMsgData+0xc>)
 80009d6:	6818      	ldr	r0, [r3, #0]
	if (__p)
 80009d8:	b108      	cbz	r0, 80009de <_GLOBAL__sub_D_uartMsgData+0xa>
 80009da:	f01e be67 	b.w	801f6ac <_ZdlPv>
 80009de:	4770      	bx	lr
 80009e0:	20000188 	.word	0x20000188

080009e4 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80009e4:	4901      	ldr	r1, [pc, #4]	; (80009ec <vApplicationIdleHook+0x8>)
 80009e6:	2000      	movs	r0, #0
 80009e8:	f00a b888 	b.w	800aafc <vTaskSetApplicationTaskTag>
 80009ec:	080026d1 	.word	0x080026d1

080009f0 <DefaultTask_func>:
  */
/* USER CODE END Header_DefaultTask_func */
void DefaultTask_func(void *argument)
{
  /* USER CODE BEGIN 5 */
	MX_TouchGFX_Process();
 80009f0:	f001 ba44 	b.w	8001e7c <MX_TouchGFX_Process>

080009f4 <UartSoundTask_func>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_UartSoundTask_func */
void UartSoundTask_func(void *argument)
{
 80009f4:	4c0e      	ldr	r4, [pc, #56]	; (8000a30 <UartSoundTask_func+0x3c>)
 80009f6:	4625      	mov	r5, r4
 80009f8:	b508      	push	{r3, lr}
  /* USER CODE BEGIN UartSoundTask_func */
  /* Infinite loop */
	PollingInit();
 80009fa:	f7ff ff41 	bl	8000880 <PollingInit>
	/* Infinite loop */
	for(;;)
	{

	PollingRoutine();
 80009fe:	f7ff ff53 	bl	80008a8 <PollingRoutine>
	  while (UpdatePointer != -1)
	  {
	  	  position = UpdatePointer;
	  	  UpdatePointer=-1;
 8000a02:	f04f 36ff 	mov.w	r6, #4294967295
 8000a06:	6822      	ldr	r2, [r4, #0]
	  while (UpdatePointer != -1)
 8000a08:	2100      	movs	r1, #0
 8000a0a:	4b0a      	ldr	r3, [pc, #40]	; (8000a34 <UartSoundTask_func+0x40>)
 8000a0c:	6818      	ldr	r0, [r3, #0]
 8000a0e:	3001      	adds	r0, #1
 8000a10:	d10a      	bne.n	8000a28 <UartSoundTask_func+0x34>
 8000a12:	b101      	cbz	r1, 8000a16 <UartSoundTask_func+0x22>
 8000a14:	602a      	str	r2, [r5, #0]

	  }
	  Midi_process();
 8000a16:	f7ff fe7f 	bl	8000718 <Midi_process>
	  BSP_LED_Toggle(LED2);
 8000a1a:	2001      	movs	r0, #1
 8000a1c:	f004 f90c 	bl	8004c38 <BSP_LED_Toggle>
	osDelay(1);
 8000a20:	2001      	movs	r0, #1
 8000a22:	f008 fb81 	bl	8009128 <osDelay>
	PollingRoutine();
 8000a26:	e7ea      	b.n	80009fe <UartSoundTask_func+0xa>
	  	  position = UpdatePointer;
 8000a28:	681a      	ldr	r2, [r3, #0]
 8000a2a:	2101      	movs	r1, #1
	  	  UpdatePointer=-1;
 8000a2c:	601e      	str	r6, [r3, #0]
 8000a2e:	e7ed      	b.n	8000a0c <UartSoundTask_func+0x18>
 8000a30:	200128e0 	.word	0x200128e0
 8000a34:	20000004 	.word	0x20000004

08000a38 <QSPI_WriteEnable.constprop.7>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8000a38:	b500      	push	{lr}
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8000a3a:	f44f 7340 	mov.w	r3, #768	; 0x300
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8000a3e:	b095      	sub	sp, #84	; 0x54
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000a40:	f241 3288 	movw	r2, #5000	; 0x1388
 8000a44:	4817      	ldr	r0, [pc, #92]	; (8000aa4 <QSPI_WriteEnable.constprop.7+0x6c>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8000a46:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8000a48:	2306      	movs	r3, #6
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000a4a:	a906      	add	r1, sp, #24
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8000a4c:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8000a4e:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8000a50:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DataMode          = QSPI_DATA_NONE;
 8000a54:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8000a56:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8000a58:	9313      	str	r3, [sp, #76]	; 0x4c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8000a5a:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000a5e:	f006 f9e5 	bl	8006e2c <HAL_QSPI_Command>
 8000a62:	b9e0      	cbnz	r0, 8000a9e <QSPI_WriteEnable.constprop.7+0x66>
  s_config.Match           = MX25L512_SR_WREN;
 8000a64:	2302      	movs	r3, #2
  s_config.Interval        = 0x10;
 8000a66:	2201      	movs	r2, #1
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8000a68:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8000a6c:	9004      	str	r0, [sp, #16]
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000a6e:	480d      	ldr	r0, [pc, #52]	; (8000aa4 <QSPI_WriteEnable.constprop.7+0x6c>)
  s_config.Mask            = MX25L512_SR_WREN;
 8000a70:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8000a74:	2310      	movs	r3, #16
 8000a76:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8000a7a:	2305      	movs	r3, #5
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000a7c:	466a      	mov	r2, sp
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8000a7e:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_4_LINES;
 8000a82:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000a86:	a906      	add	r1, sp, #24
  s_command.DataMode       = QSPI_DATA_4_LINES;
 8000a88:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000a8a:	f241 3388 	movw	r3, #5000	; 0x1388
 8000a8e:	f006 facc 	bl	800702a <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 8000a92:	3000      	adds	r0, #0
 8000a94:	bf18      	it	ne
 8000a96:	2001      	movne	r0, #1
}
 8000a98:	b015      	add	sp, #84	; 0x54
 8000a9a:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 8000a9e:	2001      	movs	r0, #1
 8000aa0:	e7fa      	b.n	8000a98 <QSPI_WriteEnable.constprop.7+0x60>
 8000aa2:	bf00      	nop
 8000aa4:	20016c00 	.word	0x20016c00

08000aa8 <SystemClock_Config>:
{
 8000aa8:	b530      	push	{r4, r5, lr}
 8000aaa:	b0b9      	sub	sp, #228	; 0xe4
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aac:	222c      	movs	r2, #44	; 0x2c
 8000aae:	2100      	movs	r1, #0
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000ab0:	2400      	movs	r4, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000ab2:	a809      	add	r0, sp, #36	; 0x24
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000ab4:	2502      	movs	r5, #2
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000ab6:	f020 f9fd 	bl	8020eb4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000aba:	2214      	movs	r2, #20
 8000abc:	2100      	movs	r1, #0
 8000abe:	a802      	add	r0, sp, #8
 8000ac0:	f020 f9f8 	bl	8020eb4 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000ac4:	2290      	movs	r2, #144	; 0x90
 8000ac6:	2100      	movs	r1, #0
 8000ac8:	a814      	add	r0, sp, #80	; 0x50
 8000aca:	f020 f9f3 	bl	8020eb4 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ace:	4b26      	ldr	r3, [pc, #152]	; (8000b68 <SystemClock_Config+0xc0>)
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000ad0:	2101      	movs	r1, #1
  RCC_OscInitStruct.PLL.PLLN = 270;
 8000ad2:	200a      	movs	r0, #10
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ad4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000ad6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000ada:	641a      	str	r2, [r3, #64]	; 0x40
 8000adc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000ade:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000ae2:	9300      	str	r3, [sp, #0]
 8000ae4:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ae6:	4b21      	ldr	r3, [pc, #132]	; (8000b6c <SystemClock_Config+0xc4>)
 8000ae8:	681a      	ldr	r2, [r3, #0]
 8000aea:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000aee:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000af0:	2203      	movs	r2, #3
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000af2:	681b      	ldr	r3, [r3, #0]
 8000af4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000af8:	9301      	str	r3, [sp, #4]
 8000afa:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000afc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000b00:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000b04:	2310      	movs	r3, #16
 8000b06:	e9cd 130a 	strd	r1, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 270;
 8000b0a:	f44f 7387 	mov.w	r3, #270	; 0x10e
 8000b0e:	e9cd 030f 	strd	r0, r3, [sp, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b12:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000b14:	e9cd 540d 	strd	r5, r4, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000b18:	e9cd 5511 	strd	r5, r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b1c:	f006 fb18 	bl	8007150 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000b20:	f006 f818 	bl	8006b54 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b24:	230f      	movs	r3, #15
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 8000b26:	2107      	movs	r1, #7
 8000b28:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000b2a:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b2c:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b30:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b34:	f44f 55a0 	mov.w	r5, #5120	; 0x1400
 8000b38:	e9cd 5305 	strd	r5, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 8000b3c:	f006 fcfa 	bl	8007534 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC|RCC_PERIPHCLK_USART1
 8000b40:	4b0b      	ldr	r3, [pc, #44]	; (8000b70 <SystemClock_Config+0xc8>)
  PeriphClkInitStruct.PLLSAI.PLLSAIQ = 5;
 8000b42:	2206      	movs	r2, #6
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000b44:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC|RCC_PERIPHCLK_USART1
 8000b46:	9314      	str	r3, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 185;
 8000b48:	23b9      	movs	r3, #185	; 0xb9
  PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV2;
 8000b4a:	941c      	str	r4, [sp, #112]	; 0x70
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 185;
 8000b4c:	9319      	str	r3, [sp, #100]	; 0x64
  PeriphClkInitStruct.PLLSAI.PLLSAIQ = 5;
 8000b4e:	2305      	movs	r3, #5
  PeriphClkInitStruct.Sai1ClockSelection = RCC_SAI1CLKSOURCE_PLLSAI;
 8000b50:	9423      	str	r4, [sp, #140]	; 0x8c
  PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8000b52:	9425      	str	r4, [sp, #148]	; 0x94
  PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 8000b54:	942a      	str	r4, [sp, #168]	; 0xa8
  PeriphClkInitStruct.I2c4ClockSelection = RCC_I2C4CLKSOURCE_PCLK1;
 8000b56:	9430      	str	r4, [sp, #192]	; 0xc0
  PeriphClkInitStruct.PLLSAI.PLLSAIQ = 5;
 8000b58:	e9cd 321a 	strd	r3, r2, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8000b5c:	e9cd 341e 	strd	r3, r4, [sp, #120]	; 0x78
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000b60:	f006 fdc4 	bl	80076ec <HAL_RCCEx_PeriphCLKConfig>
}
 8000b64:	b039      	add	sp, #228	; 0xe4
 8000b66:	bd30      	pop	{r4, r5, pc}
 8000b68:	40023800 	.word	0x40023800
 8000b6c:	40007000 	.word	0x40007000
 8000b70:	000a0848 	.word	0x000a0848

08000b74 <MX_I2C4_Init>:
{
 8000b74:	b538      	push	{r3, r4, r5, lr}
  hi2c4.Init.Timing = 0x20404768;
 8000b76:	4a0d      	ldr	r2, [pc, #52]	; (8000bac <MX_I2C4_Init+0x38>)
  hi2c4.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000b78:	2500      	movs	r5, #0
  hi2c4.Instance = I2C4;
 8000b7a:	4c0d      	ldr	r4, [pc, #52]	; (8000bb0 <MX_I2C4_Init+0x3c>)
  hi2c4.Init.Timing = 0x20404768;
 8000b7c:	4b0d      	ldr	r3, [pc, #52]	; (8000bb4 <MX_I2C4_Init+0x40>)
  if (HAL_I2C_Init(&hi2c4) != HAL_OK)
 8000b7e:	4620      	mov	r0, r4
  hi2c4.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000b80:	6225      	str	r5, [r4, #32]
  hi2c4.Init.Timing = 0x20404768;
 8000b82:	e9c4 2300 	strd	r2, r3, [r4]
  hi2c4.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000b86:	2301      	movs	r3, #1
  hi2c4.Init.OwnAddress2 = 0;
 8000b88:	e9c4 5504 	strd	r5, r5, [r4, #16]
  hi2c4.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000b8c:	e9c4 5302 	strd	r5, r3, [r4, #8]
  hi2c4.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000b90:	e9c4 5506 	strd	r5, r5, [r4, #24]
  if (HAL_I2C_Init(&hi2c4) != HAL_OK)
 8000b94:	f005 fbf6 	bl	8006384 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c4, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000b98:	4629      	mov	r1, r5
 8000b9a:	4620      	mov	r0, r4
 8000b9c:	f005 fdd4 	bl	8006748 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c4, 0) != HAL_OK)
 8000ba0:	4629      	mov	r1, r5
 8000ba2:	4620      	mov	r0, r4
}
 8000ba4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c4, 0) != HAL_OK)
 8000ba8:	f005 bdf4 	b.w	8006794 <HAL_I2CEx_ConfigDigitalFilter>
 8000bac:	40006000 	.word	0x40006000
 8000bb0:	20012850 	.word	0x20012850
 8000bb4:	20404768 	.word	0x20404768

08000bb8 <main>:
{
 8000bb8:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8000bbc:	b0bf      	sub	sp, #252	; 0xfc

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8000bbe:	2210      	movs	r2, #16
 8000bc0:	2100      	movs	r1, #0

  /* Disables the MPU */
  HAL_MPU_Disable();
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000bc2:	2501      	movs	r5, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8000bc4:	a830      	add	r0, sp, #192	; 0xc0
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  MPU_InitStruct.BaseAddress = 0x20000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
  MPU_InitStruct.SubRegionDisable = 0x0;
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8000bc6:	4cc9      	ldr	r4, [pc, #804]	; (8000eec <main+0x334>)
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8000bc8:	f020 f974 	bl	8020eb4 <memset>
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
 8000bcc:	f04f 4610 	mov.w	r6, #2415919104	; 0x90000000
  HAL_MPU_Disable();
 8000bd0:	f004 f99c 	bl	8004f0c <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x20000000;
 8000bd4:	f04f 5c00 	mov.w	ip, #536870912	; 0x20000000
 8000bd8:	4bc5      	ldr	r3, [pc, #788]	; (8000ef0 <main+0x338>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000bda:	a830      	add	r0, sp, #192	; 0xc0
  MPU_InitStruct.BaseAddress = 0x90000000;
 8000bdc:	271c      	movs	r7, #28
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000bde:	f8ad 50c0 	strh.w	r5, [sp, #192]	; 0xc0
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8000be2:	9433      	str	r4, [sp, #204]	; 0xcc
  MPU_InitStruct.BaseAddress = 0x20000000;
 8000be4:	e9cd c331 	strd	ip, r3, [sp, #196]	; 0xc4
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000be8:	f004 f9b2 	bl	8004f50 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000bec:	f240 1301 	movw	r3, #257	; 0x101
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000bf0:	a830      	add	r0, sp, #192	; 0xc0
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 8000bf2:	9533      	str	r5, [sp, #204]	; 0xcc
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000bf4:	f8ad 30c0 	strh.w	r3, [sp, #192]	; 0xc0
  MPU_InitStruct.BaseAddress = 0x90000000;
 8000bf8:	e9cd 6731 	strd	r6, r7, [sp, #196]	; 0xc4
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000bfc:	f004 f9a8 	bl	8004f50 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000c00:	f240 2301 	movw	r3, #513	; 0x201
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000c04:	a830      	add	r0, sp, #192	; 0xc0
  MPU_InitStruct.BaseAddress = 0x90000000;
 8000c06:	9631      	str	r6, [sp, #196]	; 0xc4
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000c08:	f8ad 30c0 	strh.w	r3, [sp, #192]	; 0xc0
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xC0000000;
 8000c0c:	f04f 4640 	mov.w	r6, #3221225472	; 0xc0000000
  MPU_InitStruct.BaseAddress = 0x90000000;
 8000c10:	4bb8      	ldr	r3, [pc, #736]	; (8000ef4 <main+0x33c>)
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8000c12:	e9cd 3432 	strd	r3, r4, [sp, #200]	; 0xc8
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000c16:	f004 f99b 	bl	8004f50 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000c1a:	f240 3301 	movw	r3, #769	; 0x301
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000c1e:	a830      	add	r0, sp, #192	; 0xc0
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 8000c20:	9533      	str	r5, [sp, #204]	; 0xcc
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000c22:	f8ad 30c0 	strh.w	r3, [sp, #192]	; 0xc0
  MPU_InitStruct.BaseAddress = 0xC0000000;
 8000c26:	e9cd 6731 	strd	r6, r7, [sp, #196]	; 0xc4
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000c2a:	f004 f991 	bl	8004f50 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000c2e:	f240 4301 	movw	r3, #1025	; 0x401
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000c32:	a830      	add	r0, sp, #192	; 0xc0
  MPU_InitStruct.BaseAddress = 0xC0000000;
 8000c34:	9631      	str	r6, [sp, #196]	; 0xc4
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000c36:	f8ad 30c0 	strh.w	r3, [sp, #192]	; 0xc0
  MPU_InitStruct.BaseAddress = 0xC0000000;
 8000c3a:	4baf      	ldr	r3, [pc, #700]	; (8000ef8 <main+0x340>)
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8000c3c:	e9cd 3432 	strd	r3, r4, [sp, #200]	; 0xc8
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000c40:	f004 f986 	bl	8004f50 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 8000c44:	2004      	movs	r0, #4
 8000c46:	f004 f971 	bl	8004f2c <HAL_MPU_Enable>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000c4a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000c4e:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000c52:	4baa      	ldr	r3, [pc, #680]	; (8000efc <main+0x344>)
 8000c54:	2100      	movs	r1, #0
 8000c56:	f8c3 1250 	str.w	r1, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8000c5a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000c5e:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000c62:	695a      	ldr	r2, [r3, #20]
 8000c64:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000c68:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8000c6a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000c6e:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8000c72:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8000c76:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 8000c7a:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000c7e:	f643 76e0 	movw	r6, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000c82:	f3c2 04c9 	ubfx	r4, r2, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8000c86:	f3c2 324e 	ubfx	r2, r2, #13, #15
 8000c8a:	07a5      	lsls	r5, r4, #30
 8000c8c:	0152      	lsls	r2, r2, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000c8e:	ea02 0c06 	and.w	ip, r2, r6
 8000c92:	4628      	mov	r0, r5
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000c94:	4621      	mov	r1, r4
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000c96:	ea4c 0700 	orr.w	r7, ip, r0
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8000c9a:	3901      	subs	r1, #1
 8000c9c:	f100 4040 	add.w	r0, r0, #3221225472	; 0xc0000000
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000ca0:	f8c3 7260 	str.w	r7, [r3, #608]	; 0x260
      } while (ways-- != 0U);
 8000ca4:	1c4f      	adds	r7, r1, #1
 8000ca6:	d1f6      	bne.n	8000c96 <main+0xde>
 8000ca8:	3a20      	subs	r2, #32
    } while(sets-- != 0U);
 8000caa:	f112 0f20 	cmn.w	r2, #32
 8000cae:	d1ee      	bne.n	8000c8e <main+0xd6>
 8000cb0:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 8000cb4:	695a      	ldr	r2, [r3, #20]
 8000cb6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000cba:	615a      	str	r2, [r3, #20]
 8000cbc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000cc0:	f3bf 8f6f 	isb	sy
  HAL_Init();
 8000cc4:	f004 f882 	bl	8004dcc <HAL_Init>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000cc8:	4e8d      	ldr	r6, [pc, #564]	; (8000f00 <main+0x348>)
  SystemClock_Config();
 8000cca:	f7ff feed 	bl	8000aa8 <SystemClock_Config>
  BSP_LED_Init(LED2);
 8000cce:	2001      	movs	r0, #1
 8000cd0:	f003 ff8e 	bl	8004bf0 <BSP_LED_Init>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000cd4:	2214      	movs	r2, #20
 8000cd6:	2100      	movs	r1, #0
 8000cd8:	a830      	add	r0, sp, #192	; 0xc0
 8000cda:	f020 f8eb 	bl	8020eb4 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000cde:	6b33      	ldr	r3, [r6, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOJ, VSYNC_FREQ2_Pin|RENDER_TIME2_Pin|FRAMERATE_Pin, GPIO_PIN_RESET);
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	f242 0122 	movw	r1, #8226	; 0x2022
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000ce6:	f043 0310 	orr.w	r3, r3, #16
  HAL_GPIO_WritePin(GPIOJ, VSYNC_FREQ2_Pin|RENDER_TIME2_Pin|FRAMERATE_Pin, GPIO_PIN_RESET);
 8000cea:	4886      	ldr	r0, [pc, #536]	; (8000f04 <main+0x34c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000cec:	2501      	movs	r5, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cee:	f04f 0802 	mov.w	r8, #2
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000cf2:	6333      	str	r3, [r6, #48]	; 0x30
  GPIO_InitStruct.Pin = DSI_RESET_Pin;
 8000cf4:	f44f 4700 	mov.w	r7, #32768	; 0x8000
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000cf8:	6b33      	ldr	r3, [r6, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cfa:	2400      	movs	r4, #0
  hdsi.Init.TXEscapeCkdiv = 4;
 8000cfc:	f04f 0a04 	mov.w	sl, #4
  PhyTimings.DataLaneLP2HSTime = 25;
 8000d00:	f04f 090f 	mov.w	r9, #15
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000d04:	f003 0310 	and.w	r3, r3, #16
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8000d08:	f44f 7b80 	mov.w	fp, #256	; 0x100
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000d0c:	9306      	str	r3, [sp, #24]
 8000d0e:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000d10:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d12:	f043 0301 	orr.w	r3, r3, #1
 8000d16:	6333      	str	r3, [r6, #48]	; 0x30
 8000d18:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d1a:	f003 0301 	and.w	r3, r3, #1
 8000d1e:	9307      	str	r3, [sp, #28]
 8000d20:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d22:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d24:	f043 0302 	orr.w	r3, r3, #2
 8000d28:	6333      	str	r3, [r6, #48]	; 0x30
 8000d2a:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d2c:	f003 0302 	and.w	r3, r3, #2
 8000d30:	9308      	str	r3, [sp, #32]
 8000d32:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000d34:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d36:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000d3a:	6333      	str	r3, [r6, #48]	; 0x30
 8000d3c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d3e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000d42:	9309      	str	r3, [sp, #36]	; 0x24
 8000d44:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000d46:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d48:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000d4c:	6333      	str	r3, [r6, #48]	; 0x30
 8000d4e:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d50:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8000d54:	930a      	str	r3, [sp, #40]	; 0x28
 8000d56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000d58:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d5a:	f043 0308 	orr.w	r3, r3, #8
 8000d5e:	6333      	str	r3, [r6, #48]	; 0x30
 8000d60:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d62:	f003 0308 	and.w	r3, r3, #8
 8000d66:	930b      	str	r3, [sp, #44]	; 0x2c
 8000d68:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000d6a:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d6c:	f043 0304 	orr.w	r3, r3, #4
 8000d70:	6333      	str	r3, [r6, #48]	; 0x30
 8000d72:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d74:	f003 0304 	and.w	r3, r3, #4
 8000d78:	930c      	str	r3, [sp, #48]	; 0x30
 8000d7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000d7c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d7e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000d82:	6333      	str	r3, [r6, #48]	; 0x30
 8000d84:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d86:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000d8a:	930d      	str	r3, [sp, #52]	; 0x34
 8000d8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000d8e:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d90:	f043 0320 	orr.w	r3, r3, #32
 8000d94:	6333      	str	r3, [r6, #48]	; 0x30
 8000d96:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000d98:	f003 0320 	and.w	r3, r3, #32
 8000d9c:	930e      	str	r3, [sp, #56]	; 0x38
 8000d9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000da0:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000da2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000da6:	6333      	str	r3, [r6, #48]	; 0x30
 8000da8:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000daa:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000dae:	930f      	str	r3, [sp, #60]	; 0x3c
 8000db0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(GPIOJ, VSYNC_FREQ2_Pin|RENDER_TIME2_Pin|FRAMERATE_Pin, GPIO_PIN_RESET);
 8000db2:	f005 f9a1 	bl	80060f8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DSI_RESET_GPIO_Port, DSI_RESET_Pin, GPIO_PIN_SET);
 8000db6:	2201      	movs	r2, #1
 8000db8:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000dbc:	4851      	ldr	r0, [pc, #324]	; (8000f04 <main+0x34c>)
 8000dbe:	f005 f99b 	bl	80060f8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000dc2:	f242 0320 	movw	r3, #8224	; 0x2020
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000dc6:	a930      	add	r1, sp, #192	; 0xc0
 8000dc8:	484e      	ldr	r0, [pc, #312]	; (8000f04 <main+0x34c>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000dca:	9532      	str	r5, [sp, #200]	; 0xc8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000dcc:	f8cd 80cc 	str.w	r8, [sp, #204]	; 0xcc
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000dd0:	e9cd 3530 	strd	r3, r5, [sp, #192]	; 0xc0
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000dd4:	f005 f808 	bl	8005de8 <HAL_GPIO_Init>
  HAL_GPIO_Init(DSI_RESET_GPIO_Port, &GPIO_InitStruct);
 8000dd8:	a930      	add	r1, sp, #192	; 0xc0
 8000dda:	484a      	ldr	r0, [pc, #296]	; (8000f04 <main+0x34c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ddc:	e9cd 7530 	strd	r7, r5, [sp, #192]	; 0xc0
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 8000de0:	e9cd 5532 	strd	r5, r5, [sp, #200]	; 0xc8
  HAL_GPIO_Init(DSI_RESET_GPIO_Port, &GPIO_InitStruct);
 8000de4:	f005 f800 	bl	8005de8 <HAL_GPIO_Init>
  HAL_GPIO_Init(FRAMERATE_GPIO_Port, &GPIO_InitStruct);
 8000de8:	a930      	add	r1, sp, #192	; 0xc0
 8000dea:	4846      	ldr	r0, [pc, #280]	; (8000f04 <main+0x34c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000dec:	e9cd 8530 	strd	r8, r5, [sp, #192]	; 0xc0
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000df0:	e9cd 4832 	strd	r4, r8, [sp, #200]	; 0xc8
  HAL_GPIO_Init(FRAMERATE_GPIO_Port, &GPIO_InitStruct);
 8000df4:	f004 fff8 	bl	8005de8 <HAL_GPIO_Init>
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000df8:	6b33      	ldr	r3, [r6, #48]	; 0x30
  HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 5, 0);
 8000dfa:	4622      	mov	r2, r4
 8000dfc:	2105      	movs	r1, #5
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000dfe:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
  HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 5, 0);
 8000e02:	2039      	movs	r0, #57	; 0x39
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000e04:	6333      	str	r3, [r6, #48]	; 0x30
 8000e06:	6b33      	ldr	r3, [r6, #48]	; 0x30
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8000e08:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000e0c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8000e10:	9305      	str	r3, [sp, #20]
 8000e12:	9b05      	ldr	r3, [sp, #20]
  HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 5, 0);
 8000e14:	f004 f826 	bl	8004e64 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
 8000e18:	2039      	movs	r0, #57	; 0x39
 8000e1a:	f004 f855 	bl	8004ec8 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000e1e:	4b3a      	ldr	r3, [pc, #232]	; (8000f08 <main+0x350>)
 8000e20:	483a      	ldr	r0, [pc, #232]	; (8000f0c <main+0x354>)
 8000e22:	6003      	str	r3, [r0, #0]
 8000e24:	8084      	strh	r4, [r0, #4]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8000e26:	6205      	str	r5, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000e28:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000e2c:	f004 f8b8 	bl	8004fa0 <HAL_CRC_Init>
  HAL_GPIO_WritePin(DSI_RESET_GPIO_Port, DSI_RESET_Pin, GPIO_PIN_RESET);
 8000e30:	4639      	mov	r1, r7
 8000e32:	4622      	mov	r2, r4
 8000e34:	4833      	ldr	r0, [pc, #204]	; (8000f04 <main+0x34c>)
 8000e36:	f005 f95f 	bl	80060f8 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8000e3a:	2014      	movs	r0, #20
 8000e3c:	f003 ffee 	bl	8004e1c <HAL_Delay>
  HAL_GPIO_WritePin(DSI_RESET_GPIO_Port, DSI_RESET_Pin, GPIO_PIN_SET);
 8000e40:	4639      	mov	r1, r7
 8000e42:	462a      	mov	r2, r5
 8000e44:	482f      	ldr	r0, [pc, #188]	; (8000f04 <main+0x34c>)
 8000e46:	f005 f957 	bl	80060f8 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8000e4a:	200a      	movs	r0, #10
 8000e4c:	f003 ffe6 	bl	8004e1c <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8000e50:	2224      	movs	r2, #36	; 0x24
 8000e52:	4621      	mov	r1, r4
 8000e54:	a819      	add	r0, sp, #100	; 0x64
  DSI_PLLInitTypeDef PLLInit = {0};
 8000e56:	9412      	str	r4, [sp, #72]	; 0x48
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8000e58:	f020 f82c 	bl	8020eb4 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8000e5c:	2218      	movs	r2, #24
 8000e5e:	4621      	mov	r1, r4
 8000e60:	a813      	add	r0, sp, #76	; 0x4c
  hdsi.Instance = DSI;
 8000e62:	4f2b      	ldr	r7, [pc, #172]	; (8000f10 <main+0x358>)
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8000e64:	f020 f826 	bl	8020eb4 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8000e68:	2234      	movs	r2, #52	; 0x34
 8000e6a:	4621      	mov	r1, r4
 8000e6c:	a830      	add	r0, sp, #192	; 0xc0
 8000e6e:	f020 f821 	bl	8020eb4 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 8000e72:	222c      	movs	r2, #44	; 0x2c
 8000e74:	4621      	mov	r1, r4
 8000e76:	a822      	add	r0, sp, #136	; 0x88
 8000e78:	f020 f81c 	bl	8020eb4 <memset>
  hdsi.Instance = DSI;
 8000e7c:	4b25      	ldr	r3, [pc, #148]	; (8000f14 <main+0x35c>)
  PLLInit.PLLIDF = DSI_PLL_IN_DIV5;
 8000e7e:	f04f 0c64 	mov.w	ip, #100	; 0x64
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8000e82:	a910      	add	r1, sp, #64	; 0x40
 8000e84:	4638      	mov	r0, r7
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8000e86:	e9c7 3400 	strd	r3, r4, [r7]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV5;
 8000e8a:	2305      	movs	r3, #5
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8000e8c:	e9c7 a502 	strd	sl, r5, [r7, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV5;
 8000e90:	e9cd c310 	strd	ip, r3, [sp, #64]	; 0x40
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8000e94:	f004 fc60 	bl	8005758 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8000e98:	a919      	add	r1, sp, #100	; 0x64
 8000e9a:	4638      	mov	r0, r7
  HostTimeouts.BTATimeout = 0;
 8000e9c:	9421      	str	r4, [sp, #132]	; 0x84
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 8000e9e:	e9cd 5419 	strd	r5, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedReadTimeout = 0;
 8000ea2:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 8000ea6:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.LowPowerWriteTimeout = 0;
 8000eaa:	e9cd 441f 	strd	r4, r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8000eae:	f004 fe7b 	bl	8005ba8 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8000eb2:	f04f 0e1c 	mov.w	lr, #28
 8000eb6:	2321      	movs	r3, #33	; 0x21
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8000eb8:	a913      	add	r1, sp, #76	; 0x4c
 8000eba:	4638      	mov	r0, r7
  PhyTimings.ClockLaneLP2HSTime = 33;
 8000ebc:	e9cd e313 	strd	lr, r3, [sp, #76]	; 0x4c
  PhyTimings.DataLaneLP2HSTime = 25;
 8000ec0:	2319      	movs	r3, #25
  PhyTimings.StopWaitTime = 0;
 8000ec2:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  PhyTimings.DataLaneLP2HSTime = 25;
 8000ec6:	e9cd 9315 	strd	r9, r3, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8000eca:	f004 fe30 	bl	8005b2e <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8000ece:	4651      	mov	r1, sl
 8000ed0:	4638      	mov	r0, r7
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8000ed2:	f04f 0910 	mov.w	r9, #16
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8000ed6:	f004 fe19 	bl	8005b0c <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 8000eda:	f242 7110 	movw	r1, #10000	; 0x2710
 8000ede:	4638      	mov	r0, r7
 8000ee0:	f004 ff6c 	bl	8005dbc <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_OVF) != HAL_OK)
 8000ee4:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000ee8:	4638      	mov	r0, r7
 8000eea:	e015      	b.n	8000f18 <main+0x360>
 8000eec:	01010001 	.word	0x01010001
 8000ef0:	03000012 	.word	0x03000012
 8000ef4:	03000019 	.word	0x03000019
 8000ef8:	03000017 	.word	0x03000017
 8000efc:	e000ed00 	.word	0xe000ed00
 8000f00:	40023800 	.word	0x40023800
 8000f04:	40022400 	.word	0x40022400
 8000f08:	40023000 	.word	0x40023000
 8000f0c:	2001289c 	.word	0x2001289c
 8000f10:	200128c4 	.word	0x200128c4
 8000f14:	40016c00 	.word	0x40016c00
 8000f18:	f004 fbb9 	bl	800568e <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8000f1c:	f44f 7300 	mov.w	r3, #512	; 0x200
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8000f20:	f44f 6280 	mov.w	r2, #1024	; 0x400
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8000f24:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8000f28:	f44f 4080 	mov.w	r0, #16384	; 0x4000
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8000f2c:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8000f30:	f8cd 80f0 	str.w	r8, [sp, #240]	; 0xf0
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8000f34:	e9cd b330 	strd	fp, r3, [sp, #192]	; 0xc0
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8000f38:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000f3c:	e9cd 2332 	strd	r2, r3, [sp, #200]	; 0xc8
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8000f40:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000f44:	e9cd 1334 	strd	r1, r3, [sp, #208]	; 0xd0
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8000f48:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8000f4c:	a930      	add	r1, sp, #192	; 0xc0
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8000f4e:	e9cd 0336 	strd	r0, r3, [sp, #216]	; 0xd8
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8000f52:	f44f 2380 	mov.w	r3, #262144	; 0x40000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8000f56:	4638      	mov	r0, r7
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8000f58:	e9cd 6338 	strd	r6, r3, [sp, #224]	; 0xe0
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8000f5c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  hltdc.Instance = LTDC;
 8000f60:	4ec8      	ldr	r6, [pc, #800]	; (8001284 <main+0x6cc>)
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8000f62:	e9cd c33a 	strd	ip, r3, [sp, #232]	; 0xe8
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8000f66:	f004 fd9d 	bl	8005aa4 <HAL_DSI_ConfigCommand>
  CmdCfg.CommandSize = 200;
 8000f6a:	23c8      	movs	r3, #200	; 0xc8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8000f6c:	a922      	add	r1, sp, #136	; 0x88
 8000f6e:	4638      	mov	r0, r7
  CmdCfg.CommandSize = 200;
 8000f70:	9324      	str	r3, [sp, #144]	; 0x90
 8000f72:	9303      	str	r3, [sp, #12]
  CmdCfg.ColorCoding = DSI_RGB565;
 8000f74:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  CmdCfg.TearingEffectPolarity = DSI_TE_RISING_EDGE;
 8000f78:	e9cd 9425 	strd	r9, r4, [sp, #148]	; 0x94
  CmdCfg.VSPolarity = DSI_VSYNC_ACTIVE_LOW;
 8000f7c:	e9cd a827 	strd	sl, r8, [sp, #156]	; 0x9c
  CmdCfg.VSyncPol = DSI_VSYNC_FALLING;
 8000f80:	e9cd 4429 	strd	r4, r4, [sp, #164]	; 0xa4
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8000f84:	e9cd 452b 	strd	r4, r5, [sp, #172]	; 0xac
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8000f88:	f004 fd1a 	bl	80059c0 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8000f8c:	4621      	mov	r1, r4
 8000f8e:	4638      	mov	r0, r7
 8000f90:	f004 fd05 	bl	800599e <HAL_DSI_SetGenericVCID>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000f94:	4621      	mov	r1, r4
 8000f96:	2234      	movs	r2, #52	; 0x34
 8000f98:	a822      	add	r0, sp, #136	; 0x88
 8000f9a:	f01f ff8b 	bl	8020eb4 <memset>
  hltdc.Instance = LTDC;
 8000f9e:	4aba      	ldr	r2, [pc, #744]	; (8001288 <main+0x6d0>)
  hltdc.Init.AccumulatedActiveW = 202;
 8000fa0:	f04f 0eca 	mov.w	lr, #202	; 0xca
  hltdc.Init.TotalWidth = 203;
 8000fa4:	23cb      	movs	r3, #203	; 0xcb
  hltdc.Init.AccumulatedHBP = 2;
 8000fa6:	f8c6 8020 	str.w	r8, [r6, #32]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000faa:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 483;
 8000fac:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8000fae:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  hltdc.Instance = LTDC;
 8000fb2:	e9c6 2400 	strd	r2, r4, [r6]
  hltdc.Init.AccumulatedActiveW = 202;
 8000fb6:	f44f 72f1 	mov.w	r2, #482	; 0x1e2
 8000fba:	e9c6 e209 	strd	lr, r2, [r6, #36]	; 0x24
  hltdc.Init.TotalWidth = 203;
 8000fbe:	f240 12e3 	movw	r2, #483	; 0x1e3
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000fc2:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.TotalWidth = 203;
 8000fc6:	e9c6 320b 	strd	r3, r2, [r6, #44]	; 0x2c
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000fca:	e9c6 4504 	strd	r4, r5, [r6, #16]
  hltdc.Init.VerticalSync = 1;
 8000fce:	e9c6 5806 	strd	r5, r8, [r6, #24]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000fd2:	f005 fc8b 	bl	80068ec <HAL_LTDC_Init>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000fd6:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8000fd8:	f44f 6080 	mov.w	r0, #1024	; 0x400
  pLayerCfg.WindowX0 = 0;
 8000fdc:	9b03      	ldr	r3, [sp, #12]
  pLayerCfg.WindowY0 = 0;
 8000fde:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.WindowX0 = 0;
 8000fe2:	9422      	str	r4, [sp, #136]	; 0x88
  pLayerCfg.ImageHeight = 480;
 8000fe4:	f8ad 40b8 	strh.w	r4, [sp, #184]	; 0xb8
  pLayerCfg.ImageWidth = 200;
 8000fe8:	922d      	str	r2, [sp, #180]	; 0xb4
  pLayerCfg.Backcolor.Green = 0;
 8000fea:	f88d 40ba 	strb.w	r4, [sp, #186]	; 0xba
  pLayerCfg.Alpha = 255;
 8000fee:	e9cd 1427 	strd	r1, r4, [sp, #156]	; 0x9c
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8000ff2:	2105      	movs	r1, #5
 8000ff4:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ff8:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ffc:	4630      	mov	r0, r6
  pLayerCfg.FBStartAdress = 0xC0000000;
 8000ffe:	e9cd 132b 	strd	r1, r3, [sp, #172]	; 0xac
  pLayerCfg.WindowY1 = 480;
 8001002:	e9cd 2825 	strd	r2, r8, [sp, #148]	; 0x94
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001006:	a922      	add	r1, sp, #136	; 0x88
 8001008:	4622      	mov	r2, r4
  pLayerCfg.WindowX1 = 200;
 800100a:	e9cd 3423 	strd	r3, r4, [sp, #140]	; 0x8c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800100e:	f005 fd39 	bl	8006a84 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8001012:	6832      	ldr	r2, [r6, #0]
  HAL_DSI_Start(&hdsi);
 8001014:	4638      	mov	r0, r7
  __HAL_LTDC_DISABLE(&hltdc);
 8001016:	6993      	ldr	r3, [r2, #24]
 8001018:	f023 0301 	bic.w	r3, r3, #1
 800101c:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 800101e:	f004 fe29 	bl	8005c74 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8001022:	4629      	mov	r1, r5
 8001024:	4640      	mov	r0, r8
 8001026:	f002 ff53 	bl	8003ed0 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 800102a:	2328      	movs	r3, #40	; 0x28
 800102c:	2215      	movs	r2, #21
 800102e:	4621      	mov	r1, r4
 8001030:	4638      	mov	r0, r7
 8001032:	9400      	str	r4, [sp, #0]
 8001034:	f004 fe51 	bl	8005cda <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001038:	a930      	add	r1, sp, #192	; 0xc0
 800103a:	4638      	mov	r0, r7
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 800103c:	943a      	str	r4, [sp, #232]	; 0xe8
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800103e:	2720      	movs	r7, #32
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 8001040:	e9cd 4430 	strd	r4, r4, [sp, #192]	; 0xc0
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8001044:	e9cd 4432 	strd	r4, r4, [sp, #200]	; 0xc8
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8001048:	e9cd 4434 	strd	r4, r4, [sp, #208]	; 0xd0
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 800104c:	e9cd 4436 	strd	r4, r4, [sp, #216]	; 0xd8
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 8001050:	e9cd 4438 	strd	r4, r4, [sp, #224]	; 0xe0
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001054:	f004 fd26 	bl	8005aa4 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8001058:	4622      	mov	r2, r4
 800105a:	f44f 7148 	mov.w	r1, #800	; 0x320
 800105e:	4630      	mov	r0, r6
 8001060:	f005 fd3a 	bl	8006ad8 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 8001064:	6832      	ldr	r2, [r6, #0]
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001066:	4e89      	ldr	r6, [pc, #548]	; (800128c <main+0x6d4>)
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8001068:	f44f 6c00 	mov.w	ip, #2048	; 0x800
  __HAL_LTDC_ENABLE(&hltdc);
 800106c:	6993      	ldr	r3, [r2, #24]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800106e:	a930      	add	r1, sp, #192	; 0xc0
 8001070:	4630      	mov	r0, r6
  __HAL_LTDC_ENABLE(&hltdc);
 8001072:	432b      	orrs	r3, r5
 8001074:	6193      	str	r3, [r2, #24]
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001076:	4b86      	ldr	r3, [pc, #536]	; (8001290 <main+0x6d8>)
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 8001078:	62b4      	str	r4, [r6, #40]	; 0x28
  SdramTiming.LoadToActiveDelay = 2;
 800107a:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
  SdramTiming.RPDelay = 2;
 800107e:	f8cd 80d4 	str.w	r8, [sp, #212]	; 0xd4
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8001082:	e9c6 3400 	strd	r3, r4, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001086:	2340      	movs	r3, #64	; 0x40
 8001088:	e9c6 7304 	strd	r7, r3, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800108c:	f44f 73c0 	mov.w	r3, #384	; 0x180
  SdramTiming.RCDDelay = 3;
 8001090:	2703      	movs	r7, #3
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001092:	e9c6 3406 	strd	r3, r4, [r6, #24]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8001096:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  SdramTiming.RCDDelay = 3;
 800109a:	9736      	str	r7, [sp, #216]	; 0xd8
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 800109c:	e9c6 c308 	strd	ip, r3, [r6, #32]
  SdramTiming.ExitSelfRefreshDelay = 7;
 80010a0:	2307      	movs	r3, #7
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80010a2:	e9c6 4a02 	strd	r4, sl, [r6, #8]
  SdramTiming.SelfRefreshTime = 4;
 80010a6:	e9cd 3a31 	strd	r3, sl, [sp, #196]	; 0xc4
  SdramTiming.WriteRecoveryTime = 2;
 80010aa:	e9cd 3833 	strd	r3, r8, [sp, #204]	; 0xcc
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80010ae:	f007 f971 	bl	8008394 <HAL_SDRAM_Init>
    HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80010b2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80010b6:	a922      	add	r1, sp, #136	; 0x88
 80010b8:	4630      	mov	r0, r6
 __IO uint32_t tmpmrd = 0;
 80010ba:	9413      	str	r4, [sp, #76]	; 0x4c
    Command->CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK1;
 80010bc:	e9cd 5922 	strd	r5, r9, [sp, #136]	; 0x88
    Command->ModeRegisterDefinition = 0;
 80010c0:	e9cd 5424 	strd	r5, r4, [sp, #144]	; 0x90
    HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80010c4:	f007 f986 	bl	80083d4 <HAL_SDRAM_SendCommand>
    HAL_Delay(1);
 80010c8:	4628      	mov	r0, r5
 80010ca:	f003 fea7 	bl	8004e1c <HAL_Delay>
    HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80010ce:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80010d2:	a922      	add	r1, sp, #136	; 0x88
 80010d4:	4630      	mov	r0, r6
    Command->CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80010d6:	e9cd 8922 	strd	r8, r9, [sp, #136]	; 0x88
    Command->ModeRegisterDefinition = 0;
 80010da:	e9cd 5424 	strd	r5, r4, [sp, #144]	; 0x90
    HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80010de:	f007 f979 	bl	80083d4 <HAL_SDRAM_SendCommand>
    Command->AutoRefreshNumber      = 8;
 80010e2:	2308      	movs	r3, #8
    HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80010e4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80010e8:	a922      	add	r1, sp, #136	; 0x88
 80010ea:	4630      	mov	r0, r6
    Command->CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80010ec:	e9cd 7922 	strd	r7, r9, [sp, #136]	; 0x88
    Command->ModeRegisterDefinition = 0;
 80010f0:	e9cd 3424 	strd	r3, r4, [sp, #144]	; 0x90
    HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80010f4:	f007 f96e 	bl	80083d4 <HAL_SDRAM_SendCommand>
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          | \
 80010f8:	f44f 730c 	mov.w	r3, #560	; 0x230
    HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80010fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001100:	a922      	add	r1, sp, #136	; 0x88
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          | \
 8001102:	9313      	str	r3, [sp, #76]	; 0x4c
    HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001104:	4630      	mov	r0, r6
    Command->ModeRegisterDefinition = tmpmrd;
 8001106:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_4_CYCLE;
 8001108:	f44f 7740 	mov.w	r7, #768	; 0x300
    Command->AutoRefreshNumber      = 1;
 800110c:	9524      	str	r5, [sp, #144]	; 0x90
    Command->ModeRegisterDefinition = tmpmrd;
 800110e:	9325      	str	r3, [sp, #148]	; 0x94
    Command->CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8001110:	e9cd a922 	strd	sl, r9, [sp, #136]	; 0x88
    HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001114:	f007 f95e 	bl	80083d4 <HAL_SDRAM_SendCommand>
    HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001118:	f240 712a 	movw	r1, #1834	; 0x72a
 800111c:	4630      	mov	r0, r6
  hqspi.Instance = QUADSPI;
 800111e:	4e5d      	ldr	r6, [pc, #372]	; (8001294 <main+0x6dc>)
    HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001120:	f007 f96f 	bl	8008402 <HAL_SDRAM_ProgramRefreshRate>
  FMC_Bank1->BTCR[0] = 0x000030D2;
 8001124:	f243 02d2 	movw	r2, #12498	; 0x30d2
 8001128:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 800112c:	4630      	mov	r0, r6
  FMC_Bank1->BTCR[0] = 0x000030D2;
 800112e:	601a      	str	r2, [r3, #0]
  hqspi.Instance = QUADSPI;
 8001130:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8001134:	6234      	str	r4, [r6, #32]
  hqspi.Init.ClockPrescaler = 1;
 8001136:	e9c6 3500 	strd	r3, r5, [r6]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_4_CYCLE;
 800113a:	2319      	movs	r3, #25
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800113c:	e9c6 9902 	strd	r9, r9, [r6, #8]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_4_CYCLE;
 8001140:	e9c6 3704 	strd	r3, r7, [r6, #16]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8001144:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8001148:	f005 fe1e 	bl	8006d88 <HAL_QSPI_Init>
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 800114c:	9736      	str	r7, [sp, #216]	; 0xd8
  s_command.Instruction       = RESET_ENABLE_CMD;
 800114e:	2766      	movs	r7, #102	; 0x66
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001150:	f241 3288 	movw	r2, #5000	; 0x1388
 8001154:	a930      	add	r1, sp, #192	; 0xc0
 8001156:	4630      	mov	r0, r6
  s_command.Instruction       = RESET_ENABLE_CMD;
 8001158:	9730      	str	r7, [sp, #192]	; 0xc0
  s_command.DataMode          = QSPI_DATA_NONE;
 800115a:	9439      	str	r4, [sp, #228]	; 0xe4
  s_command.DummyCycles       = 0;
 800115c:	9435      	str	r4, [sp, #212]	; 0xd4
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800115e:	943d      	str	r4, [sp, #244]	; 0xf4
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8001160:	e9cd 4437 	strd	r4, r4, [sp, #220]	; 0xdc
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8001164:	e9cd 443b 	strd	r4, r4, [sp, #236]	; 0xec
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001168:	f005 fe60 	bl	8006e2c <HAL_QSPI_Command>
 800116c:	2800      	cmp	r0, #0
 800116e:	f040 80b5 	bne.w	80012dc <main+0x724>
  s_command.Instruction = RESET_MEMORY_CMD;
 8001172:	2499      	movs	r4, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001174:	f241 3288 	movw	r2, #5000	; 0x1388
 8001178:	a930      	add	r1, sp, #192	; 0xc0
 800117a:	4630      	mov	r0, r6
  s_command.Instruction = RESET_MEMORY_CMD;
 800117c:	9430      	str	r4, [sp, #192]	; 0xc0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800117e:	f005 fe55 	bl	8006e2c <HAL_QSPI_Command>
 8001182:	2800      	cmp	r0, #0
 8001184:	f040 80aa 	bne.w	80012dc <main+0x724>
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001188:	f241 3288 	movw	r2, #5000	; 0x1388
 800118c:	a930      	add	r1, sp, #192	; 0xc0
 800118e:	4630      	mov	r0, r6
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8001190:	f8cd b0d8 	str.w	fp, [sp, #216]	; 0xd8
  s_command.Instruction       = RESET_ENABLE_CMD;
 8001194:	9730      	str	r7, [sp, #192]	; 0xc0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001196:	f005 fe49 	bl	8006e2c <HAL_QSPI_Command>
 800119a:	2800      	cmp	r0, #0
 800119c:	f040 809e 	bne.w	80012dc <main+0x724>
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80011a0:	f241 3288 	movw	r2, #5000	; 0x1388
 80011a4:	a930      	add	r1, sp, #192	; 0xc0
 80011a6:	4630      	mov	r0, r6
  s_command.Instruction = RESET_MEMORY_CMD;
 80011a8:	9430      	str	r4, [sp, #192]	; 0xc0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80011aa:	f005 fe3f 	bl	8006e2c <HAL_QSPI_Command>
 80011ae:	4604      	mov	r4, r0
 80011b0:	2800      	cmp	r0, #0
 80011b2:	f040 8093 	bne.w	80012dc <main+0x724>
  HAL_Delay( 1000 );
 80011b6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80011ba:	f003 fe2f 	bl	8004e1c <HAL_Delay>
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80011be:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80011c2:	aa22      	add	r2, sp, #136	; 0x88
 80011c4:	a930      	add	r1, sp, #192	; 0xc0
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80011c6:	9327      	str	r3, [sp, #156]	; 0x9c
  s_command.Instruction     = READ_STATUS_REG_CMD;
 80011c8:	2305      	movs	r3, #5
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80011ca:	4630      	mov	r0, r6
  s_config.Interval        = 0x10;
 80011cc:	f8cd 9090 	str.w	r9, [sp, #144]	; 0x90
  s_command.Instruction     = READ_STATUS_REG_CMD;
 80011d0:	9330      	str	r3, [sp, #192]	; 0xc0
  s_command.DataMode        = QSPI_DATA_1_LINE;
 80011d2:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_command.InstructionMode = QSPI_INSTRUCTION_1_LINE;
 80011d6:	f8cd b0d8 	str.w	fp, [sp, #216]	; 0xd8
  s_command.DataMode        = QSPI_DATA_1_LINE;
 80011da:	9339      	str	r3, [sp, #228]	; 0xe4
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80011dc:	f241 3388 	movw	r3, #5000	; 0x1388
  s_config.Mask            = MX25L512_SR_WIP;
 80011e0:	e9cd 4522 	strd	r4, r5, [sp, #136]	; 0x88
  s_config.StatusBytesSize = 1;
 80011e4:	e9cd 5425 	strd	r5, r4, [sp, #148]	; 0x94
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80011e8:	f005 ff1f 	bl	800702a <HAL_QSPI_AutoPolling>
 80011ec:	2800      	cmp	r0, #0
 80011ee:	d175      	bne.n	80012dc <main+0x724>
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80011f0:	2305      	movs	r3, #5
  s_command.DummyCycles       = 0;
 80011f2:	9035      	str	r0, [sp, #212]	; 0xd4
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80011f4:	f241 3288 	movw	r2, #5000	; 0x1388
 80011f8:	a930      	add	r1, sp, #192	; 0xc0
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80011fa:	9330      	str	r3, [sp, #192]	; 0xc0
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80011fc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8001200:	f8cd b0d8 	str.w	fp, [sp, #216]	; 0xd8
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8001204:	9339      	str	r3, [sp, #228]	; 0xe4
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8001206:	e9cd 0037 	strd	r0, r0, [sp, #220]	; 0xdc
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 800120a:	e9cd 503a 	strd	r5, r0, [sp, #232]	; 0xe8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800120e:	e9cd 003c 	strd	r0, r0, [sp, #240]	; 0xf0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001212:	4630      	mov	r0, r6
 8001214:	f005 fe0a 	bl	8006e2c <HAL_QSPI_Command>
 8001218:	2800      	cmp	r0, #0
 800121a:	d15f      	bne.n	80012dc <main+0x724>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800121c:	f241 3288 	movw	r2, #5000	; 0x1388
 8001220:	a919      	add	r1, sp, #100	; 0x64
 8001222:	4630      	mov	r0, r6
 8001224:	f005 fea1 	bl	8006f6a <HAL_QSPI_Receive>
 8001228:	2800      	cmp	r0, #0
 800122a:	d157      	bne.n	80012dc <main+0x724>
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800122c:	2306      	movs	r3, #6
  s_command.DataMode          = QSPI_DATA_NONE;
 800122e:	9039      	str	r0, [sp, #228]	; 0xe4
  s_command.DummyCycles       = 0;
 8001230:	9035      	str	r0, [sp, #212]	; 0xd4
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001232:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8001236:	903d      	str	r0, [sp, #244]	; 0xf4
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001238:	a930      	add	r1, sp, #192	; 0xc0
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800123a:	f8cd b0d8 	str.w	fp, [sp, #216]	; 0xd8
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800123e:	9330      	str	r3, [sp, #192]	; 0xc0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8001240:	e9cd 0037 	strd	r0, r0, [sp, #220]	; 0xdc
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8001244:	e9cd 003b 	strd	r0, r0, [sp, #236]	; 0xec
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001248:	4630      	mov	r0, r6
 800124a:	f005 fdef 	bl	8006e2c <HAL_QSPI_Command>
 800124e:	2800      	cmp	r0, #0
 8001250:	d144      	bne.n	80012dc <main+0x724>
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8001252:	2300      	movs	r3, #0
  s_config.StatusBytesSize = 1;
 8001254:	462c      	mov	r4, r5
 8001256:	9525      	str	r5, [sp, #148]	; 0x94
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8001258:	f04f 7580 	mov.w	r5, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 800125c:	9326      	str	r3, [sp, #152]	; 0x98
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800125e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001262:	aa22      	add	r2, sp, #136	; 0x88
 8001264:	a930      	add	r1, sp, #192	; 0xc0
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8001266:	9327      	str	r3, [sp, #156]	; 0x9c
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8001268:	2305      	movs	r3, #5
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800126a:	4630      	mov	r0, r6
  s_config.Interval        = 0x10;
 800126c:	f8cd 9090 	str.w	r9, [sp, #144]	; 0x90
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8001270:	9330      	str	r3, [sp, #192]	; 0xc0
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001272:	f241 3388 	movw	r3, #5000	; 0x1388
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8001276:	9539      	str	r5, [sp, #228]	; 0xe4
  s_config.Mask            = MX25L512_SR_WREN;
 8001278:	e9cd 8822 	strd	r8, r8, [sp, #136]	; 0x88
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800127c:	f005 fed5 	bl	800702a <HAL_QSPI_AutoPolling>
 8001280:	bb60      	cbnz	r0, 80012dc <main+0x724>
 8001282:	e009      	b.n	8001298 <main+0x6e0>
 8001284:	200128e4 	.word	0x200128e4
 8001288:	40016800 	.word	0x40016800
 800128c:	20016bcc 	.word	0x20016bcc
 8001290:	a0000140 	.word	0xa0000140
 8001294:	20016c00 	.word	0x20016c00
  reg |= MX25L512_SR_QUADEN;
 8001298:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800129c:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.DummyCycles       = 0;
 80012a0:	9035      	str	r0, [sp, #212]	; 0xd4
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80012a2:	a930      	add	r1, sp, #192	; 0xc0
  reg |= MX25L512_SR_QUADEN;
 80012a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80012a8:	f8cd b0d8 	str.w	fp, [sp, #216]	; 0xd8
  s_command.Instruction       = WRITE_STATUS_CFG_REG_CMD;
 80012ac:	9430      	str	r4, [sp, #192]	; 0xc0
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80012ae:	9539      	str	r5, [sp, #228]	; 0xe4
  reg |= MX25L512_SR_QUADEN;
 80012b0:	f88d 3064 	strb.w	r3, [sp, #100]	; 0x64
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80012b4:	e9cd 0037 	strd	r0, r0, [sp, #220]	; 0xdc
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 80012b8:	e9cd 403a 	strd	r4, r0, [sp, #232]	; 0xe8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80012bc:	e9cd 003c 	strd	r0, r0, [sp, #240]	; 0xf0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80012c0:	4630      	mov	r0, r6
 80012c2:	f005 fdb3 	bl	8006e2c <HAL_QSPI_Command>
 80012c6:	b948      	cbnz	r0, 80012dc <main+0x724>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80012c8:	f241 3288 	movw	r2, #5000	; 0x1388
 80012cc:	a919      	add	r1, sp, #100	; 0x64
 80012ce:	4630      	mov	r0, r6
 80012d0:	f005 fdef 	bl	8006eb2 <HAL_QSPI_Transmit>
 80012d4:	b910      	cbnz	r0, 80012dc <main+0x724>
  HAL_Delay( 40 );
 80012d6:	2028      	movs	r0, #40	; 0x28
 80012d8:	f003 fda0 	bl	8004e1c <HAL_Delay>
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80012dc:	f44f 7380 	mov.w	r3, #256	; 0x100
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80012e0:	f241 3288 	movw	r2, #5000	; 0x1388
 80012e4:	a930      	add	r1, sp, #192	; 0xc0
 80012e6:	48b9      	ldr	r0, [pc, #740]	; (80015cc <main+0xa14>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80012e8:	9336      	str	r3, [sp, #216]	; 0xd8
  s_command.Instruction       = ENTER_QUAD_CMD;
 80012ea:	2335      	movs	r3, #53	; 0x35
 80012ec:	9330      	str	r3, [sp, #192]	; 0xc0
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80012ee:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80012f0:	e9cd 3337 	strd	r3, r3, [sp, #220]	; 0xdc
  s_command.DataMode          = QSPI_DATA_NONE;
 80012f4:	9339      	str	r3, [sp, #228]	; 0xe4
  s_command.DummyCycles       = 0;
 80012f6:	9335      	str	r3, [sp, #212]	; 0xd4
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80012f8:	933d      	str	r3, [sp, #244]	; 0xf4
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80012fa:	e9cd 333b 	strd	r3, r3, [sp, #236]	; 0xec
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80012fe:	f005 fd95 	bl	8006e2c <HAL_QSPI_Command>
 8001302:	b9e0      	cbnz	r0, 800133e <main+0x786>
  s_config.Mask            = MX25L512_SR_QUADEN|MX25L512_SR_WIP;
 8001304:	2341      	movs	r3, #65	; 0x41
 8001306:	f04f 0940 	mov.w	r9, #64	; 0x40
  s_config.Interval        = 0x10;
 800130a:	f04f 0a01 	mov.w	sl, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 800130e:	9026      	str	r0, [sp, #152]	; 0x98
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001310:	aa22      	add	r2, sp, #136	; 0x88
 8001312:	a930      	add	r1, sp, #192	; 0xc0
 8001314:	48ad      	ldr	r0, [pc, #692]	; (80015cc <main+0xa14>)
  s_config.Mask            = MX25L512_SR_QUADEN|MX25L512_SR_WIP;
 8001316:	e9cd 9322 	strd	r9, r3, [sp, #136]	; 0x88
  s_config.Interval        = 0x10;
 800131a:	2310      	movs	r3, #16
 800131c:	e9cd 3a24 	strd	r3, sl, [sp, #144]	; 0x90
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8001320:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001324:	9327      	str	r3, [sp, #156]	; 0x9c
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8001326:	f44f 7340 	mov.w	r3, #768	; 0x300
 800132a:	9336      	str	r3, [sp, #216]	; 0xd8
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800132c:	2305      	movs	r3, #5
 800132e:	9330      	str	r3, [sp, #192]	; 0xc0
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8001330:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8001334:	9339      	str	r3, [sp, #228]	; 0xe4
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001336:	f241 3388 	movw	r3, #5000	; 0x1388
 800133a:	f005 fe76 	bl	800702a <HAL_QSPI_AutoPolling>
  s_command.Instruction       = ENTER_4_BYTE_ADDR_MODE_CMD;
 800133e:	23b7      	movs	r3, #183	; 0xb7
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8001340:	f44f 7440 	mov.w	r4, #768	; 0x300
  s_command.Instruction       = ENTER_4_BYTE_ADDR_MODE_CMD;
 8001344:	9322      	str	r3, [sp, #136]	; 0x88
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8001346:	2300      	movs	r3, #0
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8001348:	9428      	str	r4, [sp, #160]	; 0xa0
  s_command.DataMode          = QSPI_DATA_NONE;
 800134a:	932b      	str	r3, [sp, #172]	; 0xac
  s_command.DummyCycles       = 0;
 800134c:	9327      	str	r3, [sp, #156]	; 0x9c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800134e:	932f      	str	r3, [sp, #188]	; 0xbc
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8001350:	e9cd 3329 	strd	r3, r3, [sp, #164]	; 0xa4
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8001354:	e9cd 332d 	strd	r3, r3, [sp, #180]	; 0xb4
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8001358:	f7ff fb6e 	bl	8000a38 <QSPI_WriteEnable.constprop.7>
 800135c:	bb18      	cbnz	r0, 80013a6 <main+0x7ee>
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800135e:	f241 3288 	movw	r2, #5000	; 0x1388
 8001362:	a922      	add	r1, sp, #136	; 0x88
 8001364:	4899      	ldr	r0, [pc, #612]	; (80015cc <main+0xa14>)
 8001366:	f005 fd61 	bl	8006e2c <HAL_QSPI_Command>
 800136a:	b9e0      	cbnz	r0, 80013a6 <main+0x7ee>
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800136c:	2305      	movs	r3, #5
  s_command.DummyCycles       = 0;
 800136e:	9035      	str	r0, [sp, #212]	; 0xd4
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8001370:	903d      	str	r0, [sp, #244]	; 0xf4
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8001372:	aa19      	add	r2, sp, #100	; 0x64
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8001374:	9330      	str	r3, [sp, #192]	; 0xc0
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8001376:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
  s_config.Match           = 0;
 800137a:	9019      	str	r0, [sp, #100]	; 0x64
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 800137c:	a930      	add	r1, sp, #192	; 0xc0
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800137e:	9339      	str	r3, [sp, #228]	; 0xe4
  s_config.Mask            = MX25L512_SR_WIP;
 8001380:	2301      	movs	r3, #1
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8001382:	9436      	str	r4, [sp, #216]	; 0xd8
  s_config.Mask            = MX25L512_SR_WIP;
 8001384:	931a      	str	r3, [sp, #104]	; 0x68
  s_config.StatusBytesSize = 1;
 8001386:	e9cd 301c 	strd	r3, r0, [sp, #112]	; 0x70
  s_config.Interval        = 0x10;
 800138a:	2310      	movs	r3, #16
 800138c:	931b      	str	r3, [sp, #108]	; 0x6c
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800138e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8001392:	e9cd 0037 	strd	r0, r0, [sp, #220]	; 0xdc
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8001396:	e9cd 003b 	strd	r0, r0, [sp, #236]	; 0xec
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800139a:	931e      	str	r3, [sp, #120]	; 0x78
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 800139c:	f241 3388 	movw	r3, #5000	; 0x1388
 80013a0:	488a      	ldr	r0, [pc, #552]	; (80015cc <main+0xa14>)
 80013a2:	f005 fe42 	bl	800702a <HAL_QSPI_AutoPolling>
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80013a6:	2305      	movs	r3, #5
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 80013a8:	f44f 7640 	mov.w	r6, #768	; 0x300
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80013ac:	f04f 7440 	mov.w	r4, #50331648	; 0x3000000
  s_command.NbData            = 1;
 80013b0:	2501      	movs	r5, #1
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80013b2:	9330      	str	r3, [sp, #192]	; 0xc0
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80013b4:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80013b6:	f241 3288 	movw	r2, #5000	; 0x1388
 80013ba:	a930      	add	r1, sp, #192	; 0xc0
 80013bc:	4883      	ldr	r0, [pc, #524]	; (80015cc <main+0xa14>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 80013be:	9636      	str	r6, [sp, #216]	; 0xd8
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80013c0:	9439      	str	r4, [sp, #228]	; 0xe4
  s_command.DummyCycles       = 0;
 80013c2:	9335      	str	r3, [sp, #212]	; 0xd4
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80013c4:	e9cd 3337 	strd	r3, r3, [sp, #220]	; 0xdc
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 80013c8:	e9cd 533a 	strd	r5, r3, [sp, #232]	; 0xe8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80013cc:	e9cd 333c 	strd	r3, r3, [sp, #240]	; 0xf0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80013d0:	f005 fd2c 	bl	8006e2c <HAL_QSPI_Command>
 80013d4:	2800      	cmp	r0, #0
 80013d6:	d14f      	bne.n	8001478 <main+0x8c0>
  if (HAL_QSPI_Receive(hqspi, &(reg[0]), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80013d8:	f241 3288 	movw	r2, #5000	; 0x1388
 80013dc:	a922      	add	r1, sp, #136	; 0x88
 80013de:	487b      	ldr	r0, [pc, #492]	; (80015cc <main+0xa14>)
 80013e0:	f005 fdc3 	bl	8006f6a <HAL_QSPI_Receive>
 80013e4:	2800      	cmp	r0, #0
 80013e6:	d147      	bne.n	8001478 <main+0x8c0>
  s_command.Instruction       = READ_CFG_REG_CMD;
 80013e8:	2315      	movs	r3, #21
  s_command.DummyCycles       = 0;
 80013ea:	9035      	str	r0, [sp, #212]	; 0xd4
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80013ec:	f241 3288 	movw	r2, #5000	; 0x1388
 80013f0:	a930      	add	r1, sp, #192	; 0xc0
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 80013f2:	9636      	str	r6, [sp, #216]	; 0xd8
  s_command.Instruction       = READ_CFG_REG_CMD;
 80013f4:	9330      	str	r3, [sp, #192]	; 0xc0
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80013f6:	9439      	str	r4, [sp, #228]	; 0xe4
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80013f8:	e9cd 0037 	strd	r0, r0, [sp, #220]	; 0xdc
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 80013fc:	e9cd 503a 	strd	r5, r0, [sp, #232]	; 0xe8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8001400:	e9cd 003c 	strd	r0, r0, [sp, #240]	; 0xf0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001404:	4871      	ldr	r0, [pc, #452]	; (80015cc <main+0xa14>)
 8001406:	f005 fd11 	bl	8006e2c <HAL_QSPI_Command>
 800140a:	bba8      	cbnz	r0, 8001478 <main+0x8c0>
  if (HAL_QSPI_Receive(hqspi, &(reg[1]), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800140c:	f241 3288 	movw	r2, #5000	; 0x1388
 8001410:	f10d 0189 	add.w	r1, sp, #137	; 0x89
 8001414:	486d      	ldr	r0, [pc, #436]	; (80015cc <main+0xa14>)
 8001416:	f005 fda8 	bl	8006f6a <HAL_QSPI_Receive>
 800141a:	bb68      	cbnz	r0, 8001478 <main+0x8c0>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 800141c:	f7ff fb0c 	bl	8000a38 <QSPI_WriteEnable.constprop.7>
 8001420:	bb50      	cbnz	r0, 8001478 <main+0x8c0>
  s_command.NbData            = 2;
 8001422:	2302      	movs	r3, #2
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8001424:	9636      	str	r6, [sp, #216]	; 0xd8
  s_command.Instruction       = WRITE_STATUS_CFG_REG_CMD;
 8001426:	9530      	str	r5, [sp, #192]	; 0xc0
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001428:	22c0      	movs	r2, #192	; 0xc0
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800142a:	9439      	str	r4, [sp, #228]	; 0xe4
  s_command.DummyCycles       = 0;
 800142c:	9035      	str	r0, [sp, #212]	; 0xd4
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800142e:	e9cd 0037 	strd	r0, r0, [sp, #220]	; 0xdc
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8001432:	e9cd 303a 	strd	r3, r0, [sp, #232]	; 0xe8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8001436:	e9cd 003c 	strd	r0, r0, [sp, #240]	; 0xf0
 800143a:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG( reg[1], MX25L512_CR_NB_DUMMY, (MX25L512_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(MX25L512_CR_NB_DUMMY)));
 800143e:	2103      	movs	r1, #3
 8001440:	f89d 3089 	ldrb.w	r3, [sp, #137]	; 0x89
 8001444:	fab2 f282 	clz	r2, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001448:	4860      	ldr	r0, [pc, #384]	; (80015cc <main+0xa14>)
  MODIFY_REG( reg[1], MX25L512_CR_NB_DUMMY, (MX25L512_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(MX25L512_CR_NB_DUMMY)));
 800144a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800144e:	fa01 f202 	lsl.w	r2, r1, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001452:	a930      	add	r1, sp, #192	; 0xc0
  MODIFY_REG( reg[1], MX25L512_CR_NB_DUMMY, (MX25L512_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(MX25L512_CR_NB_DUMMY)));
 8001454:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001456:	f241 3288 	movw	r2, #5000	; 0x1388
  MODIFY_REG( reg[1], MX25L512_CR_NB_DUMMY, (MX25L512_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(MX25L512_CR_NB_DUMMY)));
 800145a:	f88d 3089 	strb.w	r3, [sp, #137]	; 0x89
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800145e:	f005 fce5 	bl	8006e2c <HAL_QSPI_Command>
 8001462:	b948      	cbnz	r0, 8001478 <main+0x8c0>
  if (HAL_QSPI_Transmit(hqspi, &(reg[0]), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001464:	f241 3288 	movw	r2, #5000	; 0x1388
 8001468:	a922      	add	r1, sp, #136	; 0x88
 800146a:	4858      	ldr	r0, [pc, #352]	; (80015cc <main+0xa14>)
 800146c:	f005 fd21 	bl	8006eb2 <HAL_QSPI_Transmit>
 8001470:	b910      	cbnz	r0, 8001478 <main+0x8c0>
  HAL_Delay( 40 );
 8001472:	2028      	movs	r0, #40	; 0x28
 8001474:	f003 fcd2 	bl	8004e1c <HAL_Delay>
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8001478:	2305      	movs	r3, #5
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 800147a:	f44f 7640 	mov.w	r6, #768	; 0x300
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800147e:	f04f 7440 	mov.w	r4, #50331648	; 0x3000000
  s_command.NbData            = 1;
 8001482:	2501      	movs	r5, #1
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8001484:	9330      	str	r3, [sp, #192]	; 0xc0
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8001486:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001488:	f241 3288 	movw	r2, #5000	; 0x1388
 800148c:	a930      	add	r1, sp, #192	; 0xc0
 800148e:	484f      	ldr	r0, [pc, #316]	; (80015cc <main+0xa14>)
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8001490:	9636      	str	r6, [sp, #216]	; 0xd8
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8001492:	9439      	str	r4, [sp, #228]	; 0xe4
  s_command.DummyCycles       = 0;
 8001494:	9335      	str	r3, [sp, #212]	; 0xd4
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8001496:	e9cd 3337 	strd	r3, r3, [sp, #220]	; 0xdc
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 800149a:	e9cd 533a 	strd	r5, r3, [sp, #232]	; 0xe8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800149e:	e9cd 333c 	strd	r3, r3, [sp, #240]	; 0xf0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80014a2:	f005 fcc3 	bl	8006e2c <HAL_QSPI_Command>
 80014a6:	2800      	cmp	r0, #0
 80014a8:	d14b      	bne.n	8001542 <main+0x98a>
  if (HAL_QSPI_Receive(hqspi, &(reg[0]), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80014aa:	f241 3288 	movw	r2, #5000	; 0x1388
 80014ae:	a922      	add	r1, sp, #136	; 0x88
 80014b0:	4846      	ldr	r0, [pc, #280]	; (80015cc <main+0xa14>)
 80014b2:	f005 fd5a 	bl	8006f6a <HAL_QSPI_Receive>
 80014b6:	2800      	cmp	r0, #0
 80014b8:	d143      	bne.n	8001542 <main+0x98a>
  s_command.Instruction       = READ_CFG_REG_CMD;
 80014ba:	2315      	movs	r3, #21
  s_command.DummyCycles       = 0;
 80014bc:	9035      	str	r0, [sp, #212]	; 0xd4
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80014be:	f241 3288 	movw	r2, #5000	; 0x1388
 80014c2:	a930      	add	r1, sp, #192	; 0xc0
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 80014c4:	9636      	str	r6, [sp, #216]	; 0xd8
  s_command.Instruction       = READ_CFG_REG_CMD;
 80014c6:	9330      	str	r3, [sp, #192]	; 0xc0
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80014c8:	9439      	str	r4, [sp, #228]	; 0xe4
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80014ca:	e9cd 0037 	strd	r0, r0, [sp, #220]	; 0xdc
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 80014ce:	e9cd 503a 	strd	r5, r0, [sp, #232]	; 0xe8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80014d2:	e9cd 003c 	strd	r0, r0, [sp, #240]	; 0xf0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80014d6:	483d      	ldr	r0, [pc, #244]	; (80015cc <main+0xa14>)
 80014d8:	f005 fca8 	bl	8006e2c <HAL_QSPI_Command>
 80014dc:	bb88      	cbnz	r0, 8001542 <main+0x98a>
  if (HAL_QSPI_Receive(hqspi, &(reg[1]), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80014de:	f241 3288 	movw	r2, #5000	; 0x1388
 80014e2:	f10d 0189 	add.w	r1, sp, #137	; 0x89
 80014e6:	4839      	ldr	r0, [pc, #228]	; (80015cc <main+0xa14>)
 80014e8:	f005 fd3f 	bl	8006f6a <HAL_QSPI_Receive>
 80014ec:	bb48      	cbnz	r0, 8001542 <main+0x98a>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 80014ee:	f7ff faa3 	bl	8000a38 <QSPI_WriteEnable.constprop.7>
 80014f2:	bb30      	cbnz	r0, 8001542 <main+0x98a>
  s_command.NbData            = 2;
 80014f4:	2302      	movs	r3, #2
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 80014f6:	9636      	str	r6, [sp, #216]	; 0xd8
  s_command.Instruction       = WRITE_STATUS_CFG_REG_CMD;
 80014f8:	9530      	str	r5, [sp, #192]	; 0xc0
 80014fa:	2207      	movs	r2, #7
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80014fc:	9439      	str	r4, [sp, #228]	; 0xe4
  s_command.DummyCycles       = 0;
 80014fe:	9035      	str	r0, [sp, #212]	; 0xd4
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8001500:	e9cd 0037 	strd	r0, r0, [sp, #220]	; 0xdc
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8001504:	e9cd 303a 	strd	r3, r0, [sp, #232]	; 0xe8
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8001508:	e9cd 003c 	strd	r0, r0, [sp, #240]	; 0xf0
 800150c:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG( reg[1], MX25L512_CR_ODS, (MX25L512_CR_ODS_15 << POSITION_VAL(MX25L512_CR_ODS)));
 8001510:	2106      	movs	r1, #6
 8001512:	f89d 3089 	ldrb.w	r3, [sp, #137]	; 0x89
 8001516:	fab2 f282 	clz	r2, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800151a:	482c      	ldr	r0, [pc, #176]	; (80015cc <main+0xa14>)
  MODIFY_REG( reg[1], MX25L512_CR_ODS, (MX25L512_CR_ODS_15 << POSITION_VAL(MX25L512_CR_ODS)));
 800151c:	f023 0307 	bic.w	r3, r3, #7
 8001520:	fa01 f202 	lsl.w	r2, r1, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001524:	a930      	add	r1, sp, #192	; 0xc0
  MODIFY_REG( reg[1], MX25L512_CR_ODS, (MX25L512_CR_ODS_15 << POSITION_VAL(MX25L512_CR_ODS)));
 8001526:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001528:	f241 3288 	movw	r2, #5000	; 0x1388
  MODIFY_REG( reg[1], MX25L512_CR_ODS, (MX25L512_CR_ODS_15 << POSITION_VAL(MX25L512_CR_ODS)));
 800152c:	f88d 3089 	strb.w	r3, [sp, #137]	; 0x89
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001530:	f005 fc7c 	bl	8006e2c <HAL_QSPI_Command>
 8001534:	b928      	cbnz	r0, 8001542 <main+0x98a>
  if (HAL_QSPI_Transmit(hqspi, &(reg[0]), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001536:	f241 3288 	movw	r2, #5000	; 0x1388
 800153a:	a922      	add	r1, sp, #136	; 0x88
 800153c:	4823      	ldr	r0, [pc, #140]	; (80015cc <main+0xa14>)
 800153e:	f005 fcb8 	bl	8006eb2 <HAL_QSPI_Transmit>
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8001542:	f44f 7340 	mov.w	r3, #768	; 0x300
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8001546:	2400      	movs	r4, #0
  hdma2d.Instance = DMA2D;
 8001548:	4d21      	ldr	r5, [pc, #132]	; (80015d0 <main+0xa18>)
  if (HAL_QSPI_MemoryMapped(hqspi, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800154a:	aa22      	add	r2, sp, #136	; 0x88
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 800154c:	9336      	str	r3, [sp, #216]	; 0xd8
  s_command.Instruction       = QPI_READ_4_BYTE_ADDR_CMD;
 800154e:	23ec      	movs	r3, #236	; 0xec
  if (HAL_QSPI_MemoryMapped(hqspi, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8001550:	a930      	add	r1, sp, #192	; 0xc0
 8001552:	481e      	ldr	r0, [pc, #120]	; (80015cc <main+0xa14>)
  s_command.Instruction       = QPI_READ_4_BYTE_ADDR_CMD;
 8001554:	9330      	str	r3, [sp, #192]	; 0xc0
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8001556:	f44f 6340 	mov.w	r3, #3072	; 0xc00
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800155a:	943d      	str	r4, [sp, #244]	; 0xf4
  hsai_BlockA1.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_48K;
 800155c:	f64b 3780 	movw	r7, #48000	; 0xbb80
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8001560:	9337      	str	r3, [sp, #220]	; 0xdc
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8001562:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  huart1.Init.BaudRate = 115200;
 8001566:	4e1b      	ldr	r6, [pc, #108]	; (80015d4 <main+0xa1c>)
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8001568:	9333      	str	r3, [sp, #204]	; 0xcc
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800156a:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 800156e:	e9cd 4338 	strd	r4, r3, [sp, #224]	; 0xe0
  s_command.DummyCycles       = MX25L512_DUMMY_CYCLES_READ_QUAD_IO;
 8001572:	230a      	movs	r3, #10
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8001574:	e9cd 443b 	strd	r4, r4, [sp, #236]	; 0xec
  s_command.DummyCycles       = MX25L512_DUMMY_CYCLES_READ_QUAD_IO;
 8001578:	9335      	str	r3, [sp, #212]	; 0xd4
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 800157a:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  if (HAL_QSPI_MemoryMapped(hqspi, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800157e:	f005 fda6 	bl	80070ce <HAL_QSPI_MemoryMapped>
  hdma2d.Instance = DMA2D;
 8001582:	4b15      	ldr	r3, [pc, #84]	; (80015d8 <main+0xa20>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001584:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001586:	e9c5 440e 	strd	r4, r4, [r5, #56]	; 0x38
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800158a:	e9c5 4410 	strd	r4, r4, [r5, #64]	; 0x40
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
 800158e:	e9c5 4412 	strd	r4, r4, [r5, #72]	; 0x48
  hdma2d.Init.Mode = DMA2D_M2M;
 8001592:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001596:	e9c5 4402 	strd	r4, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800159a:	f003 ff41 	bl	8005420 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800159e:	2101      	movs	r1, #1
 80015a0:	4628      	mov	r0, r5
  huart6.Init.BaudRate = 31250;
 80015a2:	4d0e      	ldr	r5, [pc, #56]	; (80015dc <main+0xa24>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80015a4:	f003 fffe 	bl	80055a4 <HAL_DMA2D_ConfigLayer>
  MX_I2C4_Init();
 80015a8:	f7ff fae4 	bl	8000b74 <MX_I2C4_Init>
  huart6.Instance = USART6;
 80015ac:	480c      	ldr	r0, [pc, #48]	; (80015e0 <main+0xa28>)
  huart6.Init.BaudRate = 31250;
 80015ae:	f647 2312 	movw	r3, #31250	; 0x7a12
  huart6.Init.Parity = UART_PARITY_NONE;
 80015b2:	6104      	str	r4, [r0, #16]
  huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80015b4:	6244      	str	r4, [r0, #36]	; 0x24
  huart6.Init.BaudRate = 31250;
 80015b6:	e9c0 5300 	strd	r5, r3, [r0]
  huart6.Init.Mode = UART_MODE_TX_RX;
 80015ba:	250c      	movs	r5, #12
  huart6.Init.StopBits = UART_STOPBITS_1;
 80015bc:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80015c0:	e9c0 5405 	strd	r5, r4, [r0, #20]
  huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80015c4:	e9c0 4407 	strd	r4, r4, [r0, #28]
 80015c8:	e00c      	b.n	80015e4 <main+0xa2c>
 80015ca:	bf00      	nop
 80015cc:	20016c00 	.word	0x20016c00
 80015d0:	20016af0 	.word	0x20016af0
 80015d4:	40011000 	.word	0x40011000
 80015d8:	4002b000 	.word	0x4002b000
 80015dc:	40011400 	.word	0x40011400
 80015e0:	20016a70 	.word	0x20016a70
  if (HAL_UART_Init(&huart6) != HAL_OK)
 80015e4:	f007 fc4d 	bl	8008e82 <HAL_UART_Init>
  huart1.Instance = USART1;
 80015e8:	4828      	ldr	r0, [pc, #160]	; (800168c <main+0xad4>)
  huart1.Init.BaudRate = 115200;
 80015ea:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  huart1.Init.Mode = UART_MODE_TX_RX;
 80015ee:	e9c0 4504 	strd	r4, r5, [r0, #16]
  huart1.Init.BaudRate = 115200;
 80015f2:	e9c0 6300 	strd	r6, r3, [r0]
  hsai_BlockA1.Instance = SAI1_Block_A;
 80015f6:	4d26      	ldr	r5, [pc, #152]	; (8001690 <main+0xad8>)
  hsai_BlockA1.Init.OutputDrive = SAI_OUTPUTDRIVE_ENABLE;
 80015f8:	f44f 5600 	mov.w	r6, #8192	; 0x2000
  huart1.Init.StopBits = UART_STOPBITS_1;
 80015fc:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001600:	e9c0 4406 	strd	r4, r4, [r0, #24]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001604:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001608:	f007 fc3b 	bl	8008e82 <HAL_UART_Init>
  hsai_BlockA1.Instance = SAI1_Block_A;
 800160c:	4b21      	ldr	r3, [pc, #132]	; (8001694 <main+0xadc>)
  if (HAL_SAI_InitProtocol(&hsai_BlockA1, SAI_I2S_STANDARD, SAI_PROTOCOL_DATASIZE_16BIT, 2) != HAL_OK)
 800160e:	4621      	mov	r1, r4
 8001610:	4622      	mov	r2, r4
 8001612:	4628      	mov	r0, r5
  hsai_BlockA1.Init.Synchro = SAI_ASYNCHRONOUS;
 8001614:	60ac      	str	r4, [r5, #8]
  hsai_BlockA1.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 8001616:	60ec      	str	r4, [r5, #12]
  hsai_BlockA1.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 8001618:	62ec      	str	r4, [r5, #44]	; 0x2c
  hsai_BlockA1.Init.AudioMode = SAI_MODEMASTER_TX;
 800161a:	e9c5 3400 	strd	r3, r4, [r5]
  hsai_BlockA1.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_48K;
 800161e:	2304      	movs	r3, #4
 8001620:	e9c5 3706 	strd	r3, r7, [r5, #24]
  if (HAL_SAI_InitProtocol(&hsai_BlockA1, SAI_I2S_STANDARD, SAI_PROTOCOL_DATASIZE_16BIT, 2) != HAL_OK)
 8001624:	2302      	movs	r3, #2
  hsai_BlockA1.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 8001626:	e9c5 6404 	strd	r6, r4, [r5, #16]
  hsai_BlockA1.Init.CompandingMode = SAI_NOCOMPANDING;
 800162a:	e9c5 4409 	strd	r4, r4, [r5, #36]	; 0x24
  if (HAL_SAI_InitProtocol(&hsai_BlockA1, SAI_I2S_STANDARD, SAI_PROTOCOL_DATASIZE_16BIT, 2) != HAL_OK)
 800162e:	f006 fc8f 	bl	8007f50 <HAL_SAI_InitProtocol>
  MX_TouchGFX_Init();
 8001632:	f000 fc21 	bl	8001e78 <MX_TouchGFX_Init>
	__HAL_SAI_ENABLE(&hsai_BlockA1);
 8001636:	682a      	ldr	r2, [r5, #0]
	wm8994_Reset(AUDIO_I2C_ADDRESS);
 8001638:	2034      	movs	r0, #52	; 0x34
	__HAL_SAI_ENABLE(&hsai_BlockA1);
 800163a:	6813      	ldr	r3, [r2, #0]
 800163c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001640:	6013      	str	r3, [r2, #0]
	wm8994_Reset(AUDIO_I2C_ADDRESS);
 8001642:	f002 fe91 	bl	8004368 <wm8994_Reset>
	wm8994_Init(AUDIO_I2C_ADDRESS,
 8001646:	463b      	mov	r3, r7
 8001648:	2232      	movs	r2, #50	; 0x32
 800164a:	2102      	movs	r1, #2
 800164c:	2034      	movs	r0, #52	; 0x34
 800164e:	f002 ff43 	bl	80044d8 <wm8994_Init>
	wm8994_Play(AUDIO_I2C_ADDRESS, (uint16_t *) buff_out,64);
 8001652:	2240      	movs	r2, #64	; 0x40
 8001654:	4910      	ldr	r1, [pc, #64]	; (8001698 <main+0xae0>)
 8001656:	2034      	movs	r0, #52	; 0x34
 8001658:	f002 feb8 	bl	80043cc <wm8994_Play>
	HAL_SAI_Transmit_DMA(&hsai_BlockA1, (uint8_t *) buff_out,
 800165c:	4632      	mov	r2, r6
 800165e:	490e      	ldr	r1, [pc, #56]	; (8001698 <main+0xae0>)
 8001660:	4628      	mov	r0, r5
 8001662:	f006 fd65 	bl	8008130 <HAL_SAI_Transmit_DMA>
  osKernelInitialize();
 8001666:	f007 fccf 	bl	8009008 <osKernelInitialize>
  DefaultTaskHandle = osThreadNew(DefaultTask_func, NULL, &DefaultTask_attributes);
 800166a:	4a0c      	ldr	r2, [pc, #48]	; (800169c <main+0xae4>)
 800166c:	4621      	mov	r1, r4
 800166e:	480c      	ldr	r0, [pc, #48]	; (80016a0 <main+0xae8>)
 8001670:	f007 fd04 	bl	800907c <osThreadNew>
 8001674:	4b0b      	ldr	r3, [pc, #44]	; (80016a4 <main+0xaec>)
  UartSoundTaskHandle = osThreadNew(UartSoundTask_func, NULL, &UartSoundTask_attributes);
 8001676:	4a0c      	ldr	r2, [pc, #48]	; (80016a8 <main+0xaf0>)
 8001678:	4621      	mov	r1, r4
  DefaultTaskHandle = osThreadNew(DefaultTask_func, NULL, &DefaultTask_attributes);
 800167a:	6018      	str	r0, [r3, #0]
  UartSoundTaskHandle = osThreadNew(UartSoundTask_func, NULL, &UartSoundTask_attributes);
 800167c:	480b      	ldr	r0, [pc, #44]	; (80016ac <main+0xaf4>)
 800167e:	f007 fcfd 	bl	800907c <osThreadNew>
 8001682:	4b0b      	ldr	r3, [pc, #44]	; (80016b0 <main+0xaf8>)
 8001684:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001686:	f007 fcd9 	bl	800903c <osKernelStart>
 800168a:	e7fe      	b.n	800168a <main+0xad2>
 800168c:	200169ec 	.word	0x200169ec
 8001690:	20016b48 	.word	0x20016b48
 8001694:	40015804 	.word	0x40015804
 8001698:	200129ec 	.word	0x200129ec
 800169c:	08021e2c 	.word	0x08021e2c
 80016a0:	080009f1 	.word	0x080009f1
 80016a4:	200128c0 	.word	0x200128c0
 80016a8:	08021e50 	.word	0x08021e50
 80016ac:	080009f5 	.word	0x080009f5
 80016b0:	20016a6c 	.word	0x20016a6c

080016b4 <HAL_SAI_TxCpltCallback>:
		UpdatePointer = 0;
 80016b4:	4b01      	ldr	r3, [pc, #4]	; (80016bc <HAL_SAI_TxCpltCallback+0x8>)
 80016b6:	2200      	movs	r2, #0
 80016b8:	601a      	str	r2, [r3, #0]
	}
 80016ba:	4770      	bx	lr
 80016bc:	20000004 	.word	0x20000004

080016c0 <HAL_SAI_TxHalfCpltCallback>:
		UpdatePointer = BUFF_SIZE/2;
 80016c0:	4b02      	ldr	r3, [pc, #8]	; (80016cc <HAL_SAI_TxHalfCpltCallback+0xc>)
 80016c2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80016c6:	601a      	str	r2, [r3, #0]
	}
 80016c8:	4770      	bx	lr
 80016ca:	bf00      	nop
 80016cc:	20000004 	.word	0x20000004

080016d0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80016d0:	6802      	ldr	r2, [r0, #0]
 80016d2:	4b03      	ldr	r3, [pc, #12]	; (80016e0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80016d4:	429a      	cmp	r2, r3
 80016d6:	d101      	bne.n	80016dc <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80016d8:	f003 bb8e 	b.w	8004df8 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80016dc:	4770      	bx	lr
 80016de:	bf00      	nop
 80016e0:	40001000 	.word	0x40001000

080016e4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80016e4:	4770      	bx	lr
	...

080016e8 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80016e8:	4b0d      	ldr	r3, [pc, #52]	; (8001720 <HAL_MspInit+0x38>)
{
 80016ea:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80016ec:	210f      	movs	r1, #15
 80016ee:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 80016f2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80016f4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80016f8:	641a      	str	r2, [r3, #64]	; 0x40
 80016fa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80016fc:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001700:	9200      	str	r2, [sp, #0]
 8001702:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001704:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001706:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800170a:	645a      	str	r2, [r3, #68]	; 0x44
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800170c:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800170e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001710:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001714:	9301      	str	r3, [sp, #4]
 8001716:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001718:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800171a:	f003 bba3 	b.w	8004e64 <HAL_NVIC_SetPriority>
 800171e:	bf00      	nop
 8001720:	40023800 	.word	0x40023800

08001724 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001724:	6802      	ldr	r2, [r0, #0]
{
 8001726:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001728:	4b08      	ldr	r3, [pc, #32]	; (800174c <HAL_CRC_MspInit+0x28>)
 800172a:	429a      	cmp	r2, r3
 800172c:	d10b      	bne.n	8001746 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800172e:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001732:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001736:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800173a:	631a      	str	r2, [r3, #48]	; 0x30
 800173c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800173e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001742:	9301      	str	r3, [sp, #4]
 8001744:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001746:	b002      	add	sp, #8
 8001748:	4770      	bx	lr
 800174a:	bf00      	nop
 800174c:	40023000 	.word	0x40023000

08001750 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001750:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001752:	4b0e      	ldr	r3, [pc, #56]	; (800178c <HAL_DMA2D_MspInit+0x3c>)
 8001754:	6802      	ldr	r2, [r0, #0]
 8001756:	429a      	cmp	r2, r3
 8001758:	d115      	bne.n	8001786 <HAL_DMA2D_MspInit+0x36>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800175a:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800175e:	2105      	movs	r1, #5
 8001760:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001762:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001764:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001768:	631a      	str	r2, [r3, #48]	; 0x30
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800176a:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800176c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800176e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001772:	9301      	str	r3, [sp, #4]
 8001774:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001776:	f003 fb75 	bl	8004e64 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800177a:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 800177c:	b003      	add	sp, #12
 800177e:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001782:	f003 bba1 	b.w	8004ec8 <HAL_NVIC_EnableIRQ>
}
 8001786:	b003      	add	sp, #12
 8001788:	f85d fb04 	ldr.w	pc, [sp], #4
 800178c:	4002b000 	.word	0x4002b000

08001790 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001790:	b510      	push	{r4, lr}
 8001792:	b088      	sub	sp, #32
 8001794:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001796:	2214      	movs	r2, #20
 8001798:	2100      	movs	r1, #0
 800179a:	a803      	add	r0, sp, #12
 800179c:	f01f fb8a 	bl	8020eb4 <memset>
  if(hdsi->Instance==DSI)
 80017a0:	6822      	ldr	r2, [r4, #0]
 80017a2:	4b15      	ldr	r3, [pc, #84]	; (80017f8 <HAL_DSI_MspInit+0x68>)
 80017a4:	429a      	cmp	r2, r3
 80017a6:	d125      	bne.n	80017f4 <HAL_DSI_MspInit+0x64>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 80017a8:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 80017ac:	a903      	add	r1, sp, #12
 80017ae:	4813      	ldr	r0, [pc, #76]	; (80017fc <HAL_DSI_MspInit+0x6c>)
    __HAL_RCC_DSI_CLK_ENABLE();
 80017b0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80017b2:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 80017b6:	645a      	str	r2, [r3, #68]	; 0x44
 80017b8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80017ba:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 80017be:	9201      	str	r2, [sp, #4]
 80017c0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 80017c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80017c4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80017c8:	631a      	str	r2, [r3, #48]	; 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80017ca:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 80017cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017ce:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80017d2:	9302      	str	r3, [sp, #8]
 80017d4:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80017d6:	2302      	movs	r3, #2
 80017d8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 80017dc:	230d      	movs	r3, #13
 80017de:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 80017e0:	f004 fb02 	bl	8005de8 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 80017e4:	2062      	movs	r0, #98	; 0x62
 80017e6:	2200      	movs	r2, #0
 80017e8:	2105      	movs	r1, #5
 80017ea:	f003 fb3b 	bl	8004e64 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 80017ee:	2062      	movs	r0, #98	; 0x62
 80017f0:	f003 fb6a 	bl	8004ec8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 80017f4:	b008      	add	sp, #32
 80017f6:	bd10      	pop	{r4, pc}
 80017f8:	40016c00 	.word	0x40016c00
 80017fc:	40022400 	.word	0x40022400

08001800 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001800:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001802:	b089      	sub	sp, #36	; 0x24
 8001804:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001806:	2214      	movs	r2, #20
 8001808:	2100      	movs	r1, #0
 800180a:	a803      	add	r0, sp, #12
 800180c:	f01f fb52 	bl	8020eb4 <memset>
  if(hi2c->Instance==I2C4)
 8001810:	6822      	ldr	r2, [r4, #0]
 8001812:	4b21      	ldr	r3, [pc, #132]	; (8001898 <HAL_I2C_MspInit+0x98>)
 8001814:	429a      	cmp	r2, r3
 8001816:	d13d      	bne.n	8001894 <HAL_I2C_MspInit+0x94>
  {
  /* USER CODE BEGIN I2C4_MspInit 0 */

  /* USER CODE END I2C4_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001818:	4c20      	ldr	r4, [pc, #128]	; (800189c <HAL_I2C_MspInit+0x9c>)
    /**I2C4 GPIO Configuration
    PB7     ------> I2C4_SDA
    PD12     ------> I2C4_SCL
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800181a:	2712      	movs	r7, #18
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800181c:	2601      	movs	r6, #1
 800181e:	2503      	movs	r5, #3
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001820:	6b23      	ldr	r3, [r4, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF11_I2C4;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001822:	a903      	add	r1, sp, #12
 8001824:	481e      	ldr	r0, [pc, #120]	; (80018a0 <HAL_I2C_MspInit+0xa0>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001826:	f043 0302 	orr.w	r3, r3, #2
 800182a:	6323      	str	r3, [r4, #48]	; 0x30
 800182c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800182e:	f003 0302 	and.w	r3, r3, #2
 8001832:	9300      	str	r3, [sp, #0]
 8001834:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001836:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001838:	f043 0308 	orr.w	r3, r3, #8
 800183c:	6323      	str	r3, [r4, #48]	; 0x30
 800183e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001840:	f003 0308 	and.w	r3, r3, #8
 8001844:	9301      	str	r3, [sp, #4]
 8001846:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001848:	2380      	movs	r3, #128	; 0x80
 800184a:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF11_I2C4;
 800184e:	230b      	movs	r3, #11
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001850:	e9cd 6505 	strd	r6, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF11_I2C4;
 8001854:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001856:	f004 fac7 	bl	8005de8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 800185a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C4;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800185e:	a903      	add	r1, sp, #12
 8001860:	4810      	ldr	r0, [pc, #64]	; (80018a4 <HAL_I2C_MspInit+0xa4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001862:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C4;
 8001866:	2304      	movs	r3, #4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001868:	e9cd 6505 	strd	r6, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C4;
 800186c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800186e:	f004 fabb 	bl	8005de8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C4_CLK_ENABLE();
 8001872:	6c23      	ldr	r3, [r4, #64]	; 0x40
    /* I2C4 interrupt Init */
    HAL_NVIC_SetPriority(I2C4_EV_IRQn, 5, 0);
 8001874:	205f      	movs	r0, #95	; 0x5f
 8001876:	2200      	movs	r2, #0
 8001878:	2105      	movs	r1, #5
    __HAL_RCC_I2C4_CLK_ENABLE();
 800187a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800187e:	6423      	str	r3, [r4, #64]	; 0x40
 8001880:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001882:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8001886:	9302      	str	r3, [sp, #8]
 8001888:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(I2C4_EV_IRQn, 5, 0);
 800188a:	f003 faeb 	bl	8004e64 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C4_EV_IRQn);
 800188e:	205f      	movs	r0, #95	; 0x5f
 8001890:	f003 fb1a 	bl	8004ec8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN I2C4_MspInit 1 */

  /* USER CODE END I2C4_MspInit 1 */
  }

}
 8001894:	b009      	add	sp, #36	; 0x24
 8001896:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001898:	40006000 	.word	0x40006000
 800189c:	40023800 	.word	0x40023800
 80018a0:	40020400 	.word	0x40020400
 80018a4:	40020c00 	.word	0x40020c00

080018a8 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 80018a8:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C4)
 80018aa:	6802      	ldr	r2, [r0, #0]
 80018ac:	4b0b      	ldr	r3, [pc, #44]	; (80018dc <HAL_I2C_MspDeInit+0x34>)
 80018ae:	429a      	cmp	r2, r3
 80018b0:	d112      	bne.n	80018d8 <HAL_I2C_MspDeInit+0x30>
  {
  /* USER CODE BEGIN I2C4_MspDeInit 0 */

  /* USER CODE END I2C4_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C4_CLK_DISABLE();
 80018b2:	4a0b      	ldr	r2, [pc, #44]	; (80018e0 <HAL_I2C_MspDeInit+0x38>)

    /**I2C4 GPIO Configuration
    PB7     ------> I2C4_SDA
    PD12     ------> I2C4_SCL
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_7);
 80018b4:	2180      	movs	r1, #128	; 0x80
 80018b6:	480b      	ldr	r0, [pc, #44]	; (80018e4 <HAL_I2C_MspDeInit+0x3c>)
    __HAL_RCC_I2C4_CLK_DISABLE();
 80018b8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80018ba:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80018be:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_7);
 80018c0:	f004 fb7a 	bl	8005fb8 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_12);
 80018c4:	4808      	ldr	r0, [pc, #32]	; (80018e8 <HAL_I2C_MspDeInit+0x40>)
 80018c6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80018ca:	f004 fb75 	bl	8005fb8 <HAL_GPIO_DeInit>

    /* I2C4 interrupt DeInit */
    HAL_NVIC_DisableIRQ(I2C4_EV_IRQn);
 80018ce:	205f      	movs	r0, #95	; 0x5f
  /* USER CODE BEGIN I2C4_MspDeInit 1 */

  /* USER CODE END I2C4_MspDeInit 1 */
  }

}
 80018d0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_NVIC_DisableIRQ(I2C4_EV_IRQn);
 80018d4:	f003 bb06 	b.w	8004ee4 <HAL_NVIC_DisableIRQ>
}
 80018d8:	bd08      	pop	{r3, pc}
 80018da:	bf00      	nop
 80018dc:	40006000 	.word	0x40006000
 80018e0:	40023800 	.word	0x40023800
 80018e4:	40020400 	.word	0x40020400
 80018e8:	40020c00 	.word	0x40020c00

080018ec <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80018ec:	b507      	push	{r0, r1, r2, lr}
  if(hltdc->Instance==LTDC)
 80018ee:	4b0e      	ldr	r3, [pc, #56]	; (8001928 <HAL_LTDC_MspInit+0x3c>)
 80018f0:	6802      	ldr	r2, [r0, #0]
 80018f2:	429a      	cmp	r2, r3
 80018f4:	d115      	bne.n	8001922 <HAL_LTDC_MspInit+0x36>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80018f6:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 3, 0);
 80018fa:	2103      	movs	r1, #3
 80018fc:	2058      	movs	r0, #88	; 0x58
    __HAL_RCC_LTDC_CLK_ENABLE();
 80018fe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001900:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001904:	645a      	str	r2, [r3, #68]	; 0x44
    HAL_NVIC_SetPriority(LTDC_IRQn, 3, 0);
 8001906:	2200      	movs	r2, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001908:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800190a:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800190e:	9301      	str	r3, [sp, #4]
 8001910:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(LTDC_IRQn, 3, 0);
 8001912:	f003 faa7 	bl	8004e64 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001916:	2058      	movs	r0, #88	; 0x58
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001918:	b003      	add	sp, #12
 800191a:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800191e:	f003 bad3 	b.w	8004ec8 <HAL_NVIC_EnableIRQ>
}
 8001922:	b003      	add	sp, #12
 8001924:	f85d fb04 	ldr.w	pc, [sp], #4
 8001928:	40016800 	.word	0x40016800

0800192c <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 800192c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001930:	2214      	movs	r2, #20
{
 8001932:	b08a      	sub	sp, #40	; 0x28
 8001934:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001936:	2100      	movs	r1, #0
 8001938:	eb0d 0002 	add.w	r0, sp, r2
 800193c:	f01f faba 	bl	8020eb4 <memset>
  if(hqspi->Instance==QUADSPI)
 8001940:	6822      	ldr	r2, [r4, #0]
 8001942:	4b3a      	ldr	r3, [pc, #232]	; (8001a2c <HAL_QSPI_MspInit+0x100>)
 8001944:	429a      	cmp	r2, r3
 8001946:	d16e      	bne.n	8001a26 <HAL_QSPI_MspInit+0xfa>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

    __HAL_RCC_QSPI_FORCE_RESET();
 8001948:	4b39      	ldr	r3, [pc, #228]	; (8001a30 <HAL_QSPI_MspInit+0x104>)
    PC9     ------> QUADSPI_BK1_IO0
    PB2     ------> QUADSPI_CLK
    PD13     ------> QUADSPI_BK1_IO3
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800194a:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 800194c:	2403      	movs	r4, #3
 800194e:	2609      	movs	r6, #9
    __HAL_RCC_QSPI_FORCE_RESET();
 8001950:	699a      	ldr	r2, [r3, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001952:	f04f 0804 	mov.w	r8, #4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001956:	a905      	add	r1, sp, #20
 8001958:	4836      	ldr	r0, [pc, #216]	; (8001a34 <HAL_QSPI_MspInit+0x108>)
    __HAL_RCC_QSPI_FORCE_RESET();
 800195a:	f042 0202 	orr.w	r2, r2, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800195e:	2700      	movs	r7, #0
    __HAL_RCC_QSPI_FORCE_RESET();
 8001960:	619a      	str	r2, [r3, #24]
    __HAL_RCC_QSPI_RELEASE_RESET();
 8001962:	699a      	ldr	r2, [r3, #24]
 8001964:	f022 0202 	bic.w	r2, r2, #2
 8001968:	619a      	str	r2, [r3, #24]
    __HAL_RCC_QSPI_CLK_ENABLE();
 800196a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800196c:	f042 0202 	orr.w	r2, r2, #2
 8001970:	639a      	str	r2, [r3, #56]	; 0x38
 8001972:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001974:	f002 0202 	and.w	r2, r2, #2
 8001978:	9200      	str	r2, [sp, #0]
 800197a:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 800197c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800197e:	f042 0210 	orr.w	r2, r2, #16
 8001982:	631a      	str	r2, [r3, #48]	; 0x30
 8001984:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001986:	f002 0210 	and.w	r2, r2, #16
 800198a:	9201      	str	r2, [sp, #4]
 800198c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800198e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001990:	f042 0202 	orr.w	r2, r2, #2
 8001994:	631a      	str	r2, [r3, #48]	; 0x30
 8001996:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001998:	f002 0202 	and.w	r2, r2, #2
 800199c:	9202      	str	r2, [sp, #8]
 800199e:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80019a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019a2:	f042 0204 	orr.w	r2, r2, #4
 80019a6:	631a      	str	r2, [r3, #48]	; 0x30
 80019a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019aa:	f002 0204 	and.w	r2, r2, #4
 80019ae:	9203      	str	r2, [sp, #12]
 80019b0:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80019b2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019b4:	f042 0208 	orr.w	r2, r2, #8
 80019b8:	631a      	str	r2, [r3, #48]	; 0x30
 80019ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019bc:	f003 0308 	and.w	r3, r3, #8
 80019c0:	9304      	str	r3, [sp, #16]
 80019c2:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019c4:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 80019c8:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019cc:	f004 fa0c 	bl	8005de8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 80019d0:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019d2:	a905      	add	r1, sp, #20
 80019d4:	4818      	ldr	r0, [pc, #96]	; (8001a38 <HAL_QSPI_MspInit+0x10c>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019d6:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80019da:	2301      	movs	r3, #1
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019dc:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 80019e0:	230a      	movs	r3, #10
 80019e2:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019e4:	f004 fa00 	bl	8005de8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_9;
 80019e8:	f44f 63c0 	mov.w	r3, #1536	; 0x600
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019ec:	a905      	add	r1, sp, #20
 80019ee:	4813      	ldr	r0, [pc, #76]	; (8001a3c <HAL_QSPI_MspInit+0x110>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 80019f0:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019f2:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019f6:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019fa:	f004 f9f5 	bl	8005de8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019fe:	a905      	add	r1, sp, #20
 8001a00:	480d      	ldr	r0, [pc, #52]	; (8001a38 <HAL_QSPI_MspInit+0x10c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001a02:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a04:	e9cd 8505 	strd	r8, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a08:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a0c:	f004 f9ec 	bl	8005de8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001a10:	f44f 5300 	mov.w	r3, #8192	; 0x2000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a14:	a905      	add	r1, sp, #20
 8001a16:	480a      	ldr	r0, [pc, #40]	; (8001a40 <HAL_QSPI_MspInit+0x114>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001a18:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a1a:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a1e:	e9cd 7407 	strd	r7, r4, [sp, #28]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a22:	f004 f9e1 	bl	8005de8 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001a26:	b00a      	add	sp, #40	; 0x28
 8001a28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001a2c:	a0001000 	.word	0xa0001000
 8001a30:	40023800 	.word	0x40023800
 8001a34:	40021000 	.word	0x40021000
 8001a38:	40020400 	.word	0x40020400
 8001a3c:	40020800 	.word	0x40020800
 8001a40:	40020c00 	.word	0x40020c00

08001a44 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001a44:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a46:	2214      	movs	r2, #20
{
 8001a48:	b08a      	sub	sp, #40	; 0x28
 8001a4a:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a4c:	2100      	movs	r1, #0
 8001a4e:	eb0d 0002 	add.w	r0, sp, r2
 8001a52:	f01f fa2f 	bl	8020eb4 <memset>
  if(huart->Instance==USART1)
 8001a56:	6823      	ldr	r3, [r4, #0]
 8001a58:	4a2a      	ldr	r2, [pc, #168]	; (8001b04 <HAL_UART_MspInit+0xc0>)
 8001a5a:	4293      	cmp	r3, r2
 8001a5c:	d129      	bne.n	8001ab2 <HAL_UART_MspInit+0x6e>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001a5e:	4b2a      	ldr	r3, [pc, #168]	; (8001b08 <HAL_UART_MspInit+0xc4>)
    /**USART1 GPIO Configuration
    PA10     ------> USART1_RX
    PA9     ------> USART1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a60:	f44f 60c0 	mov.w	r0, #1536	; 0x600
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001a64:	2403      	movs	r4, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a66:	a905      	add	r1, sp, #20
    __HAL_RCC_USART1_CLK_ENABLE();
 8001a68:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a6a:	f042 0210 	orr.w	r2, r2, #16
 8001a6e:	645a      	str	r2, [r3, #68]	; 0x44
 8001a70:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a72:	f002 0210 	and.w	r2, r2, #16
 8001a76:	9201      	str	r2, [sp, #4]
 8001a78:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a7a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a7c:	f042 0201 	orr.w	r2, r2, #1
 8001a80:	631a      	str	r2, [r3, #48]	; 0x30
 8001a82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a84:	f003 0301 	and.w	r3, r3, #1
 8001a88:	9302      	str	r3, [sp, #8]
 8001a8a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a8c:	2302      	movs	r3, #2
 8001a8e:	e9cd 0305 	strd	r0, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001a92:	2307      	movs	r3, #7
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a94:	481d      	ldr	r0, [pc, #116]	; (8001b0c <HAL_UART_MspInit+0xc8>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001a96:	e9cd 4308 	strd	r4, r3, [sp, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a9a:	f004 f9a5 	bl	8005de8 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 8001a9e:	2025      	movs	r0, #37	; 0x25
 8001aa0:	2200      	movs	r2, #0
 8001aa2:	2105      	movs	r1, #5
 8001aa4:	f003 f9de 	bl	8004e64 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8001aa8:	2025      	movs	r0, #37	; 0x25
    GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);

    /* USART6 interrupt Init */
    HAL_NVIC_SetPriority(USART6_IRQn, 5, 0);
    HAL_NVIC_EnableIRQ(USART6_IRQn);
 8001aaa:	f003 fa0d 	bl	8004ec8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART6_MspInit 1 */

  /* USER CODE END USART6_MspInit 1 */
  }

}
 8001aae:	b00a      	add	sp, #40	; 0x28
 8001ab0:	bd10      	pop	{r4, pc}
  else if(huart->Instance==USART6)
 8001ab2:	4a17      	ldr	r2, [pc, #92]	; (8001b10 <HAL_UART_MspInit+0xcc>)
 8001ab4:	4293      	cmp	r3, r2
 8001ab6:	d1fa      	bne.n	8001aae <HAL_UART_MspInit+0x6a>
    __HAL_RCC_USART6_CLK_ENABLE();
 8001ab8:	4b13      	ldr	r3, [pc, #76]	; (8001b08 <HAL_UART_MspInit+0xc4>)
    GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
 8001aba:	2103      	movs	r1, #3
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001abc:	4815      	ldr	r0, [pc, #84]	; (8001b14 <HAL_UART_MspInit+0xd0>)
    __HAL_RCC_USART6_CLK_ENABLE();
 8001abe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ac0:	f042 0220 	orr.w	r2, r2, #32
 8001ac4:	645a      	str	r2, [r3, #68]	; 0x44
 8001ac6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ac8:	f002 0220 	and.w	r2, r2, #32
 8001acc:	9203      	str	r2, [sp, #12]
 8001ace:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ad0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ad2:	f042 0204 	orr.w	r2, r2, #4
 8001ad6:	631a      	str	r2, [r3, #48]	; 0x30
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ad8:	22c0      	movs	r2, #192	; 0xc0
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ada:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001adc:	f003 0304 	and.w	r3, r3, #4
 8001ae0:	9304      	str	r3, [sp, #16]
 8001ae2:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ae4:	2302      	movs	r3, #2
 8001ae6:	e9cd 2305 	strd	r2, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
 8001aea:	2308      	movs	r3, #8
 8001aec:	e9cd 1308 	strd	r1, r3, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001af0:	a905      	add	r1, sp, #20
 8001af2:	f004 f979 	bl	8005de8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART6_IRQn, 5, 0);
 8001af6:	2047      	movs	r0, #71	; 0x47
 8001af8:	2200      	movs	r2, #0
 8001afa:	2105      	movs	r1, #5
 8001afc:	f003 f9b2 	bl	8004e64 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART6_IRQn);
 8001b00:	2047      	movs	r0, #71	; 0x47
 8001b02:	e7d2      	b.n	8001aaa <HAL_UART_MspInit+0x66>
 8001b04:	40011000 	.word	0x40011000
 8001b08:	40023800 	.word	0x40023800
 8001b0c:	40020000 	.word	0x40020000
 8001b10:	40011400 	.word	0x40011400
 8001b14:	40020800 	.word	0x40020800

08001b18 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001b18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b1a:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001b1c:	2214      	movs	r2, #20
 8001b1e:	2100      	movs	r1, #0
 8001b20:	a801      	add	r0, sp, #4
 8001b22:	f01f f9c7 	bl	8020eb4 <memset>
  if (FMC_Initialized) {
 8001b26:	4b2b      	ldr	r3, [pc, #172]	; (8001bd4 <HAL_SDRAM_MspInit+0xbc>)
 8001b28:	681e      	ldr	r6, [r3, #0]
 8001b2a:	2e00      	cmp	r6, #0
 8001b2c:	d14f      	bne.n	8001bce <HAL_SDRAM_MspInit+0xb6>
  FMC_Initialized = 1;
 8001b2e:	2201      	movs	r2, #1
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b30:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001b32:	2503      	movs	r5, #3
 8001b34:	240c      	movs	r4, #12
  FMC_Initialized = 1;
 8001b36:	601a      	str	r2, [r3, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001b38:	a901      	add	r1, sp, #4
  __HAL_RCC_FMC_CLK_ENABLE();
 8001b3a:	4b27      	ldr	r3, [pc, #156]	; (8001bd8 <HAL_SDRAM_MspInit+0xc0>)
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001b3c:	4827      	ldr	r0, [pc, #156]	; (8001bdc <HAL_SDRAM_MspInit+0xc4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001b3e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001b40:	f042 0201 	orr.w	r2, r2, #1
 8001b44:	639a      	str	r2, [r3, #56]	; 0x38
 8001b46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001b48:	f003 0301 	and.w	r3, r3, #1
 8001b4c:	9300      	str	r3, [sp, #0]
 8001b4e:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b50:	f64f 7383 	movw	r3, #65411	; 0xff83
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001b54:	e9cd 5404 	strd	r5, r4, [sp, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b58:	e9cd 3701 	strd	r3, r7, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001b5c:	f004 f944 	bl	8005de8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001b60:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b64:	a901      	add	r1, sp, #4
 8001b66:	481e      	ldr	r0, [pc, #120]	; (8001be0 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001b68:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b6a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b6e:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b72:	f004 f939 	bl	8005de8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001b76:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b7a:	a901      	add	r1, sp, #4
 8001b7c:	4819      	ldr	r0, [pc, #100]	; (8001be4 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001b7e:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b80:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b84:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b88:	f004 f92e 	bl	8005de8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001b8c:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001b90:	a901      	add	r1, sp, #4
 8001b92:	4815      	ldr	r0, [pc, #84]	; (8001be8 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001b94:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b96:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b9a:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001b9e:	f004 f923 	bl	8005de8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001ba2:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ba6:	a901      	add	r1, sp, #4
 8001ba8:	4810      	ldr	r0, [pc, #64]	; (8001bec <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001baa:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bac:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bb0:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001bb4:	f004 f918 	bl	8005de8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_5
 8001bb8:	f64f 732c 	movw	r3, #65324	; 0xff2c
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001bbc:	a901      	add	r1, sp, #4
 8001bbe:	480c      	ldr	r0, [pc, #48]	; (8001bf0 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001bc0:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bc2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bc6:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001bca:	f004 f90d 	bl	8005de8 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001bce:	b007      	add	sp, #28
 8001bd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001bd2:	bf00      	nop
 8001bd4:	2000019c 	.word	0x2000019c
 8001bd8:	40023800 	.word	0x40023800
 8001bdc:	40021000 	.word	0x40021000
 8001be0:	40021800 	.word	0x40021800
 8001be4:	40020c00 	.word	0x40020c00
 8001be8:	40022000 	.word	0x40022000
 8001bec:	40021400 	.word	0x40021400
 8001bf0:	40021c00 	.word	0x40021c00

08001bf4 <HAL_SAI_MspInit>:
void HAL_SAI_MspInit(SAI_HandleTypeDef* hsai)
{

  GPIO_InitTypeDef GPIO_InitStruct;
/* SAI1 */
    if(hsai->Instance==SAI1_Block_A)
 8001bf4:	6802      	ldr	r2, [r0, #0]
 8001bf6:	4b2d      	ldr	r3, [pc, #180]	; (8001cac <HAL_SAI_MspInit+0xb8>)
 8001bf8:	429a      	cmp	r2, r3
{
 8001bfa:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bfc:	4606      	mov	r6, r0
 8001bfe:	b087      	sub	sp, #28
    if(hsai->Instance==SAI1_Block_A)
 8001c00:	d152      	bne.n	8001ca8 <HAL_SAI_MspInit+0xb4>
    {
    /* Peripheral clock enable */
    if (SAI1_client == 0)
 8001c02:	4c2b      	ldr	r4, [pc, #172]	; (8001cb0 <HAL_SAI_MspInit+0xbc>)
 8001c04:	6822      	ldr	r2, [r4, #0]
 8001c06:	b982      	cbnz	r2, 8001c2a <HAL_SAI_MspInit+0x36>
    {
       __HAL_RCC_SAI1_CLK_ENABLE();
 8001c08:	4b2a      	ldr	r3, [pc, #168]	; (8001cb4 <HAL_SAI_MspInit+0xc0>)

    /* Peripheral interrupt init*/
    HAL_NVIC_SetPriority(SAI1_IRQn, 5, 0);
 8001c0a:	2057      	movs	r0, #87	; 0x57
       __HAL_RCC_SAI1_CLK_ENABLE();
 8001c0c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001c0e:	f441 0180 	orr.w	r1, r1, #4194304	; 0x400000
 8001c12:	6459      	str	r1, [r3, #68]	; 0x44
    HAL_NVIC_SetPriority(SAI1_IRQn, 5, 0);
 8001c14:	2105      	movs	r1, #5
       __HAL_RCC_SAI1_CLK_ENABLE();
 8001c16:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c18:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001c1c:	9300      	str	r3, [sp, #0]
 8001c1e:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(SAI1_IRQn, 5, 0);
 8001c20:	f003 f920 	bl	8004e64 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SAI1_IRQn);
 8001c24:	2057      	movs	r0, #87	; 0x57
 8001c26:	f003 f94f 	bl	8004ec8 <HAL_NVIC_EnableIRQ>
    }
    SAI1_client ++;
 8001c2a:	6823      	ldr	r3, [r4, #0]
    PE6     ------> SAI1_SD_A
    PG7     ------> SAI1_MCLK_A
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c2c:	2500      	movs	r5, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c2e:	2702      	movs	r7, #2
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF6_SAI1;
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c30:	a901      	add	r1, sp, #4
    SAI1_client ++;
 8001c32:	3301      	adds	r3, #1
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c34:	4820      	ldr	r0, [pc, #128]	; (8001cb8 <HAL_SAI_MspInit+0xc4>)
    SAI1_client ++;
 8001c36:	6023      	str	r3, [r4, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c38:	2370      	movs	r3, #112	; 0x70
    GPIO_InitStruct.Alternate = GPIO_AF6_SAI1;
 8001c3a:	2406      	movs	r4, #6
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c3c:	e9cd 3701 	strd	r3, r7, [sp, #4]
    GPIO_InitStruct.Alternate = GPIO_AF6_SAI1;
 8001c40:	9405      	str	r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c42:	e9cd 5503 	strd	r5, r5, [sp, #12]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c46:	f004 f8cf 	bl	8005de8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001c4a:	2380      	movs	r3, #128	; 0x80
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF6_SAI1;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c4c:	a901      	add	r1, sp, #4
 8001c4e:	481b      	ldr	r0, [pc, #108]	; (8001cbc <HAL_SAI_MspInit+0xc8>)
    GPIO_InitStruct.Alternate = GPIO_AF6_SAI1;
 8001c50:	9405      	str	r4, [sp, #20]

    /* Peripheral DMA init*/

    hdma_sai1_a.Instance = DMA2_Stream1;
 8001c52:	4c1b      	ldr	r4, [pc, #108]	; (8001cc0 <HAL_SAI_MspInit+0xcc>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c54:	e9cd 3701 	strd	r3, r7, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c58:	e9cd 5503 	strd	r5, r5, [sp, #12]
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c5c:	f004 f8c4 	bl	8005de8 <HAL_GPIO_Init>
    hdma_sai1_a.Instance = DMA2_Stream1;
 8001c60:	4b18      	ldr	r3, [pc, #96]	; (8001cc4 <HAL_SAI_MspInit+0xd0>)
    hdma_sai1_a.Init.Channel = DMA_CHANNEL_0;
    hdma_sai1_a.Init.Direction = DMA_MEMORY_TO_PERIPH;
    hdma_sai1_a.Init.PeriphInc = DMA_PINC_DISABLE;
    hdma_sai1_a.Init.MemInc = DMA_MINC_ENABLE;
    hdma_sai1_a.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8001c62:	f44f 6280 	mov.w	r2, #1024	; 0x400
    hdma_sai1_a.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
    hdma_sai1_a.Init.Mode = DMA_CIRCULAR;
 8001c66:	f44f 5100 	mov.w	r1, #8192	; 0x2000
    hdma_sai1_a.Init.Priority = DMA_PRIORITY_HIGH;
    hdma_sai1_a.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 8001c6a:	f44f 3000 	mov.w	r0, #131072	; 0x20000
    hdma_sai1_a.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_HALFFULL;
    hdma_sai1_a.Init.MemBurst = DMA_MBURST_SINGLE;
    hdma_sai1_a.Init.PeriphBurst = DMA_PBURST_SINGLE;
 8001c6e:	6325      	str	r5, [r4, #48]	; 0x30
    hdma_sai1_a.Init.Channel = DMA_CHANNEL_0;
 8001c70:	e9c4 3500 	strd	r3, r5, [r4]
    hdma_sai1_a.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001c74:	2340      	movs	r3, #64	; 0x40
    hdma_sai1_a.Init.PeriphInc = DMA_PINC_DISABLE;
 8001c76:	e9c4 3502 	strd	r3, r5, [r4, #8]
    hdma_sai1_a.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8001c7a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001c7e:	e9c4 2304 	strd	r2, r3, [r4, #16]
    hdma_sai1_a.Init.Mode = DMA_CIRCULAR;
 8001c82:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001c86:	e9c4 1306 	strd	r1, r3, [r4, #24]
    hdma_sai1_a.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 8001c8a:	2304      	movs	r3, #4
 8001c8c:	e9c4 0308 	strd	r0, r3, [r4, #32]
    hdma_sai1_a.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_HALFFULL;
 8001c90:	2301      	movs	r3, #1
    if (HAL_DMA_Init(&hdma_sai1_a) != HAL_OK)
 8001c92:	4620      	mov	r0, r4
    hdma_sai1_a.Init.MemBurst = DMA_MBURST_SINGLE;
 8001c94:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    if (HAL_DMA_Init(&hdma_sai1_a) != HAL_OK)
 8001c98:	f003 f9f4 	bl	8005084 <HAL_DMA_Init>
 8001c9c:	b108      	cbz	r0, 8001ca2 <HAL_SAI_MspInit+0xae>
    {
      Error_Handler();
 8001c9e:	f7ff fd21 	bl	80016e4 <Error_Handler>
    }

    /* Several peripheral DMA handle pointers point to the same DMA handle.
     Be aware that there is only one stream to perform all the requested DMAs. */
    __HAL_LINKDMA(hsai,hdmarx,hdma_sai1_a);
 8001ca2:	6734      	str	r4, [r6, #112]	; 0x70
 8001ca4:	63a6      	str	r6, [r4, #56]	; 0x38

    __HAL_LINKDMA(hsai,hdmatx,hdma_sai1_a);
 8001ca6:	66f4      	str	r4, [r6, #108]	; 0x6c

    }
}
 8001ca8:	b007      	add	sp, #28
 8001caa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cac:	40015804 	.word	0x40015804
 8001cb0:	200001a0 	.word	0x200001a0
 8001cb4:	40023800 	.word	0x40023800
 8001cb8:	40021000 	.word	0x40021000
 8001cbc:	40021800 	.word	0x40021800
 8001cc0:	2001298c 	.word	0x2001298c
 8001cc4:	40026428 	.word	0x40026428

08001cc8 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001cc8:	b510      	push	{r4, lr}
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001cca:	4601      	mov	r1, r0
{
 8001ccc:	b088      	sub	sp, #32
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001cce:	2200      	movs	r2, #0
 8001cd0:	2036      	movs	r0, #54	; 0x36
 8001cd2:	f003 f8c7 	bl	8004e64 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001cd6:	2036      	movs	r0, #54	; 0x36
 8001cd8:	f003 f8f6 	bl	8004ec8 <HAL_NVIC_EnableIRQ>
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001cdc:	4b14      	ldr	r3, [pc, #80]	; (8001d30 <HAL_InitTick+0x68>)

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001cde:	a901      	add	r1, sp, #4
 8001ce0:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ce2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001ce4:	4c13      	ldr	r4, [pc, #76]	; (8001d34 <HAL_InitTick+0x6c>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ce6:	f042 0210 	orr.w	r2, r2, #16
 8001cea:	641a      	str	r2, [r3, #64]	; 0x40
 8001cec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001cee:	f003 0310 	and.w	r3, r3, #16
 8001cf2:	9302      	str	r3, [sp, #8]
 8001cf4:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001cf6:	f005 fcdb 	bl	80076b0 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001cfa:	f005 fcb9 	bl	8007670 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001cfe:	4b0e      	ldr	r3, [pc, #56]	; (8001d38 <HAL_InitTick+0x70>)
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001d00:	0040      	lsls	r0, r0, #1
  htim6.Instance = TIM6;
 8001d02:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001d04:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001d08:	60e3      	str	r3, [r4, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001d0a:	4b0c      	ldr	r3, [pc, #48]	; (8001d3c <HAL_InitTick+0x74>)
 8001d0c:	fbb0 f0f3 	udiv	r0, r0, r3
 8001d10:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8001d12:	2300      	movs	r3, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001d14:	6060      	str	r0, [r4, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001d16:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001d18:	6123      	str	r3, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d1a:	60a3      	str	r3, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001d1c:	f006 fcb4 	bl	8008688 <HAL_TIM_Base_Init>
 8001d20:	b920      	cbnz	r0, 8001d2c <HAL_InitTick+0x64>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001d22:	4620      	mov	r0, r4
 8001d24:	f006 fb80 	bl	8008428 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001d28:	b008      	add	sp, #32
 8001d2a:	bd10      	pop	{r4, pc}
  return HAL_ERROR;
 8001d2c:	2001      	movs	r0, #1
 8001d2e:	e7fb      	b.n	8001d28 <HAL_InitTick+0x60>
 8001d30:	40023800 	.word	0x40023800
 8001d34:	20016c4c 	.word	0x20016c4c
 8001d38:	40001000 	.word	0x40001000
 8001d3c:	000f4240 	.word	0x000f4240

08001d40 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001d40:	4770      	bx	lr

08001d42 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001d42:	e7fe      	b.n	8001d42 <HardFault_Handler>

08001d44 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001d44:	e7fe      	b.n	8001d44 <MemManage_Handler>

08001d46 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001d46:	e7fe      	b.n	8001d46 <BusFault_Handler>

08001d48 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001d48:	e7fe      	b.n	8001d48 <UsageFault_Handler>

08001d4a <DebugMon_Handler>:
 8001d4a:	4770      	bx	lr

08001d4c <USART1_IRQHandler>:
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8001d4c:	4801      	ldr	r0, [pc, #4]	; (8001d54 <USART1_IRQHandler+0x8>)
 8001d4e:	f006 bd7f 	b.w	8008850 <HAL_UART_IRQHandler>
 8001d52:	bf00      	nop
 8001d54:	200169ec 	.word	0x200169ec

08001d58 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001d58:	4801      	ldr	r0, [pc, #4]	; (8001d60 <TIM6_DAC_IRQHandler+0x8>)
 8001d5a:	f006 bb7f 	b.w	800845c <HAL_TIM_IRQHandler>
 8001d5e:	bf00      	nop
 8001d60:	20016c4c 	.word	0x20016c4c

08001d64 <DMA2_Stream1_IRQHandler>:
void DMA2_Stream1_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2_Stream1_IRQn 0 */

  /* USER CODE END DMA2_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_sai1_a);
 8001d64:	4801      	ldr	r0, [pc, #4]	; (8001d6c <DMA2_Stream1_IRQHandler+0x8>)
 8001d66:	f003 ba9d 	b.w	80052a4 <HAL_DMA_IRQHandler>
 8001d6a:	bf00      	nop
 8001d6c:	2001298c 	.word	0x2001298c

08001d70 <USART6_IRQHandler>:
void USART6_IRQHandler(void)
{
  /* USER CODE BEGIN USART6_IRQn 0 */

  /* USER CODE END USART6_IRQn 0 */
  HAL_UART_IRQHandler(&huart6);
 8001d70:	4801      	ldr	r0, [pc, #4]	; (8001d78 <USART6_IRQHandler+0x8>)
 8001d72:	f006 bd6d 	b.w	8008850 <HAL_UART_IRQHandler>
 8001d76:	bf00      	nop
 8001d78:	20016a70 	.word	0x20016a70

08001d7c <SAI1_IRQHandler>:
void SAI1_IRQHandler(void)
{
  /* USER CODE BEGIN SAI1_IRQn 0 */

  /* USER CODE END SAI1_IRQn 0 */
  HAL_SAI_IRQHandler(&hsai_BlockA1);
 8001d7c:	4801      	ldr	r0, [pc, #4]	; (8001d84 <SAI1_IRQHandler+0x8>)
 8001d7e:	f006 ba69 	b.w	8008254 <HAL_SAI_IRQHandler>
 8001d82:	bf00      	nop
 8001d84:	20016b48 	.word	0x20016b48

08001d88 <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 8001d88:	b508      	push	{r3, lr}
  /* USER CODE BEGIN LTDC_IRQn 0 */
  int now = HAL_GetTick();
 8001d8a:	f003 f841 	bl	8004e10 <HAL_GetTick>
  diff = last - now;
 8001d8e:	4a05      	ldr	r2, [pc, #20]	; (8001da4 <LTDC_IRQHandler+0x1c>)
 8001d90:	4905      	ldr	r1, [pc, #20]	; (8001da8 <LTDC_IRQHandler+0x20>)
 8001d92:	6813      	ldr	r3, [r2, #0]
 8001d94:	1a1b      	subs	r3, r3, r0
 8001d96:	600b      	str	r3, [r1, #0]
  last = now;
 8001d98:	6010      	str	r0, [r2, #0]
  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001d9a:	4804      	ldr	r0, [pc, #16]	; (8001dac <LTDC_IRQHandler+0x24>)
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 8001d9c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_LTDC_IRQHandler(&hltdc);
 8001da0:	f004 be13 	b.w	80069ca <HAL_LTDC_IRQHandler>
 8001da4:	200001a8 	.word	0x200001a8
 8001da8:	200001a4 	.word	0x200001a4
 8001dac:	200128e4 	.word	0x200128e4

08001db0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001db0:	4801      	ldr	r0, [pc, #4]	; (8001db8 <DMA2D_IRQHandler+0x8>)
 8001db2:	f003 bb6d 	b.w	8005490 <HAL_DMA2D_IRQHandler>
 8001db6:	bf00      	nop
 8001db8:	20016af0 	.word	0x20016af0

08001dbc <I2C4_EV_IRQHandler>:
void I2C4_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C4_EV_IRQn 0 */

  /* USER CODE END I2C4_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c4);
 8001dbc:	4801      	ldr	r0, [pc, #4]	; (8001dc4 <I2C4_EV_IRQHandler+0x8>)
 8001dbe:	f004 bcb9 	b.w	8006734 <HAL_I2C_EV_IRQHandler>
 8001dc2:	bf00      	nop
 8001dc4:	20012850 	.word	0x20012850

08001dc8 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001dc8:	4801      	ldr	r0, [pc, #4]	; (8001dd0 <DSI_IRQHandler+0x8>)
 8001dca:	f003 bd76 	b.w	80058ba <HAL_DSI_IRQHandler>
 8001dce:	bf00      	nop
 8001dd0:	200128c4 	.word	0x200128c4

08001dd4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001dd4:	2001      	movs	r0, #1
 8001dd6:	4770      	bx	lr

08001dd8 <_kill>:

int _kill(int pid, int sig)
{
 8001dd8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001dda:	f01e fffb 	bl	8020dd4 <__errno>
 8001dde:	2316      	movs	r3, #22
 8001de0:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001de2:	f04f 30ff 	mov.w	r0, #4294967295
 8001de6:	bd08      	pop	{r3, pc}

08001de8 <_exit>:

void _exit (int status)
{
 8001de8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001dea:	f01e fff3 	bl	8020dd4 <__errno>
 8001dee:	2316      	movs	r3, #22
 8001df0:	6003      	str	r3, [r0, #0]
 8001df2:	e7fe      	b.n	8001df2 <_exit+0xa>

08001df4 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001df4:	b570      	push	{r4, r5, r6, lr}
 8001df6:	460e      	mov	r6, r1
 8001df8:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001dfa:	460c      	mov	r4, r1
 8001dfc:	1ba3      	subs	r3, r4, r6
 8001dfe:	429d      	cmp	r5, r3
 8001e00:	dc01      	bgt.n	8001e06 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001e02:	4628      	mov	r0, r5
 8001e04:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001e06:	f3af 8000 	nop.w
 8001e0a:	f804 0b01 	strb.w	r0, [r4], #1
 8001e0e:	e7f5      	b.n	8001dfc <_read+0x8>

08001e10 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001e10:	b570      	push	{r4, r5, r6, lr}
 8001e12:	460e      	mov	r6, r1
 8001e14:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e16:	460c      	mov	r4, r1
 8001e18:	1ba3      	subs	r3, r4, r6
 8001e1a:	429d      	cmp	r5, r3
 8001e1c:	dc01      	bgt.n	8001e22 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001e1e:	4628      	mov	r0, r5
 8001e20:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001e22:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001e26:	f3af 8000 	nop.w
 8001e2a:	e7f5      	b.n	8001e18 <_write+0x8>

08001e2c <_close>:

int _close(int file)
{
	return -1;
}
 8001e2c:	f04f 30ff 	mov.w	r0, #4294967295
 8001e30:	4770      	bx	lr

08001e32 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001e32:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
 8001e36:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 8001e38:	604b      	str	r3, [r1, #4]
}
 8001e3a:	4770      	bx	lr

08001e3c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001e3c:	2001      	movs	r0, #1
 8001e3e:	4770      	bx	lr

08001e40 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001e40:	2000      	movs	r0, #0
 8001e42:	4770      	bx	lr

08001e44 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001e44:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001e46:	4b0a      	ldr	r3, [pc, #40]	; (8001e70 <_sbrk+0x2c>)
{
 8001e48:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001e4a:	6819      	ldr	r1, [r3, #0]
 8001e4c:	b909      	cbnz	r1, 8001e52 <_sbrk+0xe>
		heap_end = &end;
 8001e4e:	4909      	ldr	r1, [pc, #36]	; (8001e74 <_sbrk+0x30>)
 8001e50:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001e52:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001e54:	4669      	mov	r1, sp
 8001e56:	4402      	add	r2, r0
 8001e58:	428a      	cmp	r2, r1
 8001e5a:	d906      	bls.n	8001e6a <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001e5c:	f01e ffba 	bl	8020dd4 <__errno>
 8001e60:	230c      	movs	r3, #12
 8001e62:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001e64:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001e68:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001e6a:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8001e6c:	e7fc      	b.n	8001e68 <_sbrk+0x24>
 8001e6e:	bf00      	nop
 8001e70:	200001ac 	.word	0x200001ac
 8001e74:	20016cd8 	.word	0x20016cd8

08001e78 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 8001e78:	f000 befe 	b.w	8002c78 <touchgfx_init>

08001e7c <MX_TouchGFX_Process>:
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 8001e7c:	f000 bf6c 	b.w	8002d58 <touchgfx_taskEntry>

08001e80 <_ZN8touchgfx7Buttons4initEv>:
    uint32_t         BSP_PB_GetState(Button_TypeDef Button);
}

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 8001e80:	2100      	movs	r1, #0
{
 8001e82:	b508      	push	{r3, lr}
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 8001e84:	4608      	mov	r0, r1
 8001e86:	f002 fee3 	bl	8004c50 <BSP_PB_Init>
}
 8001e8a:	bd08      	pop	{r3, pc}

08001e8c <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
 8001e8c:	b508      	push	{r3, lr}
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8001e8e:	2000      	movs	r0, #0
 8001e90:	f002 ff18 	bl	8004cc4 <BSP_PB_GetState>

    return result;
}
 8001e94:	bd08      	pop	{r3, pc}

08001e96 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8001e96:	6840      	ldr	r0, [r0, #4]
    }
 8001e98:	4770      	bx	lr

08001e9a <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8001e9a:	6041      	str	r1, [r0, #4]
    }
 8001e9c:	4770      	bx	lr
	...

08001ea0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8001ea0:	4a09      	ldr	r2, [pc, #36]	; (8001ec8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 8001ea2:	6813      	ldr	r3, [r2, #0]
 8001ea4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001ea8:	6013      	str	r3, [r2, #0]
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 8001eaa:	f5a2 424e 	sub.w	r2, r2, #52736	; 0xce00
 8001eae:	4b07      	ldr	r3, [pc, #28]	; (8001ecc <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 8001eb0:	3a4c      	subs	r2, #76	; 0x4c
 8001eb2:	6811      	ldr	r1, [r2, #0]
 8001eb4:	430b      	orrs	r3, r1
 8001eb6:	6013      	str	r3, [r2, #0]
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 8001eb8:	f5a2 627b 	sub.w	r2, r2, #4016	; 0xfb0
 8001ebc:	6813      	ldr	r3, [r2, #0]
 8001ebe:	f043 0301 	orr.w	r3, r3, #1
 8001ec2:	6013      	str	r3, [r2, #0]
}
 8001ec4:	4770      	bx	lr
 8001ec6:	bf00      	nop
 8001ec8:	e000edfc 	.word	0xe000edfc
 8001ecc:	c5acce55 	.word	0xc5acce55

08001ed0 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8001ed0:	1a52      	subs	r2, r2, r1
 8001ed2:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
 8001ed6:	fbb2 f0f3 	udiv	r0, r2, r3
 8001eda:	4770      	bx	lr

08001edc <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8001edc:	4b01      	ldr	r3, [pc, #4]	; (8001ee4 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8001ede:	6818      	ldr	r0, [r3, #0]
}
 8001ee0:	4770      	bx	lr
 8001ee2:	bf00      	nop
 8001ee4:	e0001004 	.word	0xe0001004

08001ee8 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8001ee8:	4770      	bx	lr

08001eea <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8001eea:	b510      	push	{r4, lr}
 8001eec:	4604      	mov	r4, r0
 8001eee:	210c      	movs	r1, #12
 8001ef0:	f01d fbb2 	bl	801f658 <_ZdlPvj>
 8001ef4:	4620      	mov	r0, r4
 8001ef6:	bd10      	pop	{r4, pc}

08001ef8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
 8001ef8:	6803      	ldr	r3, [r0, #0]
 8001efa:	b510      	push	{r4, lr}
 8001efc:	691b      	ldr	r3, [r3, #16]
 8001efe:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8001f00:	b131      	cbz	r1, 8001f10 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8001f02:	4798      	blx	r3
 8001f04:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 8001f06:	6863      	ldr	r3, [r4, #4]
 8001f08:	1a9b      	subs	r3, r3, r2
 8001f0a:	4418      	add	r0, r3
 8001f0c:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8001f0e:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8001f10:	4798      	blx	r3
 8001f12:	60a0      	str	r0, [r4, #8]
}
 8001f14:	e7fb      	b.n	8001f0e <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

08001f16 <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 8001f16:	4770      	bx	lr

08001f18 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8001f18:	4770      	bx	lr
	...

08001f1c <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8001f1c:	b508      	push	{r3, lr}
    Buttons::init();
 8001f1e:	f7ff ffaf 	bl	8001e80 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8001f22:	4b02      	ldr	r3, [pc, #8]	; (8001f2c <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8001f24:	2200      	movs	r2, #0
 8001f26:	601a      	str	r2, [r3, #0]
}
 8001f28:	bd08      	pop	{r3, pc}
 8001f2a:	bf00      	nop
 8001f2c:	200001b0 	.word	0x200001b0

08001f30 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8001f30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001f32:	460f      	mov	r7, r1
    unsigned int buttonValue = Buttons::sample();
 8001f34:	f7ff ffaa 	bl	8001e8c <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8001f38:	4a0b      	ldr	r2, [pc, #44]	; (8001f68 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
    btnstatus[2] = btnstatus[1];
    btnstatus[1] = btnstatus[0];
    btnstatus[0] = buttonValue;
 8001f3a:	b2c6      	uxtb	r6, r0
    btnstatus[3] = btnstatus[2];
 8001f3c:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8001f3e:	7855      	ldrb	r5, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8001f40:	7814      	ldrb	r4, [r2, #0]

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8001f42:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[3] = btnstatus[2];
 8001f46:	70d3      	strb	r3, [r2, #3]
    btnstatus[2] = btnstatus[1];
 8001f48:	7095      	strb	r5, [r2, #2]
    btnstatus[1] = btnstatus[0];
 8001f4a:	7054      	strb	r4, [r2, #1]
    btnstatus[0] = buttonValue;
 8001f4c:	7016      	strb	r6, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8001f4e:	d00a      	beq.n	8001f66 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8001f50:	f015 0001 	ands.w	r0, r5, #1
 8001f54:	d007      	beq.n	8001f66 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8001f56:	f014 0001 	ands.w	r0, r4, #1
 8001f5a:	d004      	beq.n	8001f66 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 8001f5c:	07f3      	lsls	r3, r6, #31
    {
        key = 1;
 8001f5e:	bf56      	itet	pl
 8001f60:	2001      	movpl	r0, #1
        return true;
    }

    return false;
 8001f62:	2000      	movmi	r0, #0
        key = 1;
 8001f64:	7038      	strbpl	r0, [r7, #0]
}
 8001f66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001f68:	200001b0 	.word	0x200001b0

08001f6c <_ZN8touchgfx10KeySamplerD0Ev>:
 8001f6c:	b510      	push	{r4, lr}
 8001f6e:	4604      	mov	r4, r0
 8001f70:	2104      	movs	r1, #4
 8001f72:	f01d fb71 	bl	801f658 <_ZdlPvj>
 8001f76:	4620      	mov	r0, r4
 8001f78:	bd10      	pop	{r4, pc}

08001f7a <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001f7a:	4770      	bx	lr

08001f7c <_ZN20STM32TouchControllerD0Ev>:
 8001f7c:	b510      	push	{r4, lr}
 8001f7e:	4604      	mov	r4, r0
 8001f80:	2104      	movs	r1, #4
 8001f82:	f01d fb69 	bl	801f658 <_ZdlPvj>
 8001f86:	4620      	mov	r0, r4
 8001f88:	bd10      	pop	{r4, pc}
	...

08001f8c <BSP_TS_Init>:
      * @param  ts_SizeX : Maximum X size of the TS area on LCD
      * @param  ts_SizeY : Maximum Y size of the TS area on LCD
      * @retval TS_OK if all initializations are OK. Other value if error.
      */
    __weak uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
    {
 8001f8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
        /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
        /* but the prototype of Init() is like that in template and should be respected       */

        /* Initialize the communication channel to sensor (I2C) if necessary */
        /* that is initialization is done only once after a power up         */
        ft6x06_ts_drv.Init(I2C_Address);
 8001f90:	4c14      	ldr	r4, [pc, #80]	; (8001fe4 <BSP_TS_Init+0x58>)
    {
 8001f92:	4681      	mov	r9, r0
        ft6x06_ts_drv.Init(I2C_Address);
 8001f94:	4e14      	ldr	r6, [pc, #80]	; (8001fe8 <BSP_TS_Init+0x5c>)
    {
 8001f96:	4688      	mov	r8, r1
        ft6x06_ts_drv.Init(I2C_Address);
 8001f98:	6823      	ldr	r3, [r4, #0]
 8001f9a:	4627      	mov	r7, r4
 8001f9c:	7830      	ldrb	r0, [r6, #0]
 8001f9e:	4635      	mov	r5, r6
 8001fa0:	4798      	blx	r3

        ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8001fa2:	6863      	ldr	r3, [r4, #4]
 8001fa4:	2054      	movs	r0, #84	; 0x54
 8001fa6:	4798      	blx	r3
        if (ts_id1 != FT6206_ID_VALUE)
 8001fa8:	b2c0      	uxtb	r0, r0
 8001faa:	2811      	cmp	r0, #17
 8001fac:	d00a      	beq.n	8001fc4 <BSP_TS_Init+0x38>
        {
            ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8001fae:	6863      	ldr	r3, [r4, #4]
 8001fb0:	2070      	movs	r0, #112	; 0x70
 8001fb2:	4798      	blx	r3
            I2C_Address    = TS_I2C_ADDRESS_A02;
 8001fb4:	2370      	movs	r3, #112	; 0x70
            I2C_Address    = TS_I2C_ADDRESS;
        }

        /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
        /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
        if ((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8001fb6:	b2c0      	uxtb	r0, r0
            I2C_Address    = TS_I2C_ADDRESS_A02;
 8001fb8:	7033      	strb	r3, [r6, #0]
        if ((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8001fba:	2811      	cmp	r0, #17
 8001fbc:	d004      	beq.n	8001fc8 <BSP_TS_Init+0x3c>

            } /* of if(ts_status == TS_OK) */
        }
        else
        {
            ts_status = TS_DEVICE_NOT_FOUND;
 8001fbe:	2003      	movs	r0, #3
        }

        return (ts_status);
    }
 8001fc0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
            I2C_Address    = TS_I2C_ADDRESS;
 8001fc4:	2354      	movs	r3, #84	; 0x54
 8001fc6:	7033      	strb	r3, [r6, #0]
            if (ts_SizeX < ts_SizeY)
 8001fc8:	45c1      	cmp	r9, r8
 8001fca:	4b08      	ldr	r3, [pc, #32]	; (8001fec <BSP_TS_Init+0x60>)
                ft6x06_ts_drv.Reset(I2C_Address);
 8001fcc:	7828      	ldrb	r0, [r5, #0]
                ts_orientation = TS_SWAP_NONE;
 8001fce:	bf34      	ite	cc
 8001fd0:	2201      	movcc	r2, #1
                ts_orientation = TS_SWAP_XY | TS_SWAP_Y;
 8001fd2:	220c      	movcs	r2, #12
 8001fd4:	701a      	strb	r2, [r3, #0]
                ft6x06_ts_drv.Reset(I2C_Address);
 8001fd6:	68bb      	ldr	r3, [r7, #8]
 8001fd8:	4798      	blx	r3
                ft6x06_ts_drv.Start(I2C_Address);
 8001fda:	7828      	ldrb	r0, [r5, #0]
 8001fdc:	68fb      	ldr	r3, [r7, #12]
 8001fde:	4798      	blx	r3
 8001fe0:	2000      	movs	r0, #0
 8001fe2:	e7ed      	b.n	8001fc0 <BSP_TS_Init+0x34>
 8001fe4:	20000024 	.word	0x20000024
 8001fe8:	200001b4 	.word	0x200001b4
 8001fec:	200001b5 	.word	0x200001b5

08001ff0 <_ZN20STM32TouchController4initEv>:
{
 8001ff0:	b508      	push	{r3, lr}
    if (BSP_TS_Init(800, 480) == TS_OK)
 8001ff2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8001ff6:	f44f 7048 	mov.w	r0, #800	; 0x320
 8001ffa:	f7ff ffc7 	bl	8001f8c <BSP_TS_Init>
 8001ffe:	4b06      	ldr	r3, [pc, #24]	; (8002018 <_ZN20STM32TouchController4initEv+0x28>)
 8002000:	b908      	cbnz	r0, 8002006 <_ZN20STM32TouchController4initEv+0x16>
        bsp_ts_initialized = true;
 8002002:	2201      	movs	r2, #1
 8002004:	701a      	strb	r2, [r3, #0]
    assert(bsp_ts_initialized);
 8002006:	781b      	ldrb	r3, [r3, #0]
 8002008:	b92b      	cbnz	r3, 8002016 <_ZN20STM32TouchController4initEv+0x26>
 800200a:	4b04      	ldr	r3, [pc, #16]	; (800201c <_ZN20STM32TouchController4initEv+0x2c>)
 800200c:	2167      	movs	r1, #103	; 0x67
 800200e:	4a04      	ldr	r2, [pc, #16]	; (8002020 <_ZN20STM32TouchController4initEv+0x30>)
 8002010:	4804      	ldr	r0, [pc, #16]	; (8002024 <_ZN20STM32TouchController4initEv+0x34>)
 8002012:	f01e fead 	bl	8020d70 <__assert_func>
}
 8002016:	bd08      	pop	{r3, pc}
 8002018:	200001b6 	.word	0x200001b6
 800201c:	08021ed4 	.word	0x08021ed4
 8002020:	08021f48 	.word	0x08021f48
 8002024:	08021ee7 	.word	0x08021ee7

08002028 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
__weak uint8_t BSP_TS_GetState(TS_StateTypeDef* TS_State)
{
 8002028:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    uint16_t xDiff;
    uint16_t yDiff;
    uint32_t index;

    /* Check and update the number of touches active detected */
    TS_State->touchDetected = ft6x06_ts_drv.DetectTouch(I2C_Address);
 800202c:	4e34      	ldr	r6, [pc, #208]	; (8002100 <BSP_TS_GetState+0xd8>)
{
 800202e:	4682      	mov	sl, r0
    TS_State->touchDetected = ft6x06_ts_drv.DetectTouch(I2C_Address);
 8002030:	4f34      	ldr	r7, [pc, #208]	; (8002104 <BSP_TS_GetState+0xdc>)
 8002032:	7830      	ldrb	r0, [r6, #0]
 8002034:	693b      	ldr	r3, [r7, #16]
 8002036:	4798      	blx	r3
 8002038:	f88a 0000 	strb.w	r0, [sl]
    if (TS_State->touchDetected)
 800203c:	2800      	cmp	r0, #0
 800203e:	d05b      	beq.n	80020f8 <BSP_TS_GetState+0xd0>
 8002040:	f10a 0802 	add.w	r8, sl, #2
    {
        for (index = 0; index < TS_State->touchDetected; index++)
 8002044:	2400      	movs	r4, #0
        {
            /* Get each touch coordinates */
            ft6x06_ts_drv.GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));

            if (ts_orientation & TS_SWAP_XY)
 8002046:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 800210c <BSP_TS_GetState+0xe4>
            if (ts_orientation & TS_SWAP_Y)
            {
                Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
            }

            xDiff = Raw_x[index] > _x[index] ? (Raw_x[index] - _x[index]) : (_x[index] - Raw_x[index]);
 800204a:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 8002110 <BSP_TS_GetState+0xe8>
        for (index = 0; index < TS_State->touchDetected; index++)
 800204e:	f89a 3000 	ldrb.w	r3, [sl]
 8002052:	42a3      	cmp	r3, r4
 8002054:	d950      	bls.n	80020f8 <BSP_TS_GetState+0xd0>
            ft6x06_ts_drv.GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8002056:	ad01      	add	r5, sp, #4
 8002058:	0061      	lsls	r1, r4, #1
 800205a:	697b      	ldr	r3, [r7, #20]
 800205c:	186a      	adds	r2, r5, r1
 800205e:	7830      	ldrb	r0, [r6, #0]
 8002060:	4469      	add	r1, sp
 8002062:	4798      	blx	r3
            if (ts_orientation & TS_SWAP_XY)
 8002064:	f89b 2000 	ldrb.w	r2, [fp]
 8002068:	0710      	lsls	r0, r2, #28
                tmp = Raw_x[index];
 800206a:	bf41      	itttt	mi
 800206c:	f83d 3014 	ldrhmi.w	r3, [sp, r4, lsl #1]
                Raw_x[index] = Raw_y[index];
 8002070:	f835 1014 	ldrhmi.w	r1, [r5, r4, lsl #1]
                Raw_y[index] = tmp;
 8002074:	f825 3014 	strhmi.w	r3, [r5, r4, lsl #1]
                Raw_x[index] = Raw_y[index];
 8002078:	f82d 1014 	strhmi.w	r1, [sp, r4, lsl #1]
            if (ts_orientation & TS_SWAP_X)
 800207c:	0791      	lsls	r1, r2, #30
 800207e:	ea4f 0184 	mov.w	r1, r4, lsl #2
                Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 8002082:	bf41      	itttt	mi
 8002084:	f83d 3014 	ldrhmi.w	r3, [sp, r4, lsl #1]
 8002088:	f5c3 7347 	rsbmi	r3, r3, #796	; 0x31c
 800208c:	3303      	addmi	r3, #3
 800208e:	f82d 3014 	strhmi.w	r3, [sp, r4, lsl #1]
            if (ts_orientation & TS_SWAP_Y)
 8002092:	0753      	lsls	r3, r2, #29
            xDiff = Raw_x[index] > _x[index] ? (Raw_x[index] - _x[index]) : (_x[index] - Raw_x[index]);
 8002094:	f83d c014 	ldrh.w	ip, [sp, r4, lsl #1]
                Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8002098:	bf48      	it	mi
 800209a:	f835 3014 	ldrhmi.w	r3, [r5, r4, lsl #1]
            xDiff = Raw_x[index] > _x[index] ? (Raw_x[index] - _x[index]) : (_x[index] - Raw_x[index]);
 800209e:	f859 2024 	ldr.w	r2, [r9, r4, lsl #2]
                Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 80020a2:	bf42      	ittt	mi
 80020a4:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 80020a8:	3301      	addmi	r3, #1
 80020aa:	f825 3014 	strhmi.w	r3, [r5, r4, lsl #1]
 80020ae:	b293      	uxth	r3, r2
            yDiff = Raw_y[index] > _y[index] ? (Raw_y[index] - _y[index]) : (_y[index] - Raw_y[index]);
 80020b0:	f835 0014 	ldrh.w	r0, [r5, r4, lsl #1]
            xDiff = Raw_x[index] > _x[index] ? (Raw_x[index] - _x[index]) : (_x[index] - Raw_x[index]);
 80020b4:	4594      	cmp	ip, r2
            yDiff = Raw_y[index] > _y[index] ? (Raw_y[index] - _y[index]) : (_y[index] - Raw_y[index]);
 80020b6:	4d14      	ldr	r5, [pc, #80]	; (8002108 <BSP_TS_GetState+0xe0>)
        for (index = 0; index < TS_State->touchDetected; index++)
 80020b8:	f104 0401 	add.w	r4, r4, #1
            xDiff = Raw_x[index] > _x[index] ? (Raw_x[index] - _x[index]) : (_x[index] - Raw_x[index]);
 80020bc:	bf8c      	ite	hi
 80020be:	ebac 0303 	subhi.w	r3, ip, r3
 80020c2:	eba3 030c 	subls.w	r3, r3, ip
            yDiff = Raw_y[index] > _y[index] ? (Raw_y[index] - _y[index]) : (_y[index] - Raw_y[index]);
 80020c6:	f851 e005 	ldr.w	lr, [r1, r5]
            xDiff = Raw_x[index] > _x[index] ? (Raw_x[index] - _x[index]) : (_x[index] - Raw_x[index]);
 80020ca:	b29b      	uxth	r3, r3
 80020cc:	fa1f f28e 	uxth.w	r2, lr
            yDiff = Raw_y[index] > _y[index] ? (Raw_y[index] - _y[index]) : (_y[index] - Raw_y[index]);
 80020d0:	4570      	cmp	r0, lr
 80020d2:	bf8c      	ite	hi
 80020d4:	1a82      	subhi	r2, r0, r2
 80020d6:	1a12      	subls	r2, r2, r0
 80020d8:	b292      	uxth	r2, r2

            if ((xDiff + yDiff) > 5)
 80020da:	4413      	add	r3, r2
 80020dc:	2b05      	cmp	r3, #5
            {
                _x[index] = Raw_x[index];
 80020de:	bfc8      	it	gt
 80020e0:	f849 c001 	strgt.w	ip, [r9, r1]
                _y[index] = Raw_y[index];
            }


            TS_State->touchX[index] = _x[index];
 80020e4:	f859 3001 	ldr.w	r3, [r9, r1]
                _y[index] = Raw_y[index];
 80020e8:	bfc8      	it	gt
 80020ea:	5068      	strgt	r0, [r5, r1]
            TS_State->touchX[index] = _x[index];
 80020ec:	f828 3b02 	strh.w	r3, [r8], #2
            TS_State->touchY[index] = _y[index];
 80020f0:	586b      	ldr	r3, [r5, r1]
 80020f2:	f8a8 3002 	strh.w	r3, [r8, #2]
 80020f6:	e7aa      	b.n	800204e <BSP_TS_GetState+0x26>
        } /* of for(index=0; index < TS_State->touchDetected; index++) */
    } /* end of if(TS_State->touchDetected != 0) */

    return (ts_status);
}
 80020f8:	2000      	movs	r0, #0
 80020fa:	b003      	add	sp, #12
 80020fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002100:	200001b4 	.word	0x200001b4
 8002104:	20000024 	.word	0x20000024
 8002108:	200001c0 	.word	0x200001c0
 800210c:	200001b5 	.word	0x200001b5
 8002110:	200001b8 	.word	0x200001b8

08002114 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8002114:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    if (bsp_ts_initialized)
 8002116:	4b0b      	ldr	r3, [pc, #44]	; (8002144 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
{
 8002118:	460e      	mov	r6, r1
 800211a:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 800211c:	781c      	ldrb	r4, [r3, #0]
 800211e:	b15c      	cbz	r4, 8002138 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
        BSP_TS_GetState(&state);
 8002120:	a801      	add	r0, sp, #4
 8002122:	f7ff ff81 	bl	8002028 <BSP_TS_GetState>
        if (state.touchDetected)
 8002126:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800212a:	b143      	cbz	r3, 800213e <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
            x = state.touchX[0];
 800212c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002130:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 8002132:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8002136:	602b      	str	r3, [r5, #0]
}
 8002138:	4620      	mov	r0, r4
 800213a:	b004      	add	sp, #16
 800213c:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 800213e:	461c      	mov	r4, r3
 8002140:	e7fa      	b.n	8002138 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 8002142:	bf00      	nop
 8002144:	200001b6 	.word	0x200001b6

08002148 <_ZN8touchgfx4GPIO4initEv>:
            {
                GPIO_InvertedLevels[id] = 1;
            }
        }
    }
}
 8002148:	4770      	bx	lr

0800214a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    }
}
 800214a:	4770      	bx	lr

0800214c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 800214c:	4770      	bx	lr

0800214e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 800214e:	4770      	bx	lr

08002150 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8002150:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8002152:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8002156:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 800215a:	4770      	bx	lr

0800215c <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 800215c:	2000      	movs	r0, #0
 800215e:	4770      	bx	lr

08002160 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8002160:	2000      	movs	r0, #0
 8002162:	4770      	bx	lr

08002164 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8002164:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8002166:	b10b      	cbz	r3, 800216c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8002168:	4608      	mov	r0, r1
 800216a:	4718      	bx	r3
        }
    }
 800216c:	4770      	bx	lr

0800216e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800216e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002172:	4770      	bx	lr

08002174 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8002174:	6840      	ldr	r0, [r0, #4]
 8002176:	6803      	ldr	r3, [r0, #0]
 8002178:	699b      	ldr	r3, [r3, #24]
 800217a:	4718      	bx	r3

0800217c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // and implemented needed functionality here.

    /* USER CODE BEGIN getTFTFrameBuffer */
    return currFbBase;
    /* USER CODE END getTFTFrameBuffer */
}
 800217c:	4b01      	ldr	r3, [pc, #4]	; (8002184 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800217e:	6818      	ldr	r0, [r3, #0]
 8002180:	4770      	bx	lr
 8002182:	bf00      	nop
 8002184:	200001c8 	.word	0x200001c8

08002188 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002188:	4770      	bx	lr
	...

0800218c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 800218c:	4a15      	ldr	r2, [pc, #84]	; (80021e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x58>)
 800218e:	2300      	movs	r3, #0
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8002190:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002194:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8002198:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 800219c:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80021a0:	f643 7ce0 	movw	ip, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80021a4:	f3c3 06c9 	ubfx	r6, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80021a8:	f3c3 334e 	ubfx	r3, r3, #13, #15
 80021ac:	07b7      	lsls	r7, r6, #30
 80021ae:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80021b0:	ea03 080c 	and.w	r8, r3, ip
 80021b4:	463d      	mov	r5, r7
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80021b6:	4634      	mov	r4, r6
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 80021b8:	3c01      	subs	r4, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80021ba:	ea48 0e05 	orr.w	lr, r8, r5
 80021be:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
      } while (ways-- != 0U);
 80021c2:	f1b4 3fff 	cmp.w	r4, #4294967295
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80021c6:	f8c2 e274 	str.w	lr, [r2, #628]	; 0x274
      } while (ways-- != 0U);
 80021ca:	d1f5      	bne.n	80021b8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
 80021cc:	3b20      	subs	r3, #32
    } while(sets-- != 0U);
 80021ce:	f113 0f20 	cmn.w	r3, #32
 80021d2:	d1ed      	bne.n	80021b0 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x24>
 80021d4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80021d8:	f3bf 8f6f 	isb	sy
    /* USER CODE END flushFrameBuffer step 1 */

    /* USER CODE BEGIN flushFrameBuffer step 2 */
    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
    /* USER CODE END flushFrameBuffer step 2 */
}
 80021dc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80021e0:	f000 be28 	b.w	8002e34 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
 80021e4:	e000ed00 	.word	0xe000ed00

080021e8 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 80021e8:	4b02      	ldr	r3, [pc, #8]	; (80021f4 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 80021ea:	2200      	movs	r2, #0
 80021ec:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 80021ee:	f009 bb8f 	b.w	800b910 <_ZN8touchgfx3HAL10beginFrameEv>
 80021f2:	bf00      	nop
 80021f4:	20000018 	.word	0x20000018

080021f8 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 80021f8:	b510      	push	{r4, lr}
 80021fa:	4604      	mov	r4, r0
    HAL::endFrame();
 80021fc:	f009 fb94 	bl	800b928 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 8002200:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8002204:	b113      	cbz	r3, 800220c <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 8002206:	4b02      	ldr	r3, [pc, #8]	; (8002210 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8002208:	2201      	movs	r2, #1
 800220a:	701a      	strb	r2, [r3, #0]
    }
}
 800220c:	bd10      	pop	{r4, pc}
 800220e:	bf00      	nop
 8002210:	20000018 	.word	0x20000018

08002214 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8002214:	f000 be0b 	b.w	8002e2e <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08002218 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8002218:	b510      	push	{r4, lr}
 800221a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800221c:	f00a f8e6 	bl	800c3ec <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002220:	6823      	ldr	r3, [r4, #0]
 8002222:	4620      	mov	r0, r4
 8002224:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 8002228:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800222c:	4718      	bx	r3

0800222e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800222e:	f009 bb57 	b.w	800b8e0 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08002232 <_ZN11TouchGFXHALD0Ev>:
 8002232:	b510      	push	{r4, lr}
 8002234:	4604      	mov	r4, r0
 8002236:	217c      	movs	r1, #124	; 0x7c
 8002238:	f01d fa0e 	bl	801f658 <_ZdlPvj>
 800223c:	4620      	mov	r0, r4
 800223e:	bd10      	pop	{r4, pc}

08002240 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8002240:	6803      	ldr	r3, [r0, #0]
{
 8002242:	4604      	mov	r4, r0
 8002244:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 8002246:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8002248:	4798      	blx	r3
    enableInterrupts();
 800224a:	6823      	ldr	r3, [r4, #0]
 800224c:	4620      	mov	r0, r4
 800224e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002250:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8002252:	f000 faab 	bl	80027ac <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8002256:	6823      	ldr	r3, [r4, #0]
 8002258:	4620      	mov	r0, r4
 800225a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800225c:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 800225e:	2100      	movs	r1, #0
 8002260:	2329      	movs	r3, #41	; 0x29
 8002262:	2215      	movs	r2, #21
 8002264:	9100      	str	r1, [sp, #0]
 8002266:	4805      	ldr	r0, [pc, #20]	; (800227c <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 8002268:	f003 fd37 	bl	8005cda <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 800226c:	f000 fa9e 	bl	80027ac <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8002270:	6823      	ldr	r3, [r4, #0]
 8002272:	4620      	mov	r0, r4
 8002274:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002276:	4798      	blx	r3
 8002278:	e7f8      	b.n	800226c <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 800227a:	bf00      	nop
 800227c:	200128c4 	.word	0x200128c4

08002280 <_ZN11TouchGFXHAL19configureInterruptsEv>:
{
 8002280:	b508      	push	{r3, lr}
    TouchGFXGeneratedHAL::configureInterrupts();
 8002282:	f000 fdc3 	bl	8002e0c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
    HAL_NVIC_SetPriority(DMA2D_IRQn, 7, 0);
 8002286:	2200      	movs	r2, #0
 8002288:	2107      	movs	r1, #7
 800228a:	205a      	movs	r0, #90	; 0x5a
 800228c:	f002 fdea 	bl	8004e64 <HAL_NVIC_SetPriority>
    HAL_NVIC_SetPriority(DSI_IRQn, 7, 0);
 8002290:	2200      	movs	r2, #0
 8002292:	2107      	movs	r1, #7
 8002294:	2062      	movs	r0, #98	; 0x62
}
 8002296:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_NVIC_SetPriority(DSI_IRQn, 7, 0);
 800229a:	f002 bde3 	b.w	8004e64 <HAL_NVIC_SetPriority>

0800229e <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800229e:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80022a2:	b11b      	cbz	r3, 80022ac <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80022a4:	6840      	ldr	r0, [r0, #4]
 80022a6:	6803      	ldr	r3, [r0, #0]
 80022a8:	681b      	ldr	r3, [r3, #0]
 80022aa:	4718      	bx	r3
    }
 80022ac:	4618      	mov	r0, r3
 80022ae:	4770      	bx	lr

080022b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 80022b0:	b530      	push	{r4, r5, lr}
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80022b2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80022b6:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80022ba:	4b10      	ldr	r3, [pc, #64]	; (80022fc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 80022bc:	428c      	cmp	r4, r1
 80022be:	781a      	ldrb	r2, [r3, #0]
 80022c0:	d00d      	beq.n	80022de <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
        {
            if (DISPLAY_ROTATION == rotate0)
 80022c2:	b95a      	cbnz	r2, 80022dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80022c4:	4a0e      	ldr	r2, [pc, #56]	; (8002300 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80022c6:	490f      	ldr	r1, [pc, #60]	; (8002304 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80022c8:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80022ca:	480f      	ldr	r0, [pc, #60]	; (8002308 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80022cc:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80022ce:	8801      	ldrh	r1, [r0, #0]
 80022d0:	4d0e      	ldr	r5, [pc, #56]	; (800230c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 80022d2:	8011      	strh	r1, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 80022d4:	2201      	movs	r2, #1
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80022d6:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 80022d8:	8004      	strh	r4, [r0, #0]
        {
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
 80022da:	701a      	strb	r2, [r3, #0]
        }
    }
 80022dc:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80022de:	2a00      	cmp	r2, #0
 80022e0:	d0fc      	beq.n	80022dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 80022e2:	4809      	ldr	r0, [pc, #36]	; (8002308 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80022e4:	4a07      	ldr	r2, [pc, #28]	; (8002304 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80022e6:	8801      	ldrh	r1, [r0, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80022e8:	4d08      	ldr	r5, [pc, #32]	; (800230c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 80022ea:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80022ec:	4a04      	ldr	r2, [pc, #16]	; (8002300 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80022ee:	8814      	ldrh	r4, [r2, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 80022f0:	8011      	strh	r1, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 80022f2:	2200      	movs	r2, #0
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80022f4:	802c      	strh	r4, [r5, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 80022f6:	8004      	strh	r4, [r0, #0]
 80022f8:	e7ef      	b.n	80022da <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 80022fa:	bf00      	nop
 80022fc:	200125a8 	.word	0x200125a8
 8002300:	200125a4 	.word	0x200125a4
 8002304:	200125aa 	.word	0x200125aa
 8002308:	200125a6 	.word	0x200125a6
 800230c:	200125ac 	.word	0x200125ac

08002310 <_ZN11TouchGFXHAL16enableInterruptsEv>:
{
 8002310:	b508      	push	{r3, lr}
    TouchGFXGeneratedHAL::enableInterrupts();
 8002312:	f000 fd83 	bl	8002e1c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002316:	4b03      	ldr	r3, [pc, #12]	; (8002324 <_ZN11TouchGFXHAL16enableInterruptsEv+0x14>)
 8002318:	2204      	movs	r2, #4
 800231a:	60da      	str	r2, [r3, #12]
 800231c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002320:	609a      	str	r2, [r3, #8]
}
 8002322:	bd08      	pop	{r3, pc}
 8002324:	e000e100 	.word	0xe000e100

08002328 <_ZN11TouchGFXHAL17disableInterruptsEv>:
{
 8002328:	b508      	push	{r3, lr}
    TouchGFXGeneratedHAL::disableInterrupts();
 800232a:	f000 fd8d 	bl	8002e48 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800232e:	4b08      	ldr	r3, [pc, #32]	; (8002350 <_ZN11TouchGFXHAL17disableInterruptsEv+0x28>)
 8002330:	2204      	movs	r2, #4
 8002332:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  __ASM volatile ("dsb 0xF":::"memory");
 8002336:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800233a:	f3bf 8f6f 	isb	sy
 800233e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002342:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002346:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800234a:	f3bf 8f6f 	isb	sy
}
 800234e:	bd08      	pop	{r3, pc}
 8002350:	e000e100 	.word	0xe000e100

08002354 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 8002354:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 8002356:	4c0c      	ldr	r4, [pc, #48]	; (8002388 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 8002358:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800235a:	b931      	cbnz	r1, 800236a <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 800235c:	4b0b      	ldr	r3, [pc, #44]	; (800238c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 800235e:	f240 216b 	movw	r1, #619	; 0x26b
 8002362:	4a0b      	ldr	r2, [pc, #44]	; (8002390 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8002364:	480b      	ldr	r0, [pc, #44]	; (8002394 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 8002366:	f01e fd03 	bl	8020d70 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800236a:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800236e:	3200      	adds	r2, #0
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8002370:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8002372:	4909      	ldr	r1, [pc, #36]	; (8002398 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 8002374:	bf18      	it	ne
 8002376:	2201      	movne	r2, #1
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002378:	3300      	adds	r3, #0
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800237a:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800237c:	bf18      	it	ne
 800237e:	2301      	movne	r3, #1
 8002380:	4a06      	ldr	r2, [pc, #24]	; (800239c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 8002382:	7013      	strb	r3, [r2, #0]
}
 8002384:	bd10      	pop	{r4, pc}
 8002386:	bf00      	nop
 8002388:	200001c8 	.word	0x200001c8
 800238c:	08021f72 	.word	0x08021f72
 8002390:	080220ac 	.word	0x080220ac
 8002394:	08021faa 	.word	0x08021faa
 8002398:	200125ae 	.word	0x200125ae
 800239c:	200125af 	.word	0x200125af

080023a0 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
TouchGFXHAL::TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height)
 80023a0:	b570      	push	{r4, r5, r6, lr}
          lastRenderVariant(HARDWARE)
 80023a2:	e9c0 1201 	strd	r1, r2, [r0, #4]
                           height)
 80023a6:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80023aa:	2201      	movs	r2, #1
 80023ac:	60c3      	str	r3, [r0, #12]
 80023ae:	2300      	movs	r3, #0
 80023b0:	4923      	ldr	r1, [pc, #140]	; (8002440 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0xa0>)
 80023b2:	3520      	adds	r5, #32
TouchGFXHAL::TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height)
 80023b4:	f8bd 6014 	ldrh.w	r6, [sp, #20]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80023b8:	8503      	strh	r3, [r0, #40]	; 0x28
                           height)
 80023ba:	b2ad      	uxth	r5, r5
 80023bc:	f880 302a 	strb.w	r3, [r0, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 80023c0:	62c3      	str	r3, [r0, #44]	; 0x2c
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80023c2:	42b5      	cmp	r5, r6
 80023c4:	8603      	strh	r3, [r0, #48]	; 0x30
          lastRenderVariant(HARDWARE)
 80023c6:	f880 3048 	strb.w	r3, [r0, #72]	; 0x48
 80023ca:	f880 2049 	strb.w	r2, [r0, #73]	; 0x49
 80023ce:	f880 304a 	strb.w	r3, [r0, #74]	; 0x4a
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
        x = 0;
        y = 0;
 80023d2:	6543      	str	r3, [r0, #84]	; 0x54
 80023d4:	f880 3068 	strb.w	r3, [r0, #104]	; 0x68
 80023d8:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80023dc:	f880 306a 	strb.w	r3, [r0, #106]	; 0x6a
 80023e0:	f880 306b 	strb.w	r3, [r0, #107]	; 0x6b
 80023e4:	f880 306c 	strb.w	r3, [r0, #108]	; 0x6c
 80023e8:	6641      	str	r1, [r0, #100]	; 0x64
 80023ea:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80023ee:	e9c0 3306 	strd	r3, r3, [r0, #24]
              inProgress(false)
 80023f2:	e9c0 3308 	strd	r3, r3, [r0, #32]
 80023f6:	e9c0 330e 	strd	r3, r3, [r0, #56]	; 0x38
 80023fa:	e9c0 3310 	strd	r3, r3, [r0, #64]	; 0x40
 80023fe:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8002402:	6703      	str	r3, [r0, #112]	; 0x70
 8002404:	f880 2077 	strb.w	r2, [r0, #119]	; 0x77
 8002408:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
        instance = this;
 800240c:	4a0d      	ldr	r2, [pc, #52]	; (8002444 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0xa4>)
          lastRenderVariant(HARDWARE)
 800240e:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
        instance = this;
 8002412:	6010      	str	r0, [r2, #0]
        DISPLAY_WIDTH = width;
 8002414:	4a0c      	ldr	r2, [pc, #48]	; (8002448 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0xa8>)
          lastRenderVariant(HARDWARE)
 8002416:	f880 3076 	strb.w	r3, [r0, #118]	; 0x76
        DISPLAY_WIDTH = width;
 800241a:	8015      	strh	r5, [r2, #0]
        DISPLAY_HEIGHT = height;
 800241c:	4a0b      	ldr	r2, [pc, #44]	; (800244c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0xac>)
 800241e:	8016      	strh	r6, [r2, #0]
        DISPLAY_ROTATION = rotate0;
 8002420:	4a0b      	ldr	r2, [pc, #44]	; (8002450 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0xb0>)
 8002422:	7013      	strb	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8002424:	4b0b      	ldr	r3, [pc, #44]	; (8002454 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0xb4>)
 8002426:	801d      	strh	r5, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8002428:	bf28      	it	cs
 800242a:	2500      	movcs	r5, #0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800242c:	4b0a      	ldr	r3, [pc, #40]	; (8002458 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800242e:	bf38      	it	cc
 8002430:	2501      	movcc	r5, #1
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8002432:	801e      	strh	r6, [r3, #0]
 8002434:	4b09      	ldr	r3, [pc, #36]	; (800245c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0xbc>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8002436:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
 800243a:	6003      	str	r3, [r0, #0]
}
 800243c:	bd70      	pop	{r4, r5, r6, pc}
 800243e:	bf00      	nop
 8002440:	01000001 	.word	0x01000001
 8002444:	200125b0 	.word	0x200125b0
 8002448:	200125a4 	.word	0x200125a4
 800244c:	200125a6 	.word	0x200125a6
 8002450:	200125a8 	.word	0x200125a8
 8002454:	200125aa 	.word	0x200125aa
 8002458:	200125ac 	.word	0x200125ac
 800245c:	08021ff8 	.word	0x08021ff8

08002460 <_ZN11TouchGFXHAL10initializeEv>:
{
 8002460:	b538      	push	{r3, r4, r5, lr}
 8002462:	4604      	mov	r4, r0
    GPIO::init();
 8002464:	f7ff fe70 	bl	8002148 <_ZN8touchgfx4GPIO4initEv>
    instrumentation.init();
 8002468:	4d08      	ldr	r5, [pc, #32]	; (800248c <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    TouchGFXGeneratedHAL::initialize();
 800246a:	4620      	mov	r0, r4
 800246c:	f000 fcf8 	bl	8002e60 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8002470:	2300      	movs	r3, #0
    instrumentation.init();
 8002472:	4628      	mov	r0, r5
 8002474:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
 8002478:	f7ff fd12 	bl	8001ea0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 800247c:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 800247e:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 8002480:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 8002484:	4b02      	ldr	r3, [pc, #8]	; (8002490 <_ZN11TouchGFXHAL10initializeEv+0x30>)
 8002486:	6163      	str	r3, [r4, #20]
}
 8002488:	bd38      	pop	{r3, r4, r5, pc}
 800248a:	bf00      	nop
 800248c:	200001d0 	.word	0x200001d0
 8002490:	200001dc 	.word	0x200001dc

08002494 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8002494:	2801      	cmp	r0, #1
    {
 8002496:	4603      	mov	r3, r0
 8002498:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 800249a:	d80a      	bhi.n	80024b2 <DSI_IO_WriteCmd+0x1e>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 800249c:	784a      	ldrb	r2, [r1, #1]
 800249e:	780b      	ldrb	r3, [r1, #0]
 80024a0:	2100      	movs	r1, #0
 80024a2:	9200      	str	r2, [sp, #0]
 80024a4:	2215      	movs	r2, #21
 80024a6:	4807      	ldr	r0, [pc, #28]	; (80024c4 <DSI_IO_WriteCmd+0x30>)
 80024a8:	f003 fc17 	bl	8005cda <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 80024ac:	b003      	add	sp, #12
 80024ae:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 80024b2:	9101      	str	r1, [sp, #4]
 80024b4:	5c0a      	ldrb	r2, [r1, r0]
 80024b6:	2100      	movs	r1, #0
 80024b8:	4802      	ldr	r0, [pc, #8]	; (80024c4 <DSI_IO_WriteCmd+0x30>)
 80024ba:	9200      	str	r2, [sp, #0]
 80024bc:	2239      	movs	r2, #57	; 0x39
 80024be:	f003 fc1d 	bl	8005cfc <HAL_DSI_LongWrite>
    }
 80024c2:	e7f3      	b.n	80024ac <DSI_IO_WriteCmd+0x18>
 80024c4:	200128c4 	.word	0x200128c4

080024c8 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 80024c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 80024ca:	2302      	movs	r3, #2
 80024cc:	4a0a      	ldr	r2, [pc, #40]	; (80024f8 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;
 80024ce:	2515      	movs	r5, #21

        HAL_DSI_LongWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 80024d0:	4c0a      	ldr	r4, [pc, #40]	; (80024fc <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 80024d2:	7013      	strb	r3, [r2, #0]
        HAL_DSI_LongWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 80024d4:	2100      	movs	r1, #0
        ScanLineParams[1] = scanline & 0x00FF;
 80024d6:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 80024d8:	4620      	mov	r0, r4
 80024da:	9201      	str	r2, [sp, #4]
 80024dc:	2244      	movs	r2, #68	; 0x44
 80024de:	9200      	str	r2, [sp, #0]
 80024e0:	2239      	movs	r2, #57	; 0x39
 80024e2:	f003 fc0b 	bl	8005cfc <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 80024e6:	2100      	movs	r1, #0
 80024e8:	2335      	movs	r3, #53	; 0x35
 80024ea:	462a      	mov	r2, r5
 80024ec:	9100      	str	r1, [sp, #0]
 80024ee:	4620      	mov	r0, r4
 80024f0:	f003 fbf3 	bl	8005cda <HAL_DSI_ShortWrite>
    }
 80024f4:	b003      	add	sp, #12
 80024f6:	bd30      	pop	{r4, r5, pc}
 80024f8:	200001e0 	.word	0x200001e0
 80024fc:	200128c4 	.word	0x200128c4

08002500 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8002500:	b510      	push	{r4, lr}
 8002502:	4604      	mov	r4, r0
    LCD_ReqTear();
 8002504:	f7ff ffe0 	bl	80024c8 <LCD_ReqTear>
    __HAL_DSI_CLEAR_FLAG(&hdsi, DSI_IT_ER);
 8002508:	4b0f      	ldr	r3, [pc, #60]	; (8002548 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv+0x48>)
 800250a:	2202      	movs	r2, #2
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800250c:	4620      	mov	r0, r4
    __HAL_DSI_CLEAR_FLAG(&hdsi, DSI_IT_ER);
 800250e:	681b      	ldr	r3, [r3, #0]
 8002510:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
    __HAL_DSI_CLEAR_FLAG(&hdsi, DSI_IT_TE);
 8002514:	2201      	movs	r2, #1
 8002516:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
    __HAL_DSI_ENABLE_IT(&hdsi, DSI_IT_TE);
 800251a:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800251e:	f042 0201 	orr.w	r2, r2, #1
 8002522:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
    __HAL_DSI_ENABLE_IT(&hdsi, DSI_IT_ER);
 8002526:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800252a:	f042 0202 	orr.w	r2, r2, #2
 800252e:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
    __HAL_LTDC_ENABLE_IT(&hltdc, (LTDC_IT_LI | LTDC_IT_FU)); /* Enable line and FIFO underrun interrupts */
 8002532:	4b06      	ldr	r3, [pc, #24]	; (800254c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv+0x4c>)
 8002534:	681a      	ldr	r2, [r3, #0]
 8002536:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8002538:	f043 0303 	orr.w	r3, r3, #3
}
 800253c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    __HAL_LTDC_ENABLE_IT(&hltdc, (LTDC_IT_LI | LTDC_IT_FU)); /* Enable line and FIFO underrun interrupts */
 8002540:	6353      	str	r3, [r2, #52]	; 0x34
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8002542:	f000 bc73 	b.w	8002e2c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
 8002546:	bf00      	nop
 8002548:	200128c4 	.word	0x200128c4
 800254c:	200128e4 	.word	0x200128e4

08002550 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8002550:	4b07      	ldr	r3, [pc, #28]	; (8002570 <LCD_SetUpdateRegion+0x20>)
    {
 8002552:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8002554:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8002558:	232a      	movs	r3, #42	; 0x2a
 800255a:	2239      	movs	r2, #57	; 0x39
 800255c:	2100      	movs	r1, #0
 800255e:	9300      	str	r3, [sp, #0]
 8002560:	2304      	movs	r3, #4
 8002562:	9001      	str	r0, [sp, #4]
 8002564:	4803      	ldr	r0, [pc, #12]	; (8002574 <LCD_SetUpdateRegion+0x24>)
 8002566:	f003 fbc9 	bl	8005cfc <HAL_DSI_LongWrite>
    }
 800256a:	b003      	add	sp, #12
 800256c:	f85d fb04 	ldr.w	pc, [sp], #4
 8002570:	20000008 	.word	0x20000008
 8002574:	200128c4 	.word	0x200128c4

08002578 <HAL_DSI_TearingEffectCallback>:
    // {
    //     HAL_DSI_LongWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    // }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8002578:	b570      	push	{r4, r5, r6, lr}
        return instance;
 800257a:	4c15      	ldr	r4, [pc, #84]	; (80025d0 <HAL_DSI_TearingEffectCallback+0x58>)
 800257c:	4606      	mov	r6, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 800257e:	2000      	movs	r0, #0
 8002580:	f7ff fde3 	bl	800214a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8002584:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002586:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 800258a:	3301      	adds	r3, #1
 800258c:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8002590:	f000 f900 	bl	8002794 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8002594:	4b0f      	ldr	r3, [pc, #60]	; (80025d4 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8002596:	6820      	ldr	r0, [r4, #0]
 8002598:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 800259a:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 800259c:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 80025a0:	b123      	cbz	r3, 80025ac <HAL_DSI_TearingEffectCallback+0x34>
 80025a2:	4c0d      	ldr	r4, [pc, #52]	; (80025d8 <HAL_DSI_TearingEffectCallback+0x60>)
 80025a4:	7823      	ldrb	r3, [r4, #0]
 80025a6:	f003 05ff 	and.w	r5, r3, #255	; 0xff
 80025aa:	b123      	cbz	r3, 80025b6 <HAL_DSI_TearingEffectCallback+0x3e>
            HAL_DSI_Refresh(hdsi);
            displayRefreshing = true;
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
 80025ac:	2000      	movs	r0, #0
        }
    }
 80025ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80025b2:	f7ff bdcb 	b.w	800214c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 80025b6:	f009 ff19 	bl	800c3ec <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 80025ba:	4b08      	ldr	r3, [pc, #32]	; (80025dc <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 80025bc:	4628      	mov	r0, r5
            updateRegion = 0;
 80025be:	601d      	str	r5, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 80025c0:	f7ff ffc6 	bl	8002550 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 80025c4:	4630      	mov	r0, r6
 80025c6:	f003 fb78 	bl	8005cba <HAL_DSI_Refresh>
            displayRefreshing = true;
 80025ca:	2301      	movs	r3, #1
 80025cc:	7023      	strb	r3, [r4, #0]
    }
 80025ce:	bd70      	pop	{r4, r5, r6, pc}
 80025d0:	200125b0 	.word	0x200125b0
 80025d4:	20000018 	.word	0x20000018
 80025d8:	200001e2 	.word	0x200001e2
 80025dc:	200001cc 	.word	0x200001cc

080025e0 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 80025e0:	4b30      	ldr	r3, [pc, #192]	; (80026a4 <HAL_DSI_EndOfRefreshCallback+0xc4>)
 80025e2:	4a31      	ldr	r2, [pc, #196]	; (80026a8 <HAL_DSI_EndOfRefreshCallback+0xc8>)
    {
 80025e4:	b570      	push	{r4, r5, r6, lr}
 80025e6:	4605      	mov	r5, r0
        updateRegion++;
 80025e8:	6818      	ldr	r0, [r3, #0]
 80025ea:	4c30      	ldr	r4, [pc, #192]	; (80026ac <HAL_DSI_EndOfRefreshCallback+0xcc>)
 80025ec:	3001      	adds	r0, #1
 80025ee:	6018      	str	r0, [r3, #0]
        if (updateRegion < 4)
 80025f0:	2803      	cmp	r0, #3
 80025f2:	4b2f      	ldr	r3, [pc, #188]	; (80026b0 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 80025f4:	681e      	ldr	r6, [r3, #0]
 80025f6:	dc2a      	bgt.n	800264e <HAL_DSI_EndOfRefreshCallback+0x6e>
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 80025f8:	f8d4 1404 	ldr.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 80025fc:	f44f 73c8 	mov.w	r3, #400	; 0x190
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8002600:	f021 0108 	bic.w	r1, r1, #8
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8002604:	fb03 6300 	mla	r3, r3, r0, r6
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8002608:	f8c4 1404 	str.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 800260c:	6293      	str	r3, [r2, #40]	; 0x28

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
 800260e:	bf14      	ite	ne
 8002610:	23c8      	movne	r3, #200	; 0xc8
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8002612:	23e8      	moveq	r3, #232	; 0xe8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8002614:	4927      	ldr	r1, [pc, #156]	; (80026b4 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8002616:	3302      	adds	r3, #2
 8002618:	041b      	lsls	r3, r3, #16
 800261a:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 800261e:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8002620:	4b25      	ldr	r3, [pc, #148]	; (80026b8 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8002622:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8002624:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8002628:	6053      	str	r3, [r2, #4]
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 800262a:	4b24      	ldr	r3, [pc, #144]	; (80026bc <HAL_DSI_EndOfRefreshCallback+0xdc>)
 800262c:	62d3      	str	r3, [r2, #44]	; 0x2c

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800262e:	2301      	movs	r3, #1
 8002630:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8002632:	f7ff ff8d 	bl	8002550 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8002636:	4a1d      	ldr	r2, [pc, #116]	; (80026ac <HAL_DSI_EndOfRefreshCallback+0xcc>)
            HAL_DSI_Refresh(hdsi);
 8002638:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 800263a:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 800263e:	f043 0308 	orr.w	r3, r3, #8
        //             // Signal to the framework that display update has finished.
        //             HAL::getInstance()->frontPorchEntered();
        //         }
        //     }
        // }
    }
 8002642:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            DSI->WCR |= DSI_WCR_DSIEN;
 8002646:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            HAL_DSI_Refresh(hdsi);
 800264a:	f003 bb36 	b.w	8005cba <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 800264e:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
            LCD_SetUpdateRegion(0);
 8002652:	2000      	movs	r0, #0
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8002654:	491a      	ldr	r1, [pc, #104]	; (80026c0 <HAL_DSI_EndOfRefreshCallback+0xe0>)
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8002656:	f023 0308 	bic.w	r3, r3, #8
 800265a:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 800265e:	4b15      	ldr	r3, [pc, #84]	; (80026b4 <HAL_DSI_EndOfRefreshCallback+0xd4>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8002660:	6296      	str	r6, [r2, #40]	; 0x28
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8002662:	6119      	str	r1, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8002664:	f101 1101 	add.w	r1, r1, #65537	; 0x10001
 8002668:	6159      	str	r1, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 800266a:	4916      	ldr	r1, [pc, #88]	; (80026c4 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 800266c:	6051      	str	r1, [r2, #4]
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 800266e:	4913      	ldr	r1, [pc, #76]	; (80026bc <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8002670:	62d1      	str	r1, [r2, #44]	; 0x2c
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002672:	2201      	movs	r2, #1
 8002674:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8002676:	f7ff ff6b 	bl	8002550 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 800267a:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 800267e:	2000      	movs	r0, #0
            DSI->WCR |= DSI_WCR_DSIEN;
 8002680:	f043 0308 	orr.w	r3, r3, #8
 8002684:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002688:	f7ff fd60 	bl	800214c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 800268c:	4b0e      	ldr	r3, [pc, #56]	; (80026c8 <HAL_DSI_EndOfRefreshCallback+0xe8>)
 800268e:	2200      	movs	r2, #0
 8002690:	701a      	strb	r2, [r3, #0]
        return instance;
 8002692:	4b0e      	ldr	r3, [pc, #56]	; (80026cc <HAL_DSI_EndOfRefreshCallback+0xec>)
 8002694:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8002696:	b120      	cbz	r0, 80026a2 <HAL_DSI_EndOfRefreshCallback+0xc2>
        allowDMATransfers();
 8002698:	6803      	ldr	r3, [r0, #0]
    }
 800269a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800269e:	699b      	ldr	r3, [r3, #24]
 80026a0:	4718      	bx	r3
 80026a2:	bd70      	pop	{r4, r5, r6, pc}
 80026a4:	200001cc 	.word	0x200001cc
 80026a8:	40016884 	.word	0x40016884
 80026ac:	40016c00 	.word	0x40016c00
 80026b0:	200001c8 	.word	0x200001c8
 80026b4:	40016800 	.word	0x40016800
 80026b8:	00ca01e3 	.word	0x00ca01e3
 80026bc:	06800193 	.word	0x06800193
 80026c0:	00ca01e2 	.word	0x00ca01e2
 80026c4:	00ca0003 	.word	0x00ca0003
 80026c8:	200001e2 	.word	0x200001e2
 80026cc:	200125b0 	.word	0x200125b0

080026d0 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 80026d0:	b508      	push	{r3, lr}
 80026d2:	4b05      	ldr	r3, [pc, #20]	; (80026e8 <IdleTaskHook+0x18>)
        if ((int)p) //idle task sched out
 80026d4:	4601      	mov	r1, r0
 80026d6:	681b      	ldr	r3, [r3, #0]
 80026d8:	b100      	cbz	r0, 80026dc <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 80026da:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 80026dc:	4618      	mov	r0, r3
 80026de:	f009 fe9f 	bl	800c420 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 80026e2:	2001      	movs	r0, #1
 80026e4:	bd08      	pop	{r3, pc}
 80026e6:	bf00      	nop
 80026e8:	200125b0 	.word	0x200125b0

080026ec <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 80026ec:	4b05      	ldr	r3, [pc, #20]	; (8002704 <_GLOBAL__sub_I_displayRefreshing+0x18>)
 80026ee:	2200      	movs	r2, #0
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 80026f0:	4805      	ldr	r0, [pc, #20]	; (8002708 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 80026f2:	605a      	str	r2, [r3, #4]
 80026f4:	609a      	str	r2, [r3, #8]
 80026f6:	4a05      	ldr	r2, [pc, #20]	; (800270c <_GLOBAL__sub_I_displayRefreshing+0x20>)
 80026f8:	601a      	str	r2, [r3, #0]
 80026fa:	4b05      	ldr	r3, [pc, #20]	; (8002710 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 80026fc:	6003      	str	r3, [r0, #0]
        init();
 80026fe:	f7ff bc0d 	b.w	8001f1c <_ZN8touchgfx10KeySampler4initEv>
 8002702:	bf00      	nop
 8002704:	200001d0 	.word	0x200001d0
 8002708:	200001dc 	.word	0x200001dc
 800270c:	08021e98 	.word	0x08021e98
 8002710:	08021ec0 	.word	0x08021ec0

08002714 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002714:	2101      	movs	r1, #1
 8002716:	2200      	movs	r2, #0
{
 8002718:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800271a:	4608      	mov	r0, r1
 800271c:	f006 fd1e 	bl	800915c <osSemaphoreNew>
 8002720:	4b0a      	ldr	r3, [pc, #40]	; (800274c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8002722:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002724:	b928      	cbnz	r0, 8002732 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8002726:	4b0a      	ldr	r3, [pc, #40]	; (8002750 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002728:	2125      	movs	r1, #37	; 0x25
 800272a:	4a0a      	ldr	r2, [pc, #40]	; (8002754 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800272c:	480a      	ldr	r0, [pc, #40]	; (8002758 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800272e:	f01e fb1f 	bl	8020d70 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8002732:	2200      	movs	r2, #0
 8002734:	2104      	movs	r1, #4
 8002736:	2001      	movs	r0, #1
 8002738:	f006 fdda 	bl	80092f0 <osMessageQueueNew>
 800273c:	4b07      	ldr	r3, [pc, #28]	; (800275c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800273e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002740:	b918      	cbnz	r0, 800274a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002742:	4b07      	ldr	r3, [pc, #28]	; (8002760 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002744:	2129      	movs	r1, #41	; 0x29
 8002746:	4a03      	ldr	r2, [pc, #12]	; (8002754 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002748:	e7f0      	b.n	800272c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800274a:	bd08      	pop	{r3, pc}
 800274c:	200001e8 	.word	0x200001e8
 8002750:	080220fa 	.word	0x080220fa
 8002754:	080221cd 	.word	0x080221cd
 8002758:	08022143 	.word	0x08022143
 800275c:	200001e4 	.word	0x200001e4
 8002760:	0802218b 	.word	0x0802218b

08002764 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002764:	4b02      	ldr	r3, [pc, #8]	; (8002770 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002766:	f04f 31ff 	mov.w	r1, #4294967295
 800276a:	6818      	ldr	r0, [r3, #0]
 800276c:	f006 bd4c 	b.w	8009208 <osSemaphoreAcquire>
 8002770:	200001e8 	.word	0x200001e8

08002774 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002774:	4b01      	ldr	r3, [pc, #4]	; (800277c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002776:	6818      	ldr	r0, [r3, #0]
 8002778:	f006 bd82 	b.w	8009280 <osSemaphoreRelease>
 800277c:	200001e8 	.word	0x200001e8

08002780 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002780:	4b02      	ldr	r3, [pc, #8]	; (800278c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002782:	2100      	movs	r1, #0
 8002784:	6818      	ldr	r0, [r3, #0]
 8002786:	f006 bd3f 	b.w	8009208 <osSemaphoreAcquire>
 800278a:	bf00      	nop
 800278c:	200001e8 	.word	0x200001e8

08002790 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002790:	f7ff bff0 	b.w	8002774 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002794 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002794:	2300      	movs	r3, #0
 8002796:	4803      	ldr	r0, [pc, #12]	; (80027a4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002798:	4903      	ldr	r1, [pc, #12]	; (80027a8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800279a:	461a      	mov	r2, r3
 800279c:	6800      	ldr	r0, [r0, #0]
 800279e:	f006 bded 	b.w	800937c <osMessageQueuePut>
 80027a2:	bf00      	nop
 80027a4:	200001e4 	.word	0x200001e4
 80027a8:	2000001c 	.word	0x2000001c

080027ac <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80027ac:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80027ae:	2300      	movs	r3, #0
 80027b0:	4c07      	ldr	r4, [pc, #28]	; (80027d0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80027b2:	a901      	add	r1, sp, #4
 80027b4:	461a      	mov	r2, r3
 80027b6:	6820      	ldr	r0, [r4, #0]
 80027b8:	f006 fe22 	bl	8009400 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80027bc:	f04f 33ff 	mov.w	r3, #4294967295
 80027c0:	2200      	movs	r2, #0
 80027c2:	a901      	add	r1, sp, #4
 80027c4:	6820      	ldr	r0, [r4, #0]
 80027c6:	f006 fe1b 	bl	8009400 <osMessageQueueGet>
}
 80027ca:	b002      	add	sp, #8
 80027cc:	bd10      	pop	{r4, pc}
 80027ce:	bf00      	nop
 80027d0:	200001e4 	.word	0x200001e4

080027d4 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80027d4:	6803      	ldr	r3, [r0, #0]
 80027d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80027d8:	4718      	bx	r3

080027da <_ZN10STM32F7DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80027da:	2001      	movs	r0, #1
 80027dc:	4770      	bx	lr

080027de <_ZN10STM32F7DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80027de:	6803      	ldr	r3, [r0, #0]
 80027e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80027e2:	4718      	bx	r3

080027e4 <_ZN10STM32F7DMA10initializeEv>:
}

void STM32F7DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80027e4:	4b0d      	ldr	r3, [pc, #52]	; (800281c <_ZN10STM32F7DMA10initializeEv+0x38>)
{
 80027e6:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80027e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027ea:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80027ee:	631a      	str	r2, [r3, #48]	; 0x30
 80027f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027f2:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80027f6:	9201      	str	r2, [sp, #4]
 80027f8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80027fa:	691a      	ldr	r2, [r3, #16]
 80027fc:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8002800:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8002802:	691a      	ldr	r2, [r3, #16]
 8002804:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8002808:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800280a:	4b05      	ldr	r3, [pc, #20]	; (8002820 <_ZN10STM32F7DMA10initializeEv+0x3c>)
 800280c:	4a05      	ldr	r2, [pc, #20]	; (8002824 <_ZN10STM32F7DMA10initializeEv+0x40>)
 800280e:	619a      	str	r2, [r3, #24]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002810:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8002814:	4b04      	ldr	r3, [pc, #16]	; (8002828 <_ZN10STM32F7DMA10initializeEv+0x44>)
 8002816:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8002818:	b002      	add	sp, #8
 800281a:	4770      	bx	lr
 800281c:	40023800 	.word	0x40023800
 8002820:	20016af0 	.word	0x20016af0
 8002824:	08002835 	.word	0x08002835
 8002828:	e000e100 	.word	0xe000e100

0800282c <_ZN10STM32F7DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 800282c:	f240 10ef 	movw	r0, #495	; 0x1ef
 8002830:	4770      	bx	lr
	...

08002834 <DMA2D_XferCpltCallback>:
    HAL::getInstance()->signalDMAInterrupt();
 8002834:	4b02      	ldr	r3, [pc, #8]	; (8002840 <DMA2D_XferCpltCallback+0xc>)
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 800283a:	6803      	ldr	r3, [r0, #0]
 800283c:	695b      	ldr	r3, [r3, #20]
 800283e:	4718      	bx	r3
 8002840:	200125b0 	.word	0x200125b0

08002844 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.1>:
inline uint32_t STM32F7DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8002844:	b508      	push	{r3, lr}
    switch (format)
 8002846:	280b      	cmp	r0, #11
 8002848:	d80b      	bhi.n	8002862 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.1+0x1e>
 800284a:	e8df f000 	tbb	[pc, r0]
 800284e:	0612      	.short	0x0612
 8002850:	0a0a0a10 	.word	0x0a0a0a10
 8002854:	0808080a 	.word	0x0808080a
 8002858:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB888;
 800285a:	2001      	movs	r0, #1
}
 800285c:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 800285e:	2005      	movs	r0, #5
 8002860:	e7fc      	b.n	800285c <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.1+0x18>
        assert(0 && "Unsupported Format!");
 8002862:	4b05      	ldr	r3, [pc, #20]	; (8002878 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.1+0x34>)
 8002864:	2165      	movs	r1, #101	; 0x65
 8002866:	4a05      	ldr	r2, [pc, #20]	; (800287c <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.1+0x38>)
 8002868:	4805      	ldr	r0, [pc, #20]	; (8002880 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.1+0x3c>)
 800286a:	f01e fa81 	bl	8020d70 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800286e:	2000      	movs	r0, #0
 8002870:	e7f4      	b.n	800285c <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.1+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8002872:	2002      	movs	r0, #2
 8002874:	e7f2      	b.n	800285c <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.1+0x18>
 8002876:	bf00      	nop
 8002878:	08022216 	.word	0x08022216
 800287c:	08022308 	.word	0x08022308
 8002880:	08022231 	.word	0x08022231

08002884 <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.3>:
inline uint32_t STM32F7DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8002884:	b508      	push	{r3, lr}
    switch (format)
 8002886:	280a      	cmp	r0, #10
 8002888:	d809      	bhi.n	800289e <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.3+0x1a>
 800288a:	e8df f000 	tbb	[pc, r0]
 800288e:	0610      	.short	0x0610
 8002890:	0808080e 	.word	0x0808080e
 8002894:	06060608 	.word	0x06060608
 8002898:	06          	.byte	0x06
 8002899:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
 800289a:	2001      	movs	r0, #1
}
 800289c:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 800289e:	4b05      	ldr	r3, [pc, #20]	; (80028b4 <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.3+0x30>)
 80028a0:	2186      	movs	r1, #134	; 0x86
 80028a2:	4a05      	ldr	r2, [pc, #20]	; (80028b8 <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.3+0x34>)
 80028a4:	4805      	ldr	r0, [pc, #20]	; (80028bc <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.3+0x38>)
 80028a6:	f01e fa63 	bl	8020d70 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 80028aa:	2000      	movs	r0, #0
 80028ac:	e7f6      	b.n	800289c <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.3+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80028ae:	2002      	movs	r0, #2
 80028b0:	e7f4      	b.n	800289c <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.3+0x18>
 80028b2:	bf00      	nop
 80028b4:	08022216 	.word	0x08022216
 80028b8:	08022354 	.word	0x08022354
 80028bc:	08022231 	.word	0x08022231

080028c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32F7DMA::setupDataCopy(const BlitOp& blitOp)
{
 80028c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80028c4:	7f4e      	ldrb	r6, [r1, #29]
{
 80028c6:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80028c8:	4630      	mov	r0, r6
 80028ca:	f7ff ffbb 	bl	8002844 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.1>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80028ce:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80028d2:	4607      	mov	r7, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80028d4:	4640      	mov	r0, r8
 80028d6:	f7ff ffb5 	bl	8002844 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.1>
 80028da:	4605      	mov	r5, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80028dc:	4640      	mov	r0, r8
 80028de:	f7ff ffd1 	bl	8002884 <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.3>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80028e2:	8a21      	ldrh	r1, [r4, #16]
 80028e4:	8ae2      	ldrh	r2, [r4, #22]
 80028e6:	4b52      	ldr	r3, [pc, #328]	; (8002a30 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x170>)
 80028e8:	1a52      	subs	r2, r2, r1
 80028ea:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80028ec:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 80028ee:	8aa2      	ldrh	r2, [r4, #20]
 80028f0:	1a52      	subs	r2, r2, r1
 80028f2:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80028f4:	8a62      	ldrh	r2, [r4, #18]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80028f6:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80028f8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80028fc:	6861      	ldr	r1, [r4, #4]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80028fe:	645a      	str	r2, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002900:	68e2      	ldr	r2, [r4, #12]
 8002902:	63da      	str	r2, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8002904:	60d9      	str	r1, [r3, #12]
 8002906:	4619      	mov	r1, r3

    switch (blitOp.operation)
 8002908:	f8d4 c000 	ldr.w	ip, [r4]
 800290c:	7f20      	ldrb	r0, [r4, #28]
 800290e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8002912:	ea4f 6000 	mov.w	r0, r0, lsl #24
 8002916:	d07b      	beq.n	8002a10 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>
 8002918:	d825      	bhi.n	8002966 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 800291a:	f1bc 0f04 	cmp.w	ip, #4
 800291e:	d044      	beq.n	80029aa <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
 8002920:	f1bc 0f20 	cmp.w	ip, #32
 8002924:	d074      	beq.n	8002a10 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002926:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000

        if (blitOp.srcFormat == Bitmap::L8)
 800292a:	2e0b      	cmp	r6, #11
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800292c:	ea40 0007 	orr.w	r0, r0, r7
 8002930:	61c8      	str	r0, [r1, #28]
        if (blitOp.srcFormat == Bitmap::L8)
 8002932:	d17a      	bne.n	8002a2a <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16a>
        {
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8002934:	68a2      	ldr	r2, [r4, #8]

            /* Write foreground CLUT memory address */
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8002936:	1d13      	adds	r3, r2, #4

            /* Write foreground CLUT size and CLUT color mode */
            MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8002938:	8852      	ldrh	r2, [r2, #2]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 800293a:	62cb      	str	r3, [r1, #44]	; 0x2c
            MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800293c:	3a01      	subs	r2, #1
 800293e:	69cb      	ldr	r3, [r1, #28]
 8002940:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002944:	f023 0310 	bic.w	r3, r3, #16
 8002948:	f043 0310 	orr.w	r3, r3, #16
 800294c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8002950:	61cb      	str	r3, [r1, #28]

            /* Enable the CLUT loading for the foreground */
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8002952:	69cb      	ldr	r3, [r1, #28]
 8002954:	f043 0320 	orr.w	r3, r3, #32
 8002958:	61cb      	str	r3, [r1, #28]

            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 800295a:	4b35      	ldr	r3, [pc, #212]	; (8002a30 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x170>)
 800295c:	69da      	ldr	r2, [r3, #28]
 800295e:	0692      	lsls	r2, r2, #26
 8002960:	d55f      	bpl.n	8002a22 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
            {
                __NOP();
 8002962:	bf00      	nop
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8002964:	e7fa      	b.n	800295c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
    switch (blitOp.operation)
 8002966:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 800296a:	d007      	beq.n	800297c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 800296c:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8002970:	d1d9      	bne.n	8002926 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x66>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002972:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8002976:	f040 0009 	orr.w	r0, r0, #9
 800297a:	e003      	b.n	8002984 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc4>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800297c:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8002980:	f040 000a 	orr.w	r0, r0, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002984:	61d8      	str	r0, [r3, #28]
        return color;
 8002986:	69a0      	ldr	r0, [r4, #24]
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8002988:	0201      	lsls	r1, r0, #8
 800298a:	0144      	lsls	r4, r0, #5
 800298c:	f401 0178 	and.w	r1, r1, #16252928	; 0xf80000
 8002990:	00c0      	lsls	r0, r0, #3
 8002992:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8002996:	b2c0      	uxtb	r0, r0
 8002998:	4321      	orrs	r1, r4
 800299a:	4301      	orrs	r1, r0
 800299c:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800299e:	625d      	str	r5, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80029a0:	615a      	str	r2, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 80029a2:	4a24      	ldr	r2, [pc, #144]	; (8002a34 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
            }
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
            /* Start DMA2D */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 80029a4:	601a      	str	r2, [r3, #0]
            /* Start DMA2D */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
        }
        break;
    }
}
 80029a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80029aa:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
        if (blitOp.srcFormat == Bitmap::L8)
 80029ae:	2e0b      	cmp	r6, #11
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80029b0:	ea40 0007 	orr.w	r0, r0, r7
 80029b4:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80029b6:	625d      	str	r5, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80029b8:	615a      	str	r2, [r3, #20]
        if (blitOp.srcFormat == Bitmap::L8)
 80029ba:	d127      	bne.n	8002a0c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 80029bc:	68a1      	ldr	r1, [r4, #8]
 80029be:	481e      	ldr	r0, [pc, #120]	; (8002a38 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 80029c0:	1d0a      	adds	r2, r1, #4
 80029c2:	62da      	str	r2, [r3, #44]	; 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
 80029c4:	780a      	ldrb	r2, [r1, #0]
 80029c6:	b13a      	cbz	r2, 80029d8 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x118>
 80029c8:	2a01      	cmp	r2, #1
 80029ca:	d016      	beq.n	80029fa <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13a>
                assert(0 && "Unsupported format");
 80029cc:	4b1b      	ldr	r3, [pc, #108]	; (8002a3c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
 80029ce:	21fc      	movs	r1, #252	; 0xfc
 80029d0:	4a1b      	ldr	r2, [pc, #108]	; (8002a40 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x180>)
 80029d2:	481c      	ldr	r0, [pc, #112]	; (8002a44 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>)
 80029d4:	f01e f9cc 	bl	8020d70 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80029d8:	69da      	ldr	r2, [r3, #28]
 80029da:	8849      	ldrh	r1, [r1, #2]
 80029dc:	4002      	ands	r2, r0
 80029de:	3901      	subs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80029e0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80029e4:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80029e6:	4b12      	ldr	r3, [pc, #72]	; (8002a30 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x170>)
 80029e8:	69da      	ldr	r2, [r3, #28]
 80029ea:	f042 0220 	orr.w	r2, r2, #32
 80029ee:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80029f0:	69da      	ldr	r2, [r3, #28]
 80029f2:	0691      	lsls	r1, r2, #26
 80029f4:	d508      	bpl.n	8002a08 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
                __NOP();
 80029f6:	bf00      	nop
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80029f8:	e7fa      	b.n	80029f0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80029fa:	69da      	ldr	r2, [r3, #28]
 80029fc:	8849      	ldrh	r1, [r1, #2]
 80029fe:	4002      	ands	r2, r0
 8002a00:	3901      	subs	r1, #1
 8002a02:	f042 0210 	orr.w	r2, r2, #16
 8002a06:	e7eb      	b.n	80029e0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8002a08:	2210      	movs	r2, #16
 8002a0a:	609a      	str	r2, [r3, #8]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8002a0c:	4b08      	ldr	r3, [pc, #32]	; (8002a30 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x170>)
 8002a0e:	e7c8      	b.n	80029a2 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe2>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002a10:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8002a14:	4b07      	ldr	r3, [pc, #28]	; (8002a34 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002a16:	4338      	orrs	r0, r7
 8002a18:	61c8      	str	r0, [r1, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002a1a:	624d      	str	r5, [r1, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002a1c:	614a      	str	r2, [r1, #20]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8002a1e:	600b      	str	r3, [r1, #0]
}
 8002a20:	e7c1      	b.n	80029a6 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8002a22:	2210      	movs	r2, #16
 8002a24:	609a      	str	r2, [r3, #8]
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8002a26:	4a08      	ldr	r2, [pc, #32]	; (8002a48 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8002a28:	e7bc      	b.n	80029a4 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe4>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8002a2a:	f240 2301 	movw	r3, #513	; 0x201
 8002a2e:	e7f6      	b.n	8002a1e <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15e>
 8002a30:	4002b000 	.word	0x4002b000
 8002a34:	00020201 	.word	0x00020201
 8002a38:	ffff00ef 	.word	0xffff00ef
 8002a3c:	080221fc 	.word	0x080221fc
 8002a40:	080222c8 	.word	0x080222c8
 8002a44:	08022231 	.word	0x08022231
 8002a48:	00010201 	.word	0x00010201

08002a4c <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32F7DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32F7DMA::setupDataFill(const BlitOp& blitOp)
{
 8002a4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002a4e:	7f8e      	ldrb	r6, [r1, #30]
{
 8002a50:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002a52:	4630      	mov	r0, r6
 8002a54:	f7ff ff16 	bl	8002884 <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.3>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002a58:	8a27      	ldrh	r7, [r4, #16]
 8002a5a:	8a62      	ldrh	r2, [r4, #18]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002a5c:	8ae1      	ldrh	r1, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8002a5e:	4b1e      	ldr	r3, [pc, #120]	; (8002ad8 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002a60:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002a64:	68e5      	ldr	r5, [r4, #12]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002a66:	1bc9      	subs	r1, r1, r7
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8002a68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002a6a:	645a      	str	r2, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002a6c:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002a6e:	6419      	str	r1, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8002a70:	6827      	ldr	r7, [r4, #0]
 8002a72:	69a2      	ldr	r2, [r4, #24]
 8002a74:	2f08      	cmp	r7, #8
 8002a76:	d119      	bne.n	8002aac <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x60>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002a78:	6199      	str	r1, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002a7a:	6119      	str	r1, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002a7c:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3)) & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
 8002a7e:	0150      	lsls	r0, r2, #5
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8002a80:	7f21      	ldrb	r1, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3)) & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
 8002a82:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8002a86:	0609      	lsls	r1, r1, #24
 8002a88:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 8002a8c:	f041 0109 	orr.w	r1, r1, #9
 8002a90:	61d9      	str	r1, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3)) & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
 8002a92:	0211      	lsls	r1, r2, #8
 8002a94:	00d2      	lsls	r2, r2, #3
 8002a96:	f401 0178 	and.w	r1, r1, #16252928	; 0xf80000
 8002a9a:	b2d2      	uxtb	r2, r2
 8002a9c:	4301      	orrs	r1, r0
 8002a9e:	430a      	orrs	r2, r1
 8002aa0:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8002aa2:	4a0e      	ldr	r2, [pc, #56]	; (8002adc <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002aa4:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002aa6:	60dd      	str	r5, [r3, #12]
            // set color
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
        }

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002aa8:	601a      	str	r2, [r3, #0]
    }
}
 8002aaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8002aac:	2100      	movs	r1, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002aae:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8002ab0:	6119      	str	r1, [r3, #16]
        if (blitOp.dstFormat == Bitmap::RGB565)
 8002ab2:	b91e      	cbnz	r6, 8002abc <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8002ab4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002ab6:	4b08      	ldr	r3, [pc, #32]	; (8002ad8 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
 8002ab8:	4a09      	ldr	r2, [pc, #36]	; (8002ae0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
 8002aba:	e7f5      	b.n	8002aa8 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x5c>
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8002abc:	0210      	lsls	r0, r2, #8
 8002abe:	0151      	lsls	r1, r2, #5
 8002ac0:	f400 0078 	and.w	r0, r0, #16252928	; 0xf80000
 8002ac4:	00d2      	lsls	r2, r2, #3
 8002ac6:	f401 417c 	and.w	r1, r1, #64512	; 0xfc00
 8002aca:	b2d2      	uxtb	r2, r2
 8002acc:	4308      	orrs	r0, r1
 8002ace:	7f21      	ldrb	r1, [r4, #28]
 8002ad0:	4302      	orrs	r2, r0
 8002ad2:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8002ad6:	e7ed      	b.n	8002ab4 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>
 8002ad8:	4002b000 	.word	0x4002b000
 8002adc:	00020201 	.word	0x00020201
 8002ae0:	00030201 	.word	0x00030201

08002ae4 <_ZN10STM32F7DMAD1Ev>:
STM32F7DMA::~STM32F7DMA()
 8002ae4:	4b05      	ldr	r3, [pc, #20]	; (8002afc <_ZN10STM32F7DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002ae6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8002aea:	6003      	str	r3, [r0, #0]
 8002aec:	4b04      	ldr	r3, [pc, #16]	; (8002b00 <_ZN10STM32F7DMAD1Ev+0x1c>)
 8002aee:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002af2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002af6:	f3bf 8f6f 	isb	sy
}
 8002afa:	4770      	bx	lr
 8002afc:	08022280 	.word	0x08022280
 8002b00:	e000e100 	.word	0xe000e100

08002b04 <_ZN10STM32F7DMAD0Ev>:
STM32F7DMA::~STM32F7DMA()
 8002b04:	b510      	push	{r4, lr}
 8002b06:	4604      	mov	r4, r0
}
 8002b08:	f7ff ffec 	bl	8002ae4 <_ZN10STM32F7DMAD1Ev>
 8002b0c:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8002b10:	4620      	mov	r0, r4
 8002b12:	f01c fda1 	bl	801f658 <_ZdlPvj>
 8002b16:	4620      	mov	r0, r4
 8002b18:	bd10      	pop	{r4, pc}
	...

08002b1c <_ZN10STM32F7DMAC1Ev>:
STM32F7DMA::STM32F7DMA()
 8002b1c:	b570      	push	{r4, r5, r6, lr}
 8002b1e:	4605      	mov	r5, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8002b20:	4b0a      	ldr	r3, [pc, #40]	; (8002b4c <_ZN10STM32F7DMAC1Ev+0x30>)
 8002b22:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002b24:	2600      	movs	r6, #0
 8002b26:	462c      	mov	r4, r5
 8002b28:	2260      	movs	r2, #96	; 0x60
 8002b2a:	6068      	str	r0, [r5, #4]
 8002b2c:	722e      	strb	r6, [r5, #8]
 8002b2e:	726e      	strb	r6, [r5, #9]
 8002b30:	f844 3b20 	str.w	r3, [r4], #32
 8002b34:	4621      	mov	r1, r4
 8002b36:	f009 fdd5 	bl	800c6e4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8002b3a:	f505 6342 	add.w	r3, r5, #3104	; 0xc20
        : color(0)
 8002b3e:	61a6      	str	r6, [r4, #24]
 8002b40:	3420      	adds	r4, #32
 8002b42:	42a3      	cmp	r3, r4
 8002b44:	d1fb      	bne.n	8002b3e <_ZN10STM32F7DMAC1Ev+0x22>
}
 8002b46:	4628      	mov	r0, r5
 8002b48:	bd70      	pop	{r4, r5, r6, pc}
 8002b4a:	bf00      	nop
 8002b4c:	08022280 	.word	0x08022280

08002b50 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002b50:	2001      	movs	r0, #1
 8002b52:	4770      	bx	lr

08002b54 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002b54:	200c      	movs	r0, #12
 8002b56:	4770      	bx	lr

08002b58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002b58:	230c      	movs	r3, #12
 8002b5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002b5e:	3008      	adds	r0, #8
 8002b60:	4770      	bx	lr

08002b62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002b62:	230c      	movs	r3, #12
 8002b64:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002b68:	3008      	adds	r0, #8
 8002b6a:	4770      	bx	lr

08002b6c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002b6c:	2001      	movs	r0, #1
 8002b6e:	4770      	bx	lr

08002b70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002b70:	f44f 60df 	mov.w	r0, #1784	; 0x6f8
 8002b74:	4770      	bx	lr

08002b76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002b76:	f44f 63df 	mov.w	r3, #1784	; 0x6f8
 8002b7a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002b7e:	3008      	adds	r0, #8
 8002b80:	4770      	bx	lr

08002b82 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002b82:	f44f 63df 	mov.w	r3, #1784	; 0x6f8
 8002b86:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002b8a:	3008      	adds	r0, #8
 8002b8c:	4770      	bx	lr

08002b8e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002b8e:	2001      	movs	r0, #1
 8002b90:	4770      	bx	lr

08002b92 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002b92:	2010      	movs	r0, #16
 8002b94:	4770      	bx	lr

08002b96 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002b96:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002b9a:	3008      	adds	r0, #8
 8002b9c:	4770      	bx	lr

08002b9e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002b9e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002ba2:	3008      	adds	r0, #8
 8002ba4:	4770      	bx	lr

08002ba6 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMainScreenNoTransition();
 8002ba6:	4608      	mov	r0, r1
 8002ba8:	f000 ba52 	b.w	8003050 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>

08002bac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002bac:	4b03      	ldr	r3, [pc, #12]	; (8002bbc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002bae:	b510      	push	{r4, lr}
 8002bb0:	4604      	mov	r4, r0
 8002bb2:	6003      	str	r3, [r0, #0]
 8002bb4:	f008 fcaa 	bl	800b50c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002bb8:	4620      	mov	r0, r4
 8002bba:	bd10      	pop	{r4, pc}
 8002bbc:	08022414 	.word	0x08022414

08002bc0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002bc0:	b510      	push	{r4, lr}
 8002bc2:	4604      	mov	r4, r0
 8002bc4:	f7ff fff2 	bl	8002bac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002bc8:	2114      	movs	r1, #20
 8002bca:	4620      	mov	r0, r4
 8002bcc:	f01c fd44 	bl	801f658 <_ZdlPvj>
 8002bd0:	4620      	mov	r0, r4
 8002bd2:	bd10      	pop	{r4, pc}

08002bd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002bd4:	4b03      	ldr	r3, [pc, #12]	; (8002be4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002bd6:	b510      	push	{r4, lr}
 8002bd8:	4604      	mov	r4, r0
 8002bda:	6003      	str	r3, [r0, #0]
 8002bdc:	f008 fc96 	bl	800b50c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002be0:	4620      	mov	r0, r4
 8002be2:	bd10      	pop	{r4, pc}
 8002be4:	080223e0 	.word	0x080223e0

08002be8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002be8:	b510      	push	{r4, lr}
 8002bea:	4604      	mov	r4, r0
 8002bec:	f7ff fff2 	bl	8002bd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002bf0:	f44f 61e0 	mov.w	r1, #1792	; 0x700
 8002bf4:	4620      	mov	r0, r4
 8002bf6:	f01c fd2f 	bl	801f658 <_ZdlPvj>
 8002bfa:	4620      	mov	r0, r4
 8002bfc:	bd10      	pop	{r4, pc}
	...

08002c00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002c00:	4b03      	ldr	r3, [pc, #12]	; (8002c10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002c02:	b510      	push	{r4, lr}
 8002c04:	4604      	mov	r4, r0
 8002c06:	6003      	str	r3, [r0, #0]
 8002c08:	f008 fc80 	bl	800b50c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002c0c:	4620      	mov	r0, r4
 8002c0e:	bd10      	pop	{r4, pc}
 8002c10:	080223ac 	.word	0x080223ac

08002c14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002c14:	b510      	push	{r4, lr}
 8002c16:	4604      	mov	r4, r0
 8002c18:	f7ff fff2 	bl	8002c00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002c1c:	2118      	movs	r1, #24
 8002c1e:	4620      	mov	r0, r4
 8002c20:	f01c fd1a 	bl	801f658 <_ZdlPvj>
 8002c24:	4620      	mov	r0, r4
 8002c26:	bd10      	pop	{r4, pc}

08002c28 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002c28:	4b08      	ldr	r3, [pc, #32]	; (8002c4c <_ZN12FrontendHeapD1Ev+0x24>)
 8002c2a:	b510      	push	{r4, lr}
 8002c2c:	4604      	mov	r4, r0
 8002c2e:	6003      	str	r3, [r0, #0]
 8002c30:	f200 702c 	addw	r0, r0, #1836	; 0x72c
 8002c34:	f7ff ffba 	bl	8002bac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002c38:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002c3c:	f7ff ffca 	bl	8002bd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002c40:	f104 0014 	add.w	r0, r4, #20
 8002c44:	f7ff ffdc 	bl	8002c00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002c48:	4620      	mov	r0, r4
 8002c4a:	bd10      	pop	{r4, pc}
 8002c4c:	08022448 	.word	0x08022448

08002c50 <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002c50:	b508      	push	{r3, lr}
 8002c52:	4802      	ldr	r0, [pc, #8]	; (8002c5c <__tcf_0+0xc>)
 8002c54:	f7ff ffe8 	bl	8002c28 <_ZN12FrontendHeapD1Ev>
 8002c58:	bd08      	pop	{r3, pc}
 8002c5a:	bf00      	nop
 8002c5c:	200001f0 	.word	0x200001f0

08002c60 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002c60:	b510      	push	{r4, lr}
 8002c62:	4604      	mov	r4, r0
 8002c64:	f7ff ffe0 	bl	8002c28 <_ZN12FrontendHeapD1Ev>
 8002c68:	f640 019c 	movw	r1, #2204	; 0x89c
 8002c6c:	4620      	mov	r0, r4
 8002c6e:	f01c fcf3 	bl	801f658 <_ZdlPvj>
 8002c72:	4620      	mov	r0, r4
 8002c74:	bd10      	pop	{r4, pc}
	...

08002c78 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 8002c78:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002c7c:	f000 f924 	bl	8002ec8 <_ZN14BitmapDatabase11getInstanceEv>
 8002c80:	2400      	movs	r4, #0
 8002c82:	4605      	mov	r5, r0
 8002c84:	f000 f924 	bl	8002ed0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002c88:	4623      	mov	r3, r4
 8002c8a:	4601      	mov	r1, r0
 8002c8c:	4622      	mov	r2, r4
 8002c8e:	4628      	mov	r0, r5
 8002c90:	9400      	str	r4, [sp, #0]
 8002c92:	f010 fde7 	bl	8013864 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002c96:	4b25      	ldr	r3, [pc, #148]	; (8002d2c <touchgfx_init+0xb4>)
 8002c98:	4a25      	ldr	r2, [pc, #148]	; (8002d30 <touchgfx_init+0xb8>)
  TypedText::registerTexts(&texts);
  Texts::setLanguage(0);
 8002c9a:	4620      	mov	r0, r4
        static FrontendHeap instance;
 8002c9c:	4d25      	ldr	r5, [pc, #148]	; (8002d34 <touchgfx_init+0xbc>)
 8002c9e:	601a      	str	r2, [r3, #0]
 8002ca0:	f000 ffc0 	bl	8003c24 <_ZN8touchgfx5Texts11setLanguageEt>

  FontManager::setFontProvider(&fontProvider);
 8002ca4:	4824      	ldr	r0, [pc, #144]	; (8002d38 <touchgfx_init+0xc0>)
 8002ca6:	f010 fd1f 	bl	80136e8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002caa:	782b      	ldrb	r3, [r5, #0]
 8002cac:	f3bf 8f5b 	dmb	ish
 8002cb0:	07db      	lsls	r3, r3, #31
 8002cb2:	d435      	bmi.n	8002d20 <touchgfx_init+0xa8>
 8002cb4:	4628      	mov	r0, r5
 8002cb6:	f01c fce2 	bl	801f67e <__cxa_guard_acquire>
 8002cba:	b388      	cbz	r0, 8002d20 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8002cbc:	4c1f      	ldr	r4, [pc, #124]	; (8002d3c <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
        app(model, *this)
 8002cbe:	4b20      	ldr	r3, [pc, #128]	; (8002d40 <touchgfx_init+0xc8>)
 8002cc0:	f204 7644 	addw	r6, r4, #1860	; 0x744
 8002cc4:	f104 0014 	add.w	r0, r4, #20
 8002cc8:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8002ccc:	f204 772c 	addw	r7, r4, #1836	; 0x72c
 8002cd0:	6060      	str	r0, [r4, #4]
 8002cd2:	f8c4 8008 	str.w	r8, [r4, #8]
 8002cd6:	60e7      	str	r7, [r4, #12]
 8002cd8:	6126      	str	r6, [r4, #16]
 8002cda:	6023      	str	r3, [r4, #0]
 8002cdc:	f008 fc18 	bl	800b510 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002ce0:	4b18      	ldr	r3, [pc, #96]	; (8002d44 <touchgfx_init+0xcc>)
 8002ce2:	4640      	mov	r0, r8
 8002ce4:	6163      	str	r3, [r4, #20]
 8002ce6:	f008 fc13 	bl	800b510 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002cea:	4b17      	ldr	r3, [pc, #92]	; (8002d48 <touchgfx_init+0xd0>)
 8002cec:	4638      	mov	r0, r7
 8002cee:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002cf0:	f008 fc0e 	bl	800b510 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002cf4:	4b15      	ldr	r3, [pc, #84]	; (8002d4c <touchgfx_init+0xd4>)
 8002cf6:	f504 60e8 	add.w	r0, r4, #1856	; 0x740
 8002cfa:	f8c4 372c 	str.w	r3, [r4, #1836]	; 0x72c
 8002cfe:	f001 f859 	bl	8003db4 <_ZN5ModelC1Ev>
 8002d02:	4622      	mov	r2, r4
 8002d04:	f504 61e8 	add.w	r1, r4, #1856	; 0x740
 8002d08:	4630      	mov	r0, r6
 8002d0a:	f000 fffb 	bl	8003d04 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002d0e:	4630      	mov	r0, r6
 8002d10:	f000 f99e 	bl	8003050 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
        static FrontendHeap instance;
 8002d14:	4628      	mov	r0, r5
 8002d16:	f01c fcbe 	bl	801f696 <__cxa_guard_release>
 8002d1a:	480d      	ldr	r0, [pc, #52]	; (8002d50 <touchgfx_init+0xd8>)
 8002d1c:	f01e f846 	bl	8020dac <atexit>
  (void)heap;

  /*
   * Initialize TouchGFX
   */
  hal.initialize();
 8002d20:	480c      	ldr	r0, [pc, #48]	; (8002d54 <touchgfx_init+0xdc>)
}
 8002d22:	b002      	add	sp, #8
 8002d24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  hal.initialize();
 8002d28:	f7ff bb9a 	b.w	8002460 <_ZN11TouchGFXHAL10initializeEv>
 8002d2c:	2001260c 	.word	0x2001260c
 8002d30:	2000172c 	.word	0x2000172c
 8002d34:	200001ec 	.word	0x200001ec
 8002d38:	20000020 	.word	0x20000020
 8002d3c:	200001f0 	.word	0x200001f0
 8002d40:	08022448 	.word	0x08022448
 8002d44:	080223ac 	.word	0x080223ac
 8002d48:	080223e0 	.word	0x080223e0
 8002d4c:	08022414 	.word	0x08022414
 8002d50:	08002c51 	.word	0x08002c51
 8002d54:	200016b0 	.word	0x200016b0

08002d58 <touchgfx_taskEntry>:
  * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
  * this function from your GUI task.
  *
  * Note This function never returns
  */
  hal.taskEntry();
 8002d58:	4801      	ldr	r0, [pc, #4]	; (8002d60 <touchgfx_taskEntry+0x8>)
 8002d5a:	f7ff ba71 	b.w	8002240 <_ZN11TouchGFXHAL9taskEntryEv>
 8002d5e:	bf00      	nop
 8002d60:	200016b0 	.word	0x200016b0

08002d64 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002d64:	b573      	push	{r0, r1, r4, r5, r6, lr}
static STM32F7DMA dma;
 8002d66:	4c0c      	ldr	r4, [pc, #48]	; (8002d98 <_GLOBAL__sub_I_touchgfx_init+0x34>)
{
public:

    STM32TouchController() {}
 8002d68:	4b0c      	ldr	r3, [pc, #48]	; (8002d9c <_GLOBAL__sub_I_touchgfx_init+0x38>)
 8002d6a:	4e0d      	ldr	r6, [pc, #52]	; (8002da0 <_GLOBAL__sub_I_touchgfx_init+0x3c>)
 8002d6c:	4620      	mov	r0, r4
static LCD16bpp display;
 8002d6e:	4d0d      	ldr	r5, [pc, #52]	; (8002da4 <_GLOBAL__sub_I_touchgfx_init+0x40>)
 8002d70:	6033      	str	r3, [r6, #0]
static STM32F7DMA dma;
 8002d72:	f7ff fed3 	bl	8002b1c <_ZN10STM32F7DMAC1Ev>
static LCD16bpp display;
 8002d76:	4628      	mov	r0, r5
 8002d78:	f013 fe02 	bl	8016980 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 800, 480);
 8002d7c:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002d80:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8002d84:	4621      	mov	r1, r4
 8002d86:	4808      	ldr	r0, [pc, #32]	; (8002da8 <_GLOBAL__sub_I_touchgfx_init+0x44>)
 8002d88:	e9cd 3200 	strd	r3, r2, [sp]
 8002d8c:	4633      	mov	r3, r6
 8002d8e:	462a      	mov	r2, r5
 8002d90:	f7ff fb06 	bl	80023a0 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
}
 8002d94:	b002      	add	sp, #8
 8002d96:	bd70      	pop	{r4, r5, r6, pc}
 8002d98:	20000a90 	.word	0x20000a90
 8002d9c:	08021f38 	.word	0x08021f38
 8002da0:	20000a8c 	.word	0x20000a8c
 8002da4:	20001730 	.word	0x20001730
 8002da8:	200016b0 	.word	0x200016b0

08002dac <_GLOBAL__sub_D_touchgfx_init>:
static STM32F7DMA dma;
 8002dac:	4801      	ldr	r0, [pc, #4]	; (8002db4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8002dae:	f7ff be99 	b.w	8002ae4 <_ZN10STM32F7DMAD1Ev>
 8002db2:	bf00      	nop
 8002db4:	20000a90 	.word	0x20000a90

08002db8 <SCB_CleanInvalidateDCache>:
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8002db8:	4a13      	ldr	r2, [pc, #76]	; (8002e08 <SCB_CleanInvalidateDCache+0x50>)
 8002dba:	2300      	movs	r3, #0
{
 8002dbc:	b5f0      	push	{r4, r5, r6, r7, lr}
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8002dbe:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8002dc2:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 8002dc6:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002dca:	f643 76e0 	movw	r6, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8002dce:	f3c3 04c9 	ubfx	r4, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8002dd2:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8002dd6:	07a5      	lsls	r5, r4, #30
 8002dd8:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002dda:	ea03 0c06 	and.w	ip, r3, r6
 8002dde:	4628      	mov	r0, r5
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8002de0:	4621      	mov	r1, r4
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002de2:	ea4c 0700 	orr.w	r7, ip, r0
      } while (ways-- != 0U);
 8002de6:	3901      	subs	r1, #1
 8002de8:	f100 4040 	add.w	r0, r0, #3221225472	; 0xc0000000
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002dec:	f8c2 7274 	str.w	r7, [r2, #628]	; 0x274
      } while (ways-- != 0U);
 8002df0:	1c4f      	adds	r7, r1, #1
 8002df2:	d1f6      	bne.n	8002de2 <SCB_CleanInvalidateDCache+0x2a>
 8002df4:	3b20      	subs	r3, #32
    } while(sets-- != 0U);
 8002df6:	f113 0f20 	cmn.w	r3, #32
 8002dfa:	d1ee      	bne.n	8002dda <SCB_CleanInvalidateDCache+0x22>
 8002dfc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002e00:	f3bf 8f6f 	isb	sy

    __DSB();
    __ISB();
  #endif
}
 8002e04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e06:	bf00      	nop
 8002e08:	e000ed00 	.word	0xe000ed00

08002e0c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002e0c:	4b02      	ldr	r3, [pc, #8]	; (8002e18 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8002e0e:	2290      	movs	r2, #144	; 0x90
 8002e10:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 8002e14:	4770      	bx	lr
 8002e16:	bf00      	nop
 8002e18:	e000e100 	.word	0xe000e100

08002e1c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002e1c:	4b02      	ldr	r3, [pc, #8]	; (8002e28 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8002e1e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8002e22:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8002e24:	4770      	bx	lr
 8002e26:	bf00      	nop
 8002e28:	e000e100 	.word	0xe000e100

08002e2c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 8002e2c:	4770      	bx	lr

08002e2e <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 8002e2e:	4770      	bx	lr

08002e30 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
void TouchGFXGeneratedHAL::InvalidateCache()
{
// If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
// to flush the Dcache prior to letting DMA2D accessing it. That's done
// using SCB_CleanInvalidateDCache().
SCB_CleanInvalidateDCache();
 8002e30:	f7ff bfc2 	b.w	8002db8 <SCB_CleanInvalidateDCache>

08002e34 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
{
 8002e34:	b508      	push	{r3, lr}
  HAL::flushFrameBuffer(rect);
 8002e36:	f008 fd59 	bl	800b8ec <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 8002e3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
SCB_CleanInvalidateDCache();
 8002e3e:	f7ff bfbb 	b.w	8002db8 <SCB_CleanInvalidateDCache>

08002e42 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
  return HAL::blockCopy(dest, src, numBytes);
 8002e42:	f008 be7a 	b.w	800bb3a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
	...

08002e48 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002e48:	4b04      	ldr	r3, [pc, #16]	; (8002e5c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8002e4a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8002e4e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002e52:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002e56:	f3bf 8f6f 	isb	sy
}
 8002e5a:	4770      	bx	lr
 8002e5c:	e000e100 	.word	0xe000e100

08002e60 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002e60:	b538      	push	{r3, r4, r5, lr}
 8002e62:	4604      	mov	r4, r0
    HAL::initialize();
 8002e64:	f009 f83a 	bl	800bedc <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002e68:	6823      	ldr	r3, [r4, #0]
 8002e6a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8002e6c:	f00d fc52 	bl	8010714 <_ZN8touchgfx11Application11getInstanceEv>
 8002e70:	4601      	mov	r1, r0
 8002e72:	4620      	mov	r0, r4
 8002e74:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 8002e76:	6823      	ldr	r3, [r4, #0]
 8002e78:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8002e7c:	4620      	mov	r0, r4
 8002e7e:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 8002e80:	2300      	movs	r3, #0
 8002e82:	461a      	mov	r2, r3
 8002e84:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 8002e86:	2301      	movs	r3, #1
 8002e88:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 8002e8c:	bd38      	pop	{r3, r4, r5, pc}

08002e8e <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId TYPOGRAPHY_01 = 2; // NotoSans_Regular_20_4bpp
    static const touchgfx::FontId DUMPING = 2;       // NotoSans_Regular_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002e8e:	4770      	bx	lr

08002e90 <_ZN23ApplicationFontProviderD0Ev>:
 8002e90:	b510      	push	{r4, lr}
 8002e92:	4604      	mov	r4, r0
 8002e94:	2104      	movs	r1, #4
 8002e96:	f01c fbdf 	bl	801f658 <_ZdlPvj>
 8002e9a:	4620      	mov	r0, r4
 8002e9c:	bd10      	pop	{r4, pc}

08002e9e <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002e9e:	b508      	push	{r3, lr}
    switch (typography)
 8002ea0:	2903      	cmp	r1, #3
 8002ea2:	d80f      	bhi.n	8002ec4 <_ZN23ApplicationFontProvider7getFontEt+0x26>
 8002ea4:	e8df f001 	tbb	[pc, r1]
 8002ea8:	0a0a0602 	.word	0x0a0a0602
    {
    case Typography::LABELS:
        // NotoSans_Regular_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002eac:	f000 ff04 	bl	8003cb8 <_ZN17TypedTextDatabase8getFontsEv>
 8002eb0:	6800      	ldr	r0, [r0, #0]
        // NotoSans_Regular_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002eb2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002eb4:	f000 ff00 	bl	8003cb8 <_ZN17TypedTextDatabase8getFontsEv>
 8002eb8:	6840      	ldr	r0, [r0, #4]
 8002eba:	e7fa      	b.n	8002eb2 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002ebc:	f000 fefc 	bl	8003cb8 <_ZN17TypedTextDatabase8getFontsEv>
 8002ec0:	6880      	ldr	r0, [r0, #8]
 8002ec2:	e7f6      	b.n	8002eb2 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return 0;
 8002ec4:	2000      	movs	r0, #0
 8002ec6:	e7f4      	b.n	8002eb2 <_ZN23ApplicationFontProvider7getFontEt+0x14>

08002ec8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002ec8:	4800      	ldr	r0, [pc, #0]	; (8002ecc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002eca:	4770      	bx	lr
 8002ecc:	08022468 	.word	0x08022468

08002ed0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002ed0:	2001      	movs	r0, #1
 8002ed2:	4770      	bx	lr

08002ed4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002ed4:	b513      	push	{r0, r1, r4, lr}
 8002ed6:	2200      	movs	r2, #0
    {
        if (unicode == 0)
 8002ed8:	b149      	cbz	r1, 8002eee <_ZNK8touchgfx4Font8getGlyphEt+0x1a>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
 8002eda:	ab02      	add	r3, sp, #8
        const uint8_t* dummyPixelDataPointer = 0;
 8002edc:	9201      	str	r2, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002ede:	f803 2d05 	strb.w	r2, [r3, #-5]!
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002ee2:	6802      	ldr	r2, [r0, #0]
 8002ee4:	6894      	ldr	r4, [r2, #8]
 8002ee6:	aa01      	add	r2, sp, #4
 8002ee8:	47a0      	blx	r4
        return glyph;
    }
 8002eea:	b002      	add	sp, #8
 8002eec:	bd10      	pop	{r4, pc}
            return 0;
 8002eee:	4608      	mov	r0, r1
 8002ef0:	e7fb      	b.n	8002eea <_ZNK8touchgfx4Font8getGlyphEt+0x16>

08002ef2 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002ef2:	8940      	ldrh	r0, [r0, #10]
 8002ef4:	4770      	bx	lr

08002ef6 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002ef6:	8980      	ldrh	r0, [r0, #12]
 8002ef8:	4770      	bx	lr

08002efa <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002efa:	8880      	ldrh	r0, [r0, #4]
 8002efc:	4770      	bx	lr

08002efe <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002efe:	7983      	ldrb	r3, [r0, #6]
 8002f00:	8880      	ldrh	r0, [r0, #4]
 8002f02:	4418      	add	r0, r3
    }
 8002f04:	b280      	uxth	r0, r0
 8002f06:	4770      	bx	lr

08002f08 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002f08:	79c0      	ldrb	r0, [r0, #7]
    }
 8002f0a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002f0e:	4770      	bx	lr

08002f10 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002f10:	79c0      	ldrb	r0, [r0, #7]
    }
 8002f12:	09c0      	lsrs	r0, r0, #7
 8002f14:	4770      	bx	lr

08002f16 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002f16:	4770      	bx	lr

08002f18 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002f18:	b510      	push	{r4, lr}
 8002f1a:	4604      	mov	r4, r0
    }
 8002f1c:	2108      	movs	r1, #8
 8002f1e:	f01c fb9b 	bl	801f658 <_ZdlPvj>
 8002f22:	4620      	mov	r0, r4
 8002f24:	bd10      	pop	{r4, pc}

08002f26 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002f26:	4770      	bx	lr

08002f28 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002f28:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002f2c:	6808      	ldr	r0, [r1, #0]
 8002f2e:	6849      	ldr	r1, [r1, #4]
 8002f30:	c303      	stmia	r3!, {r0, r1}
    };
 8002f32:	4770      	bx	lr

08002f34 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002f34:	4770      	bx	lr

08002f36 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002f36:	4770      	bx	lr

08002f38 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002f38:	6041      	str	r1, [r0, #4]
    }
 8002f3a:	4770      	bx	lr

08002f3c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002f3c:	4770      	bx	lr

08002f3e <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002f3e:	2301      	movs	r3, #1
 8002f40:	7203      	strb	r3, [r0, #8]
    }
 8002f42:	4770      	bx	lr

08002f44 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002f44:	4770      	bx	lr

08002f46 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002f46:	4770      	bx	lr

08002f48 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002f48:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002f4a:	68c4      	ldr	r4, [r0, #12]
    virtual void execute()
 8002f4c:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002f4e:	6841      	ldr	r1, [r0, #4]
 8002f50:	1062      	asrs	r2, r4, #1
 8002f52:	07e4      	lsls	r4, r4, #31
 8002f54:	689b      	ldr	r3, [r3, #8]
 8002f56:	eb01 0002 	add.w	r0, r1, r2
 8002f5a:	bf48      	it	mi
 8002f5c:	588a      	ldrmi	r2, [r1, r2]
    }
 8002f5e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002f62:	bf48      	it	mi
 8002f64:	58d3      	ldrmi	r3, [r2, r3]
 8002f66:	4718      	bx	r3

08002f68 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002f68:	6843      	ldr	r3, [r0, #4]
 8002f6a:	b12b      	cbz	r3, 8002f78 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002f6c:	6883      	ldr	r3, [r0, #8]
 8002f6e:	b92b      	cbnz	r3, 8002f7c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002f70:	68c0      	ldr	r0, [r0, #12]
 8002f72:	f000 0001 	and.w	r0, r0, #1
 8002f76:	4770      	bx	lr
 8002f78:	4618      	mov	r0, r3
 8002f7a:	4770      	bx	lr
 8002f7c:	2001      	movs	r0, #1
    }
 8002f7e:	4770      	bx	lr

08002f80 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002f80:	b510      	push	{r4, lr}
 8002f82:	4604      	mov	r4, r0
 8002f84:	210c      	movs	r1, #12
 8002f86:	f01c fb67 	bl	801f658 <_ZdlPvj>
 8002f8a:	4620      	mov	r0, r4
 8002f8c:	bd10      	pop	{r4, pc}

08002f8e <_ZN23FrontendApplicationBaseD0Ev>:
 8002f8e:	b510      	push	{r4, lr}
 8002f90:	4604      	mov	r4, r0
 8002f92:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002f96:	f01c fb5f 	bl	801f658 <_ZdlPvj>
 8002f9a:	4620      	mov	r0, r4
 8002f9c:	bd10      	pop	{r4, pc}

08002f9e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002f9e:	b510      	push	{r4, lr}
 8002fa0:	4604      	mov	r4, r0
 8002fa2:	2110      	movs	r1, #16
 8002fa4:	f01c fb58 	bl	801f658 <_ZdlPvj>
 8002fa8:	4620      	mov	r0, r4
 8002faa:	bd10      	pop	{r4, pc}

08002fac <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002fac:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8002fae:	f00d fbb1 	bl	8010714 <_ZN8touchgfx11Application11getInstanceEv>
 8002fb2:	6803      	ldr	r3, [r0, #0]
    }
 8002fb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8002fb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002fba:	4718      	bx	r3

08002fbc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002fbc:	b510      	push	{r4, lr}
 8002fbe:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002fc0:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002fc4:	b158      	cbz	r0, 8002fde <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002fc6:	6803      	ldr	r3, [r0, #0]
 8002fc8:	68db      	ldr	r3, [r3, #12]
 8002fca:	4798      	blx	r3
 8002fcc:	b138      	cbz	r0, 8002fde <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002fce:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002fd2:	6803      	ldr	r3, [r0, #0]
 8002fd4:	689b      	ldr	r3, [r3, #8]
 8002fd6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002fd8:	2300      	movs	r3, #0
 8002fda:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002fde:	bd10      	pop	{r4, pc}

08002fe0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002fe0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002fe2:	4604      	mov	r4, r0
 8002fe4:	4617      	mov	r7, r2
 8002fe6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002fe8:	f00d fbb6 	bl	8010758 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002fec:	4b14      	ldr	r3, [pc, #80]	; (8003040 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
          pendingScreenTransitionCallback(0)
 8002fee:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8002ff0:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
        instance = this;
 8002ff4:	601c      	str	r4, [r3, #0]
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002ff6:	4629      	mov	r1, r5
      model(m)
 8002ff8:	4b12      	ldr	r3, [pc, #72]	; (8003044 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
        return instance;
 8002ffa:	4e13      	ldr	r6, [pc, #76]	; (8003048 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>)
 8002ffc:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun_0(0)
 8002ffe:	4b13      	ldr	r3, [pc, #76]	; (800304c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x6c>)
 8003000:	6830      	ldr	r0, [r6, #0]
 8003002:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8003006:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 800300a:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800300e:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 8003010:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 8003014:	689b      	ldr	r3, [r3, #8]
 8003016:	f8c4 513c 	str.w	r5, [r4, #316]	; 0x13c
 800301a:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
      model(m)
 800301e:	f8c4 7150 	str.w	r7, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8003022:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003024:	4628      	mov	r0, r5
 8003026:	f000 fdfd 	bl	8003c24 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800302a:	6833      	ldr	r3, [r6, #0]
 800302c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8003030:	b10a      	cbz	r2, 8003036 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x56>
 8003032:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003034:	b900      	cbnz	r0, 8003038 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
            return instance->lcdRef;
 8003036:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003038:	f015 f905 	bl	8018246 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800303c:	4620      	mov	r0, r4
 800303e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003040:	200125fc 	.word	0x200125fc
 8003044:	080224ac 	.word	0x080224ac
 8003048:	200125b0 	.word	0x200125b0
 800304c:	08022494 	.word	0x08022494

08003050 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003050:	4b06      	ldr	r3, [pc, #24]	; (800306c <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x1c>)
 8003052:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8003056:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800305a:	2300      	movs	r3, #0
 800305c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMainScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003060:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8003064:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8003068:	4770      	bx	lr
 800306a:	bf00      	nop
 800306c:	080031b1 	.word	0x080031b1

08003070 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8003070:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003074:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003076:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8003078:	4699      	mov	r9, r3
 800307a:	4688      	mov	r8, r1
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800307c:	6803      	ldr	r3, [r0, #0]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800307e:	4615      	mov	r5, r2
 8003080:	f8dd a020 	ldr.w	sl, [sp, #32]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003084:	6a1b      	ldr	r3, [r3, #32]
 8003086:	4798      	blx	r3
 8003088:	f5b0 6fdf 	cmp.w	r0, #1784	; 0x6f8
 800308c:	d205      	bcs.n	800309a <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 800308e:	4b42      	ldr	r3, [pc, #264]	; (8003198 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8003090:	21a7      	movs	r1, #167	; 0xa7
 8003092:	4a42      	ldr	r2, [pc, #264]	; (800319c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003094:	4842      	ldr	r0, [pc, #264]	; (80031a0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8003096:	f01d fe6b 	bl	8020d70 <__assert_func>
 800309a:	6868      	ldr	r0, [r5, #4]
 800309c:	6803      	ldr	r3, [r0, #0]
 800309e:	6a1b      	ldr	r3, [r3, #32]
 80030a0:	4798      	blx	r3
 80030a2:	280f      	cmp	r0, #15
 80030a4:	d803      	bhi.n	80030ae <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 80030a6:	4b3f      	ldr	r3, [pc, #252]	; (80031a4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 80030a8:	21a8      	movs	r1, #168	; 0xa8
 80030aa:	4a3c      	ldr	r2, [pc, #240]	; (800319c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80030ac:	e7f2      	b.n	8003094 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80030ae:	68e8      	ldr	r0, [r5, #12]
 80030b0:	6803      	ldr	r3, [r0, #0]
 80030b2:	6a1b      	ldr	r3, [r3, #32]
 80030b4:	4798      	blx	r3
 80030b6:	280b      	cmp	r0, #11
 80030b8:	d803      	bhi.n	80030c2 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 80030ba:	4b3b      	ldr	r3, [pc, #236]	; (80031a8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 80030bc:	21a9      	movs	r1, #169	; 0xa9
 80030be:	4a37      	ldr	r2, [pc, #220]	; (800319c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80030c0:	e7e8      	b.n	8003094 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 80030c2:	f00d fb27 	bl	8010714 <_ZN8touchgfx11Application11getInstanceEv>
 80030c6:	f00d fb2b 	bl	8010720 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80030ca:	f8d9 0000 	ldr.w	r0, [r9]
 80030ce:	b110      	cbz	r0, 80030d6 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 80030d0:	6803      	ldr	r3, [r0, #0]
 80030d2:	68db      	ldr	r3, [r3, #12]
 80030d4:	4798      	blx	r3
    if (*currentTrans)
 80030d6:	f8d9 0000 	ldr.w	r0, [r9]
 80030da:	b110      	cbz	r0, 80030e2 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 80030dc:	6803      	ldr	r3, [r0, #0]
 80030de:	681b      	ldr	r3, [r3, #0]
 80030e0:	4798      	blx	r3
    if (*currentScreen)
 80030e2:	6838      	ldr	r0, [r7, #0]
 80030e4:	b110      	cbz	r0, 80030ec <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 80030e6:	6803      	ldr	r3, [r0, #0]
 80030e8:	695b      	ldr	r3, [r3, #20]
 80030ea:	4798      	blx	r3
    if (*currentPresenter)
 80030ec:	f8d8 0000 	ldr.w	r0, [r8]
 80030f0:	b110      	cbz	r0, 80030f8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 80030f2:	6803      	ldr	r3, [r0, #0]
 80030f4:	685b      	ldr	r3, [r3, #4]
 80030f6:	4798      	blx	r3
    if (*currentScreen)
 80030f8:	6838      	ldr	r0, [r7, #0]
 80030fa:	b110      	cbz	r0, 8003102 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 80030fc:	6803      	ldr	r3, [r0, #0]
 80030fe:	681b      	ldr	r3, [r3, #0]
 8003100:	4798      	blx	r3
    if (*currentPresenter)
 8003102:	f8d8 0000 	ldr.w	r0, [r8]
 8003106:	b110      	cbz	r0, 800310e <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 8003108:	6803      	ldr	r3, [r0, #0]
 800310a:	689b      	ldr	r3, [r3, #8]
 800310c:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800310e:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003110:	2100      	movs	r1, #0
 8003112:	6803      	ldr	r3, [r0, #0]
 8003114:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003116:	4798      	blx	r3
 8003118:	4604      	mov	r4, r0
 800311a:	b120      	cbz	r0, 8003126 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb6>
        : screenContainer(0), done(false)
 800311c:	2300      	movs	r3, #0
 800311e:	6043      	str	r3, [r0, #4]
 8003120:	7203      	strb	r3, [r0, #8]
 8003122:	4b22      	ldr	r3, [pc, #136]	; (80031ac <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8003124:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003126:	68a8      	ldr	r0, [r5, #8]
 8003128:	2100      	movs	r1, #0
 800312a:	6803      	ldr	r3, [r0, #0]
 800312c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800312e:	4798      	blx	r3
 8003130:	4606      	mov	r6, r0
 8003132:	b108      	cbz	r0, 8003138 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
 8003134:	f000 fe34 	bl	8003da0 <_ZN8MainViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003138:	6868      	ldr	r0, [r5, #4]
 800313a:	2100      	movs	r1, #0
 800313c:	6803      	ldr	r3, [r0, #0]
 800313e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003140:	4798      	blx	r3
 8003142:	4605      	mov	r5, r0
 8003144:	b110      	cbz	r0, 800314c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xdc>
 8003146:	4631      	mov	r1, r6
 8003148:	f000 fdfc 	bl	8003d44 <_ZN13MainPresenterC1ER8MainView>
    *currentTrans = newTransition;
 800314c:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003150:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 8003154:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8003156:	b1e5      	cbz	r5, 8003192 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 8003158:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800315a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800315e:	4630      	mov	r0, r6
 8003160:	6833      	ldr	r3, [r6, #0]

    virtual void uartMsgRdy() {}

    void bind(Model* m)
    {
        model = m;
 8003162:	f8c5 a008 	str.w	sl, [r5, #8]
 8003166:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8003168:	63f5      	str	r5, [r6, #60]	; 0x3c
 800316a:	4798      	blx	r3
    newPresenter->activate();
 800316c:	682b      	ldr	r3, [r5, #0]
 800316e:	4628      	mov	r0, r5
 8003170:	681b      	ldr	r3, [r3, #0]
 8003172:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003174:	4621      	mov	r1, r4
 8003176:	4630      	mov	r0, r6
 8003178:	f00e ff97 	bl	80120aa <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800317c:	6823      	ldr	r3, [r4, #0]
 800317e:	4620      	mov	r0, r4
 8003180:	691b      	ldr	r3, [r3, #16]
 8003182:	4798      	blx	r3
    newTransition->invalidate();
 8003184:	6823      	ldr	r3, [r4, #0]
 8003186:	4620      	mov	r0, r4
 8003188:	695b      	ldr	r3, [r3, #20]
 800318a:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 800318c:	4628      	mov	r0, r5
 800318e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    model->bind(newPresenter);
 8003192:	462b      	mov	r3, r5
 8003194:	e7e1      	b.n	800315a <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 8003196:	bf00      	nop
 8003198:	0802250c 	.word	0x0802250c
 800319c:	08022727 	.word	0x08022727
 80031a0:	0802259a 	.word	0x0802259a
 80031a4:	080225e1 	.word	0x080225e1
 80031a8:	08022684 	.word	0x08022684
 80031ac:	080224f0 	.word	0x080224f0

080031b0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80031b0:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
{
 80031b4:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80031b6:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80031ba:	9300      	str	r3, [sp, #0]
 80031bc:	4b04      	ldr	r3, [pc, #16]	; (80031d0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x20>)
 80031be:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80031c2:	4804      	ldr	r0, [pc, #16]	; (80031d4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x24>)
 80031c4:	f7ff ff54 	bl	8003070 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80031c8:	b003      	add	sp, #12
 80031ca:	f85d fb04 	ldr.w	pc, [sp], #4
 80031ce:	bf00      	nop
 80031d0:	200125f0 	.word	0x200125f0
 80031d4:	200125ec 	.word	0x200125ec

080031d8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80031d8:	6a00      	ldr	r0, [r0, #32]
 80031da:	4770      	bx	lr

080031dc <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80031dc:	4770      	bx	lr

080031de <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80031de:	888b      	ldrh	r3, [r1, #4]
 80031e0:	6980      	ldr	r0, [r0, #24]
 80031e2:	0adb      	lsrs	r3, r3, #11
 80031e4:	680a      	ldr	r2, [r1, #0]
 80031e6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80031ea:	4410      	add	r0, r2
 80031ec:	4770      	bx	lr

080031ee <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80031ee:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80031f0:	b1c2      	cbz	r2, 8003224 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80031f2:	7b13      	ldrb	r3, [r2, #12]
 80031f4:	b1b3      	cbz	r3, 8003224 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80031f6:	7b54      	ldrb	r4, [r2, #13]
 80031f8:	7ad2      	ldrb	r2, [r2, #11]
 80031fa:	0224      	lsls	r4, r4, #8
 80031fc:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003200:	4314      	orrs	r4, r2
 8003202:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003204:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003206:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800320a:	8813      	ldrh	r3, [r2, #0]
 800320c:	428b      	cmp	r3, r1
 800320e:	d102      	bne.n	8003216 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8003210:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8003214:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8003216:	d805      	bhi.n	8003224 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003218:	3801      	subs	r0, #1
 800321a:	3204      	adds	r2, #4
 800321c:	b280      	uxth	r0, r0
 800321e:	2800      	cmp	r0, #0
 8003220:	d1f3      	bne.n	800320a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8003222:	e7f7      	b.n	8003214 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8003224:	2000      	movs	r0, #0
 8003226:	e7f5      	b.n	8003214 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08003228 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8003228:	b510      	push	{r4, lr}
 800322a:	4604      	mov	r4, r0
 800322c:	2124      	movs	r1, #36	; 0x24
 800322e:	f01c fa13 	bl	801f658 <_ZdlPvj>
 8003232:	4620      	mov	r0, r4
 8003234:	bd10      	pop	{r4, pc}
	...

08003238 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8003238:	b530      	push	{r4, r5, lr}
 800323a:	b089      	sub	sp, #36	; 0x24
 800323c:	4604      	mov	r4, r0
    gsubTable(gsubData)
 800323e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8003242:	9506      	str	r5, [sp, #24]
 8003244:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8003248:	9505      	str	r5, [sp, #20]
 800324a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800324e:	9504      	str	r5, [sp, #16]
 8003250:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8003254:	9503      	str	r5, [sp, #12]
 8003256:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 800325a:	9502      	str	r5, [sp, #8]
 800325c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8003260:	9501      	str	r5, [sp, #4]
 8003262:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8003266:	9500      	str	r5, [sp, #0]
 8003268:	f00e fa72 	bl	8011750 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 800326c:	4b05      	ldr	r3, [pc, #20]	; (8003284 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
}
 800326e:	4620      	mov	r0, r4
    gsubTable(gsubData)
 8003270:	6023      	str	r3, [r4, #0]
 8003272:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003274:	61a3      	str	r3, [r4, #24]
 8003276:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003278:	61e3      	str	r3, [r4, #28]
 800327a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800327c:	6223      	str	r3, [r4, #32]
}
 800327e:	b009      	add	sp, #36	; 0x24
 8003280:	bd30      	pop	{r4, r5, pc}
 8003282:	bf00      	nop
 8003284:	08022830 	.word	0x08022830

08003288 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8003288:	2000      	movs	r0, #0
 800328a:	4770      	bx	lr

0800328c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800328c:	8081      	strh	r1, [r0, #4]
    }
 800328e:	4770      	bx	lr

08003290 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8003290:	80c1      	strh	r1, [r0, #6]
    }
 8003292:	4770      	bx	lr

08003294 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003294:	8101      	strh	r1, [r0, #8]
    }
 8003296:	4770      	bx	lr

08003298 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8003298:	8141      	strh	r1, [r0, #10]
    }
 800329a:	4770      	bx	lr

0800329c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800329c:	4770      	bx	lr

0800329e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 800329e:	4770      	bx	lr

080032a0 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 80032a0:	4770      	bx	lr

080032a2 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 80032a2:	4770      	bx	lr

080032a4 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80032a4:	4770      	bx	lr

080032a6 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
 80032a6:	88c3      	ldrh	r3, [r0, #6]
 80032a8:	1ad2      	subs	r2, r2, r3
 80032aa:	8883      	ldrh	r3, [r0, #4]
 80032ac:	1ac9      	subs	r1, r1, r3
 80032ae:	6803      	ldr	r3, [r0, #0]
 80032b0:	b212      	sxth	r2, r2
 80032b2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80032b4:	b209      	sxth	r1, r1
    virtual void moveTo(int16_t x, int16_t y)
 80032b6:	b410      	push	{r4}
    }
 80032b8:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80032bc:	4718      	bx	r3

080032be <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80032be:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80032c2:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80032c4:	f04f 33ff 	mov.w	r3, #4294967295
 80032c8:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80032ca:	6813      	ldr	r3, [r2, #0]
 80032cc:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80032ce:	6010      	str	r0, [r2, #0]
    }
 80032d0:	4770      	bx	lr

080032d2 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80032d2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80032d4:	4770      	bx	lr

080032d6 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80032d6:	4770      	bx	lr

080032d8 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80032d8:	4770      	bx	lr

080032da <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80032da:	4770      	bx	lr

080032dc <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80032dc:	4770      	bx	lr

080032de <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80032de:	4770      	bx	lr

080032e0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 80032e0:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80032e4:	b11a      	cbz	r2, 80032ee <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80032e6:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80032ea:	b102      	cbz	r2, 80032ee <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80032ec:	6018      	str	r0, [r3, #0]
        }
    }
 80032ee:	4770      	bx	lr

080032f0 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 80032f0:	2200      	movs	r2, #0
 80032f2:	8002      	strh	r2, [r0, #0]
        this->y = y;
 80032f4:	8042      	strh	r2, [r0, #2]
        this->width = width;
 80032f6:	8082      	strh	r2, [r0, #4]
        this->height = height;
 80032f8:	80c2      	strh	r2, [r0, #6]
    }

    virtual Rect getSolidRect() const
    {
        return Rect(0, 0, 0, 0);
    }
 80032fa:	4770      	bx	lr

080032fc <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
    {
        setX(x);
 80032fc:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80032fe:	b570      	push	{r4, r5, r6, lr}
 8003300:	4604      	mov	r4, r0
        setX(x);
 8003302:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003304:	4615      	mov	r5, r2
        setX(x);
 8003306:	4798      	blx	r3
        setBaselineY(baselineY);
 8003308:	6823      	ldr	r3, [r4, #0]
 800330a:	4620      	mov	r0, r4
 800330c:	4629      	mov	r1, r5
 800330e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    }
 8003310:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8003314:	4718      	bx	r3

08003316 <_ZN12MainViewBaseD1Ev>:

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}
 8003316:	4770      	bx	lr

08003318 <_ZN12MainViewBase11setupScreenEv>:
}

void MainViewBase::setupScreen()
{

}
 8003318:	4770      	bx	lr

0800331a <_ZN12MainViewBase15handleTickEventEv>:

//Handles delays
void MainViewBase::handleTickEvent()
{
    if(interaction1Counter > 0)
 800331a:	f8b0 36e4 	ldrh.w	r3, [r0, #1764]	; 0x6e4
 800331e:	b113      	cbz	r3, 8003326 <_ZN12MainViewBase15handleTickEventEv+0xc>
    {
        interaction1Counter--;
 8003320:	3b01      	subs	r3, #1
 8003322:	f8a0 36e4 	strh.w	r3, [r0, #1764]	; 0x6e4
        if(interaction1Counter == 0)
        {

        }
    }
}
 8003326:	4770      	bx	lr

08003328 <_ZN12MainViewBase27graphClickedCallbackHandlerERKN8touchgfx17AbstractDataGraphERKNS1_15GraphClickEventE>:

void MainViewBase::graphClickedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphClickEvent& value)
{
    if (&src == &My_graph)
 8003328:	f100 03a0 	add.w	r3, r0, #160	; 0xa0
 800332c:	428b      	cmp	r3, r1
    {
        //Interaction1
        //When My_graph clicked delay
        //Delay for 10000 ms (600 Ticks)
        interaction1Counter = INTERACTION1_DURATION;
 800332e:	bf04      	itt	eq
 8003330:	f44f 7316 	moveq.w	r3, #600	; 0x258
 8003334:	f8a0 36e4 	strheq.w	r3, [r0, #1764]	; 0x6e4
    }
}
 8003338:	4770      	bx	lr

0800333a <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_17AbstractDataGraphERKNS2_15GraphClickEventEvED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 800333a:	4770      	bx	lr

0800333c <_ZN8touchgfx9DraggableINS_23TextAreaWithOneWildcardEED1Ev>:
 * can be freely moved around using the touch screen.
 *
 * @tparam T specifies the type to extend with the Draggable behavior.
 */
template <class T>
class Draggable : public T
 800333c:	4770      	bx	lr

0800333e <_ZN8touchgfx17GraphWrapAndClearILs150EED1Ev>:
 * The GraphWrapAndClear will show new points progressing across the graph. Once the graph is filled,
 * the next point added will cause the graph to be cleared and a new graph will slowly be
 * created as new values are added.
 */
template <int16_t CAPACITY>
class GraphWrapAndClear : public DataGraphWrapAndClear
 800333e:	4770      	bx	lr

08003340 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_17AbstractDataGraphERKNS2_15GraphClickEventEvE7executeES4_S7_>:
    virtual void execute(T1 t1, T2 t2)
 8003340:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 8003342:	68c6      	ldr	r6, [r0, #12]
    virtual void execute(T1 t1, T2 t2)
 8003344:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 8003346:	6845      	ldr	r5, [r0, #4]
 8003348:	1074      	asrs	r4, r6, #1
 800334a:	07f6      	lsls	r6, r6, #31
 800334c:	689b      	ldr	r3, [r3, #8]
 800334e:	eb05 0004 	add.w	r0, r5, r4
 8003352:	bf44      	itt	mi
 8003354:	592c      	ldrmi	r4, [r5, r4]
 8003356:	58e3      	ldrmi	r3, [r4, r3]
    }
 8003358:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 800335a:	4718      	bx	r3

0800335c <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_17AbstractDataGraphERKNS2_15GraphClickEventEvE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 800335c:	6843      	ldr	r3, [r0, #4]
 800335e:	b12b      	cbz	r3, 800336c <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_17AbstractDataGraphERKNS2_15GraphClickEventEvE7isValidEv+0x10>
 8003360:	6883      	ldr	r3, [r0, #8]
 8003362:	b92b      	cbnz	r3, 8003370 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_17AbstractDataGraphERKNS2_15GraphClickEventEvE7isValidEv+0x14>
 8003364:	68c0      	ldr	r0, [r0, #12]
 8003366:	f000 0001 	and.w	r0, r0, #1
 800336a:	4770      	bx	lr
 800336c:	4618      	mov	r0, r3
 800336e:	4770      	bx	lr
 8003370:	2001      	movs	r0, #1
    }
 8003372:	4770      	bx	lr

08003374 <_ZN8touchgfx9DraggableINS_23TextAreaWithOneWildcardEED0Ev>:
 8003374:	b510      	push	{r4, lr}
 8003376:	4604      	mov	r4, r0
 8003378:	2140      	movs	r1, #64	; 0x40
 800337a:	f01c f96d 	bl	801f658 <_ZdlPvj>
 800337e:	4620      	mov	r0, r4
 8003380:	bd10      	pop	{r4, pc}

08003382 <_ZN8touchgfx17GraphWrapAndClearILs150EED0Ev>:
 8003382:	b510      	push	{r4, lr}
 8003384:	4604      	mov	r4, r0
 8003386:	f44f 7168 	mov.w	r1, #928	; 0x3a0
 800338a:	f01c f965 	bl	801f658 <_ZdlPvj>
 800338e:	4620      	mov	r0, r4
 8003390:	bd10      	pop	{r4, pc}

08003392 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_17AbstractDataGraphERKNS2_15GraphClickEventEvED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8003392:	b510      	push	{r4, lr}
 8003394:	4604      	mov	r4, r0
 8003396:	2110      	movs	r1, #16
 8003398:	f01c f95e 	bl	801f658 <_ZdlPvj>
 800339c:	4620      	mov	r0, r4
 800339e:	bd10      	pop	{r4, pc}

080033a0 <_ZN12MainViewBaseD0Ev>:
 80033a0:	b510      	push	{r4, lr}
 80033a2:	4604      	mov	r4, r0
 80033a4:	f44f 61df 	mov.w	r1, #1784	; 0x6f8
 80033a8:	f01c f956 	bl	801f658 <_ZdlPvj>
 80033ac:	4620      	mov	r0, r4
 80033ae:	bd10      	pop	{r4, pc}

080033b0 <_ZN8touchgfx9DraggableINS_23TextAreaWithOneWildcardEE15handleDragEventERKNS_9DragEventE>:
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragToY - dragFromY;
 80033b0:	890b      	ldrh	r3, [r1, #8]
 80033b2:	898a      	ldrh	r2, [r1, #12]
 80033b4:	1ad2      	subs	r2, r2, r3
        return dragToX - dragFromX;
 80033b6:	894b      	ldrh	r3, [r1, #10]
 80033b8:	88c9      	ldrh	r1, [r1, #6]
     * @param  evt The drag event.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
        T::handleDragEvent(evt);
        T::moveRelative(evt.getDeltaX(), evt.getDeltaY());
 80033ba:	b212      	sxth	r2, r2
 80033bc:	1a59      	subs	r1, r3, r1
 80033be:	b209      	sxth	r1, r1
 80033c0:	f00e b936 	b.w	8011630 <_ZN8touchgfx8Drawable12moveRelativeEss>

080033c4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80033c4:	6803      	ldr	r3, [r0, #0]
class TypedText
 80033c6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
    virtual void setBaselineY(int16_t baselineY)
 80033c8:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80033ca:	6b1e      	ldr	r6, [r3, #48]	; 0x30
    virtual void setBaselineY(int16_t baselineY)
 80033cc:	4604      	mov	r4, r0
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80033ce:	4b11      	ldr	r3, [pc, #68]	; (8003414 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80033d0:	b28d      	uxth	r5, r1
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	b92b      	cbnz	r3, 80033e2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 80033d6:	4b10      	ldr	r3, [pc, #64]	; (8003418 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80033d8:	21b1      	movs	r1, #177	; 0xb1
 80033da:	4a10      	ldr	r2, [pc, #64]	; (800341c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80033dc:	4810      	ldr	r0, [pc, #64]	; (8003420 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80033de:	f01d fcc7 	bl	8020d70 <__assert_func>
 80033e2:	4910      	ldr	r1, [pc, #64]	; (8003424 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80033e4:	8809      	ldrh	r1, [r1, #0]
 80033e6:	4291      	cmp	r1, r2
 80033e8:	d803      	bhi.n	80033f2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80033ea:	4b0f      	ldr	r3, [pc, #60]	; (8003428 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80033ec:	21b2      	movs	r1, #178	; 0xb2
 80033ee:	4a0b      	ldr	r2, [pc, #44]	; (800341c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80033f0:	e7f4      	b.n	80033dc <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
        return fonts[typedTexts[typedTextId].fontIdx];
 80033f2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80033f6:	4b0d      	ldr	r3, [pc, #52]	; (800342c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80033f8:	681b      	ldr	r3, [r3, #0]
 80033fa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80033fe:	6803      	ldr	r3, [r0, #0]
 8003400:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003402:	4798      	blx	r3
 8003404:	1a29      	subs	r1, r5, r0
 8003406:	4633      	mov	r3, r6
 8003408:	4620      	mov	r0, r4
 800340a:	b209      	sxth	r1, r1
    }
 800340c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8003410:	4718      	bx	r3
 8003412:	bf00      	nop
 8003414:	20012600 	.word	0x20012600
 8003418:	08022ab9 	.word	0x08022ab9
 800341c:	08022c24 	.word	0x08022c24
 8003420:	08022afb 	.word	0x08022afb
 8003424:	20012604 	.word	0x20012604
 8003428:	08022b42 	.word	0x08022b42
 800342c:	20012608 	.word	0x20012608

08003430 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
    const Unicode::UnicodeChar* getWildcard() const
    {
        return wildcard;
    }

    virtual uint16_t getTextWidth() const
 8003430:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    {
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 8003432:	f64f 73ff 	movw	r3, #65535	; 0xffff
        return typedTextId != TYPED_TEXT_INVALID;
 8003436:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
    virtual uint16_t getTextWidth() const
 8003438:	4606      	mov	r6, r0
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 800343a:	4299      	cmp	r1, r3
 800343c:	d02a      	beq.n	8003494 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800343e:	4b16      	ldr	r3, [pc, #88]	; (8003498 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	b92b      	cbnz	r3, 8003450 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 8003444:	4b15      	ldr	r3, [pc, #84]	; (800349c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 8003446:	21b1      	movs	r1, #177	; 0xb1
 8003448:	4a15      	ldr	r2, [pc, #84]	; (80034a0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800344a:	4816      	ldr	r0, [pc, #88]	; (80034a4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800344c:	f01d fc90 	bl	8020d70 <__assert_func>
 8003450:	4a15      	ldr	r2, [pc, #84]	; (80034a8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 8003452:	8812      	ldrh	r2, [r2, #0]
 8003454:	428a      	cmp	r2, r1
 8003456:	d803      	bhi.n	8003460 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 8003458:	4b14      	ldr	r3, [pc, #80]	; (80034ac <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800345a:	21b2      	movs	r1, #178	; 0xb2
 800345c:	4a10      	ldr	r2, [pc, #64]	; (80034a0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800345e:	e7f4      	b.n	800344a <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003460:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8003464:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8003468:	4b11      	ldr	r3, [pc, #68]	; (80034b0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
        return typedTexts[typedTextId].direction;
 800346a:	7854      	ldrb	r4, [r2, #1]
        return fonts[typedTexts[typedTextId].fontIdx];
 800346c:	681b      	ldr	r3, [r3, #0]
        return typedTexts[typedTextId].direction;
 800346e:	f3c4 0481 	ubfx	r4, r4, #2, #2
        return fonts[typedTexts[typedTextId].fontIdx];
 8003472:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 8003476:	682b      	ldr	r3, [r5, #0]
 8003478:	69df      	ldr	r7, [r3, #28]
        return texts->getText(typedTextId);
 800347a:	4b0e      	ldr	r3, [pc, #56]	; (80034b4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800347c:	6818      	ldr	r0, [r3, #0]
 800347e:	f000 fc0b 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 8003482:	2300      	movs	r3, #0
 8003484:	4602      	mov	r2, r0
 8003486:	4621      	mov	r1, r4
 8003488:	9300      	str	r3, [sp, #0]
 800348a:	4628      	mov	r0, r5
 800348c:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 800348e:	47b8      	blx	r7
    }
 8003490:	b003      	add	sp, #12
 8003492:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 8003494:	2000      	movs	r0, #0
 8003496:	e7fb      	b.n	8003490 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 8003498:	20012600 	.word	0x20012600
 800349c:	08022ab9 	.word	0x08022ab9
 80034a0:	08022c24 	.word	0x08022c24
 80034a4:	08022afb 	.word	0x08022afb
 80034a8:	20012604 	.word	0x20012604
 80034ac:	08022b42 	.word	0x08022b42
 80034b0:	20012608 	.word	0x20012608
 80034b4:	2001260c 	.word	0x2001260c

080034b8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
        return typedTextId != TYPED_TEXT_INVALID;
 80034b8:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 80034ba:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80034be:	4299      	cmp	r1, r3
    virtual int16_t getTextHeight()
 80034c0:	b570      	push	{r4, r5, r6, lr}
 80034c2:	4604      	mov	r4, r0
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 80034c4:	d01e      	beq.n	8003504 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 80034c6:	6803      	ldr	r3, [r0, #0]
 80034c8:	6edd      	ldr	r5, [r3, #108]	; 0x6c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80034ca:	4b0f      	ldr	r3, [pc, #60]	; (8003508 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	b92b      	cbnz	r3, 80034dc <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 80034d0:	4b0e      	ldr	r3, [pc, #56]	; (800350c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 80034d2:	21b1      	movs	r1, #177	; 0xb1
 80034d4:	4a0e      	ldr	r2, [pc, #56]	; (8003510 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80034d6:	480f      	ldr	r0, [pc, #60]	; (8003514 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 80034d8:	f01d fc4a 	bl	8020d70 <__assert_func>
 80034dc:	4b0e      	ldr	r3, [pc, #56]	; (8003518 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 80034de:	881b      	ldrh	r3, [r3, #0]
 80034e0:	428b      	cmp	r3, r1
 80034e2:	d803      	bhi.n	80034ec <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 80034e4:	4b0d      	ldr	r3, [pc, #52]	; (800351c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 80034e6:	21b2      	movs	r1, #178	; 0xb2
 80034e8:	4a09      	ldr	r2, [pc, #36]	; (8003510 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 80034ea:	e7f4      	b.n	80034d6 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
        return texts->getText(typedTextId);
 80034ec:	4b0c      	ldr	r3, [pc, #48]	; (8003520 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 80034ee:	6818      	ldr	r0, [r3, #0]
 80034f0:	f000 fbd2 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 80034f4:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80034f6:	4601      	mov	r1, r0
 80034f8:	46ac      	mov	ip, r5
 80034fa:	4620      	mov	r0, r4
 80034fc:	2300      	movs	r3, #0
    }
 80034fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 8003502:	4760      	bx	ip
    }
 8003504:	2000      	movs	r0, #0
 8003506:	bd70      	pop	{r4, r5, r6, pc}
 8003508:	20012600 	.word	0x20012600
 800350c:	08022ab9 	.word	0x08022ab9
 8003510:	08022c24 	.word	0x08022c24
 8003514:	08022afb 	.word	0x08022afb
 8003518:	20012604 	.word	0x20012604
 800351c:	08022b42 	.word	0x08022b42
 8003520:	2001260c 	.word	0x2001260c

08003524 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003524:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003528:	461e      	mov	r6, r3
        setX(x);
 800352a:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800352c:	4604      	mov	r4, r0
 800352e:	4617      	mov	r7, r2
        setX(x);
 8003530:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003532:	f9bd 5018 	ldrsh.w	r5, [sp, #24]
        setX(x);
 8003536:	4798      	blx	r3
        setY(y);
 8003538:	6823      	ldr	r3, [r4, #0]
 800353a:	4639      	mov	r1, r7
 800353c:	4620      	mov	r0, r4
 800353e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003540:	4798      	blx	r3
        setWidth(width);
 8003542:	6823      	ldr	r3, [r4, #0]
 8003544:	4631      	mov	r1, r6
 8003546:	4620      	mov	r0, r4
 8003548:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800354a:	4790      	blx	r2
        setHeight(height);
 800354c:	6823      	ldr	r3, [r4, #0]
 800354e:	4629      	mov	r1, r5
 8003550:	4620      	mov	r0, r4
 8003552:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 8003554:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 8003558:	4718      	bx	r3
	...

0800355c <_ZN8touchgfx3BoxC1Ev>:
          visible(true)
 800355c:	2101      	movs	r1, #1
        this->x = x;
 800355e:	2200      	movs	r2, #0
 8003560:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003564:	4909      	ldr	r1, [pc, #36]	; (800358c <_ZN8touchgfx3BoxC1Ev+0x30>)
 8003566:	8082      	strh	r2, [r0, #4]
 8003568:	6001      	str	r1, [r0, #0]
 800356a:	21ff      	movs	r1, #255	; 0xff
        this->y = y;
 800356c:	80c2      	strh	r2, [r0, #6]
        this->width = width;
 800356e:	8102      	strh	r2, [r0, #8]
        this->height = height;
 8003570:	8142      	strh	r2, [r0, #10]
        x = 0;
 8003572:	8182      	strh	r2, [r0, #12]
        y = 0;
 8003574:	81c2      	strh	r2, [r0, #14]
        width = 0;
 8003576:	8202      	strh	r2, [r0, #16]
        height = 0;
 8003578:	8242      	strh	r2, [r0, #18]
 800357a:	61c2      	str	r2, [r0, #28]
 800357c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8003580:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        color = col;
 8003584:	6282      	str	r2, [r0, #40]	; 0x28
 8003586:	e9c0 2205 	strd	r2, r2, [r0, #20]
    {
    }
 800358a:	4770      	bx	lr
 800358c:	08024494 	.word	0x08024494

08003590 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 8003590:	4613      	mov	r3, r2
        return instance;
 8003592:	4a0c      	ldr	r2, [pc, #48]	; (80035c4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
 8003594:	b570      	push	{r4, r5, r6, lr}
 8003596:	6814      	ldr	r4, [r2, #0]
 8003598:	4605      	mov	r5, r0
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 800359a:	b92c      	cbnz	r4, 80035a8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x18>
 800359c:	4b0a      	ldr	r3, [pc, #40]	; (80035c8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 800359e:	2135      	movs	r1, #53	; 0x35
 80035a0:	4a0a      	ldr	r2, [pc, #40]	; (80035cc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 80035a2:	480b      	ldr	r0, [pc, #44]	; (80035d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 80035a4:	f01d fbe4 	bl	8020d70 <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80035a8:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 80035ac:	b10a      	cbz	r2, 80035b2 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x22>
 80035ae:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80035b0:	b900      	cbnz	r0, 80035b4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x24>
            return instance->lcdRef;
 80035b2:	68a0      	ldr	r0, [r4, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 80035b4:	6802      	ldr	r2, [r0, #0]
 80035b6:	6a94      	ldr	r4, [r2, #40]	; 0x28
 80035b8:	460a      	mov	r2, r1
 80035ba:	4629      	mov	r1, r5
 80035bc:	46a4      	mov	ip, r4
    }
 80035be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 80035c2:	4760      	bx	ip
 80035c4:	200125b0 	.word	0x200125b0
 80035c8:	08022a33 	.word	0x08022a33
 80035cc:	08022bc8 	.word	0x08022bc8
 80035d0:	08022a76 	.word	0x08022a76

080035d4 <_ZN8touchgfx8TextAreaC1Ev>:
 80035d4:	2101      	movs	r1, #1
        this->x = x;
 80035d6:	2200      	movs	r2, #0
 80035d8:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80035dc:	490e      	ldr	r1, [pc, #56]	; (8003618 <_ZN8touchgfx8TextAreaC1Ev+0x44>)
 80035de:	8082      	strh	r2, [r0, #4]
 80035e0:	6001      	str	r1, [r0, #0]
        : typedTextId(id)
 80035e2:	490e      	ldr	r1, [pc, #56]	; (800361c <_ZN8touchgfx8TextAreaC1Ev+0x48>)
        this->y = y;
 80035e4:	80c2      	strh	r2, [r0, #6]
 80035e6:	6281      	str	r1, [r0, #40]	; 0x28
 80035e8:	f64f 71ff 	movw	r1, #65535	; 0xffff
        this->width = width;
 80035ec:	8102      	strh	r2, [r0, #8]
 80035ee:	8581      	strh	r1, [r0, #44]	; 0x2c
        color = col;
 80035f0:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
        this->height = height;
 80035f4:	8142      	strh	r2, [r0, #10]
        x = 0;
 80035f6:	8182      	strh	r2, [r0, #12]
        y = 0;
 80035f8:	81c2      	strh	r2, [r0, #14]
        width = 0;
 80035fa:	8202      	strh	r2, [r0, #16]
        height = 0;
 80035fc:	8242      	strh	r2, [r0, #18]
 80035fe:	61c2      	str	r2, [r0, #28]
 8003600:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
        color = col;
 8003604:	6302      	str	r2, [r0, #48]	; 0x30
 8003606:	6341      	str	r1, [r0, #52]	; 0x34
 8003608:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 800360c:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
 8003610:	e9c0 2205 	strd	r2, r2, [r0, #20]
    }
 8003614:	4770      	bx	lr
 8003616:	bf00      	nop
 8003618:	080243ec 	.word	0x080243ec
 800361c:	08022484 	.word	0x08022484

08003620 <_ZN12MainViewBaseC1Ev>:
MainViewBase::MainViewBase() :
 8003620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003624:	4604      	mov	r4, r0
 8003626:	b08b      	sub	sp, #44	; 0x2c
        : presenter(0)
 8003628:	2500      	movs	r5, #0
 800362a:	f00e fbc3 	bl	8011db4 <_ZN8touchgfx6ScreenC1Ev>
    graphClickedCallback(this, &MainViewBase::graphClickedCallbackHandler)
 800362e:	4622      	mov	r2, r4
 8003630:	4bd6      	ldr	r3, [pc, #856]	; (800398c <_ZN12MainViewBaseC1Ev+0x36c>)
 8003632:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003634:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 8003638:	f842 3b40 	str.w	r3, [r2], #64
 800363c:	4610      	mov	r0, r2
 800363e:	9205      	str	r2, [sp, #20]
 8003640:	f7ff ff8c 	bl	800355c <_ZN8touchgfx3BoxC1Ev>
 8003644:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8003648:	f204 4abc 	addw	sl, r4, #1212	; 0x4bc
 800364c:	f504 69a0 	add.w	r9, r4, #1280	; 0x500
 8003650:	f504 68aa 	add.w	r8, r4, #1360	; 0x550
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 8003654:	4618      	mov	r0, r3
 8003656:	9306      	str	r3, [sp, #24]
 8003658:	f7ff ff80 	bl	800355c <_ZN8touchgfx3BoxC1Ev>
 800365c:	4bcc      	ldr	r3, [pc, #816]	; (8003990 <_ZN12MainViewBaseC1Ev+0x370>)
{
public:
    GraphWrapAndClear()
        : DataGraphWrapAndClear(CAPACITY, yValues)
 800365e:	f504 72f4 	add.w	r2, r4, #488	; 0x1e8
 8003662:	2196      	movs	r1, #150	; 0x96
 8003664:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003666:	4630      	mov	r0, r6
 8003668:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
        touchable = touch;
 800366c:	2701      	movs	r7, #1
 800366e:	f8a4 509c 	strh.w	r5, [r4, #156]	; 0x9c
    __background.setPosition(0, 0, 800, 480);
 8003672:	f44f 7bf0 	mov.w	fp, #480	; 0x1e0
 8003676:	f00b f981 	bl	800e97c <_ZN8touchgfx21DataGraphWrapAndClearC1EsPi>
 800367a:	4bc6      	ldr	r3, [pc, #792]	; (8003994 <_ZN12MainViewBaseC1Ev+0x374>)
 800367c:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
    graphClickedCallback(this, &MainViewBase::graphClickedCallbackHandler)
 8003680:	f504 6388 	add.w	r3, r4, #1088	; 0x440
 8003684:	4618      	mov	r0, r3
 8003686:	9303      	str	r3, [sp, #12]
 8003688:	f00a facc 	bl	800dc24 <_ZN8touchgfx17GraphElementBoxesC1Ev>
 800368c:	f204 437c 	addw	r3, r4, #1148	; 0x47c
 8003690:	4618      	mov	r0, r3
 8003692:	9302      	str	r3, [sp, #8]
 8003694:	f00a faae 	bl	800dbf4 <_ZN8touchgfx21GraphElementHistogramC1Ev>
 * GraphElementGridY draws horizontal lines at selected intervals along the y axis. By combining
 * two GraphElementGridY instances, it is possible to have minor and major grid lines.
 *
 * @note The grid lines are drawn using LCD::fillRect for higher performance.
 */
class GraphElementGridY : public GraphElementGridBase
 8003698:	4650      	mov	r0, sl
 800369a:	f00a f8cf 	bl	800d83c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800369e:	4bbe      	ldr	r3, [pc, #760]	; (8003998 <_ZN12MainViewBaseC1Ev+0x378>)

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 80036a0:	4648      	mov	r0, r9
 80036a2:	f8c4 34bc 	str.w	r3, [r4, #1212]	; 0x4bc
 80036a6:	f00a fae5 	bl	800dc74 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80036aa:	4bbc      	ldr	r3, [pc, #752]	; (800399c <_ZN12MainViewBaseC1Ev+0x37c>)

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 80036ac:	4640      	mov	r0, r8
class GraphLabelsX : public GraphLabelsBase
 80036ae:	f8c4 3500 	str.w	r3, [r4, #1280]	; 0x500
class GraphLabelsY : public GraphLabelsBase
 80036b2:	f00a fadf 	bl	800dc74 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80036b6:	4bba      	ldr	r3, [pc, #744]	; (80039a0 <_ZN12MainViewBaseC1Ev+0x380>)
 80036b8:	f8c4 3550 	str.w	r3, [r4, #1360]	; 0x550
 80036bc:	f504 63b4 	add.w	r3, r4, #1440	; 0x5a0
        : TextArea(), wildcard(0)
 80036c0:	4618      	mov	r0, r3
 80036c2:	9304      	str	r3, [sp, #16]
 80036c4:	f7ff ff86 	bl	80035d4 <_ZN8touchgfx8TextAreaC1Ev>
        : T()
 80036c8:	4bb6      	ldr	r3, [pc, #728]	; (80039a4 <_ZN12MainViewBaseC1Ev+0x384>)
 80036ca:	f884 75c4 	strb.w	r7, [r4, #1476]	; 0x5c4
 80036ce:	f8c4 35a0 	str.w	r3, [r4, #1440]	; 0x5a0
 80036d2:	f504 63bc 	add.w	r3, r4, #1504	; 0x5e0
 80036d6:	f8c4 55dc 	str.w	r5, [r4, #1500]	; 0x5dc
 80036da:	4618      	mov	r0, r3
 80036dc:	9307      	str	r3, [sp, #28]
 80036de:	f7ff ff79 	bl	80035d4 <_ZN8touchgfx8TextAreaC1Ev>
    {
 80036e2:	4bb1      	ldr	r3, [pc, #708]	; (80039a8 <_ZN12MainViewBaseC1Ev+0x388>)
    __background.setPosition(0, 0, 800, 480);
 80036e4:	f8cd b000 	str.w	fp, [sp]
 80036e8:	462a      	mov	r2, r5
 80036ea:	f8c4 36e8 	str.w	r3, [r4, #1768]	; 0x6e8
 80036ee:	4629      	mov	r1, r5
        this->pmemfun_2 = pmemfun_2;
 80036f0:	4bae      	ldr	r3, [pc, #696]	; (80039ac <_ZN12MainViewBaseC1Ev+0x38c>)
 80036f2:	9805      	ldr	r0, [sp, #20]
 80036f4:	f8c4 36f0 	str.w	r3, [r4, #1776]	; 0x6f0
 80036f8:	f44f 7348 	mov.w	r3, #800	; 0x320
    graphClickedCallback(this, &MainViewBase::graphClickedCallbackHandler)
 80036fc:	f8a4 56e4 	strh.w	r5, [r4, #1764]	; 0x6e4
        this->pobject = pobject;
 8003700:	f8c4 46ec 	str.w	r4, [r4, #1772]	; 0x6ec
        this->pmemfun_2 = pmemfun_2;
 8003704:	f8c4 56f4 	str.w	r5, [r4, #1780]	; 0x6f4
    __background.setPosition(0, 0, 800, 480);
 8003708:	f7ff ff0c 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 800370c:	462a      	mov	r2, r5
 800370e:	4629      	mov	r1, r5
 8003710:	4628      	mov	r0, r5
 8003712:	f7ff ff3d 	bl	8003590 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    graphBackground.setPosition(0, 0, 800, 480);
 8003716:	f44f 7348 	mov.w	r3, #800	; 0x320
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 800371a:	66a0      	str	r0, [r4, #104]	; 0x68
 800371c:	462a      	mov	r2, r5
 800371e:	f8cd b000 	str.w	fp, [sp]
 8003722:	4629      	mov	r1, r5
 8003724:	9806      	ldr	r0, [sp, #24]
 8003726:	f7ff fefd 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
    graphBackground.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 800372a:	462a      	mov	r2, r5
 800372c:	4629      	mov	r1, r5
 800372e:	4628      	mov	r0, r5
 8003730:	f7ff ff2e 	bl	8003590 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    graphBackground.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003734:	462a      	mov	r2, r5
 8003736:	f8c4 0094 	str.w	r0, [r4, #148]	; 0x94
 800373a:	4629      	mov	r1, r5
 800373c:	4628      	mov	r0, r5
 800373e:	f7ff ff27 	bl	8003590 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    My_graph.setScale(1);
 8003742:	4639      	mov	r1, r7
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
    {
        borderColor = color;
 8003744:	f8c4 0098 	str.w	r0, [r4, #152]	; 0x98
 8003748:	4630      	mov	r0, r6
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 800374a:	f8a4 709c 	strh.w	r7, [r4, #156]	; 0x9c
 800374e:	f009 fcf5 	bl	800d13c <_ZN8touchgfx22AbstractDataGraphWithY8setScaleEi>
    My_graph.setGraphRangeX(0, 150);
 8003752:	2296      	movs	r2, #150	; 0x96
 8003754:	4629      	mov	r1, r5
 8003756:	4630      	mov	r0, r6
 8003758:	f009 f8a4 	bl	800c8a4 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii>
    My_graph.setPosition(0, 0, 800, 480);
 800375c:	f8cd b000 	str.w	fp, [sp]
    My_graph.setGraphAreaMargin(10, 22, 19, 20);
 8003760:	f04f 0b14 	mov.w	fp, #20
    My_graph.setPosition(0, 0, 800, 480);
 8003764:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003768:	462a      	mov	r2, r5
 800376a:	4629      	mov	r1, r5
 800376c:	4630      	mov	r0, r6
 800376e:	f7ff fed9 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
    My_graph.setGraphAreaMargin(10, 22, 19, 20);
 8003772:	2313      	movs	r3, #19
 8003774:	2216      	movs	r2, #22
 8003776:	210a      	movs	r1, #10
 8003778:	4630      	mov	r0, r6
 800377a:	f8cd b000 	str.w	fp, [sp]
 800377e:	f009 fc2e 	bl	800cfde <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    My_graph.setGraphAreaPadding(10, 6, -3, 6);
 8003782:	2206      	movs	r2, #6
 8003784:	f06f 0302 	mvn.w	r3, #2
 8003788:	210a      	movs	r1, #10
 800378a:	9200      	str	r2, [sp, #0]
 800378c:	4630      	mov	r0, r6
 800378e:	f009 f9ea 	bl	800cb66 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    My_graph.setGraphRangeY(0, 260);
 8003792:	f44f 7282 	mov.w	r2, #260	; 0x104
 8003796:	4629      	mov	r1, r5
 8003798:	4630      	mov	r0, r6
 800379a:	f008 ffe5 	bl	800c768 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEii>
    My_graph.setClickAction(graphClickedCallback);
 800379e:	f504 61dd 	add.w	r1, r4, #1768	; 0x6e8
 80037a2:	4630      	mov	r0, r6
 80037a4:	f009 fb57 	bl	800ce56 <_ZN8touchgfx17AbstractDataGraph14setClickActionERNS_15GenericCallbackIRKS0_RKNS0_15GraphClickEventEvEE>
    My_graphMajorYAxisGrid.setScale(1);
 80037a8:	4639      	mov	r1, r7
 80037aa:	4650      	mov	r0, sl
 80037ac:	f009 fdb0 	bl	800d310 <_ZN8touchgfx20AbstractGraphElement8setScaleEi>
    My_graphMajorYAxisGrid.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80037b0:	22ff      	movs	r2, #255	; 0xff
 80037b2:	4611      	mov	r1, r2
 80037b4:	4610      	mov	r0, r2
 80037b6:	f7ff feeb 	bl	8003590 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80037ba:	4601      	mov	r1, r0
 80037bc:	4650      	mov	r0, sl
 80037be:	f009 fd1a 	bl	800d1f6 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>
    My_graphMajorYAxisGrid.setInterval(50);
 80037c2:	4650      	mov	r0, sl
 80037c4:	2132      	movs	r1, #50	; 0x32
 80037c6:	f00a f859 	bl	800d87c <_ZN8touchgfx20GraphElementGridBase11setIntervalEi>
    My_graphMajorYAxisGrid.setLineWidth(1);
 80037ca:	4639      	mov	r1, r7
 80037cc:	4650      	mov	r0, sl
 80037ce:	f00a f85c 	bl	800d88a <_ZN8touchgfx20GraphElementGridBase12setLineWidthEh>
    My_graph.addGraphElement(My_graphMajorYAxisGrid);
 80037d2:	4651      	mov	r1, sl
 80037d4:	4630      	mov	r0, r6
 80037d6:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 80039d4 <_ZN12MainViewBaseC1Ev+0x3b4>
 80037da:	f009 fa81 	bl	800cce0 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    My_graphMajorXAxisLabel.setScale(1);
 80037de:	4639      	mov	r1, r7
 80037e0:	4648      	mov	r0, r9
 80037e2:	f009 fd95 	bl	800d310 <_ZN8touchgfx20AbstractGraphElement8setScaleEi>
    My_graphMajorXAxisLabel.setInterval(20);
 80037e6:	4659      	mov	r1, fp
 80037e8:	4648      	mov	r0, r9
 80037ea:	f00a fa75 	bl	800dcd8 <_ZN8touchgfx15GraphLabelsBase11setIntervalEi>
    My_graphMajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T_SINGLEUSEID2));
 80037ee:	a908      	add	r1, sp, #32
 80037f0:	4648      	mov	r0, r9
 80037f2:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80037f6:	f8cd a020 	str.w	sl, [sp, #32]
 80037fa:	f00a fa8c 	bl	800dd16 <_ZN8touchgfx15GraphLabelsBase17setLabelTypedTextERKNS_9TypedTextE>
    My_graphMajorXAxisLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80037fe:	22ff      	movs	r2, #255	; 0xff
 8003800:	4611      	mov	r1, r2
 8003802:	4610      	mov	r0, r2
 8003804:	f7ff fec4 	bl	8003590 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003808:	4601      	mov	r1, r0
 800380a:	4648      	mov	r0, r9
 800380c:	f009 fcf3 	bl	800d1f6 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>
    My_graph.addBottomElement(My_graphMajorXAxisLabel);
 8003810:	4649      	mov	r1, r9
 8003812:	4630      	mov	r0, r6
 8003814:	f009 fa88 	bl	800cd28 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
    My_graphMajorYAxisLabel.setScale(1);
 8003818:	4639      	mov	r1, r7
 800381a:	4640      	mov	r0, r8
 800381c:	f009 fd78 	bl	800d310 <_ZN8touchgfx20AbstractGraphElement8setScaleEi>
    My_graphMajorYAxisLabel.setInterval(20);
 8003820:	4659      	mov	r1, fp
 8003822:	4640      	mov	r0, r8
 8003824:	f00a fa58 	bl	800dcd8 <_ZN8touchgfx15GraphLabelsBase11setIntervalEi>
    My_graphMajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8003828:	a908      	add	r1, sp, #32
 800382a:	4640      	mov	r0, r8
 800382c:	f8cd a020 	str.w	sl, [sp, #32]
 8003830:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8003834:	f00a fa6f 	bl	800dd16 <_ZN8touchgfx15GraphLabelsBase17setLabelTypedTextERKNS_9TypedTextE>
    My_graphMajorYAxisLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003838:	22ff      	movs	r2, #255	; 0xff
 800383a:	4611      	mov	r1, r2
 800383c:	4610      	mov	r0, r2
 800383e:	f7ff fea7 	bl	8003590 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003842:	4601      	mov	r1, r0
 8003844:	4640      	mov	r0, r8
 8003846:	f009 fcd6 	bl	800d1f6 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>
    My_graph.addLeftElement(My_graphMajorYAxisLabel);
 800384a:	4641      	mov	r1, r8
 800384c:	4630      	mov	r0, r6
 800384e:	f009 fa59 	bl	800cd04 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
    My_graphHistogram1.setScale(1);
 8003852:	4639      	mov	r1, r7
 8003854:	9802      	ldr	r0, [sp, #8]
 8003856:	f009 fd5b 	bl	800d310 <_ZN8touchgfx20AbstractGraphElement8setScaleEi>
    My_graphHistogram1.setColor(touchgfx::Color::getColorFrom24BitRGB(108, 255, 0));
 800385a:	462a      	mov	r2, r5
 800385c:	21ff      	movs	r1, #255	; 0xff
 800385e:	206c      	movs	r0, #108	; 0x6c
 8003860:	f7ff fe96 	bl	8003590 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003864:	4601      	mov	r1, r0
 8003866:	9802      	ldr	r0, [sp, #8]
 8003868:	f009 fcc5 	bl	800d1f6 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>
    My_graphHistogram1.setBarWidth(1);
 800386c:	4639      	mov	r1, r7
 800386e:	9802      	ldr	r0, [sp, #8]
 8003870:	f00a f9d6 	bl	800dc20 <_ZN8touchgfx21GraphElementHistogram11setBarWidthEt>
    My_graphHistogram1.setBaseline(0);
 8003874:	4629      	mov	r1, r5
 8003876:	9802      	ldr	r0, [sp, #8]
 8003878:	f00a f9ce 	bl	800dc18 <_ZN8touchgfx21GraphElementHistogram11setBaselineEi>
    My_graph.addGraphElement(My_graphHistogram1);
 800387c:	9902      	ldr	r1, [sp, #8]
 800387e:	4630      	mov	r0, r6
 8003880:	f009 fa2e 	bl	800cce0 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    My_graphBoxes1.setScale(1);
 8003884:	4639      	mov	r1, r7
 8003886:	9803      	ldr	r0, [sp, #12]
    Unicode::snprintf(txt_areaBuffer, TXT_AREA_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID8).getText());
 8003888:	f204 671c 	addw	r7, r4, #1564	; 0x61c
    My_graphBoxes1.setScale(1);
 800388c:	f009 fd40 	bl	800d310 <_ZN8touchgfx20AbstractGraphElement8setScaleEi>
    My_graphBoxes1.setColor(touchgfx::Color::getColorFrom24BitRGB(197, 164, 20));
 8003890:	465a      	mov	r2, fp
 8003892:	21a4      	movs	r1, #164	; 0xa4
 8003894:	20c5      	movs	r0, #197	; 0xc5
 8003896:	f7ff fe7b 	bl	8003590 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800389a:	4601      	mov	r1, r0
 800389c:	9803      	ldr	r0, [sp, #12]
 800389e:	f009 fcaa 	bl	800d1f6 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>
    My_graphBoxes1.setBoxWidth(5);
 80038a2:	2105      	movs	r1, #5
 80038a4:	9803      	ldr	r0, [sp, #12]
 80038a6:	f00a f9c9 	bl	800dc3c <_ZN8touchgfx17GraphElementBoxes11setBoxWidthEt>
    My_graph.addGraphElement(My_graphBoxes1);
 80038aa:	9903      	ldr	r1, [sp, #12]
 80038ac:	4630      	mov	r0, r6
 80038ae:	f009 fa17 	bl	800cce0 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    txt_area.setPosition(0, 0, 800, 316);
 80038b2:	f44f 739e 	mov.w	r3, #316	; 0x13c
 80038b6:	462a      	mov	r2, r5
 80038b8:	4629      	mov	r1, r5
 80038ba:	9300      	str	r3, [sp, #0]
 80038bc:	f44f 7348 	mov.w	r3, #800	; 0x320
 80038c0:	9804      	ldr	r0, [sp, #16]
 80038c2:	f7ff fe2f 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
    txt_area.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80038c6:	22ff      	movs	r2, #255	; 0xff
        visible = vis;
 80038c8:	f884 55c5 	strb.w	r5, [r4, #1477]	; 0x5c5
 80038cc:	4611      	mov	r1, r2
 80038ce:	4610      	mov	r0, r2
 80038d0:	f7ff fe5e 	bl	8003590 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80038d4:	4b36      	ldr	r3, [pc, #216]	; (80039b0 <_ZN12MainViewBaseC1Ev+0x390>)
        this->color = color;
 80038d6:	f8c4 05d0 	str.w	r0, [r4, #1488]	; 0x5d0
 80038da:	681b      	ldr	r3, [r3, #0]
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 80038dc:	f8a4 b5d4 	strh.w	fp, [r4, #1492]	; 0x5d4
 80038e0:	b92b      	cbnz	r3, 80038ee <_ZN12MainViewBaseC1Ev+0x2ce>
 80038e2:	4b34      	ldr	r3, [pc, #208]	; (80039b4 <_ZN12MainViewBaseC1Ev+0x394>)
 80038e4:	21b1      	movs	r1, #177	; 0xb1
 80038e6:	4a34      	ldr	r2, [pc, #208]	; (80039b8 <_ZN12MainViewBaseC1Ev+0x398>)
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80038e8:	4834      	ldr	r0, [pc, #208]	; (80039bc <_ZN12MainViewBaseC1Ev+0x39c>)
 80038ea:	f01d fa41 	bl	8020d70 <__assert_func>
 80038ee:	4b34      	ldr	r3, [pc, #208]	; (80039c0 <_ZN12MainViewBaseC1Ev+0x3a0>)
 80038f0:	881b      	ldrh	r3, [r3, #0]
 80038f2:	2b05      	cmp	r3, #5
 80038f4:	d803      	bhi.n	80038fe <_ZN12MainViewBaseC1Ev+0x2de>
 80038f6:	4b33      	ldr	r3, [pc, #204]	; (80039c4 <_ZN12MainViewBaseC1Ev+0x3a4>)
 80038f8:	21b2      	movs	r1, #178	; 0xb2
 80038fa:	4a2f      	ldr	r2, [pc, #188]	; (80039b8 <_ZN12MainViewBaseC1Ev+0x398>)
 80038fc:	e7f4      	b.n	80038e8 <_ZN12MainViewBaseC1Ev+0x2c8>
        return texts->getText(typedTextId);
 80038fe:	4b32      	ldr	r3, [pc, #200]	; (80039c8 <_ZN12MainViewBaseC1Ev+0x3a8>)
 8003900:	2105      	movs	r1, #5
 8003902:	6818      	ldr	r0, [r3, #0]
 8003904:	f000 f9c8 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(txt_areaBuffer, TXT_AREA_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID8).getText());
 8003908:	4a30      	ldr	r2, [pc, #192]	; (80039cc <_ZN12MainViewBaseC1Ev+0x3ac>)
 800390a:	4603      	mov	r3, r0
 800390c:	2164      	movs	r1, #100	; 0x64
 800390e:	4638      	mov	r0, r7
 8003910:	f00f fedc 	bl	80136cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003914:	2304      	movs	r3, #4
    txt_area.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));
 8003916:	a908      	add	r1, sp, #32
 8003918:	9804      	ldr	r0, [sp, #16]
        wildcard = value;
 800391a:	f8c4 75dc 	str.w	r7, [r4, #1500]	; 0x5dc
 800391e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003922:	f8cd a020 	str.w	sl, [sp, #32]
 8003926:	f00b f9db 	bl	800ece0 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
        rect.x = x;
 800392a:	4b29      	ldr	r3, [pc, #164]	; (80039d0 <_ZN12MainViewBaseC1Ev+0x3b0>)
    txt_area2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 233));
 800392c:	22e9      	movs	r2, #233	; 0xe9
        visible = vis;
 800392e:	f884 5605 	strb.w	r5, [r4, #1541]	; 0x605
 8003932:	4629      	mov	r1, r5
        rect.x = x;
 8003934:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 8003938:	20ff      	movs	r0, #255	; 0xff
 800393a:	f7ff fe29 	bl	8003590 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800393e:	2303      	movs	r3, #3
 8003940:	f8a4 5614 	strh.w	r5, [r4, #1556]	; 0x614
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003944:	1d25      	adds	r5, r4, #4
        this->color = color;
 8003946:	f8c4 0610 	str.w	r0, [r4, #1552]	; 0x610
    txt_area2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
 800394a:	a908      	add	r1, sp, #32
 800394c:	9807      	ldr	r0, [sp, #28]
 800394e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003952:	f8cd a020 	str.w	sl, [sp, #32]
 8003956:	f00b f9c3 	bl	800ece0 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
 800395a:	9905      	ldr	r1, [sp, #20]
 800395c:	4628      	mov	r0, r5
 800395e:	f007 fe7f 	bl	800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003962:	9906      	ldr	r1, [sp, #24]
 8003964:	4628      	mov	r0, r5
 8003966:	f007 fe7b 	bl	800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800396a:	4631      	mov	r1, r6
 800396c:	4628      	mov	r0, r5
 800396e:	f007 fe77 	bl	800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003972:	9904      	ldr	r1, [sp, #16]
 8003974:	4628      	mov	r0, r5
 8003976:	f007 fe73 	bl	800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800397a:	4628      	mov	r0, r5
 800397c:	9907      	ldr	r1, [sp, #28]
 800397e:	f007 fe6f 	bl	800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003982:	4620      	mov	r0, r4
 8003984:	b00b      	add	sp, #44	; 0x2c
 8003986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800398a:	bf00      	nop
 800398c:	08022b9c 	.word	0x08022b9c
 8003990:	08024528 	.word	0x08024528
 8003994:	08022884 	.word	0x08022884
 8003998:	08023edc 	.word	0x08023edc
 800399c:	08024100 	.word	0x08024100
 80039a0:	08024188 	.word	0x08024188
 80039a4:	080229a8 	.word	0x080229a8
 80039a8:	08022a20 	.word	0x08022a20
 80039ac:	08003329 	.word	0x08003329
 80039b0:	20012600 	.word	0x20012600
 80039b4:	08022ab9 	.word	0x08022ab9
 80039b8:	08022c24 	.word	0x08022c24
 80039bc:	08022afb 	.word	0x08022afb
 80039c0:	20012604 	.word	0x20012604
 80039c4:	08022b42 	.word	0x08022b42
 80039c8:	2001260c 	.word	0x2001260c
 80039cc:	08022a30 	.word	0x08022a30
 80039d0:	013c0010 	.word	0x013c0010
 80039d4:	08022484 	.word	0x08022484

080039d8 <__tcf_0>:

touchgfx::GeneratedFont& getFont_NotoSans_Regular_10_4bpp();

touchgfx::GeneratedFont& getFont_NotoSans_Regular_10_4bpp()
{
    static touchgfx::GeneratedFont NotoSans_Regular_10_4bpp(glyphs_NotoSans_Regular_10_4bpp, 34, 10, 3, 4, 1, 1, 1, unicodes_NotoSans_Regular_10_4bpp, kerning_NotoSans_Regular_10_4bpp, 63, 0, 0);
 80039d8:	4770      	bx	lr
	...

080039dc <_Z32getFont_NotoSans_Regular_10_4bppv>:
{
 80039dc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont NotoSans_Regular_10_4bpp(glyphs_NotoSans_Regular_10_4bpp, 34, 10, 3, 4, 1, 1, 1, unicodes_NotoSans_Regular_10_4bpp, kerning_NotoSans_Regular_10_4bpp, 63, 0, 0);
 80039de:	4d15      	ldr	r5, [pc, #84]	; (8003a34 <_Z32getFont_NotoSans_Regular_10_4bppv+0x58>)
{
 80039e0:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont NotoSans_Regular_10_4bpp(glyphs_NotoSans_Regular_10_4bpp, 34, 10, 3, 4, 1, 1, 1, unicodes_NotoSans_Regular_10_4bpp, kerning_NotoSans_Regular_10_4bpp, 63, 0, 0);
 80039e2:	782c      	ldrb	r4, [r5, #0]
 80039e4:	f3bf 8f5b 	dmb	ish
 80039e8:	f014 0401 	ands.w	r4, r4, #1
 80039ec:	d11f      	bne.n	8003a2e <_Z32getFont_NotoSans_Regular_10_4bppv+0x52>
 80039ee:	4628      	mov	r0, r5
 80039f0:	f01b fe45 	bl	801f67e <__cxa_guard_acquire>
 80039f4:	b1d8      	cbz	r0, 8003a2e <_Z32getFont_NotoSans_Regular_10_4bppv+0x52>
 80039f6:	233f      	movs	r3, #63	; 0x3f
 80039f8:	2204      	movs	r2, #4
 80039fa:	490f      	ldr	r1, [pc, #60]	; (8003a38 <_Z32getFont_NotoSans_Regular_10_4bppv+0x5c>)
 80039fc:	9307      	str	r3, [sp, #28]
 80039fe:	4b0f      	ldr	r3, [pc, #60]	; (8003a3c <_Z32getFont_NotoSans_Regular_10_4bppv+0x60>)
 8003a00:	480f      	ldr	r0, [pc, #60]	; (8003a40 <_Z32getFont_NotoSans_Regular_10_4bppv+0x64>)
 8003a02:	9306      	str	r3, [sp, #24]
 8003a04:	4b0f      	ldr	r3, [pc, #60]	; (8003a44 <_Z32getFont_NotoSans_Regular_10_4bppv+0x68>)
 8003a06:	9305      	str	r3, [sp, #20]
 8003a08:	2301      	movs	r3, #1
 8003a0a:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8003a0e:	9302      	str	r3, [sp, #8]
 8003a10:	2303      	movs	r3, #3
 8003a12:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003a16:	e9cd 3200 	strd	r3, r2, [sp]
 8003a1a:	230a      	movs	r3, #10
 8003a1c:	2222      	movs	r2, #34	; 0x22
 8003a1e:	f7ff fc0b 	bl	8003238 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8003a22:	4628      	mov	r0, r5
 8003a24:	f01b fe37 	bl	801f696 <__cxa_guard_release>
 8003a28:	4807      	ldr	r0, [pc, #28]	; (8003a48 <_Z32getFont_NotoSans_Regular_10_4bppv+0x6c>)
 8003a2a:	f01d f9bf 	bl	8020dac <atexit>
    return NotoSans_Regular_10_4bpp;
}
 8003a2e:	4804      	ldr	r0, [pc, #16]	; (8003a40 <_Z32getFont_NotoSans_Regular_10_4bppv+0x64>)
 8003a30:	b00b      	add	sp, #44	; 0x2c
 8003a32:	bd30      	pop	{r4, r5, pc}
 8003a34:	200017a8 	.word	0x200017a8
 8003a38:	900153d4 	.word	0x900153d4
 8003a3c:	08025f68 	.word	0x08025f68
 8003a40:	200017ac 	.word	0x200017ac
 8003a44:	08022c54 	.word	0x08022c54
 8003a48:	080039d9 	.word	0x080039d9

08003a4c <__tcf_0>:

touchgfx::GeneratedFont& getFont_NotoSans_Regular_20_4bpp();

touchgfx::GeneratedFont& getFont_NotoSans_Regular_20_4bpp()
{
    static touchgfx::GeneratedFont NotoSans_Regular_20_4bpp(glyphs_NotoSans_Regular_20_4bpp, 95, 20, 5, 4, 1, 2, 1, unicodes_NotoSans_Regular_20_4bpp, kerning_NotoSans_Regular_20_4bpp, 63, 0, 0);
 8003a4c:	4770      	bx	lr
	...

08003a50 <_Z32getFont_NotoSans_Regular_20_4bppv>:
{
 8003a50:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont NotoSans_Regular_20_4bpp(glyphs_NotoSans_Regular_20_4bpp, 95, 20, 5, 4, 1, 2, 1, unicodes_NotoSans_Regular_20_4bpp, kerning_NotoSans_Regular_20_4bpp, 63, 0, 0);
 8003a52:	4d16      	ldr	r5, [pc, #88]	; (8003aac <_Z32getFont_NotoSans_Regular_20_4bppv+0x5c>)
{
 8003a54:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont NotoSans_Regular_20_4bpp(glyphs_NotoSans_Regular_20_4bpp, 95, 20, 5, 4, 1, 2, 1, unicodes_NotoSans_Regular_20_4bpp, kerning_NotoSans_Regular_20_4bpp, 63, 0, 0);
 8003a56:	782c      	ldrb	r4, [r5, #0]
 8003a58:	f3bf 8f5b 	dmb	ish
 8003a5c:	f014 0401 	ands.w	r4, r4, #1
 8003a60:	d120      	bne.n	8003aa4 <_Z32getFont_NotoSans_Regular_20_4bppv+0x54>
 8003a62:	4628      	mov	r0, r5
 8003a64:	f01b fe0b 	bl	801f67e <__cxa_guard_acquire>
 8003a68:	b1e0      	cbz	r0, 8003aa4 <_Z32getFont_NotoSans_Regular_20_4bppv+0x54>
 8003a6a:	233f      	movs	r3, #63	; 0x3f
 8003a6c:	2202      	movs	r2, #2
 8003a6e:	4910      	ldr	r1, [pc, #64]	; (8003ab0 <_Z32getFont_NotoSans_Regular_20_4bppv+0x60>)
 8003a70:	9307      	str	r3, [sp, #28]
 8003a72:	4b10      	ldr	r3, [pc, #64]	; (8003ab4 <_Z32getFont_NotoSans_Regular_20_4bppv+0x64>)
 8003a74:	4810      	ldr	r0, [pc, #64]	; (8003ab8 <_Z32getFont_NotoSans_Regular_20_4bppv+0x68>)
 8003a76:	9306      	str	r3, [sp, #24]
 8003a78:	4b10      	ldr	r3, [pc, #64]	; (8003abc <_Z32getFont_NotoSans_Regular_20_4bppv+0x6c>)
 8003a7a:	9305      	str	r3, [sp, #20]
 8003a7c:	2301      	movs	r3, #1
 8003a7e:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8003a82:	9302      	str	r3, [sp, #8]
 8003a84:	2204      	movs	r2, #4
 8003a86:	2305      	movs	r3, #5
 8003a88:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003a8c:	e9cd 3200 	strd	r3, r2, [sp]
 8003a90:	2314      	movs	r3, #20
 8003a92:	225f      	movs	r2, #95	; 0x5f
 8003a94:	f7ff fbd0 	bl	8003238 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8003a98:	4628      	mov	r0, r5
 8003a9a:	f01b fdfc 	bl	801f696 <__cxa_guard_release>
 8003a9e:	4808      	ldr	r0, [pc, #32]	; (8003ac0 <_Z32getFont_NotoSans_Regular_20_4bppv+0x70>)
 8003aa0:	f01d f984 	bl	8020dac <atexit>
    return NotoSans_Regular_20_4bpp;
}
 8003aa4:	4804      	ldr	r0, [pc, #16]	; (8003ab8 <_Z32getFont_NotoSans_Regular_20_4bppv+0x68>)
 8003aa6:	b00b      	add	sp, #44	; 0x2c
 8003aa8:	bd30      	pop	{r4, r5, pc}
 8003aaa:	bf00      	nop
 8003aac:	200017d0 	.word	0x200017d0
 8003ab0:	900155b0 	.word	0x900155b0
 8003ab4:	08025f6c 	.word	0x08025f6c
 8003ab8:	200017d4 	.word	0x200017d4
 8003abc:	08022c58 	.word	0x08022c58
 8003ac0:	08003a4d 	.word	0x08003a4d

08003ac4 <__tcf_0>:

touchgfx::GeneratedFont& getFont_NotoSans_Regular_75_4bpp();

touchgfx::GeneratedFont& getFont_NotoSans_Regular_75_4bpp()
{
    static touchgfx::GeneratedFont NotoSans_Regular_75_4bpp(glyphs_NotoSans_Regular_75_4bpp, 95, 75, 18, 4, 1, 6, 3, unicodes_NotoSans_Regular_75_4bpp, kerning_NotoSans_Regular_75_4bpp, 63, 0, 0);
 8003ac4:	4770      	bx	lr
	...

08003ac8 <_Z32getFont_NotoSans_Regular_75_4bppv>:
{
 8003ac8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont NotoSans_Regular_75_4bpp(glyphs_NotoSans_Regular_75_4bpp, 95, 75, 18, 4, 1, 6, 3, unicodes_NotoSans_Regular_75_4bpp, kerning_NotoSans_Regular_75_4bpp, 63, 0, 0);
 8003aca:	4d16      	ldr	r5, [pc, #88]	; (8003b24 <_Z32getFont_NotoSans_Regular_75_4bppv+0x5c>)
{
 8003acc:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont NotoSans_Regular_75_4bpp(glyphs_NotoSans_Regular_75_4bpp, 95, 75, 18, 4, 1, 6, 3, unicodes_NotoSans_Regular_75_4bpp, kerning_NotoSans_Regular_75_4bpp, 63, 0, 0);
 8003ace:	782c      	ldrb	r4, [r5, #0]
 8003ad0:	f3bf 8f5b 	dmb	ish
 8003ad4:	f014 0401 	ands.w	r4, r4, #1
 8003ad8:	d121      	bne.n	8003b1e <_Z32getFont_NotoSans_Regular_75_4bppv+0x56>
 8003ada:	4628      	mov	r0, r5
 8003adc:	f01b fdcf 	bl	801f67e <__cxa_guard_acquire>
 8003ae0:	b1e8      	cbz	r0, 8003b1e <_Z32getFont_NotoSans_Regular_75_4bppv+0x56>
 8003ae2:	233f      	movs	r3, #63	; 0x3f
 8003ae4:	2203      	movs	r2, #3
 8003ae6:	2101      	movs	r1, #1
 8003ae8:	480f      	ldr	r0, [pc, #60]	; (8003b28 <_Z32getFont_NotoSans_Regular_75_4bppv+0x60>)
 8003aea:	9307      	str	r3, [sp, #28]
 8003aec:	4b0f      	ldr	r3, [pc, #60]	; (8003b2c <_Z32getFont_NotoSans_Regular_75_4bppv+0x64>)
 8003aee:	9306      	str	r3, [sp, #24]
 8003af0:	4b0f      	ldr	r3, [pc, #60]	; (8003b30 <_Z32getFont_NotoSans_Regular_75_4bppv+0x68>)
 8003af2:	9305      	str	r3, [sp, #20]
 8003af4:	2306      	movs	r3, #6
 8003af6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003afa:	2304      	movs	r3, #4
 8003afc:	225f      	movs	r2, #95	; 0x5f
 8003afe:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8003b02:	2312      	movs	r3, #18
 8003b04:	490b      	ldr	r1, [pc, #44]	; (8003b34 <_Z32getFont_NotoSans_Regular_75_4bppv+0x6c>)
 8003b06:	9300      	str	r3, [sp, #0]
 8003b08:	234b      	movs	r3, #75	; 0x4b
 8003b0a:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003b0e:	f7ff fb93 	bl	8003238 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8003b12:	4628      	mov	r0, r5
 8003b14:	f01b fdbf 	bl	801f696 <__cxa_guard_release>
 8003b18:	4807      	ldr	r0, [pc, #28]	; (8003b38 <_Z32getFont_NotoSans_Regular_75_4bppv+0x70>)
 8003b1a:	f01d f947 	bl	8020dac <atexit>
    return NotoSans_Regular_75_4bpp;
}
 8003b1e:	4802      	ldr	r0, [pc, #8]	; (8003b28 <_Z32getFont_NotoSans_Regular_75_4bppv+0x60>)
 8003b20:	b00b      	add	sp, #44	; 0x2c
 8003b22:	bd30      	pop	{r4, r5, pc}
 8003b24:	200017f8 	.word	0x200017f8
 8003b28:	200017fc 	.word	0x200017fc
 8003b2c:	08025f70 	.word	0x08025f70
 8003b30:	08022c5c 	.word	0x08022c5c
 8003b34:	90015ae4 	.word	0x90015ae4
 8003b38:	08003ac5 	.word	0x08003ac5

08003b3c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8003b3c:	2000      	movs	r0, #0
 8003b3e:	4770      	bx	lr

08003b40 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003b40:	b40e      	push	{r1, r2, r3}
 8003b42:	b503      	push	{r0, r1, lr}
 8003b44:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003b46:	2100      	movs	r1, #0
{
 8003b48:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8003b4c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003b4e:	f00d fc35 	bl	80113bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003b52:	b002      	add	sp, #8
 8003b54:	f85d eb04 	ldr.w	lr, [sp], #4
 8003b58:	b003      	add	sp, #12
 8003b5a:	4770      	bx	lr

08003b5c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003b5c:	b40c      	push	{r2, r3}
 8003b5e:	b507      	push	{r0, r1, r2, lr}
 8003b60:	ab04      	add	r3, sp, #16
 8003b62:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003b66:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003b68:	f00d fc28 	bl	80113bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003b6c:	b003      	add	sp, #12
 8003b6e:	f85d eb04 	ldr.w	lr, [sp], #4
 8003b72:	b002      	add	sp, #8
 8003b74:	4770      	bx	lr
	...

08003b78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003b78:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 8003b7a:	b510      	push	{r4, lr}
 8003b7c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8003b7e:	b373      	cbz	r3, 8003bde <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8003b80:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8003b82:	b92b      	cbnz	r3, 8003b90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003b84:	4b18      	ldr	r3, [pc, #96]	; (8003be8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8003b86:	21c0      	movs	r1, #192	; 0xc0
 8003b88:	4a18      	ldr	r2, [pc, #96]	; (8003bec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8003b8a:	4819      	ldr	r0, [pc, #100]	; (8003bf0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8003b8c:	f01d f8f0 	bl	8020d70 <__assert_func>
            return buffer[pos];
 8003b90:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8003b92:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8003b96:	8b5b      	ldrh	r3, [r3, #26]
 8003b98:	b30b      	cbz	r3, 8003bde <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8003b9a:	f00e ffdf 	bl	8012b5c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8003b9e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8003ba0:	2b01      	cmp	r3, #1
 8003ba2:	d803      	bhi.n	8003bac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003ba4:	4b13      	ldr	r3, [pc, #76]	; (8003bf4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8003ba6:	21c5      	movs	r1, #197	; 0xc5
 8003ba8:	4a13      	ldr	r2, [pc, #76]	; (8003bf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8003baa:	e7ee      	b.n	8003b8a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8003bac:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 8003bae:	f640 103f 	movw	r0, #2367	; 0x93f
 8003bb2:	1c53      	adds	r3, r2, #1
 8003bb4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8003bb6:	2b09      	cmp	r3, #9
 8003bb8:	4619      	mov	r1, r3
 8003bba:	bf88      	it	hi
 8003bbc:	f1a3 010a 	subhi.w	r1, r3, #10
 8003bc0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8003bc4:	8b49      	ldrh	r1, [r1, #26]
 8003bc6:	4281      	cmp	r1, r0
 8003bc8:	d109      	bne.n	8003bde <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003bca:	2b0a      	cmp	r3, #10
 8003bcc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003bd0:	bf28      	it	cs
 8003bd2:	2300      	movcs	r3, #0
            return buffer[pos];
 8003bd4:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 8003bd6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8003bda:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 8003bdc:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8003bde:	4620      	mov	r0, r4
}
 8003be0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003be4:	f00e be9e 	b.w	8012924 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003be8:	08022c60 	.word	0x08022c60
 8003bec:	08022d93 	.word	0x08022d93
 8003bf0:	08022c69 	.word	0x08022c69
 8003bf4:	08022cb3 	.word	0x08022cb3
 8003bf8:	08022cc1 	.word	0x08022cc1

08003bfc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003bfc:	f00e be4c 	b.w	8012898 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003c00 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003c00:	b510      	push	{r4, lr}
 8003c02:	b086      	sub	sp, #24
 8003c04:	ac02      	add	r4, sp, #8
 8003c06:	e884 0006 	stmia.w	r4, {r1, r2}
 8003c0a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8003c0c:	ab0a      	add	r3, sp, #40	; 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003c0e:	4621      	mov	r1, r4
    va_start(pArg, format);
 8003c10:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003c12:	9301      	str	r3, [sp, #4]
 8003c14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c16:	9300      	str	r3, [sp, #0]
 8003c18:	9b08      	ldr	r3, [sp, #32]
 8003c1a:	f00c f951 	bl	800fec0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8003c1e:	b006      	add	sp, #24
 8003c20:	bd10      	pop	{r4, pc}
	...

08003c24 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003c24:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003c26:	b9d8      	cbnz	r0, 8003c60 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        if (languagesArray[id] != 0)
 8003c28:	4b11      	ldr	r3, [pc, #68]	; (8003c70 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>)
 8003c2a:	4812      	ldr	r0, [pc, #72]	; (8003c74 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003c2c:	681b      	ldr	r3, [r3, #0]
 8003c2e:	4912      	ldr	r1, [pc, #72]	; (8003c78 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003c30:	b1bb      	cbz	r3, 8003c62 <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003c32:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003c34:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003c36:	441a      	add	r2, r3
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003c38:	441c      	add	r4, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003c3a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003c3c:	685a      	ldr	r2, [r3, #4]
 8003c3e:	441a      	add	r2, r3
 8003c40:	600a      	str	r2, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
 8003c42:	b16c      	cbz	r4, 8003c60 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        currentLanguage = id;
 8003c44:	4b0d      	ldr	r3, [pc, #52]	; (8003c7c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003c46:	2200      	movs	r2, #0
 8003c48:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003c4a:	f000 f835 	bl	8003cb8 <_ZN17TypedTextDatabase8getFontsEv>
 8003c4e:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003c50:	f000 f830 	bl	8003cb4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003c54:	4b0a      	ldr	r3, [pc, #40]	; (8003c80 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003c56:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003c58:	4b0a      	ldr	r3, [pc, #40]	; (8003c84 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003c5a:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003c5c:	4b0a      	ldr	r3, [pc, #40]	; (8003c88 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003c5e:	8018      	strh	r0, [r3, #0]
    }
}
 8003c60:	bd38      	pop	{r3, r4, r5, pc}
            currentLanguagePtr = texts_all_languages;
 8003c62:	4b0a      	ldr	r3, [pc, #40]	; (8003c8c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003c64:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003c66:	4b0a      	ldr	r3, [pc, #40]	; (8003c90 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003c68:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003c6a:	4b0a      	ldr	r3, [pc, #40]	; (8003c94 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003c6c:	681c      	ldr	r4, [r3, #0]
 8003c6e:	e7e8      	b.n	8003c42 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
 8003c70:	20001820 	.word	0x20001820
 8003c74:	20001824 	.word	0x20001824
 8003c78:	20001828 	.word	0x20001828
 8003c7c:	2000182c 	.word	0x2000182c
 8003c80:	20012600 	.word	0x20012600
 8003c84:	20012608 	.word	0x20012608
 8003c88:	20012604 	.word	0x20012604
 8003c8c:	90016030 	.word	0x90016030
 8003c90:	90016018 	.word	0x90016018
 8003c94:	900160a8 	.word	0x900160a8

08003c98 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8003c98:	4b04      	ldr	r3, [pc, #16]	; (8003cac <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8003c9a:	681b      	ldr	r3, [r3, #0]
 8003c9c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8003ca0:	4b03      	ldr	r3, [pc, #12]	; (8003cb0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8003ca2:	681b      	ldr	r3, [r3, #0]
}
 8003ca4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003ca8:	4770      	bx	lr
 8003caa:	bf00      	nop
 8003cac:	20001828 	.word	0x20001828
 8003cb0:	20001824 	.word	0x20001824

08003cb4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003cb4:	2006      	movs	r0, #6
 8003cb6:	4770      	bx	lr

08003cb8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003cb8:	4800      	ldr	r0, [pc, #0]	; (8003cbc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8003cba:	4770      	bx	lr
 8003cbc:	20001830 	.word	0x20001830

08003cc0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_NotoSans_Regular_20_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 8003cc0:	b510      	push	{r4, lr}
};
 8003cc2:	4c05      	ldr	r4, [pc, #20]	; (8003cd8 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_NotoSans_Regular_10_4bpp()),
 8003cc4:	f7ff fe8a 	bl	80039dc <_Z32getFont_NotoSans_Regular_10_4bppv>
};
 8003cc8:	6020      	str	r0, [r4, #0]
    &(getFont_NotoSans_Regular_75_4bpp()),
 8003cca:	f7ff fefd 	bl	8003ac8 <_Z32getFont_NotoSans_Regular_75_4bppv>
};
 8003cce:	6060      	str	r0, [r4, #4]
    &(getFont_NotoSans_Regular_20_4bpp())
 8003cd0:	f7ff febe 	bl	8003a50 <_Z32getFont_NotoSans_Regular_20_4bppv>
};
 8003cd4:	60a0      	str	r0, [r4, #8]
}  // namespace TypedTextDatabase
 8003cd6:	bd10      	pop	{r4, pc}
 8003cd8:	20001830 	.word	0x20001830

08003cdc <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003cdc:	4770      	bx	lr

08003cde <_ZN19FrontendApplicationD0Ev>:
 8003cde:	b510      	push	{r4, lr}
 8003ce0:	4604      	mov	r4, r0
 8003ce2:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8003ce6:	f01b fcb7 	bl	801f658 <_ZdlPvj>
 8003cea:	4620      	mov	r0, r4
 8003cec:	bd10      	pop	{r4, pc}

08003cee <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003cee:	b510      	push	{r4, lr}
 8003cf0:	4604      	mov	r4, r0
    {
        model.tick();
 8003cf2:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8003cf6:	f000 f865 	bl	8003dc4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003cfa:	4620      	mov	r0, r4
    }
 8003cfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003d00:	f00c bc26 	b.w	8010550 <_ZN8touchgfx11Application15handleTickEventEv>

08003d04 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003d04:	b510      	push	{r4, lr}
 8003d06:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003d08:	f7ff f96a 	bl	8002fe0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003d0c:	4b01      	ldr	r3, [pc, #4]	; (8003d14 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8003d0e:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 8003d10:	6023      	str	r3, [r4, #0]
}
 8003d12:	bd10      	pop	{r4, pc}
 8003d14:	08022e48 	.word	0x08022e48

08003d18 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 8003d18:	4770      	bx	lr

08003d1a <_ZThn4_N13MainPresenterD1Ev>:
 8003d1a:	3804      	subs	r0, #4
 8003d1c:	4770      	bx	lr

08003d1e <_ZN13MainPresenter10deactivateEv>:
}

void MainPresenter::activate()
{

}
 8003d1e:	4770      	bx	lr

08003d20 <_ZN13MainPresenter10uartMsgRdyEv>:

}

void MainPresenter::uartMsgRdy()
{
	view.uartMsgRdy();
 8003d20:	68c0      	ldr	r0, [r0, #12]
 8003d22:	6803      	ldr	r3, [r0, #0]
 8003d24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d26:	4718      	bx	r3

08003d28 <_ZThn4_N13MainPresenter10uartMsgRdyEv>:

    virtual void uartMsgRdy();
 8003d28:	f1a0 0004 	sub.w	r0, r0, #4
 8003d2c:	f7ff bff8 	b.w	8003d20 <_ZN13MainPresenter10uartMsgRdyEv>

08003d30 <_ZN13MainPresenterD0Ev>:
    virtual ~MainPresenter() {};
 8003d30:	b510      	push	{r4, lr}
 8003d32:	4604      	mov	r4, r0
 8003d34:	2110      	movs	r1, #16
 8003d36:	f01b fc8f 	bl	801f658 <_ZdlPvj>
 8003d3a:	4620      	mov	r0, r4
 8003d3c:	bd10      	pop	{r4, pc}

08003d3e <_ZThn4_N13MainPresenterD0Ev>:
 8003d3e:	f1a0 0004 	sub.w	r0, r0, #4
 8003d42:	e7f5      	b.n	8003d30 <_ZN13MainPresenterD0Ev>

08003d44 <_ZN13MainPresenterC1ER8MainView>:
    ModelListener() : model(0) {}
 8003d44:	2200      	movs	r2, #0
    : view(v)
 8003d46:	60c1      	str	r1, [r0, #12]
 8003d48:	6082      	str	r2, [r0, #8]
 8003d4a:	4a04      	ldr	r2, [pc, #16]	; (8003d5c <_ZN13MainPresenterC1ER8MainView+0x18>)
MainPresenter::MainPresenter(MainView& v)
 8003d4c:	b510      	push	{r4, lr}
    : view(v)
 8003d4e:	f102 0408 	add.w	r4, r2, #8
 8003d52:	3224      	adds	r2, #36	; 0x24
 8003d54:	6004      	str	r4, [r0, #0]
 8003d56:	6042      	str	r2, [r0, #4]
}
 8003d58:	bd10      	pop	{r4, pc}
 8003d5a:	bf00      	nop
 8003d5c:	08022e84 	.word	0x08022e84

08003d60 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    virtual ~MainView() {}
 8003d60:	4770      	bx	lr

08003d62 <_ZN8MainView14tearDownScreenEv>:
}

void MainView::tearDownScreen()
{
    MainViewBase::tearDownScreen();
}
 8003d62:	4770      	bx	lr

08003d64 <_ZN8MainView11setupScreenEv>:
    MainViewBase::setupScreen();
 8003d64:	f7ff bad8 	b.w	8003318 <_ZN12MainViewBase11setupScreenEv>

08003d68 <_ZN8MainView10uartMsgRdyEv>:

void MainView::uartMsgRdy()
{
 8003d68:	b570      	push	{r4, r5, r6, lr}
	//txt_area.setWildcard1(buffer);
	//txt_area.invalidate();
	//data_counter++;
//	if(data_counter < view_counter) view_counter = 0; // uwaga: tutaj dane sa obciate
//
	for(size_t i=0; i < data_array.size(); i++)
 8003d6a:	2400      	movs	r4, #0
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8003d6c:	4d07      	ldr	r5, [pc, #28]	; (8003d8c <_ZN8MainView10uartMsgRdyEv+0x24>)
	{
		My_graph.addDataPoint(data_array[i]);
 8003d6e:	f100 06a0 	add.w	r6, r0, #160	; 0xa0
 8003d72:	e9d5 3200 	ldrd	r3, r2, [r5]
 8003d76:	1ad2      	subs	r2, r2, r3
	for(size_t i=0; i < data_array.size(); i++)
 8003d78:	4294      	cmp	r4, r2
 8003d7a:	d205      	bcs.n	8003d88 <_ZN8MainView10uartMsgRdyEv+0x20>
		My_graph.addDataPoint(data_array[i]);
 8003d7c:	5d19      	ldrb	r1, [r3, r4]
 8003d7e:	4630      	mov	r0, r6
 8003d80:	f009 fa2e 	bl	800d1e0 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEi>
	for(size_t i=0; i < data_array.size(); i++)
 8003d84:	3401      	adds	r4, #1
 8003d86:	e7f4      	b.n	8003d72 <_ZN8MainView10uartMsgRdyEv+0xa>
      // _M_assign_aux.
      void
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
      {
	std::_Destroy(__pos, this->_M_impl._M_finish, _M_get_Tp_allocator());
	this->_M_impl._M_finish = __pos;
 8003d88:	606b      	str	r3, [r5, #4]
	}
	data_array.clear();
//	view_counter = data_counter;

}
 8003d8a:	bd70      	pop	{r4, r5, r6, pc}
 8003d8c:	20000188 	.word	0x20000188

08003d90 <_ZN8MainViewD0Ev>:
 8003d90:	b510      	push	{r4, lr}
 8003d92:	4604      	mov	r4, r0
 8003d94:	f44f 61df 	mov.w	r1, #1784	; 0x6f8
 8003d98:	f01b fc5e 	bl	801f658 <_ZdlPvj>
 8003d9c:	4620      	mov	r0, r4
 8003d9e:	bd10      	pop	{r4, pc}

08003da0 <_ZN8MainViewC1Ev>:
MainView::MainView()
 8003da0:	b510      	push	{r4, lr}
 8003da2:	4604      	mov	r4, r0
 8003da4:	f7ff fc3c 	bl	8003620 <_ZN12MainViewBaseC1Ev>
 8003da8:	4b01      	ldr	r3, [pc, #4]	; (8003db0 <_ZN8MainViewC1Ev+0x10>)
}
 8003daa:	4620      	mov	r0, r4
MainView::MainView()
 8003dac:	6023      	str	r3, [r4, #0]
}
 8003dae:	bd10      	pop	{r4, pc}
 8003db0:	08022ebc 	.word	0x08022ebc

08003db4 <_ZN5ModelC1Ev>:
#include "main.h"

//extern osSemaphoreId_t binarySemUartMsgHandle;
extern bool msgRdyFlag;

Model::Model() : modelListener(0)
 8003db4:	2200      	movs	r2, #0
 8003db6:	6002      	str	r2, [r0, #0]
{

}
 8003db8:	4770      	bx	lr

08003dba <_ZN5Model10uartMsgRdyEv>:

}

void Model::uartMsgRdy()
{
	modelListener->uartMsgRdy();
 8003dba:	6800      	ldr	r0, [r0, #0]
 8003dbc:	6803      	ldr	r3, [r0, #0]
 8003dbe:	689b      	ldr	r3, [r3, #8]
 8003dc0:	4718      	bx	r3
	...

08003dc4 <_ZN5Model4tickEv>:
{
 8003dc4:	b510      	push	{r4, lr}
			if(msgRdyFlag)
 8003dc6:	4c04      	ldr	r4, [pc, #16]	; (8003dd8 <_ZN5Model4tickEv+0x14>)
 8003dc8:	7823      	ldrb	r3, [r4, #0]
 8003dca:	b11b      	cbz	r3, 8003dd4 <_ZN5Model4tickEv+0x10>
				uartMsgRdy();
 8003dcc:	f7ff fff5 	bl	8003dba <_ZN5Model10uartMsgRdyEv>
				msgRdyFlag=0;
 8003dd0:	2300      	movs	r3, #0
 8003dd2:	7023      	strb	r3, [r4, #0]
}
 8003dd4:	bd10      	pop	{r4, pc}
 8003dd6:	bf00      	nop
 8003dd8:	20000194 	.word	0x20000194

08003ddc <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8003ddc:	4770      	bx	lr

08003dde <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 8003dde:	2000      	movs	r0, #0
 8003de0:	4770      	bx	lr

08003de2 <ft6x06_ReadID>:
{
 8003de2:	b510      	push	{r4, lr}
 8003de4:	4604      	mov	r4, r0
  TS_IO_Init();
 8003de6:	f000 ff91 	bl	8004d0c <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8003dea:	21a8      	movs	r1, #168	; 0xa8
 8003dec:	b2e0      	uxtb	r0, r4
 8003dee:	f000 ffc5 	bl	8004d7c <TS_IO_Read>
}
 8003df2:	bd10      	pop	{r4, pc}

08003df4 <ft6x06_TS_DetectTouch>:
{
 8003df4:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8003df6:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8003df8:	2102      	movs	r1, #2
 8003dfa:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8003dfc:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8003e00:	f000 ffbc 	bl	8004d7c <TS_IO_Read>
 8003e04:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8003e08:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003e0c:	f003 030f 	and.w	r3, r3, #15
 8003e10:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8003e14:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003e18:	2b02      	cmp	r3, #2
 8003e1a:	d901      	bls.n	8003e20 <ft6x06_TS_DetectTouch+0x2c>
    nbTouch = 0;
 8003e1c:	f88d 4007 	strb.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8003e20:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8003e24:	4b03      	ldr	r3, [pc, #12]	; (8003e34 <ft6x06_TS_DetectTouch+0x40>)
  return(nbTouch);
 8003e26:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8003e2a:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8003e2c:	2200      	movs	r2, #0
 8003e2e:	709a      	strb	r2, [r3, #2]
}
 8003e30:	b002      	add	sp, #8
 8003e32:	bd10      	pop	{r4, pc}
 8003e34:	2000183e 	.word	0x2000183e

08003e38 <ft6x06_TS_GetXY>:
{
 8003e38:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8003e3a:	4c15      	ldr	r4, [pc, #84]	; (8003e90 <ft6x06_TS_GetXY+0x58>)
{
 8003e3c:	4615      	mov	r5, r2
 8003e3e:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8003e40:	78a3      	ldrb	r3, [r4, #2]
 8003e42:	7862      	ldrb	r2, [r4, #1]
 8003e44:	429a      	cmp	r2, r3
 8003e46:	d91f      	bls.n	8003e88 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8003e48:	b303      	cbz	r3, 8003e8c <ft6x06_TS_GetXY+0x54>
  uint8_t regAddress = 0;
 8003e4a:	2b01      	cmp	r3, #1
 8003e4c:	bf0c      	ite	eq
 8003e4e:	2109      	moveq	r1, #9
 8003e50:	2100      	movne	r1, #0
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8003e52:	2304      	movs	r3, #4
 8003e54:	b2c0      	uxtb	r0, r0
 8003e56:	eb0d 0203 	add.w	r2, sp, r3
 8003e5a:	f000 ff59 	bl	8004d10 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8003e5e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8003e62:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8003e66:	021b      	lsls	r3, r3, #8
 8003e68:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8003e6c:	4313      	orrs	r3, r2
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8003e6e:	f89d 2007 	ldrb.w	r2, [sp, #7]
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8003e72:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8003e74:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8003e78:	021b      	lsls	r3, r3, #8
 8003e7a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8003e7e:	4313      	orrs	r3, r2
 8003e80:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8003e82:	78a3      	ldrb	r3, [r4, #2]
 8003e84:	3301      	adds	r3, #1
 8003e86:	70a3      	strb	r3, [r4, #2]
}
 8003e88:	b002      	add	sp, #8
 8003e8a:	bd70      	pop	{r4, r5, r6, pc}
      regAddress = FT6206_P1_XH_REG; 
 8003e8c:	2103      	movs	r1, #3
 8003e8e:	e7e0      	b.n	8003e52 <ft6x06_TS_GetXY+0x1a>
 8003e90:	2000183e 	.word	0x2000183e

08003e94 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8003e94:	2201      	movs	r2, #1
 8003e96:	21a4      	movs	r1, #164	; 0xa4
 8003e98:	b2c0      	uxtb	r0, r0
 8003e9a:	f000 bf59 	b.w	8004d50 <TS_IO_Write>

08003e9e <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8003e9e:	2200      	movs	r2, #0
 8003ea0:	21a4      	movs	r1, #164	; 0xa4
 8003ea2:	b2c0      	uxtb	r0, r0
 8003ea4:	f000 bf54 	b.w	8004d50 <TS_IO_Write>

08003ea8 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8003ea8:	f7ff bff9 	b.w	8003e9e <ft6x06_TS_DisableIT>

08003eac <ft6x06_TS_ClearIT>:
 8003eac:	4770      	bx	lr
	...

08003eb0 <ft6x06_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8003eb0:	4a06      	ldr	r2, [pc, #24]	; (8003ecc <ft6x06_Init+0x1c>)
 8003eb2:	7813      	ldrb	r3, [r2, #0]
 8003eb4:	4298      	cmp	r0, r3
 8003eb6:	d008      	beq.n	8003eca <ft6x06_Init+0x1a>
 8003eb8:	7851      	ldrb	r1, [r2, #1]
 8003eba:	4288      	cmp	r0, r1
 8003ebc:	d005      	beq.n	8003eca <ft6x06_Init+0x1a>
 8003ebe:	b10b      	cbz	r3, 8003ec4 <ft6x06_Init+0x14>
 8003ec0:	b919      	cbnz	r1, 8003eca <ft6x06_Init+0x1a>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8003ec2:	2301      	movs	r3, #1
      ft6x06[empty] = DeviceAddr;
 8003ec4:	54d0      	strb	r0, [r2, r3]
      TS_IO_Init(); 
 8003ec6:	f000 bf21 	b.w	8004d0c <TS_IO_Init>
}
 8003eca:	4770      	bx	lr
 8003ecc:	2000183c 	.word	0x2000183c

08003ed0 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8003ed0:	b538      	push	{r3, r4, r5, lr}
 8003ed2:	4604      	mov	r4, r0
 8003ed4:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003ed6:	2000      	movs	r0, #0
 8003ed8:	49cb      	ldr	r1, [pc, #812]	; (8004208 <OTM8009A_Init+0x338>)
 8003eda:	f7fe fadb 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 8003ede:	49cb      	ldr	r1, [pc, #812]	; (800420c <OTM8009A_Init+0x33c>)
 8003ee0:	2003      	movs	r0, #3
 8003ee2:	f7fe fad7 	bl	8002494 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8003ee6:	49ca      	ldr	r1, [pc, #808]	; (8004210 <OTM8009A_Init+0x340>)
 8003ee8:	2000      	movs	r0, #0
 8003eea:	f7fe fad3 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 8003eee:	49c9      	ldr	r1, [pc, #804]	; (8004214 <OTM8009A_Init+0x344>)
 8003ef0:	2002      	movs	r0, #2
 8003ef2:	f7fe facf 	bl	8002494 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8003ef6:	49c6      	ldr	r1, [pc, #792]	; (8004210 <OTM8009A_Init+0x340>)
 8003ef8:	2000      	movs	r0, #0
 8003efa:	f7fe facb 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 8003efe:	49c6      	ldr	r1, [pc, #792]	; (8004218 <OTM8009A_Init+0x348>)
 8003f00:	2000      	movs	r0, #0
 8003f02:	f7fe fac7 	bl	8002494 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8003f06:	200a      	movs	r0, #10
 8003f08:	f000 ff10 	bl	8004d2c <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8003f0c:	49c3      	ldr	r1, [pc, #780]	; (800421c <OTM8009A_Init+0x34c>)
 8003f0e:	2000      	movs	r0, #0
 8003f10:	f7fe fac0 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8003f14:	49c2      	ldr	r1, [pc, #776]	; (8004220 <OTM8009A_Init+0x350>)
 8003f16:	2000      	movs	r0, #0
 8003f18:	f7fe fabc 	bl	8002494 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8003f1c:	200a      	movs	r0, #10
 8003f1e:	f000 ff05 	bl	8004d2c <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 8003f22:	49c0      	ldr	r1, [pc, #768]	; (8004224 <OTM8009A_Init+0x354>)
 8003f24:	2000      	movs	r0, #0
 8003f26:	f7fe fab5 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8003f2a:	49bf      	ldr	r1, [pc, #764]	; (8004228 <OTM8009A_Init+0x358>)
 8003f2c:	2000      	movs	r0, #0
 8003f2e:	f7fe fab1 	bl	8002494 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8003f32:	49be      	ldr	r1, [pc, #760]	; (800422c <OTM8009A_Init+0x35c>)
 8003f34:	2000      	movs	r0, #0
 8003f36:	f7fe faad 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8003f3a:	49bd      	ldr	r1, [pc, #756]	; (8004230 <OTM8009A_Init+0x360>)
 8003f3c:	2000      	movs	r0, #0
 8003f3e:	f7fe faa9 	bl	8002494 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8003f42:	49bc      	ldr	r1, [pc, #752]	; (8004234 <OTM8009A_Init+0x364>)
 8003f44:	2000      	movs	r0, #0
 8003f46:	f7fe faa5 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8003f4a:	49bb      	ldr	r1, [pc, #748]	; (8004238 <OTM8009A_Init+0x368>)
 8003f4c:	2000      	movs	r0, #0
 8003f4e:	f7fe faa1 	bl	8002494 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003f52:	49ad      	ldr	r1, [pc, #692]	; (8004208 <OTM8009A_Init+0x338>)
 8003f54:	2000      	movs	r0, #0
 8003f56:	f7fe fa9d 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8003f5a:	49b8      	ldr	r1, [pc, #736]	; (800423c <OTM8009A_Init+0x36c>)
 8003f5c:	2000      	movs	r0, #0
 8003f5e:	f7fe fa99 	bl	8002494 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8003f62:	49b7      	ldr	r1, [pc, #732]	; (8004240 <OTM8009A_Init+0x370>)
 8003f64:	2000      	movs	r0, #0
 8003f66:	f7fe fa95 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8003f6a:	49b6      	ldr	r1, [pc, #728]	; (8004244 <OTM8009A_Init+0x374>)
 8003f6c:	2000      	movs	r0, #0
 8003f6e:	f7fe fa91 	bl	8002494 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8003f72:	49b5      	ldr	r1, [pc, #724]	; (8004248 <OTM8009A_Init+0x378>)
 8003f74:	2000      	movs	r0, #0
 8003f76:	f7fe fa8d 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8003f7a:	49b4      	ldr	r1, [pc, #720]	; (800424c <OTM8009A_Init+0x37c>)
 8003f7c:	2000      	movs	r0, #0
 8003f7e:	f7fe fa89 	bl	8002494 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8003f82:	49b3      	ldr	r1, [pc, #716]	; (8004250 <OTM8009A_Init+0x380>)
 8003f84:	2000      	movs	r0, #0
 8003f86:	f7fe fa85 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8003f8a:	49b2      	ldr	r1, [pc, #712]	; (8004254 <OTM8009A_Init+0x384>)
 8003f8c:	2000      	movs	r0, #0
 8003f8e:	f7fe fa81 	bl	8002494 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8003f92:	49b1      	ldr	r1, [pc, #708]	; (8004258 <OTM8009A_Init+0x388>)
 8003f94:	2000      	movs	r0, #0
 8003f96:	f7fe fa7d 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8003f9a:	49a5      	ldr	r1, [pc, #660]	; (8004230 <OTM8009A_Init+0x360>)
 8003f9c:	2000      	movs	r0, #0
 8003f9e:	f7fe fa79 	bl	8002494 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003fa2:	4999      	ldr	r1, [pc, #612]	; (8004208 <OTM8009A_Init+0x338>)
 8003fa4:	2000      	movs	r0, #0
 8003fa6:	f7fe fa75 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8003faa:	49ac      	ldr	r1, [pc, #688]	; (800425c <OTM8009A_Init+0x38c>)
 8003fac:	2002      	movs	r0, #2
 8003fae:	f7fe fa71 	bl	8002494 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8003fb2:	49ab      	ldr	r1, [pc, #684]	; (8004260 <OTM8009A_Init+0x390>)
 8003fb4:	2000      	movs	r0, #0
 8003fb6:	f7fe fa6d 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8003fba:	49aa      	ldr	r1, [pc, #680]	; (8004264 <OTM8009A_Init+0x394>)
 8003fbc:	2000      	movs	r0, #0
 8003fbe:	f7fe fa69 	bl	8002494 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8003fc2:	49a9      	ldr	r1, [pc, #676]	; (8004268 <OTM8009A_Init+0x398>)
 8003fc4:	2000      	movs	r0, #0
 8003fc6:	f7fe fa65 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8003fca:	49a8      	ldr	r1, [pc, #672]	; (800426c <OTM8009A_Init+0x39c>)
 8003fcc:	2000      	movs	r0, #0
 8003fce:	f7fe fa61 	bl	8002494 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8003fd2:	49a7      	ldr	r1, [pc, #668]	; (8004270 <OTM8009A_Init+0x3a0>)
 8003fd4:	2000      	movs	r0, #0
 8003fd6:	f7fe fa5d 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 8003fda:	49a6      	ldr	r1, [pc, #664]	; (8004274 <OTM8009A_Init+0x3a4>)
 8003fdc:	2000      	movs	r0, #0
 8003fde:	f7fe fa59 	bl	8002494 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8003fe2:	4997      	ldr	r1, [pc, #604]	; (8004240 <OTM8009A_Init+0x370>)
 8003fe4:	2000      	movs	r0, #0
 8003fe6:	f7fe fa55 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8003fea:	49a3      	ldr	r1, [pc, #652]	; (8004278 <OTM8009A_Init+0x3a8>)
 8003fec:	2000      	movs	r0, #0
 8003fee:	f7fe fa51 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8003ff2:	4995      	ldr	r1, [pc, #596]	; (8004248 <OTM8009A_Init+0x378>)
 8003ff4:	2000      	movs	r0, #0
 8003ff6:	f7fe fa4d 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8003ffa:	49a0      	ldr	r1, [pc, #640]	; (800427c <OTM8009A_Init+0x3ac>)
 8003ffc:	2000      	movs	r0, #0
 8003ffe:	f7fe fa49 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 8004002:	499f      	ldr	r1, [pc, #636]	; (8004280 <OTM8009A_Init+0x3b0>)
 8004004:	2000      	movs	r0, #0
 8004006:	f7fe fa45 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 800400a:	499e      	ldr	r1, [pc, #632]	; (8004284 <OTM8009A_Init+0x3b4>)
 800400c:	2002      	movs	r0, #2
 800400e:	f7fe fa41 	bl	8002494 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8004012:	497f      	ldr	r1, [pc, #508]	; (8004210 <OTM8009A_Init+0x340>)
 8004014:	2000      	movs	r0, #0
 8004016:	f7fe fa3d 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 800401a:	499b      	ldr	r1, [pc, #620]	; (8004288 <OTM8009A_Init+0x3b8>)
 800401c:	2006      	movs	r0, #6
 800401e:	f7fe fa39 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8004022:	499a      	ldr	r1, [pc, #616]	; (800428c <OTM8009A_Init+0x3bc>)
 8004024:	2000      	movs	r0, #0
 8004026:	f7fe fa35 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 800402a:	4999      	ldr	r1, [pc, #612]	; (8004290 <OTM8009A_Init+0x3c0>)
 800402c:	200e      	movs	r0, #14
 800402e:	f7fe fa31 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8004032:	4998      	ldr	r1, [pc, #608]	; (8004294 <OTM8009A_Init+0x3c4>)
 8004034:	2000      	movs	r0, #0
 8004036:	f7fe fa2d 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 800403a:	4997      	ldr	r1, [pc, #604]	; (8004298 <OTM8009A_Init+0x3c8>)
 800403c:	200e      	movs	r0, #14
 800403e:	f7fe fa29 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8004042:	4996      	ldr	r1, [pc, #600]	; (800429c <OTM8009A_Init+0x3cc>)
 8004044:	2000      	movs	r0, #0
 8004046:	f7fe fa25 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 800404a:	4995      	ldr	r1, [pc, #596]	; (80042a0 <OTM8009A_Init+0x3d0>)
 800404c:	200a      	movs	r0, #10
 800404e:	f7fe fa21 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8004052:	4994      	ldr	r1, [pc, #592]	; (80042a4 <OTM8009A_Init+0x3d4>)
 8004054:	2000      	movs	r0, #0
 8004056:	f7fe fa1d 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 800405a:	4993      	ldr	r1, [pc, #588]	; (80042a8 <OTM8009A_Init+0x3d8>)
 800405c:	2000      	movs	r0, #0
 800405e:	f7fe fa19 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8004062:	496b      	ldr	r1, [pc, #428]	; (8004210 <OTM8009A_Init+0x340>)
 8004064:	2000      	movs	r0, #0
 8004066:	f7fe fa15 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 800406a:	4990      	ldr	r1, [pc, #576]	; (80042ac <OTM8009A_Init+0x3dc>)
 800406c:	200a      	movs	r0, #10
 800406e:	f7fe fa11 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8004072:	498f      	ldr	r1, [pc, #572]	; (80042b0 <OTM8009A_Init+0x3e0>)
 8004074:	2000      	movs	r0, #0
 8004076:	f7fe fa0d 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 800407a:	498e      	ldr	r1, [pc, #568]	; (80042b4 <OTM8009A_Init+0x3e4>)
 800407c:	200f      	movs	r0, #15
 800407e:	f7fe fa09 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8004082:	4982      	ldr	r1, [pc, #520]	; (800428c <OTM8009A_Init+0x3bc>)
 8004084:	2000      	movs	r0, #0
 8004086:	f7fe fa05 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 800408a:	498b      	ldr	r1, [pc, #556]	; (80042b8 <OTM8009A_Init+0x3e8>)
 800408c:	200f      	movs	r0, #15
 800408e:	f7fe fa01 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8004092:	4980      	ldr	r1, [pc, #512]	; (8004294 <OTM8009A_Init+0x3c4>)
 8004094:	2000      	movs	r0, #0
 8004096:	f7fe f9fd 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 800409a:	4988      	ldr	r1, [pc, #544]	; (80042bc <OTM8009A_Init+0x3ec>)
 800409c:	200a      	movs	r0, #10
 800409e:	f7fe f9f9 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 80040a2:	497e      	ldr	r1, [pc, #504]	; (800429c <OTM8009A_Init+0x3cc>)
 80040a4:	2000      	movs	r0, #0
 80040a6:	f7fe f9f5 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 80040aa:	4985      	ldr	r1, [pc, #532]	; (80042c0 <OTM8009A_Init+0x3f0>)
 80040ac:	200f      	movs	r0, #15
 80040ae:	f7fe f9f1 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 80040b2:	497c      	ldr	r1, [pc, #496]	; (80042a4 <OTM8009A_Init+0x3d4>)
 80040b4:	2000      	movs	r0, #0
 80040b6:	f7fe f9ed 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 80040ba:	4982      	ldr	r1, [pc, #520]	; (80042c4 <OTM8009A_Init+0x3f4>)
 80040bc:	200f      	movs	r0, #15
 80040be:	f7fe f9e9 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 80040c2:	4981      	ldr	r1, [pc, #516]	; (80042c8 <OTM8009A_Init+0x3f8>)
 80040c4:	2000      	movs	r0, #0
 80040c6:	f7fe f9e5 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 80040ca:	4980      	ldr	r1, [pc, #512]	; (80042cc <OTM8009A_Init+0x3fc>)
 80040cc:	200a      	movs	r0, #10
 80040ce:	f7fe f9e1 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 80040d2:	497f      	ldr	r1, [pc, #508]	; (80042d0 <OTM8009A_Init+0x400>)
 80040d4:	2000      	movs	r0, #0
 80040d6:	f7fe f9dd 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 80040da:	497e      	ldr	r1, [pc, #504]	; (80042d4 <OTM8009A_Init+0x404>)
 80040dc:	200a      	movs	r0, #10
 80040de:	f7fe f9d9 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80040e2:	494b      	ldr	r1, [pc, #300]	; (8004210 <OTM8009A_Init+0x340>)
 80040e4:	2000      	movs	r0, #0
 80040e6:	f7fe f9d5 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 80040ea:	497b      	ldr	r1, [pc, #492]	; (80042d8 <OTM8009A_Init+0x408>)
 80040ec:	200a      	movs	r0, #10
 80040ee:	f7fe f9d1 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 80040f2:	496f      	ldr	r1, [pc, #444]	; (80042b0 <OTM8009A_Init+0x3e0>)
 80040f4:	2000      	movs	r0, #0
 80040f6:	f7fe f9cd 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 80040fa:	4978      	ldr	r1, [pc, #480]	; (80042dc <OTM8009A_Init+0x40c>)
 80040fc:	200f      	movs	r0, #15
 80040fe:	f7fe f9c9 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8004102:	4962      	ldr	r1, [pc, #392]	; (800428c <OTM8009A_Init+0x3bc>)
 8004104:	2000      	movs	r0, #0
 8004106:	f7fe f9c5 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 800410a:	4975      	ldr	r1, [pc, #468]	; (80042e0 <OTM8009A_Init+0x410>)
 800410c:	200f      	movs	r0, #15
 800410e:	f7fe f9c1 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8004112:	4960      	ldr	r1, [pc, #384]	; (8004294 <OTM8009A_Init+0x3c4>)
 8004114:	2000      	movs	r0, #0
 8004116:	f7fe f9bd 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 800411a:	4972      	ldr	r1, [pc, #456]	; (80042e4 <OTM8009A_Init+0x414>)
 800411c:	200a      	movs	r0, #10
 800411e:	f7fe f9b9 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8004122:	495e      	ldr	r1, [pc, #376]	; (800429c <OTM8009A_Init+0x3cc>)
 8004124:	2000      	movs	r0, #0
 8004126:	f7fe f9b5 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 800412a:	496f      	ldr	r1, [pc, #444]	; (80042e8 <OTM8009A_Init+0x418>)
 800412c:	200f      	movs	r0, #15
 800412e:	f7fe f9b1 	bl	8002494 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8004132:	495c      	ldr	r1, [pc, #368]	; (80042a4 <OTM8009A_Init+0x3d4>)
 8004134:	2000      	movs	r0, #0
 8004136:	f7fe f9ad 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 800413a:	496c      	ldr	r1, [pc, #432]	; (80042ec <OTM8009A_Init+0x41c>)
 800413c:	200f      	movs	r0, #15
 800413e:	f7fe f9a9 	bl	8002494 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8004142:	493f      	ldr	r1, [pc, #252]	; (8004240 <OTM8009A_Init+0x370>)
 8004144:	2000      	movs	r0, #0
 8004146:	f7fe f9a5 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 800414a:	4969      	ldr	r1, [pc, #420]	; (80042f0 <OTM8009A_Init+0x420>)
 800414c:	2000      	movs	r0, #0
 800414e:	f7fe f9a1 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 8004152:	4968      	ldr	r1, [pc, #416]	; (80042f4 <OTM8009A_Init+0x424>)
 8004154:	2000      	movs	r0, #0
 8004156:	f7fe f99d 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 800415a:	4967      	ldr	r1, [pc, #412]	; (80042f8 <OTM8009A_Init+0x428>)
 800415c:	2000      	movs	r0, #0
 800415e:	f7fe f999 	bl	8002494 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8004162:	4966      	ldr	r1, [pc, #408]	; (80042fc <OTM8009A_Init+0x42c>)
 8004164:	2000      	movs	r0, #0
 8004166:	f7fe f995 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 800416a:	4965      	ldr	r1, [pc, #404]	; (8004300 <OTM8009A_Init+0x430>)
 800416c:	2000      	movs	r0, #0
 800416e:	f7fe f991 	bl	8002494 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8004172:	4925      	ldr	r1, [pc, #148]	; (8004208 <OTM8009A_Init+0x338>)
 8004174:	2000      	movs	r0, #0
 8004176:	f7fe f98d 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 800417a:	4962      	ldr	r1, [pc, #392]	; (8004304 <OTM8009A_Init+0x434>)
 800417c:	2003      	movs	r0, #3
 800417e:	f7fe f989 	bl	8002494 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8004182:	4921      	ldr	r1, [pc, #132]	; (8004208 <OTM8009A_Init+0x338>)
 8004184:	2000      	movs	r0, #0
 8004186:	f7fe f985 	bl	8002494 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800418a:	491f      	ldr	r1, [pc, #124]	; (8004208 <OTM8009A_Init+0x338>)
 800418c:	2000      	movs	r0, #0
 800418e:	f7fe f981 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8004192:	495d      	ldr	r1, [pc, #372]	; (8004308 <OTM8009A_Init+0x438>)
 8004194:	2010      	movs	r0, #16
 8004196:	f7fe f97d 	bl	8002494 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800419a:	491b      	ldr	r1, [pc, #108]	; (8004208 <OTM8009A_Init+0x338>)
 800419c:	2000      	movs	r0, #0
 800419e:	f7fe f979 	bl	8002494 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 80041a2:	495a      	ldr	r1, [pc, #360]	; (800430c <OTM8009A_Init+0x43c>)
 80041a4:	2010      	movs	r0, #16
 80041a6:	f7fe f975 	bl	8002494 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 80041aa:	2000      	movs	r0, #0
 80041ac:	4958      	ldr	r1, [pc, #352]	; (8004310 <OTM8009A_Init+0x440>)
 80041ae:	f7fe f971 	bl	8002494 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 80041b2:	2078      	movs	r0, #120	; 0x78
 80041b4:	f000 fdba 	bl	8004d2c <OTM8009A_IO_Delay>

  switch(ColorCoding)
 80041b8:	2c00      	cmp	r4, #0
 80041ba:	f000 80c9 	beq.w	8004350 <OTM8009A_Init+0x480>
 80041be:	2c02      	cmp	r4, #2
 80041c0:	d103      	bne.n	80041ca <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 80041c2:	4954      	ldr	r1, [pc, #336]	; (8004314 <OTM8009A_Init+0x444>)
 80041c4:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 80041c6:	f7fe f965 	bl	8002494 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 80041ca:	2d01      	cmp	r5, #1
 80041cc:	d10b      	bne.n	80041e6 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 80041ce:	4952      	ldr	r1, [pc, #328]	; (8004318 <OTM8009A_Init+0x448>)
 80041d0:	2000      	movs	r0, #0
 80041d2:	f7fe f95f 	bl	8002494 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 80041d6:	4951      	ldr	r1, [pc, #324]	; (800431c <OTM8009A_Init+0x44c>)
 80041d8:	2004      	movs	r0, #4
 80041da:	f7fe f95b 	bl	8002494 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 80041de:	4950      	ldr	r1, [pc, #320]	; (8004320 <OTM8009A_Init+0x450>)
 80041e0:	2004      	movs	r0, #4
 80041e2:	f7fe f957 	bl	8002494 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 80041e6:	494f      	ldr	r1, [pc, #316]	; (8004324 <OTM8009A_Init+0x454>)
 80041e8:	2000      	movs	r0, #0
 80041ea:	f7fe f953 	bl	8002494 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 80041ee:	494e      	ldr	r1, [pc, #312]	; (8004328 <OTM8009A_Init+0x458>)
 80041f0:	2000      	movs	r0, #0
 80041f2:	f7fe f94f 	bl	8002494 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 80041f6:	494d      	ldr	r1, [pc, #308]	; (800432c <OTM8009A_Init+0x45c>)
 80041f8:	2000      	movs	r0, #0
 80041fa:	f7fe f94b 	bl	8002494 <DSI_IO_WriteCmd>

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 80041fe:	494c      	ldr	r1, [pc, #304]	; (8004330 <OTM8009A_Init+0x460>)
 8004200:	2000      	movs	r0, #0
 8004202:	f7fe f947 	bl	8002494 <DSI_IO_WriteCmd>
 8004206:	e095      	b.n	8004334 <OTM8009A_Init+0x464>
 8004208:	08022eec 	.word	0x08022eec
 800420c:	08022f52 	.word	0x08022f52
 8004210:	08022f02 	.word	0x08022f02
 8004214:	08022fd8 	.word	0x08022fd8
 8004218:	08022f18 	.word	0x08022f18
 800421c:	08022f2e 	.word	0x08022f2e
 8004220:	08022f44 	.word	0x08022f44
 8004224:	08022f4a 	.word	0x08022f4a
 8004228:	08022f4c 	.word	0x08022f4c
 800422c:	08022f4e 	.word	0x08022f4e
 8004230:	08022f50 	.word	0x08022f50
 8004234:	08022eee 	.word	0x08022eee
 8004238:	08022ef0 	.word	0x08022ef0
 800423c:	08022ef2 	.word	0x08022ef2
 8004240:	08022ef4 	.word	0x08022ef4
 8004244:	08022ef6 	.word	0x08022ef6
 8004248:	08022ef8 	.word	0x08022ef8
 800424c:	08022efa 	.word	0x08022efa
 8004250:	08022efc 	.word	0x08022efc
 8004254:	08022efe 	.word	0x08022efe
 8004258:	08022f00 	.word	0x08022f00
 800425c:	08023056 	.word	0x08023056
 8004260:	08022f04 	.word	0x08022f04
 8004264:	08022f06 	.word	0x08022f06
 8004268:	08022f08 	.word	0x08022f08
 800426c:	08022f0a 	.word	0x08022f0a
 8004270:	08022f0c 	.word	0x08022f0c
 8004274:	08022f0e 	.word	0x08022f0e
 8004278:	08022f10 	.word	0x08022f10
 800427c:	08022f12 	.word	0x08022f12
 8004280:	08022f14 	.word	0x08022f14
 8004284:	08023059 	.word	0x08023059
 8004288:	0802305c 	.word	0x0802305c
 800428c:	08022f16 	.word	0x08022f16
 8004290:	08023063 	.word	0x08023063
 8004294:	08022f1a 	.word	0x08022f1a
 8004298:	08023072 	.word	0x08023072
 800429c:	08022f1c 	.word	0x08022f1c
 80042a0:	08022f56 	.word	0x08022f56
 80042a4:	08022f1e 	.word	0x08022f1e
 80042a8:	08022f3c 	.word	0x08022f3c
 80042ac:	08022f61 	.word	0x08022f61
 80042b0:	08022f20 	.word	0x08022f20
 80042b4:	08022f6c 	.word	0x08022f6c
 80042b8:	08022f7c 	.word	0x08022f7c
 80042bc:	08022f8c 	.word	0x08022f8c
 80042c0:	08022f97 	.word	0x08022f97
 80042c4:	08022fa7 	.word	0x08022fa7
 80042c8:	08022f22 	.word	0x08022f22
 80042cc:	08022fb7 	.word	0x08022fb7
 80042d0:	08022f24 	.word	0x08022f24
 80042d4:	08022fc2 	.word	0x08022fc2
 80042d8:	08022fcd 	.word	0x08022fcd
 80042dc:	08022fdb 	.word	0x08022fdb
 80042e0:	08022feb 	.word	0x08022feb
 80042e4:	08022ffb 	.word	0x08022ffb
 80042e8:	08023006 	.word	0x08023006
 80042ec:	08023016 	.word	0x08023016
 80042f0:	08022f3e 	.word	0x08022f3e
 80042f4:	08022f40 	.word	0x08022f40
 80042f8:	08022f42 	.word	0x08022f42
 80042fc:	08022f46 	.word	0x08022f46
 8004300:	08022f48 	.word	0x08022f48
 8004304:	08023026 	.word	0x08023026
 8004308:	08023034 	.word	0x08023034
 800430c:	08023045 	.word	0x08023045
 8004310:	08022f26 	.word	0x08022f26
 8004314:	08022f28 	.word	0x08022f28
 8004318:	08022f2c 	.word	0x08022f2c
 800431c:	0802302a 	.word	0x0802302a
 8004320:	0802302f 	.word	0x0802302f
 8004324:	08022f30 	.word	0x08022f30
 8004328:	08022f32 	.word	0x08022f32
 800432c:	08022f34 	.word	0x08022f34
 8004330:	08022f36 	.word	0x08022f36

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8004334:	4908      	ldr	r1, [pc, #32]	; (8004358 <OTM8009A_Init+0x488>)
 8004336:	2000      	movs	r0, #0
 8004338:	f7fe f8ac 	bl	8002494 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800433c:	4907      	ldr	r1, [pc, #28]	; (800435c <OTM8009A_Init+0x48c>)
 800433e:	2000      	movs	r0, #0
 8004340:	f7fe f8a8 	bl	8002494 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8004344:	4906      	ldr	r1, [pc, #24]	; (8004360 <OTM8009A_Init+0x490>)
 8004346:	2000      	movs	r0, #0
 8004348:	f7fe f8a4 	bl	8002494 <DSI_IO_WriteCmd>

  return 0;
}
 800434c:	2000      	movs	r0, #0
 800434e:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8004350:	4904      	ldr	r1, [pc, #16]	; (8004364 <OTM8009A_Init+0x494>)
 8004352:	4620      	mov	r0, r4
 8004354:	e737      	b.n	80041c6 <OTM8009A_Init+0x2f6>
 8004356:	bf00      	nop
 8004358:	08022f38 	.word	0x08022f38
 800435c:	08022eec 	.word	0x08022eec
 8004360:	08022f3a 	.word	0x08022f3a
 8004364:	08022f2a 	.word	0x08022f2a

08004368 <wm8994_Reset>:
  */
static uint8_t CODEC_IO_Write(uint8_t Addr, uint16_t Reg, uint16_t Value)
{
  uint32_t result = 0;
  
 AUDIO_IO_Write(Addr, Reg, Value);
 8004368:	2200      	movs	r2, #0
 800436a:	b2c0      	uxtb	r0, r0
{
 800436c:	b508      	push	{r3, lr}
 AUDIO_IO_Write(Addr, Reg, Value);
 800436e:	4611      	mov	r1, r2
 8004370:	f000 fcb8 	bl	8004ce4 <AUDIO_IO_Write>
  outputEnabled = 0;
 8004374:	2000      	movs	r0, #0
 8004376:	4b02      	ldr	r3, [pc, #8]	; (8004380 <wm8994_Reset+0x18>)
 8004378:	6018      	str	r0, [r3, #0]
  inputEnabled=0;
 800437a:	4b02      	ldr	r3, [pc, #8]	; (8004384 <wm8994_Reset+0x1c>)
 800437c:	6018      	str	r0, [r3, #0]
}
 800437e:	bd08      	pop	{r3, pc}
 8004380:	20001848 	.word	0x20001848
 8004384:	20001844 	.word	0x20001844

08004388 <wm8994_SetMute>:
  if (outputEnabled != 0)
 8004388:	4b0f      	ldr	r3, [pc, #60]	; (80043c8 <wm8994_SetMute+0x40>)
 800438a:	681b      	ldr	r3, [r3, #0]
{
 800438c:	b510      	push	{r4, lr}
  if (outputEnabled != 0)
 800438e:	b183      	cbz	r3, 80043b2 <wm8994_SetMute+0x2a>
    if(Cmd == AUDIO_MUTE_ON)
 8004390:	2901      	cmp	r1, #1
 8004392:	b2c4      	uxtb	r4, r0
 8004394:	d10f      	bne.n	80043b6 <wm8994_SetMute+0x2e>
 AUDIO_IO_Write(Addr, Reg, Value);
 8004396:	f44f 7200 	mov.w	r2, #512	; 0x200
 800439a:	f44f 6184 	mov.w	r1, #1056	; 0x420
 800439e:	4620      	mov	r0, r4
 80043a0:	f000 fca0 	bl	8004ce4 <AUDIO_IO_Write>
 80043a4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80043a8:	f240 4122 	movw	r1, #1058	; 0x422
 80043ac:	4620      	mov	r0, r4
 80043ae:	f000 fc99 	bl	8004ce4 <AUDIO_IO_Write>
}
 80043b2:	2000      	movs	r0, #0
 80043b4:	bd10      	pop	{r4, pc}
 AUDIO_IO_Write(Addr, Reg, Value);
 80043b6:	2210      	movs	r2, #16
 80043b8:	f44f 6184 	mov.w	r1, #1056	; 0x420
 80043bc:	4620      	mov	r0, r4
 80043be:	f000 fc91 	bl	8004ce4 <AUDIO_IO_Write>
 80043c2:	2210      	movs	r2, #16
 80043c4:	e7f0      	b.n	80043a8 <wm8994_SetMute+0x20>
 80043c6:	bf00      	nop
 80043c8:	20001848 	.word	0x20001848

080043cc <wm8994_Play>:
  counter += wm8994_SetMute(DeviceAddr, AUDIO_MUTE_OFF);
 80043cc:	2100      	movs	r1, #0
 80043ce:	f7ff bfdb 	b.w	8004388 <wm8994_SetMute>
	...

080043d4 <wm8994_SetVolume>:
  uint8_t convertedvol = VOLUME_CONVERT(Volume);
 80043d4:	2964      	cmp	r1, #100	; 0x64
{
 80043d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint8_t convertedvol = VOLUME_CONVERT(Volume);
 80043da:	bf98      	it	ls
 80043dc:	ebc1 1381 	rsbls	r3, r1, r1, lsl #6
 80043e0:	f04f 0764 	mov.w	r7, #100	; 0x64
{
 80043e4:	4605      	mov	r5, r0
 80043e6:	460c      	mov	r4, r1
  uint8_t convertedvol = VOLUME_CONVERT(Volume);
 80043e8:	bf98      	it	ls
 80043ea:	fb93 f7f7 	sdivls	r7, r3, r7
  if (outputEnabled != 0)
 80043ee:	4b38      	ldr	r3, [pc, #224]	; (80044d0 <wm8994_SetVolume+0xfc>)
  uint8_t convertedvol = VOLUME_CONVERT(Volume);
 80043f0:	bf98      	it	ls
 80043f2:	b2ff      	uxtbls	r7, r7
  if (outputEnabled != 0)
 80043f4:	681e      	ldr	r6, [r3, #0]
 80043f6:	b326      	cbz	r6, 8004442 <wm8994_SetVolume+0x6e>
    if(convertedvol > 0x3E)
 80043f8:	2f3e      	cmp	r7, #62	; 0x3e
 80043fa:	d91d      	bls.n	8004438 <wm8994_SetVolume+0x64>
      counter += CODEC_IO_Write(DeviceAddr, 0x1C, 0x3F | 0x140);
 80043fc:	b2ef      	uxtb	r7, r5
      counter += wm8994_SetMute(DeviceAddr, AUDIO_MUTE_OFF);
 80043fe:	2100      	movs	r1, #0
 8004400:	f7ff ffc2 	bl	8004388 <wm8994_SetMute>
 AUDIO_IO_Write(Addr, Reg, Value);
 8004404:	f240 127f 	movw	r2, #383	; 0x17f
 8004408:	211c      	movs	r1, #28
      counter += wm8994_SetMute(DeviceAddr, AUDIO_MUTE_OFF);
 800440a:	4606      	mov	r6, r0
 AUDIO_IO_Write(Addr, Reg, Value);
 800440c:	4638      	mov	r0, r7
 800440e:	f000 fc69 	bl	8004ce4 <AUDIO_IO_Write>
 8004412:	f240 127f 	movw	r2, #383	; 0x17f
 8004416:	211d      	movs	r1, #29
 8004418:	4638      	mov	r0, r7
 800441a:	f000 fc63 	bl	8004ce4 <AUDIO_IO_Write>
 800441e:	f240 127f 	movw	r2, #383	; 0x17f
 8004422:	2126      	movs	r1, #38	; 0x26
 8004424:	4638      	mov	r0, r7
 8004426:	f000 fc5d 	bl	8004ce4 <AUDIO_IO_Write>
 800442a:	f240 127f 	movw	r2, #383	; 0x17f
 800442e:	2127      	movs	r1, #39	; 0x27
 8004430:	4638      	mov	r0, r7
 8004432:	f000 fc57 	bl	8004ce4 <AUDIO_IO_Write>
 8004436:	e004      	b.n	8004442 <wm8994_SetVolume+0x6e>
    else if (Volume == 0)
 8004438:	bb79      	cbnz	r1, 800449a <wm8994_SetVolume+0xc6>
      counter += wm8994_SetMute(DeviceAddr, AUDIO_MUTE_ON);
 800443a:	2101      	movs	r1, #1
 800443c:	f7ff ffa4 	bl	8004388 <wm8994_SetMute>
 8004440:	4606      	mov	r6, r0
  if (inputEnabled != 0)
 8004442:	4b24      	ldr	r3, [pc, #144]	; (80044d4 <wm8994_SetVolume+0x100>)
 8004444:	681b      	ldr	r3, [r3, #0]
 8004446:	b32b      	cbz	r3, 8004494 <wm8994_SetVolume+0xc0>
    convertedvol = VOLUME_IN_CONVERT(Volume);
 8004448:	2c63      	cmp	r4, #99	; 0x63
    counter += CODEC_IO_Write(DeviceAddr, 0x400, convertedvol | 0x100);
 800444a:	b2ed      	uxtb	r5, r5
 AUDIO_IO_Write(Addr, Reg, Value);
 800444c:	f44f 6180 	mov.w	r1, #1024	; 0x400
    convertedvol = VOLUME_IN_CONVERT(Volume);
 8004450:	bf9a      	itte	ls
 8004452:	ebc4 1404 	rsbls	r4, r4, r4, lsl #4
 8004456:	2364      	movls	r3, #100	; 0x64
 8004458:	24ef      	movhi	r4, #239	; 0xef
 AUDIO_IO_Write(Addr, Reg, Value);
 800445a:	4628      	mov	r0, r5
    convertedvol = VOLUME_IN_CONVERT(Volume);
 800445c:	bf9e      	ittt	ls
 800445e:	0124      	lslls	r4, r4, #4
 8004460:	fb94 f4f3 	sdivls	r4, r4, r3
 8004464:	b2e4      	uxtbls	r4, r4
    counter += CODEC_IO_Write(DeviceAddr, 0x400, convertedvol | 0x100);
 8004466:	f444 7480 	orr.w	r4, r4, #256	; 0x100
 AUDIO_IO_Write(Addr, Reg, Value);
 800446a:	4622      	mov	r2, r4
 800446c:	f000 fc3a 	bl	8004ce4 <AUDIO_IO_Write>
 8004470:	4622      	mov	r2, r4
 8004472:	f240 4101 	movw	r1, #1025	; 0x401
 8004476:	4628      	mov	r0, r5
 8004478:	f000 fc34 	bl	8004ce4 <AUDIO_IO_Write>
 800447c:	4622      	mov	r2, r4
 800447e:	f240 4104 	movw	r1, #1028	; 0x404
 8004482:	4628      	mov	r0, r5
 8004484:	f000 fc2e 	bl	8004ce4 <AUDIO_IO_Write>
 8004488:	4622      	mov	r2, r4
 800448a:	f240 4105 	movw	r1, #1029	; 0x405
 800448e:	4628      	mov	r0, r5
 8004490:	f000 fc28 	bl	8004ce4 <AUDIO_IO_Write>
}
 8004494:	4630      	mov	r0, r6
 8004496:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      counter += CODEC_IO_Write(DeviceAddr, 0x1C, convertedvol | 0x140);
 800449a:	fa5f f885 	uxtb.w	r8, r5
 800449e:	f447 77a0 	orr.w	r7, r7, #320	; 0x140
      counter += wm8994_SetMute(DeviceAddr, AUDIO_MUTE_OFF);
 80044a2:	2100      	movs	r1, #0
 80044a4:	f7ff ff70 	bl	8004388 <wm8994_SetMute>
 AUDIO_IO_Write(Addr, Reg, Value);
 80044a8:	463a      	mov	r2, r7
 80044aa:	211c      	movs	r1, #28
      counter += wm8994_SetMute(DeviceAddr, AUDIO_MUTE_OFF);
 80044ac:	4606      	mov	r6, r0
 AUDIO_IO_Write(Addr, Reg, Value);
 80044ae:	4640      	mov	r0, r8
 80044b0:	f000 fc18 	bl	8004ce4 <AUDIO_IO_Write>
 80044b4:	463a      	mov	r2, r7
 80044b6:	211d      	movs	r1, #29
 80044b8:	4640      	mov	r0, r8
 80044ba:	f000 fc13 	bl	8004ce4 <AUDIO_IO_Write>
 80044be:	463a      	mov	r2, r7
 80044c0:	2126      	movs	r1, #38	; 0x26
 80044c2:	4640      	mov	r0, r8
 80044c4:	f000 fc0e 	bl	8004ce4 <AUDIO_IO_Write>
 80044c8:	463a      	mov	r2, r7
 80044ca:	2127      	movs	r1, #39	; 0x27
 80044cc:	4640      	mov	r0, r8
 80044ce:	e7b0      	b.n	8004432 <wm8994_SetVolume+0x5e>
 80044d0:	20001848 	.word	0x20001848
 80044d4:	20001844 	.word	0x20001844

080044d8 <wm8994_Init>:
{
 80044d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044dc:	4681      	mov	r9, r0
 80044de:	461f      	mov	r7, r3
  uint16_t input_device = OutputInputDevice & 0xFF00;
 80044e0:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
{
 80044e4:	4692      	mov	sl, r2
  counter += CODEC_IO_Write(DeviceAddr, 0x102, 0x0003);
 80044e6:	fa5f f489 	uxtb.w	r4, r9
  uint16_t output_device = OutputInputDevice & 0xFF;
 80044ea:	b2ce      	uxtb	r6, r1
  AUDIO_IO_Init();
 80044ec:	f000 fbf4 	bl	8004cd8 <AUDIO_IO_Init>
 AUDIO_IO_Write(Addr, Reg, Value);
 80044f0:	2203      	movs	r2, #3
 80044f2:	f44f 7181 	mov.w	r1, #258	; 0x102
 80044f6:	4620      	mov	r0, r4
 80044f8:	f000 fbf4 	bl	8004ce4 <AUDIO_IO_Write>
 80044fc:	2200      	movs	r2, #0
 80044fe:	f640 0117 	movw	r1, #2071	; 0x817
 8004502:	4620      	mov	r0, r4
 8004504:	f000 fbee 	bl	8004ce4 <AUDIO_IO_Write>
 8004508:	2200      	movs	r2, #0
 800450a:	f44f 7181 	mov.w	r1, #258	; 0x102
 800450e:	4620      	mov	r0, r4
 8004510:	f000 fbe8 	bl	8004ce4 <AUDIO_IO_Write>
 8004514:	226c      	movs	r2, #108	; 0x6c
 8004516:	2139      	movs	r1, #57	; 0x39
 8004518:	4620      	mov	r0, r4
 800451a:	f000 fbe3 	bl	8004ce4 <AUDIO_IO_Write>
  if (input_device > 0)
 800451e:	b3cd      	cbz	r5, 8004594 <wm8994_Init+0xbc>
 AUDIO_IO_Write(Addr, Reg, Value);
 8004520:	2213      	movs	r2, #19
 8004522:	2101      	movs	r1, #1
 8004524:	4620      	mov	r0, r4
 8004526:	f000 fbdd 	bl	8004ce4 <AUDIO_IO_Write>
  AUDIO_IO_Delay(50);
 800452a:	2032      	movs	r0, #50	; 0x32
 800452c:	f000 fbec 	bl	8004d08 <AUDIO_IO_Delay>
 8004530:	f8df b180 	ldr.w	fp, [pc, #384]	; 80046b4 <wm8994_Init+0x1dc>
 8004534:	4b5e      	ldr	r3, [pc, #376]	; (80046b0 <wm8994_Init+0x1d8>)
  if (output_device > 0)
 8004536:	2e00      	cmp	r6, #0
 8004538:	f000 8082 	beq.w	8004640 <wm8994_Init+0x168>
    outputEnabled = 1;
 800453c:	f04f 0801 	mov.w	r8, #1
    switch (output_device)
 8004540:	2e02      	cmp	r6, #2
    outputEnabled = 1;
 8004542:	f8c3 8000 	str.w	r8, [r3]
    switch (output_device)
 8004546:	d061      	beq.n	800460c <wm8994_Init+0x134>
 8004548:	2e03      	cmp	r6, #3
 800454a:	d025      	beq.n	8004598 <wm8994_Init+0xc0>
 800454c:	4546      	cmp	r6, r8
 800454e:	d15d      	bne.n	800460c <wm8994_Init+0x134>
 AUDIO_IO_Write(Addr, Reg, Value);
 8004550:	f640 420c 	movw	r2, #3084	; 0xc0c
 8004554:	2105      	movs	r1, #5
 8004556:	4620      	mov	r0, r4
 8004558:	f000 fbc4 	bl	8004ce4 <AUDIO_IO_Write>
 800455c:	2200      	movs	r2, #0
 800455e:	f240 6101 	movw	r1, #1537	; 0x601
 8004562:	4620      	mov	r0, r4
 8004564:	f000 fbbe 	bl	8004ce4 <AUDIO_IO_Write>
 8004568:	2200      	movs	r2, #0
 800456a:	f240 6102 	movw	r1, #1538	; 0x602
 800456e:	4620      	mov	r0, r4
 8004570:	f000 fbb8 	bl	8004ce4 <AUDIO_IO_Write>
 8004574:	2202      	movs	r2, #2
 8004576:	f240 6104 	movw	r1, #1540	; 0x604
 800457a:	4620      	mov	r0, r4
 800457c:	f000 fbb2 	bl	8004ce4 <AUDIO_IO_Write>
 8004580:	2202      	movs	r2, #2
 8004582:	f240 6105 	movw	r1, #1541	; 0x605
 8004586:	4620      	mov	r0, r4
 8004588:	f000 fbac 	bl	8004ce4 <AUDIO_IO_Write>
  if (input_device > 0)
 800458c:	bb35      	cbnz	r5, 80045dc <wm8994_Init+0x104>
    inputEnabled = 0;
 800458e:	f8cb 5000 	str.w	r5, [fp]
 8004592:	e0b5      	b.n	8004700 <wm8994_Init+0x228>
 AUDIO_IO_Write(Addr, Reg, Value);
 8004594:	2203      	movs	r2, #3
 8004596:	e7c4      	b.n	8004522 <wm8994_Init+0x4a>
      if (input_device == INPUT_DEVICE_DIGITAL_MIC1_MIC2)
 8004598:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 AUDIO_IO_Write(Addr, Reg, Value);
 800459c:	f640 720f 	movw	r2, #3855	; 0xf0f
 80045a0:	f04f 0105 	mov.w	r1, #5
 80045a4:	4620      	mov	r0, r4
      if (input_device == INPUT_DEVICE_DIGITAL_MIC1_MIC2)
 80045a6:	d127      	bne.n	80045f8 <wm8994_Init+0x120>
 AUDIO_IO_Write(Addr, Reg, Value);
 80045a8:	f000 fb9c 	bl	8004ce4 <AUDIO_IO_Write>
 80045ac:	4632      	mov	r2, r6
 80045ae:	f240 6101 	movw	r1, #1537	; 0x601
 80045b2:	4620      	mov	r0, r4
 80045b4:	f000 fb96 	bl	8004ce4 <AUDIO_IO_Write>
 80045b8:	4632      	mov	r2, r6
 80045ba:	f240 6102 	movw	r1, #1538	; 0x602
 80045be:	4620      	mov	r0, r4
 80045c0:	f000 fb90 	bl	8004ce4 <AUDIO_IO_Write>
 80045c4:	4632      	mov	r2, r6
 80045c6:	f240 6104 	movw	r1, #1540	; 0x604
 80045ca:	4620      	mov	r0, r4
 80045cc:	f000 fb8a 	bl	8004ce4 <AUDIO_IO_Write>
 80045d0:	4632      	mov	r2, r6
 80045d2:	f240 6105 	movw	r1, #1541	; 0x605
 80045d6:	4620      	mov	r0, r4
 80045d8:	f000 fb84 	bl	8004ce4 <AUDIO_IO_Write>
    inputEnabled = 1;
 80045dc:	2301      	movs	r3, #1
    switch (input_device)
 80045de:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
    inputEnabled = 1;
 80045e2:	f8cb 3000 	str.w	r3, [fp]
    switch (input_device)
 80045e6:	d067      	beq.n	80046b8 <wm8994_Init+0x1e0>
 80045e8:	d82c      	bhi.n	8004644 <wm8994_Init+0x16c>
 80045ea:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 80045ee:	f000 81bd 	beq.w	800496c <wm8994_Init+0x494>
      counter++;
 80045f2:	f04f 0801 	mov.w	r8, #1
 80045f6:	e085      	b.n	8004704 <wm8994_Init+0x22c>
 AUDIO_IO_Write(Addr, Reg, Value);
 80045f8:	f000 fb74 	bl	8004ce4 <AUDIO_IO_Write>
 80045fc:	4642      	mov	r2, r8
 80045fe:	f240 6101 	movw	r1, #1537	; 0x601
 8004602:	4620      	mov	r0, r4
 8004604:	f000 fb6e 	bl	8004ce4 <AUDIO_IO_Write>
 8004608:	4642      	mov	r2, r8
 800460a:	e7ae      	b.n	800456a <wm8994_Init+0x92>
 800460c:	f240 3203 	movw	r2, #771	; 0x303
 8004610:	2105      	movs	r1, #5
 8004612:	4620      	mov	r0, r4
 8004614:	f000 fb66 	bl	8004ce4 <AUDIO_IO_Write>
 8004618:	4642      	mov	r2, r8
 800461a:	f240 6101 	movw	r1, #1537	; 0x601
 800461e:	4620      	mov	r0, r4
 8004620:	f000 fb60 	bl	8004ce4 <AUDIO_IO_Write>
 8004624:	4642      	mov	r2, r8
 8004626:	f240 6102 	movw	r1, #1538	; 0x602
 800462a:	4620      	mov	r0, r4
 800462c:	f000 fb5a 	bl	8004ce4 <AUDIO_IO_Write>
 8004630:	2200      	movs	r2, #0
 8004632:	f240 6104 	movw	r1, #1540	; 0x604
 8004636:	4620      	mov	r0, r4
 8004638:	f000 fb54 	bl	8004ce4 <AUDIO_IO_Write>
 800463c:	2200      	movs	r2, #0
 800463e:	e7a0      	b.n	8004582 <wm8994_Init+0xaa>
    outputEnabled = 0;
 8004640:	601e      	str	r6, [r3, #0]
 8004642:	e7a3      	b.n	800458c <wm8994_Init+0xb4>
    switch (input_device)
 8004644:	f5b5 7f40 	cmp.w	r5, #768	; 0x300
 8004648:	f000 8161 	beq.w	800490e <wm8994_Init+0x436>
 800464c:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8004650:	d1cf      	bne.n	80045f2 <wm8994_Init+0x11a>
 AUDIO_IO_Write(Addr, Reg, Value);
 8004652:	f640 723c 	movw	r2, #3900	; 0xf3c
 8004656:	2104      	movs	r1, #4
 8004658:	4620      	mov	r0, r4
 800465a:	f000 fb43 	bl	8004ce4 <AUDIO_IO_Write>
 800465e:	22db      	movs	r2, #219	; 0xdb
 8004660:	f44f 618a 	mov.w	r1, #1104	; 0x450
 8004664:	4620      	mov	r0, r4
 8004666:	f000 fb3d 	bl	8004ce4 <AUDIO_IO_Write>
 800466a:	22db      	movs	r2, #219	; 0xdb
 800466c:	f44f 6188 	mov.w	r1, #1088	; 0x440
 8004670:	4620      	mov	r0, r4
 8004672:	f000 fb37 	bl	8004ce4 <AUDIO_IO_Write>
 8004676:	f246 32a0 	movw	r2, #25504	; 0x63a0
 800467a:	2102      	movs	r1, #2
 800467c:	4620      	mov	r0, r4
 800467e:	f000 fb31 	bl	8004ce4 <AUDIO_IO_Write>
 8004682:	2202      	movs	r2, #2
 8004684:	f240 6106 	movw	r1, #1542	; 0x606
 8004688:	4620      	mov	r0, r4
 800468a:	f000 fb2b 	bl	8004ce4 <AUDIO_IO_Write>
 800468e:	2202      	movs	r2, #2
 8004690:	f240 6107 	movw	r1, #1543	; 0x607
 8004694:	4620      	mov	r0, r4
 8004696:	f000 fb25 	bl	8004ce4 <AUDIO_IO_Write>
 800469a:	2202      	movs	r2, #2
 800469c:	f44f 61c1 	mov.w	r1, #1544	; 0x608
 80046a0:	4620      	mov	r0, r4
 80046a2:	f000 fb1f 	bl	8004ce4 <AUDIO_IO_Write>
 80046a6:	2202      	movs	r2, #2
 80046a8:	f240 6109 	movw	r1, #1545	; 0x609
 80046ac:	e159      	b.n	8004962 <wm8994_Init+0x48a>
 80046ae:	bf00      	nop
 80046b0:	20001848 	.word	0x20001848
 80046b4:	20001844 	.word	0x20001844
 80046b8:	f44f 6243 	mov.w	r2, #3120	; 0xc30
 80046bc:	2104      	movs	r1, #4
 80046be:	4620      	mov	r0, r4
 80046c0:	f000 fb10 	bl	8004ce4 <AUDIO_IO_Write>
 80046c4:	22db      	movs	r2, #219	; 0xdb
 80046c6:	f44f 618a 	mov.w	r1, #1104	; 0x450
 80046ca:	4620      	mov	r0, r4
 80046cc:	f000 fb0a 	bl	8004ce4 <AUDIO_IO_Write>
 80046d0:	f44f 42c0 	mov.w	r2, #24576	; 0x6000
 80046d4:	2102      	movs	r1, #2
 80046d6:	4620      	mov	r0, r4
 80046d8:	f000 fb04 	bl	8004ce4 <AUDIO_IO_Write>
 80046dc:	2202      	movs	r2, #2
 80046de:	f44f 61c1 	mov.w	r1, #1544	; 0x608
 80046e2:	4620      	mov	r0, r4
 80046e4:	f000 fafe 	bl	8004ce4 <AUDIO_IO_Write>
 80046e8:	2202      	movs	r2, #2
 80046ea:	f240 6109 	movw	r1, #1545	; 0x609
 80046ee:	4620      	mov	r0, r4
 80046f0:	f000 faf8 	bl	8004ce4 <AUDIO_IO_Write>
 80046f4:	220e      	movs	r2, #14
 80046f6:	f44f 61e0 	mov.w	r1, #1792	; 0x700
 80046fa:	4620      	mov	r0, r4
 80046fc:	f000 faf2 	bl	8004ce4 <AUDIO_IO_Write>
      counter += CODEC_IO_Write(DeviceAddr, 0x700, 0x000D);
 8004700:	f04f 0800 	mov.w	r8, #0
  switch (AudioFreq)
 8004704:	f245 6322 	movw	r3, #22050	; 0x5622
 8004708:	429f      	cmp	r7, r3
 800470a:	f000 814b 	beq.w	80049a4 <wm8994_Init+0x4cc>
 800470e:	f200 8130 	bhi.w	8004972 <wm8994_Init+0x49a>
 8004712:	f642 3311 	movw	r3, #11025	; 0x2b11
 8004716:	429f      	cmp	r7, r3
 8004718:	f000 8142 	beq.w	80049a0 <wm8994_Init+0x4c8>
 800471c:	f5b7 5f7a 	cmp.w	r7, #16000	; 0x3e80
 8004720:	f000 813a 	beq.w	8004998 <wm8994_Init+0x4c0>
 8004724:	f5b7 5ffa 	cmp.w	r7, #8000	; 0x1f40
 8004728:	f040 812b 	bne.w	8004982 <wm8994_Init+0x4aa>
 AUDIO_IO_Write(Addr, Reg, Value);
 800472c:	2203      	movs	r2, #3
 800472e:	f44f 7104 	mov.w	r1, #528	; 0x210
 8004732:	4620      	mov	r0, r4
 8004734:	f000 fad6 	bl	8004ce4 <AUDIO_IO_Write>
  if(input_device == INPUT_DEVICE_DIGITAL_MIC1_MIC2)
 8004738:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 AUDIO_IO_Write(Addr, Reg, Value);
 800473c:	f44f 7140 	mov.w	r1, #768	; 0x300
 8004740:	4620      	mov	r0, r4
 8004742:	bf0c      	ite	eq
 8004744:	f244 0218 	movweq	r2, #16408	; 0x4018
 8004748:	f244 0210 	movwne	r2, #16400	; 0x4010
 800474c:	f000 faca 	bl	8004ce4 <AUDIO_IO_Write>
 8004750:	2200      	movs	r2, #0
 8004752:	f240 3102 	movw	r1, #770	; 0x302
 8004756:	4620      	mov	r0, r4
 8004758:	f000 fac4 	bl	8004ce4 <AUDIO_IO_Write>
 800475c:	220a      	movs	r2, #10
 800475e:	f44f 7102 	mov.w	r1, #520	; 0x208
 8004762:	4620      	mov	r0, r4
 8004764:	f000 fabe 	bl	8004ce4 <AUDIO_IO_Write>
 8004768:	2201      	movs	r2, #1
 800476a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800476e:	4620      	mov	r0, r4
 8004770:	f000 fab8 	bl	8004ce4 <AUDIO_IO_Write>
  if (output_device > 0)  /* Audio output selected */
 8004774:	2e00      	cmp	r6, #0
 8004776:	f000 80a9 	beq.w	80048cc <wm8994_Init+0x3f4>
    if (output_device == OUTPUT_DEVICE_HEADPHONE)
 800477a:	2e02      	cmp	r6, #2
 800477c:	d123      	bne.n	80047c6 <wm8994_Init+0x2ee>
 AUDIO_IO_Write(Addr, Reg, Value);
 800477e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004782:	212d      	movs	r1, #45	; 0x2d
 8004784:	4620      	mov	r0, r4
      if(ColdStartup)
 8004786:	4ea5      	ldr	r6, [pc, #660]	; (8004a1c <wm8994_Init+0x544>)
 AUDIO_IO_Write(Addr, Reg, Value);
 8004788:	f000 faac 	bl	8004ce4 <AUDIO_IO_Write>
 800478c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004790:	212e      	movs	r1, #46	; 0x2e
 8004792:	4620      	mov	r0, r4
 8004794:	f000 faa6 	bl	8004ce4 <AUDIO_IO_Write>
      if(ColdStartup)
 8004798:	7833      	ldrb	r3, [r6, #0]
 800479a:	2b00      	cmp	r3, #0
 800479c:	f000 8106 	beq.w	80049ac <wm8994_Init+0x4d4>
 AUDIO_IO_Write(Addr, Reg, Value);
 80047a0:	4620      	mov	r0, r4
 80047a2:	f44f 4201 	mov.w	r2, #33024	; 0x8100
 80047a6:	f44f 7188 	mov.w	r1, #272	; 0x110
 80047aa:	f000 fa9b 	bl	8004ce4 <AUDIO_IO_Write>
        ColdStartup=0;
 80047ae:	2300      	movs	r3, #0
        AUDIO_IO_Delay(300);
 80047b0:	f44f 7096 	mov.w	r0, #300	; 0x12c
        ColdStartup=0;
 80047b4:	7033      	strb	r3, [r6, #0]
        AUDIO_IO_Delay(50);
 80047b6:	f000 faa7 	bl	8004d08 <AUDIO_IO_Delay>
 AUDIO_IO_Write(Addr, Reg, Value);
 80047ba:	2200      	movs	r2, #0
 80047bc:	f44f 6184 	mov.w	r1, #1056	; 0x420
 80047c0:	4620      	mov	r0, r4
 80047c2:	f000 fa8f 	bl	8004ce4 <AUDIO_IO_Write>
 80047c6:	f44f 7240 	mov.w	r2, #768	; 0x300
 80047ca:	2103      	movs	r1, #3
 80047cc:	4620      	mov	r0, r4
    power_mgnt_reg_1 |= 0x0303 | 0x3003;
 80047ce:	f243 3603 	movw	r6, #13059	; 0x3303
 AUDIO_IO_Write(Addr, Reg, Value);
 80047d2:	f000 fa87 	bl	8004ce4 <AUDIO_IO_Write>
 80047d6:	2200      	movs	r2, #0
 80047d8:	2122      	movs	r1, #34	; 0x22
 80047da:	4620      	mov	r0, r4
 80047dc:	f000 fa82 	bl	8004ce4 <AUDIO_IO_Write>
 80047e0:	2200      	movs	r2, #0
 80047e2:	2123      	movs	r1, #35	; 0x23
 80047e4:	4620      	mov	r0, r4
 80047e6:	f000 fa7d 	bl	8004ce4 <AUDIO_IO_Write>
 80047ea:	f44f 7240 	mov.w	r2, #768	; 0x300
 80047ee:	2136      	movs	r1, #54	; 0x36
 80047f0:	4620      	mov	r0, r4
 80047f2:	f000 fa77 	bl	8004ce4 <AUDIO_IO_Write>
 80047f6:	f243 0203 	movw	r2, #12291	; 0x3003
 80047fa:	2101      	movs	r1, #1
 80047fc:	4620      	mov	r0, r4
 80047fe:	f000 fa71 	bl	8004ce4 <AUDIO_IO_Write>
    if (input_device == INPUT_DEVICE_DIGITAL_MIC1_MIC2)
 8004802:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 AUDIO_IO_Write(Addr, Reg, Value);
 8004806:	f04f 0151 	mov.w	r1, #81	; 0x51
 800480a:	4620      	mov	r0, r4
 800480c:	bf0c      	ite	eq
 800480e:	f240 2205 	movweq	r2, #517	; 0x205
 8004812:	2205      	movne	r2, #5
 8004814:	f000 fa66 	bl	8004ce4 <AUDIO_IO_Write>
 8004818:	f243 3203 	movw	r2, #13059	; 0x3303
 800481c:	2101      	movs	r1, #1
 800481e:	4620      	mov	r0, r4
 8004820:	f000 fa60 	bl	8004ce4 <AUDIO_IO_Write>
 8004824:	2222      	movs	r2, #34	; 0x22
 8004826:	2160      	movs	r1, #96	; 0x60
 8004828:	4620      	mov	r0, r4
 800482a:	f000 fa5b 	bl	8004ce4 <AUDIO_IO_Write>
 800482e:	f649 7225 	movw	r2, #40741	; 0x9f25
 8004832:	214c      	movs	r1, #76	; 0x4c
 8004834:	4620      	mov	r0, r4
 8004836:	f000 fa55 	bl	8004ce4 <AUDIO_IO_Write>
    AUDIO_IO_Delay(15);
 800483a:	200f      	movs	r0, #15
 800483c:	f000 fa64 	bl	8004d08 <AUDIO_IO_Delay>
 AUDIO_IO_Write(Addr, Reg, Value);
 8004840:	2201      	movs	r2, #1
 8004842:	212d      	movs	r1, #45	; 0x2d
 8004844:	4620      	mov	r0, r4
 8004846:	f000 fa4d 	bl	8004ce4 <AUDIO_IO_Write>
 800484a:	2201      	movs	r2, #1
 800484c:	212e      	movs	r1, #46	; 0x2e
 800484e:	4620      	mov	r0, r4
 8004850:	f000 fa48 	bl	8004ce4 <AUDIO_IO_Write>
 8004854:	f44f 724c 	mov.w	r2, #816	; 0x330
 8004858:	2103      	movs	r1, #3
 800485a:	4620      	mov	r0, r4
 800485c:	f000 fa42 	bl	8004ce4 <AUDIO_IO_Write>
 8004860:	2233      	movs	r2, #51	; 0x33
 8004862:	2154      	movs	r1, #84	; 0x54
 8004864:	4620      	mov	r0, r4
 8004866:	f000 fa3d 	bl	8004ce4 <AUDIO_IO_Write>
    AUDIO_IO_Delay(257);
 800486a:	f240 1001 	movw	r0, #257	; 0x101
 800486e:	f000 fa4b 	bl	8004d08 <AUDIO_IO_Delay>
 AUDIO_IO_Write(Addr, Reg, Value);
 8004872:	22ee      	movs	r2, #238	; 0xee
 8004874:	2160      	movs	r1, #96	; 0x60
 8004876:	4620      	mov	r0, r4
 8004878:	f000 fa34 	bl	8004ce4 <AUDIO_IO_Write>
 800487c:	22c0      	movs	r2, #192	; 0xc0
 800487e:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8004882:	4620      	mov	r0, r4
 8004884:	f000 fa2e 	bl	8004ce4 <AUDIO_IO_Write>
 8004888:	22c0      	movs	r2, #192	; 0xc0
 800488a:	f240 6111 	movw	r1, #1553	; 0x611
 800488e:	4620      	mov	r0, r4
 8004890:	f000 fa28 	bl	8004ce4 <AUDIO_IO_Write>
 8004894:	2210      	movs	r2, #16
 8004896:	f44f 6184 	mov.w	r1, #1056	; 0x420
 800489a:	4620      	mov	r0, r4
 800489c:	f000 fa22 	bl	8004ce4 <AUDIO_IO_Write>
 80048a0:	22c0      	movs	r2, #192	; 0xc0
 80048a2:	f240 6112 	movw	r1, #1554	; 0x612
 80048a6:	4620      	mov	r0, r4
 80048a8:	f000 fa1c 	bl	8004ce4 <AUDIO_IO_Write>
 80048ac:	22c0      	movs	r2, #192	; 0xc0
 80048ae:	f240 6113 	movw	r1, #1555	; 0x613
 80048b2:	4620      	mov	r0, r4
 80048b4:	f000 fa16 	bl	8004ce4 <AUDIO_IO_Write>
 80048b8:	2210      	movs	r2, #16
 80048ba:	f240 4122 	movw	r1, #1058	; 0x422
 80048be:	4620      	mov	r0, r4
 80048c0:	f000 fa10 	bl	8004ce4 <AUDIO_IO_Write>
    wm8994_SetVolume(DeviceAddr, Volume);
 80048c4:	4651      	mov	r1, sl
 80048c6:	4648      	mov	r0, r9
 80048c8:	f7ff fd84 	bl	80043d4 <wm8994_SetVolume>
  if (input_device > 0) /* Audio input selected */
 80048cc:	b1e5      	cbz	r5, 8004908 <wm8994_Init+0x430>
    if ((input_device == INPUT_DEVICE_DIGITAL_MICROPHONE_1) || (input_device == INPUT_DEVICE_DIGITAL_MICROPHONE_2))
 80048ce:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 80048d2:	d002      	beq.n	80048da <wm8994_Init+0x402>
 80048d4:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 80048d8:	d171      	bne.n	80049be <wm8994_Init+0x4e6>
 AUDIO_IO_Write(Addr, Reg, Value);
 80048da:	f046 0213 	orr.w	r2, r6, #19
 80048de:	2101      	movs	r1, #1
 80048e0:	4620      	mov	r0, r4
 80048e2:	f000 f9ff 	bl	8004ce4 <AUDIO_IO_Write>
 80048e6:	2202      	movs	r2, #2
 80048e8:	f44f 61c4 	mov.w	r1, #1568	; 0x620
 80048ec:	4620      	mov	r0, r4
 80048ee:	f000 f9f9 	bl	8004ce4 <AUDIO_IO_Write>
 80048f2:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 80048f6:	f240 4111 	movw	r1, #1041	; 0x411
 80048fa:	4620      	mov	r0, r4
 80048fc:	f000 f9f2 	bl	8004ce4 <AUDIO_IO_Write>
    wm8994_SetVolume(DeviceAddr, Volume);
 8004900:	4651      	mov	r1, sl
 8004902:	4648      	mov	r0, r9
 8004904:	f7ff fd66 	bl	80043d4 <wm8994_SetVolume>
}
 8004908:	4640      	mov	r0, r8
 800490a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 AUDIO_IO_Write(Addr, Reg, Value);
 800490e:	2211      	movs	r2, #17
 8004910:	2128      	movs	r1, #40	; 0x28
 8004912:	4620      	mov	r0, r4
 8004914:	f000 f9e6 	bl	8004ce4 <AUDIO_IO_Write>
 8004918:	2235      	movs	r2, #53	; 0x35
 800491a:	2129      	movs	r1, #41	; 0x29
 800491c:	4620      	mov	r0, r4
 800491e:	f000 f9e1 	bl	8004ce4 <AUDIO_IO_Write>
 8004922:	2235      	movs	r2, #53	; 0x35
 8004924:	212a      	movs	r1, #42	; 0x2a
 8004926:	4620      	mov	r0, r4
 8004928:	f000 f9dc 	bl	8004ce4 <AUDIO_IO_Write>
 800492c:	f240 3203 	movw	r2, #771	; 0x303
 8004930:	2104      	movs	r1, #4
 8004932:	4620      	mov	r0, r4
 8004934:	f000 f9d6 	bl	8004ce4 <AUDIO_IO_Write>
 8004938:	22db      	movs	r2, #219	; 0xdb
 800493a:	f44f 6188 	mov.w	r1, #1088	; 0x440
 800493e:	4620      	mov	r0, r4
 8004940:	f000 f9d0 	bl	8004ce4 <AUDIO_IO_Write>
 8004944:	f246 3250 	movw	r2, #25424	; 0x6350
 8004948:	2102      	movs	r1, #2
 800494a:	4620      	mov	r0, r4
 800494c:	f000 f9ca 	bl	8004ce4 <AUDIO_IO_Write>
 8004950:	2202      	movs	r2, #2
 8004952:	f240 6106 	movw	r1, #1542	; 0x606
 8004956:	4620      	mov	r0, r4
 8004958:	f000 f9c4 	bl	8004ce4 <AUDIO_IO_Write>
 800495c:	2202      	movs	r2, #2
 800495e:	f240 6107 	movw	r1, #1543	; 0x607
 8004962:	4620      	mov	r0, r4
 8004964:	f000 f9be 	bl	8004ce4 <AUDIO_IO_Write>
 8004968:	220d      	movs	r2, #13
 800496a:	e6c4      	b.n	80046f6 <wm8994_Init+0x21e>
 800496c:	f44f 7243 	mov.w	r2, #780	; 0x30c
 8004970:	e7de      	b.n	8004930 <wm8994_Init+0x458>
  switch (AudioFreq)
 8004972:	f64a 4344 	movw	r3, #44100	; 0xac44
 8004976:	429f      	cmp	r7, r3
 8004978:	d016      	beq.n	80049a8 <wm8994_Init+0x4d0>
 800497a:	d804      	bhi.n	8004986 <wm8994_Init+0x4ae>
 800497c:	f5b7 4ffa 	cmp.w	r7, #32000	; 0x7d00
 8004980:	d00c      	beq.n	800499c <wm8994_Init+0x4c4>
 AUDIO_IO_Write(Addr, Reg, Value);
 8004982:	2283      	movs	r2, #131	; 0x83
 8004984:	e6d3      	b.n	800472e <wm8994_Init+0x256>
  switch (AudioFreq)
 8004986:	f64b 3380 	movw	r3, #48000	; 0xbb80
 800498a:	429f      	cmp	r7, r3
 800498c:	d0f9      	beq.n	8004982 <wm8994_Init+0x4aa>
 800498e:	4b24      	ldr	r3, [pc, #144]	; (8004a20 <wm8994_Init+0x548>)
 8004990:	429f      	cmp	r7, r3
 8004992:	d1f6      	bne.n	8004982 <wm8994_Init+0x4aa>
 AUDIO_IO_Write(Addr, Reg, Value);
 8004994:	22a3      	movs	r2, #163	; 0xa3
 8004996:	e6ca      	b.n	800472e <wm8994_Init+0x256>
 8004998:	2233      	movs	r2, #51	; 0x33
 800499a:	e6c8      	b.n	800472e <wm8994_Init+0x256>
 800499c:	2263      	movs	r2, #99	; 0x63
 800499e:	e6c6      	b.n	800472e <wm8994_Init+0x256>
 80049a0:	2213      	movs	r2, #19
 80049a2:	e6c4      	b.n	800472e <wm8994_Init+0x256>
 80049a4:	2243      	movs	r2, #67	; 0x43
 80049a6:	e6c2      	b.n	800472e <wm8994_Init+0x256>
 80049a8:	2273      	movs	r2, #115	; 0x73
 80049aa:	e6c0      	b.n	800472e <wm8994_Init+0x256>
 80049ac:	4620      	mov	r0, r4
 80049ae:	f248 1208 	movw	r2, #33032	; 0x8108
 80049b2:	f44f 7188 	mov.w	r1, #272	; 0x110
 80049b6:	f000 f995 	bl	8004ce4 <AUDIO_IO_Write>
        AUDIO_IO_Delay(50);
 80049ba:	2032      	movs	r0, #50	; 0x32
 80049bc:	e6fb      	b.n	80047b6 <wm8994_Init+0x2de>
    else if(input_device == INPUT_DEVICE_DIGITAL_MIC1_MIC2)
 80049be:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 80049c2:	d115      	bne.n	80049f0 <wm8994_Init+0x518>
 AUDIO_IO_Write(Addr, Reg, Value);
 80049c4:	f046 0213 	orr.w	r2, r6, #19
 80049c8:	2101      	movs	r1, #1
 80049ca:	4620      	mov	r0, r4
 80049cc:	f000 f98a 	bl	8004ce4 <AUDIO_IO_Write>
 80049d0:	2202      	movs	r2, #2
 80049d2:	f44f 61c4 	mov.w	r1, #1568	; 0x620
 80049d6:	4620      	mov	r0, r4
 80049d8:	f000 f984 	bl	8004ce4 <AUDIO_IO_Write>
 80049dc:	f44f 52c0 	mov.w	r2, #6144	; 0x1800
 80049e0:	f44f 6182 	mov.w	r1, #1040	; 0x410
 80049e4:	4620      	mov	r0, r4
 80049e6:	f000 f97d 	bl	8004ce4 <AUDIO_IO_Write>
 80049ea:	f44f 52c0 	mov.w	r2, #6144	; 0x1800
 80049ee:	e782      	b.n	80048f6 <wm8994_Init+0x41e>
    else if ((input_device == INPUT_DEVICE_INPUT_LINE_1) || (input_device == INPUT_DEVICE_INPUT_LINE_2))
 80049f0:	f5b5 7f40 	cmp.w	r5, #768	; 0x300
 80049f4:	d002      	beq.n	80049fc <wm8994_Init+0x524>
 80049f6:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 80049fa:	d181      	bne.n	8004900 <wm8994_Init+0x428>
 AUDIO_IO_Write(Addr, Reg, Value);
 80049fc:	220b      	movs	r2, #11
 80049fe:	2118      	movs	r1, #24
 8004a00:	4620      	mov	r0, r4
 8004a02:	f000 f96f 	bl	8004ce4 <AUDIO_IO_Write>
 8004a06:	220b      	movs	r2, #11
 8004a08:	211a      	movs	r1, #26
 8004a0a:	4620      	mov	r0, r4
 8004a0c:	f000 f96a 	bl	8004ce4 <AUDIO_IO_Write>
 8004a10:	f44f 52c0 	mov.w	r2, #6144	; 0x1800
 8004a14:	f44f 6182 	mov.w	r1, #1040	; 0x410
 8004a18:	e76f      	b.n	80048fa <wm8994_Init+0x422>
 8004a1a:	bf00      	nop
 8004a1c:	2000004c 	.word	0x2000004c
 8004a20:	00017700 	.word	0x00017700

08004a24 <I2Cx_Init>:
  * @brief  Initializes I2C HAL.
  * @param  i2c_handler : I2C handler
  * @retval None
  */
static void I2Cx_Init(I2C_HandleTypeDef *i2c_handler)
{
 8004a24:	b570      	push	{r4, r5, r6, lr}
 8004a26:	b08a      	sub	sp, #40	; 0x28
 8004a28:	4605      	mov	r5, r0
  if(HAL_I2C_GetState(i2c_handler) == HAL_I2C_STATE_RESET)
 8004a2a:	f001 fe8a 	bl	8006742 <HAL_I2C_GetState>
 8004a2e:	2800      	cmp	r0, #0
 8004a30:	d160      	bne.n	8004af4 <I2Cx_Init+0xd0>
  {
    if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
 8004a32:	4b50      	ldr	r3, [pc, #320]	; (8004b74 <I2Cx_Init+0x150>)
    {
      /* External, camera and Arduino connector  I2C configuration */
      i2c_handler->Instance = DISCOVERY_EXT_I2Cx;
    }
    i2c_handler->Init.Timing           = DISCOVERY_I2Cx_TIMING;
    i2c_handler->Init.OwnAddress1      = 0;
 8004a34:	2600      	movs	r6, #0
 8004a36:	4c50      	ldr	r4, [pc, #320]	; (8004b78 <I2Cx_Init+0x154>)
    if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
 8004a38:	429d      	cmp	r5, r3
    i2c_handler->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
    i2c_handler->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
    i2c_handler->Init.OwnAddress2      = 0;
 8004a3a:	616e      	str	r6, [r5, #20]
      i2c_handler->Instance = DISCOVERY_AUDIO_I2Cx;
 8004a3c:	bf0c      	ite	eq
 8004a3e:	4a4f      	ldreq	r2, [pc, #316]	; (8004b7c <I2Cx_Init+0x158>)
      i2c_handler->Instance = DISCOVERY_EXT_I2Cx;
 8004a40:	4a4f      	ldrne	r2, [pc, #316]	; (8004b80 <I2Cx_Init+0x15c>)
  if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
 8004a42:	429d      	cmp	r5, r3
      i2c_handler->Instance = DISCOVERY_EXT_I2Cx;
 8004a44:	602a      	str	r2, [r5, #0]
    i2c_handler->Init.OwnAddress1      = 0;
 8004a46:	4a4f      	ldr	r2, [pc, #316]	; (8004b84 <I2Cx_Init+0x160>)
 8004a48:	e9c5 2601 	strd	r2, r6, [r5, #4]
    i2c_handler->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 8004a4c:	f04f 0201 	mov.w	r2, #1
    i2c_handler->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
    i2c_handler->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
 8004a50:	e9c5 6607 	strd	r6, r6, [r5, #28]
    i2c_handler->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
 8004a54:	e9c5 2603 	strd	r2, r6, [r5, #12]
  DISCOVERY_AUDIO_I2Cx_SCL_GPIO_CLK_ENABLE();
 8004a58:	6b23      	ldr	r3, [r4, #48]	; 0x30
  if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
 8004a5a:	d14d      	bne.n	8004af8 <I2Cx_Init+0xd4>
  DISCOVERY_AUDIO_I2Cx_SCL_GPIO_CLK_ENABLE();
 8004a5c:	f043 0308 	orr.w	r3, r3, #8
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8004a60:	f44f 5080 	mov.w	r0, #4096	; 0x1000
  gpio_init_structure.Alternate = DISCOVERY_AUDIO_I2Cx_SCL_AF;
 8004a64:	f04f 0c02 	mov.w	ip, #2
  HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_GPIO_PORT, &gpio_init_structure);
 8004a68:	a905      	add	r1, sp, #20
  DISCOVERY_AUDIO_I2Cx_SCL_GPIO_CLK_ENABLE();
 8004a6a:	6323      	str	r3, [r4, #48]	; 0x30
 8004a6c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004a6e:	f003 0308 	and.w	r3, r3, #8
 8004a72:	9300      	str	r3, [sp, #0]
 8004a74:	9b00      	ldr	r3, [sp, #0]
  DISCOVERY_AUDIO_I2Cx_SDA_GPIO_CLK_ENABLE();
 8004a76:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004a78:	f043 0302 	orr.w	r3, r3, #2
 8004a7c:	6323      	str	r3, [r4, #48]	; 0x30
 8004a7e:	6b23      	ldr	r3, [r4, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8004a80:	9607      	str	r6, [sp, #28]
  DISCOVERY_AUDIO_I2Cx_SDA_GPIO_CLK_ENABLE();
 8004a82:	f003 0302 	and.w	r3, r3, #2
 8004a86:	9301      	str	r3, [sp, #4]
 8004a88:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8004a8a:	2312      	movs	r3, #18
 8004a8c:	e9cd 0305 	strd	r0, r3, [sp, #20]
  gpio_init_structure.Alternate = DISCOVERY_AUDIO_I2Cx_SCL_AF;
 8004a90:	2304      	movs	r3, #4
  HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_GPIO_PORT, &gpio_init_structure);
 8004a92:	483d      	ldr	r0, [pc, #244]	; (8004b88 <I2Cx_Init+0x164>)
  gpio_init_structure.Alternate = DISCOVERY_AUDIO_I2Cx_SCL_AF;
 8004a94:	e9cd c308 	strd	ip, r3, [sp, #32]
  HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_GPIO_PORT, &gpio_init_structure);
 8004a98:	f001 f9a6 	bl	8005de8 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCOVERY_AUDIO_I2Cx_SDA_PIN;
 8004a9c:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SDA_GPIO_PORT, &gpio_init_structure);
 8004a9e:	a905      	add	r1, sp, #20
 8004aa0:	483a      	ldr	r0, [pc, #232]	; (8004b8c <I2Cx_Init+0x168>)
  gpio_init_structure.Pin = DISCOVERY_AUDIO_I2Cx_SDA_PIN;
 8004aa2:	9305      	str	r3, [sp, #20]
  gpio_init_structure.Alternate = DISCOVERY_AUDIO_I2Cx_SDA_AF;
 8004aa4:	230b      	movs	r3, #11
 8004aa6:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SDA_GPIO_PORT, &gpio_init_structure);
 8004aa8:	f001 f99e 	bl	8005de8 <HAL_GPIO_Init>
  DISCOVERY_AUDIO_I2Cx_CLK_ENABLE();
 8004aac:	6c23      	ldr	r3, [r4, #64]	; 0x40
  HAL_NVIC_SetPriority(DISCOVERY_AUDIO_I2Cx_EV_IRQn, 0x0F, 0);
 8004aae:	4632      	mov	r2, r6
 8004ab0:	210f      	movs	r1, #15
 8004ab2:	205f      	movs	r0, #95	; 0x5f
  DISCOVERY_AUDIO_I2Cx_CLK_ENABLE();
 8004ab4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004ab8:	6423      	str	r3, [r4, #64]	; 0x40
 8004aba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004abc:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004ac0:	9302      	str	r3, [sp, #8]
 8004ac2:	9b02      	ldr	r3, [sp, #8]
  DISCOVERY_AUDIO_I2Cx_FORCE_RESET();
 8004ac4:	6a23      	ldr	r3, [r4, #32]
 8004ac6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004aca:	6223      	str	r3, [r4, #32]
  DISCOVERY_AUDIO_I2Cx_RELEASE_RESET();
 8004acc:	6a23      	ldr	r3, [r4, #32]
 8004ace:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004ad2:	6223      	str	r3, [r4, #32]
  HAL_NVIC_SetPriority(DISCOVERY_AUDIO_I2Cx_EV_IRQn, 0x0F, 0);
 8004ad4:	f000 f9c6 	bl	8004e64 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCOVERY_AUDIO_I2Cx_EV_IRQn);
 8004ad8:	205f      	movs	r0, #95	; 0x5f
 8004ada:	f000 f9f5 	bl	8004ec8 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCOVERY_AUDIO_I2Cx_ER_IRQn, 0x0F, 0);
 8004ade:	2060      	movs	r0, #96	; 0x60
 8004ae0:	4632      	mov	r2, r6
 8004ae2:	210f      	movs	r1, #15
 8004ae4:	f000 f9be 	bl	8004e64 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCOVERY_AUDIO_I2Cx_ER_IRQn);    
 8004ae8:	2060      	movs	r0, #96	; 0x60
  HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_ER_IRQn);
 8004aea:	f000 f9ed 	bl	8004ec8 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2Cx_MspInit(i2c_handler);
    HAL_I2C_Init(i2c_handler);
 8004aee:	4628      	mov	r0, r5
 8004af0:	f001 fc48 	bl	8006384 <HAL_I2C_Init>
  }
}
 8004af4:	b00a      	add	sp, #40	; 0x28
 8004af6:	bd70      	pop	{r4, r5, r6, pc}
  DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
 8004af8:	f043 0302 	orr.w	r3, r3, #2
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8004afc:	f44f 7280 	mov.w	r2, #256	; 0x100
  gpio_init_structure.Alternate = DISCOVERY_EXT_I2Cx_SCL_SDA_AF;
 8004b00:	2102      	movs	r1, #2
  HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8004b02:	4822      	ldr	r0, [pc, #136]	; (8004b8c <I2Cx_Init+0x168>)
  DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
 8004b04:	6323      	str	r3, [r4, #48]	; 0x30
 8004b06:	6b23      	ldr	r3, [r4, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8004b08:	9607      	str	r6, [sp, #28]
  DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
 8004b0a:	f003 0302 	and.w	r3, r3, #2
 8004b0e:	9303      	str	r3, [sp, #12]
 8004b10:	9b03      	ldr	r3, [sp, #12]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8004b12:	2312      	movs	r3, #18
 8004b14:	e9cd 2305 	strd	r2, r3, [sp, #20]
  gpio_init_structure.Alternate = DISCOVERY_EXT_I2Cx_SCL_SDA_AF;
 8004b18:	2304      	movs	r3, #4
 8004b1a:	e9cd 1308 	strd	r1, r3, [sp, #32]
  HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8004b1e:	a905      	add	r1, sp, #20
 8004b20:	f001 f962 	bl	8005de8 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCOVERY_EXT_I2Cx_SDA_PIN;
 8004b24:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8004b28:	a905      	add	r1, sp, #20
 8004b2a:	4818      	ldr	r0, [pc, #96]	; (8004b8c <I2Cx_Init+0x168>)
  gpio_init_structure.Pin = DISCOVERY_EXT_I2Cx_SDA_PIN;
 8004b2c:	9305      	str	r3, [sp, #20]
  HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8004b2e:	f001 f95b 	bl	8005de8 <HAL_GPIO_Init>
  DISCOVERY_EXT_I2Cx_CLK_ENABLE();
 8004b32:	6c23      	ldr	r3, [r4, #64]	; 0x40
  HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_EV_IRQn, 0x0F, 0);
 8004b34:	4632      	mov	r2, r6
 8004b36:	210f      	movs	r1, #15
 8004b38:	201f      	movs	r0, #31
  DISCOVERY_EXT_I2Cx_CLK_ENABLE();
 8004b3a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8004b3e:	6423      	str	r3, [r4, #64]	; 0x40
 8004b40:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004b42:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004b46:	9304      	str	r3, [sp, #16]
 8004b48:	9b04      	ldr	r3, [sp, #16]
  DISCOVERY_EXT_I2Cx_FORCE_RESET();
 8004b4a:	6a23      	ldr	r3, [r4, #32]
 8004b4c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8004b50:	6223      	str	r3, [r4, #32]
  DISCOVERY_EXT_I2Cx_RELEASE_RESET();
 8004b52:	6a23      	ldr	r3, [r4, #32]
 8004b54:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8004b58:	6223      	str	r3, [r4, #32]
  HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_EV_IRQn, 0x0F, 0);
 8004b5a:	f000 f983 	bl	8004e64 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_EV_IRQn);
 8004b5e:	201f      	movs	r0, #31
 8004b60:	f000 f9b2 	bl	8004ec8 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_ER_IRQn, 0x0F, 0);
 8004b64:	2020      	movs	r0, #32
 8004b66:	4632      	mov	r2, r6
 8004b68:	210f      	movs	r1, #15
 8004b6a:	f000 f97b 	bl	8004e64 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_ER_IRQn);
 8004b6e:	2020      	movs	r0, #32
 8004b70:	e7bb      	b.n	8004aea <I2Cx_Init+0xc6>
 8004b72:	bf00      	nop
 8004b74:	2000184c 	.word	0x2000184c
 8004b78:	40023800 	.word	0x40023800
 8004b7c:	40006000 	.word	0x40006000
 8004b80:	40005400 	.word	0x40005400
 8004b84:	40912732 	.word	0x40912732
 8004b88:	40020c00 	.word	0x40020c00
 8004b8c:	40020400 	.word	0x40020400

08004b90 <I2Cx_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval HAL status
  */
static HAL_StatusTypeDef I2Cx_ReadMultiple(I2C_HandleTypeDef *i2c_handler, uint8_t Addr, uint16_t Reg, uint16_t MemAddress, uint8_t *Buffer, uint16_t Length)
{
 8004b90:	b530      	push	{r4, r5, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8004b92:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
{
 8004b96:	b085      	sub	sp, #20
 8004b98:	4605      	mov	r5, r0
  status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8004b9a:	9402      	str	r4, [sp, #8]
 8004b9c:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8004ba0:	9401      	str	r4, [sp, #4]
 8004ba2:	9c08      	ldr	r4, [sp, #32]
 8004ba4:	9400      	str	r4, [sp, #0]
 8004ba6:	f001 fd0b 	bl	80065c0 <HAL_I2C_Mem_Read>

  /* Check the communication status */
  if(status != HAL_OK)
 8004baa:	4604      	mov	r4, r0
 8004bac:	b128      	cbz	r0, 8004bba <I2Cx_ReadMultiple+0x2a>
  * @retval None
  */
static void I2Cx_Error(I2C_HandleTypeDef *i2c_handler, uint8_t Addr)
{
  /* De-initialize the I2C communication bus */
  HAL_I2C_DeInit(i2c_handler);
 8004bae:	4628      	mov	r0, r5
 8004bb0:	f001 fc39 	bl	8006426 <HAL_I2C_DeInit>
  
  /* Re-Initialize the I2C communication bus */
  I2Cx_Init(i2c_handler);
 8004bb4:	4628      	mov	r0, r5
 8004bb6:	f7ff ff35 	bl	8004a24 <I2Cx_Init>
}
 8004bba:	4620      	mov	r0, r4
 8004bbc:	b005      	add	sp, #20
 8004bbe:	bd30      	pop	{r4, r5, pc}

08004bc0 <I2Cx_WriteMultiple>:
{
 8004bc0:	b530      	push	{r4, r5, lr}
  status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8004bc2:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
{
 8004bc6:	b085      	sub	sp, #20
 8004bc8:	4605      	mov	r5, r0
  status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8004bca:	9402      	str	r4, [sp, #8]
 8004bcc:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8004bd0:	9401      	str	r4, [sp, #4]
 8004bd2:	9c08      	ldr	r4, [sp, #32]
 8004bd4:	9400      	str	r4, [sp, #0]
 8004bd6:	f001 fc3f 	bl	8006458 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 8004bda:	4604      	mov	r4, r0
 8004bdc:	b128      	cbz	r0, 8004bea <I2Cx_WriteMultiple+0x2a>
  HAL_I2C_DeInit(i2c_handler);
 8004bde:	4628      	mov	r0, r5
 8004be0:	f001 fc21 	bl	8006426 <HAL_I2C_DeInit>
  I2Cx_Init(i2c_handler);
 8004be4:	4628      	mov	r0, r5
 8004be6:	f7ff ff1d 	bl	8004a24 <I2Cx_Init>
}
 8004bea:	4620      	mov	r0, r4
 8004bec:	b005      	add	sp, #20
 8004bee:	bd30      	pop	{r4, r5, pc}

08004bf0 <BSP_LED_Init>:
{
 8004bf0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  LEDx_GPIO_CLK_ENABLE();
 8004bf2:	4b0e      	ldr	r3, [pc, #56]	; (8004c2c <BSP_LED_Init+0x3c>)
  HAL_GPIO_Init(GPIO_PORT[Led], &gpio_init_structure);
 8004bf4:	a901      	add	r1, sp, #4
  LEDx_GPIO_CLK_ENABLE();
 8004bf6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004bf8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004bfc:	631a      	str	r2, [r3, #48]	; 0x30
 8004bfe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c00:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004c04:	9300      	str	r3, [sp, #0]
 8004c06:	9b00      	ldr	r3, [sp, #0]
  gpio_init_structure.Pin   = GPIO_PIN[Led];
 8004c08:	4b09      	ldr	r3, [pc, #36]	; (8004c30 <BSP_LED_Init+0x40>)
 8004c0a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8004c0e:	9301      	str	r3, [sp, #4]
  gpio_init_structure.Mode  = GPIO_MODE_OUTPUT_PP;
 8004c10:	2301      	movs	r3, #1
  gpio_init_structure.Pull  = GPIO_PULLUP;
 8004c12:	e9cd 3302 	strd	r3, r3, [sp, #8]
  gpio_init_structure.Speed = GPIO_SPEED_HIGH;
 8004c16:	2303      	movs	r3, #3
 8004c18:	9304      	str	r3, [sp, #16]
  HAL_GPIO_Init(GPIO_PORT[Led], &gpio_init_structure);
 8004c1a:	4b06      	ldr	r3, [pc, #24]	; (8004c34 <BSP_LED_Init+0x44>)
 8004c1c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8004c20:	f001 f8e2 	bl	8005de8 <HAL_GPIO_Init>
}
 8004c24:	b007      	add	sp, #28
 8004c26:	f85d fb04 	ldr.w	pc, [sp], #4
 8004c2a:	bf00      	nop
 8004c2c:	40023800 	.word	0x40023800
 8004c30:	20000054 	.word	0x20000054
 8004c34:	2000005c 	.word	0x2000005c

08004c38 <BSP_LED_Toggle>:
  HAL_GPIO_TogglePin(GPIO_PORT[Led], GPIO_PIN[Led]);
 8004c38:	4b03      	ldr	r3, [pc, #12]	; (8004c48 <BSP_LED_Toggle+0x10>)
 8004c3a:	f833 1020 	ldrh.w	r1, [r3, r0, lsl #2]
 8004c3e:	4b03      	ldr	r3, [pc, #12]	; (8004c4c <BSP_LED_Toggle+0x14>)
 8004c40:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8004c44:	f001 ba5d 	b.w	8006102 <HAL_GPIO_TogglePin>
 8004c48:	20000054 	.word	0x20000054
 8004c4c:	2000005c 	.word	0x2000005c

08004c50 <BSP_PB_Init>:
  BUTTON_GPIO_CLK_ENABLE();
 8004c50:	4b19      	ldr	r3, [pc, #100]	; (8004cb8 <BSP_PB_Init+0x68>)
 8004c52:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004c54:	f042 0201 	orr.w	r2, r2, #1
{
 8004c58:	b510      	push	{r4, lr}
  BUTTON_GPIO_CLK_ENABLE();
 8004c5a:	631a      	str	r2, [r3, #48]	; 0x30
{
 8004c5c:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8004c5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c60:	f003 0301 	and.w	r3, r3, #1
 8004c64:	9300      	str	r3, [sp, #0]
 8004c66:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8004c68:	b969      	cbnz	r1, 8004c86 <BSP_PB_Init+0x36>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8004c6a:	2301      	movs	r3, #1
    gpio_init_structure.Pull = GPIO_NOPULL;
 8004c6c:	9103      	str	r1, [sp, #12]
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 8004c6e:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8004c72:	2302      	movs	r3, #2
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004c74:	a901      	add	r1, sp, #4
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8004c76:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004c78:	4b10      	ldr	r3, [pc, #64]	; (8004cbc <BSP_PB_Init+0x6c>)
 8004c7a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8004c7e:	f001 f8b3 	bl	8005de8 <HAL_GPIO_Init>
}
 8004c82:	b006      	add	sp, #24
 8004c84:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8004c86:	2901      	cmp	r1, #1
 8004c88:	d1fb      	bne.n	8004c82 <BSP_PB_Init+0x32>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8004c8a:	2400      	movs	r4, #0
 8004c8c:	2302      	movs	r3, #2
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8004c8e:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004c90:	a901      	add	r1, sp, #4
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8004c92:	e9cd 4303 	strd	r4, r3, [sp, #12]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 8004c96:	4b0a      	ldr	r3, [pc, #40]	; (8004cc0 <BSP_PB_Init+0x70>)
 8004c98:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004c9a:	4b08      	ldr	r3, [pc, #32]	; (8004cbc <BSP_PB_Init+0x6c>)
 8004c9c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8004ca0:	f001 f8a2 	bl	8005de8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8004ca4:	4622      	mov	r2, r4
 8004ca6:	210f      	movs	r1, #15
 8004ca8:	2006      	movs	r0, #6
 8004caa:	f000 f8db 	bl	8004e64 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8004cae:	2006      	movs	r0, #6
 8004cb0:	f000 f90a 	bl	8004ec8 <HAL_NVIC_EnableIRQ>
}
 8004cb4:	e7e5      	b.n	8004c82 <BSP_PB_Init+0x32>
 8004cb6:	bf00      	nop
 8004cb8:	40023800 	.word	0x40023800
 8004cbc:	20000050 	.word	0x20000050
 8004cc0:	10110000 	.word	0x10110000

08004cc4 <BSP_PB_GetState>:
{
 8004cc4:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8004cc6:	4b03      	ldr	r3, [pc, #12]	; (8004cd4 <BSP_PB_GetState+0x10>)
 8004cc8:	2101      	movs	r1, #1
 8004cca:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8004cce:	f001 fa0d 	bl	80060ec <HAL_GPIO_ReadPin>
}
 8004cd2:	bd08      	pop	{r3, pc}
 8004cd4:	20000050 	.word	0x20000050

08004cd8 <AUDIO_IO_Init>:
/**
  * @brief  Initializes Audio low level.
  */
void AUDIO_IO_Init(void)
{
  I2Cx_Init(&hI2cAudioHandler);
 8004cd8:	4801      	ldr	r0, [pc, #4]	; (8004ce0 <AUDIO_IO_Init+0x8>)
 8004cda:	f7ff bea3 	b.w	8004a24 <I2Cx_Init>
 8004cde:	bf00      	nop
 8004ce0:	2000184c 	.word	0x2000184c

08004ce4 <AUDIO_IO_Write>:
  * @param  Reg: Reg address 
  * @param  Value: Data to be written
  * @retval None
  */
void AUDIO_IO_Write(uint8_t Addr, uint16_t Reg, uint16_t Value)
{
 8004ce4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  uint16_t tmp = Value;
  
  Value = ((uint16_t)(tmp >> 8) & 0x00FF);
  
  Value |= ((uint16_t)(tmp << 8)& 0xFF00);
 8004ce6:	ba52      	rev16	r2, r2
 8004ce8:	ac04      	add	r4, sp, #16
  
  I2Cx_WriteMultiple(&hI2cAudioHandler, Addr, Reg, I2C_MEMADD_SIZE_16BIT,(uint8_t*)&Value, 2);
 8004cea:	2302      	movs	r3, #2
  Value |= ((uint16_t)(tmp << 8)& 0xFF00);
 8004cec:	f824 2d02 	strh.w	r2, [r4, #-2]!
  I2Cx_WriteMultiple(&hI2cAudioHandler, Addr, Reg, I2C_MEMADD_SIZE_16BIT,(uint8_t*)&Value, 2);
 8004cf0:	460a      	mov	r2, r1
 8004cf2:	4601      	mov	r1, r0
 8004cf4:	4803      	ldr	r0, [pc, #12]	; (8004d04 <AUDIO_IO_Write+0x20>)
 8004cf6:	e9cd 4300 	strd	r4, r3, [sp]
 8004cfa:	f7ff ff61 	bl	8004bc0 <I2Cx_WriteMultiple>
}
 8004cfe:	b004      	add	sp, #16
 8004d00:	bd10      	pop	{r4, pc}
 8004d02:	bf00      	nop
 8004d04:	2000184c 	.word	0x2000184c

08004d08 <AUDIO_IO_Delay>:
  * @brief  AUDIO Codec delay
  * @param  Delay: Delay in ms
  */
void AUDIO_IO_Delay(uint32_t Delay)
{
  HAL_Delay(Delay);
 8004d08:	f000 b888 	b.w	8004e1c <HAL_Delay>

08004d0c <TS_IO_Init>:
 8004d0c:	f7ff bfe4 	b.w	8004cd8 <AUDIO_IO_Init>

08004d10 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8004d10:	b507      	push	{r0, r1, r2, lr}
 return I2Cx_ReadMultiple(&hI2cAudioHandler, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
 8004d12:	e9cd 2300 	strd	r2, r3, [sp]
 8004d16:	460a      	mov	r2, r1
 8004d18:	2301      	movs	r3, #1
 8004d1a:	4601      	mov	r1, r0
 8004d1c:	4802      	ldr	r0, [pc, #8]	; (8004d28 <TS_IO_ReadMultiple+0x18>)
 8004d1e:	f7ff ff37 	bl	8004b90 <I2Cx_ReadMultiple>
}
 8004d22:	b003      	add	sp, #12
 8004d24:	f85d fb04 	ldr.w	pc, [sp], #4
 8004d28:	2000184c 	.word	0x2000184c

08004d2c <OTM8009A_IO_Delay>:
 8004d2c:	f000 b876 	b.w	8004e1c <HAL_Delay>

08004d30 <HDMI_IO_Write>:
  * @param  Reg: Register address 
  * @param  Value: Data to be written
  * @retval None
  */
void HDMI_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8004d30:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004d32:	ac04      	add	r4, sp, #16
  I2Cx_WriteMultiple(&hI2cAudioHandler, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1);  
 8004d34:	2301      	movs	r3, #1
{
 8004d36:	f804 2d01 	strb.w	r2, [r4, #-1]!
  I2Cx_WriteMultiple(&hI2cAudioHandler, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1);  
 8004d3a:	460a      	mov	r2, r1
 8004d3c:	4601      	mov	r1, r0
 8004d3e:	4803      	ldr	r0, [pc, #12]	; (8004d4c <HDMI_IO_Write+0x1c>)
 8004d40:	e9cd 4300 	strd	r4, r3, [sp]
 8004d44:	f7ff ff3c 	bl	8004bc0 <I2Cx_WriteMultiple>
}
 8004d48:	b004      	add	sp, #16
 8004d4a:	bd10      	pop	{r4, pc}
 8004d4c:	2000184c 	.word	0x2000184c

08004d50 <TS_IO_Write>:
 8004d50:	f7ff bfee 	b.w	8004d30 <HDMI_IO_Write>

08004d54 <HDMI_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t HDMI_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8004d54:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  uint8_t value = 0x00;
 8004d56:	2300      	movs	r3, #0
 8004d58:	aa04      	add	r2, sp, #16
 8004d5a:	f802 3d01 	strb.w	r3, [r2, #-1]!

  I2Cx_ReadMultiple(&hI2cAudioHandler, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &value, 1);
 8004d5e:	2301      	movs	r3, #1
 8004d60:	e9cd 2300 	strd	r2, r3, [sp]
 8004d64:	460a      	mov	r2, r1
 8004d66:	4601      	mov	r1, r0
 8004d68:	4803      	ldr	r0, [pc, #12]	; (8004d78 <HDMI_IO_Read+0x24>)
 8004d6a:	f7ff ff11 	bl	8004b90 <I2Cx_ReadMultiple>

  return value;   
}
 8004d6e:	f89d 000f 	ldrb.w	r0, [sp, #15]
 8004d72:	b005      	add	sp, #20
 8004d74:	f85d fb04 	ldr.w	pc, [sp], #4
 8004d78:	2000184c 	.word	0x2000184c

08004d7c <TS_IO_Read>:
 8004d7c:	f7ff bfea 	b.w	8004d54 <HDMI_IO_Read>

08004d80 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004d80:	490f      	ldr	r1, [pc, #60]	; (8004dc0 <SystemInit+0x40>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8004d82:	2000      	movs	r0, #0
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004d84:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8004d88:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004d8c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  RCC->CR |= (uint32_t)0x00000001;
 8004d90:	4b0c      	ldr	r3, [pc, #48]	; (8004dc4 <SystemInit+0x44>)
 8004d92:	681a      	ldr	r2, [r3, #0]
 8004d94:	f042 0201 	orr.w	r2, r2, #1
 8004d98:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000;
 8004d9a:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8004d9c:	681a      	ldr	r2, [r3, #0]
 8004d9e:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8004da2:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8004da6:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 8004da8:	4a07      	ldr	r2, [pc, #28]	; (8004dc8 <SystemInit+0x48>)
 8004daa:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8004dac:	681a      	ldr	r2, [r3, #0]
 8004dae:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004db2:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8004db4:	60d8      	str	r0, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = RAMDTCM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004db6:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8004dba:	608b      	str	r3, [r1, #8]
#endif
}
 8004dbc:	4770      	bx	lr
 8004dbe:	bf00      	nop
 8004dc0:	e000ed00 	.word	0xe000ed00
 8004dc4:	40023800 	.word	0x40023800
 8004dc8:	24003010 	.word	0x24003010

08004dcc <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004dcc:	b508      	push	{r3, lr}
  /* Configure Instruction cache through ART accelerator */ 
#if (ART_ACCLERATOR_ENABLE != 0)
   __HAL_FLASH_ART_ENABLE();
 8004dce:	4b09      	ldr	r3, [pc, #36]	; (8004df4 <HAL_Init+0x28>)
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004dd0:	2003      	movs	r0, #3
   __HAL_FLASH_ART_ENABLE();
 8004dd2:	681a      	ldr	r2, [r3, #0]
 8004dd4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004dd8:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004dda:	681a      	ldr	r2, [r3, #0]
 8004ddc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004de0:	601a      	str	r2, [r3, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004de2:	f000 f82d 	bl	8004e40 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004de6:	2000      	movs	r0, #0
 8004de8:	f7fc ff6e 	bl	8001cc8 <HAL_InitTick>
  
  /* Init the low level hardware */
  HAL_MspInit();
 8004dec:	f7fc fc7c 	bl	80016e8 <HAL_MspInit>
  
  /* Return function status */
  return HAL_OK;
}
 8004df0:	2000      	movs	r0, #0
 8004df2:	bd08      	pop	{r3, pc}
 8004df4:	40023c00 	.word	0x40023c00

08004df8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004df8:	4a03      	ldr	r2, [pc, #12]	; (8004e08 <HAL_IncTick+0x10>)
 8004dfa:	4b04      	ldr	r3, [pc, #16]	; (8004e0c <HAL_IncTick+0x14>)
 8004dfc:	6811      	ldr	r1, [r2, #0]
 8004dfe:	781b      	ldrb	r3, [r3, #0]
 8004e00:	440b      	add	r3, r1
 8004e02:	6013      	str	r3, [r2, #0]
}
 8004e04:	4770      	bx	lr
 8004e06:	bf00      	nop
 8004e08:	20016c8c 	.word	0x20016c8c
 8004e0c:	20000068 	.word	0x20000068

08004e10 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004e10:	4b01      	ldr	r3, [pc, #4]	; (8004e18 <HAL_GetTick+0x8>)
 8004e12:	6818      	ldr	r0, [r3, #0]
}
 8004e14:	4770      	bx	lr
 8004e16:	bf00      	nop
 8004e18:	20016c8c 	.word	0x20016c8c

08004e1c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004e1c:	b538      	push	{r3, r4, r5, lr}
 8004e1e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004e20:	f7ff fff6 	bl	8004e10 <HAL_GetTick>
 8004e24:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004e26:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004e28:	bf1e      	ittt	ne
 8004e2a:	4b04      	ldrne	r3, [pc, #16]	; (8004e3c <HAL_Delay+0x20>)
 8004e2c:	781b      	ldrbne	r3, [r3, #0]
 8004e2e:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8004e30:	f7ff ffee 	bl	8004e10 <HAL_GetTick>
 8004e34:	1b40      	subs	r0, r0, r5
 8004e36:	42a0      	cmp	r0, r4
 8004e38:	d3fa      	bcc.n	8004e30 <HAL_Delay+0x14>
  {
  }
}
 8004e3a:	bd38      	pop	{r3, r4, r5, pc}
 8004e3c:	20000068 	.word	0x20000068

08004e40 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004e40:	4a07      	ldr	r2, [pc, #28]	; (8004e60 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004e42:	0200      	lsls	r0, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004e44:	68d3      	ldr	r3, [r2, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004e46:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004e4a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004e4e:	041b      	lsls	r3, r3, #16
 8004e50:	0c1b      	lsrs	r3, r3, #16
 8004e52:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004e56:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  reg_value  =  (reg_value                                   |
 8004e5a:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 8004e5c:	60d3      	str	r3, [r2, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004e5e:	4770      	bx	lr
 8004e60:	e000ed00 	.word	0xe000ed00

08004e64 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004e64:	4b16      	ldr	r3, [pc, #88]	; (8004ec0 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004e66:	b570      	push	{r4, r5, r6, lr}
 8004e68:	68dc      	ldr	r4, [r3, #12]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004e6a:	f04f 36ff 	mov.w	r6, #4294967295
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004e6e:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004e72:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004e76:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004e78:	2d04      	cmp	r5, #4
 8004e7a:	bf28      	it	cs
 8004e7c:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004e7e:	2b06      	cmp	r3, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004e80:	fa06 f305 	lsl.w	r3, r6, r5
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004e84:	bf8c      	ite	hi
 8004e86:	3c03      	subhi	r4, #3
 8004e88:	2400      	movls	r4, #0
  if ((int32_t)(IRQn) >= 0)
 8004e8a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004e8c:	ea21 0303 	bic.w	r3, r1, r3
 8004e90:	fa03 f304 	lsl.w	r3, r3, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004e94:	fa06 f404 	lsl.w	r4, r6, r4
 8004e98:	ea22 0404 	bic.w	r4, r2, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004e9c:	ea43 0304 	orr.w	r3, r3, r4
 8004ea0:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8004ea4:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 8004ea6:	db06      	blt.n	8004eb6 <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004ea8:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8004eac:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8004eb0:	f880 3300 	strb.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004eb4:	bd70      	pop	{r4, r5, r6, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004eb6:	f000 000f 	and.w	r0, r0, #15
 8004eba:	4a02      	ldr	r2, [pc, #8]	; (8004ec4 <HAL_NVIC_SetPriority+0x60>)
 8004ebc:	5413      	strb	r3, [r2, r0]
 8004ebe:	e7f9      	b.n	8004eb4 <HAL_NVIC_SetPriority+0x50>
 8004ec0:	e000ed00 	.word	0xe000ed00
 8004ec4:	e000ed14 	.word	0xe000ed14

08004ec8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004ec8:	2800      	cmp	r0, #0
 8004eca:	db08      	blt.n	8004ede <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004ecc:	0942      	lsrs	r2, r0, #5
 8004ece:	2301      	movs	r3, #1
 8004ed0:	f000 001f 	and.w	r0, r0, #31
 8004ed4:	fa03 f000 	lsl.w	r0, r3, r0
 8004ed8:	4b01      	ldr	r3, [pc, #4]	; (8004ee0 <HAL_NVIC_EnableIRQ+0x18>)
 8004eda:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004ede:	4770      	bx	lr
 8004ee0:	e000e100 	.word	0xe000e100

08004ee4 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004ee4:	2800      	cmp	r0, #0
 8004ee6:	db0d      	blt.n	8004f04 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004ee8:	0943      	lsrs	r3, r0, #5
 8004eea:	2201      	movs	r2, #1
 8004eec:	f000 001f 	and.w	r0, r0, #31
 8004ef0:	3320      	adds	r3, #32
 8004ef2:	fa02 f000 	lsl.w	r0, r2, r0
 8004ef6:	4a04      	ldr	r2, [pc, #16]	; (8004f08 <HAL_NVIC_DisableIRQ+0x24>)
 8004ef8:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8004efc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004f00:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8004f04:	4770      	bx	lr
 8004f06:	bf00      	nop
 8004f08:	e000e100 	.word	0xe000e100

08004f0c <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 8004f0c:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 8004f10:	4a04      	ldr	r2, [pc, #16]	; (8004f24 <HAL_MPU_Disable+0x18>)
 8004f12:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8004f14:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004f18:	6253      	str	r3, [r2, #36]	; 0x24
  
  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 8004f1a:	2200      	movs	r2, #0
 8004f1c:	4b02      	ldr	r3, [pc, #8]	; (8004f28 <HAL_MPU_Disable+0x1c>)
 8004f1e:	605a      	str	r2, [r3, #4]
}
 8004f20:	4770      	bx	lr
 8004f22:	bf00      	nop
 8004f24:	e000ed00 	.word	0xe000ed00
 8004f28:	e000ed90 	.word	0xe000ed90

08004f2c <HAL_MPU_Enable>:
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
  
  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 8004f2c:	4a06      	ldr	r2, [pc, #24]	; (8004f48 <HAL_MPU_Enable+0x1c>)
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 8004f2e:	f040 0001 	orr.w	r0, r0, #1
 8004f32:	4b06      	ldr	r3, [pc, #24]	; (8004f4c <HAL_MPU_Enable+0x20>)
 8004f34:	6058      	str	r0, [r3, #4]
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 8004f36:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8004f38:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004f3c:	6253      	str	r3, [r2, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 8004f3e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004f42:	f3bf 8f6f 	isb	sy
  
  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 8004f46:	4770      	bx	lr
 8004f48:	e000ed00 	.word	0xe000ed00
 8004f4c:	e000ed90 	.word	0xe000ed90

08004f50 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8004f50:	7843      	ldrb	r3, [r0, #1]
 8004f52:	4a12      	ldr	r2, [pc, #72]	; (8004f9c <HAL_MPU_ConfigRegion+0x4c>)
{
 8004f54:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 8004f56:	6093      	str	r3, [r2, #8]

  if ((MPU_Init->Enable) != RESET)
 8004f58:	7801      	ldrb	r1, [r0, #0]
 8004f5a:	b1d9      	cbz	r1, 8004f94 <HAL_MPU_ConfigRegion+0x44>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
    
    MPU->RBAR = MPU_Init->BaseAddress;
 8004f5c:	6843      	ldr	r3, [r0, #4]
 8004f5e:	60d3      	str	r3, [r2, #12]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8004f60:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004f62:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8004f64:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004f66:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004f6a:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8004f6c:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004f6e:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 8004f72:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004f74:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8004f78:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004f7a:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 8004f7e:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004f80:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8004f84:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004f86:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8004f8a:	7a01      	ldrb	r1, [r0, #8]
 8004f8c:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004f90:	6113      	str	r3, [r2, #16]
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 8004f92:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 8004f94:	60d1      	str	r1, [r2, #12]
    MPU->RASR = 0x00;
 8004f96:	6111      	str	r1, [r2, #16]
}
 8004f98:	e7fb      	b.n	8004f92 <HAL_MPU_ConfigRegion+0x42>
 8004f9a:	bf00      	nop
 8004f9c:	e000ed90 	.word	0xe000ed90

08004fa0 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004fa0:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004fa2:	4604      	mov	r4, r0
 8004fa4:	b908      	cbnz	r0, 8004faa <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8004fa6:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8004fa8:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004faa:	7f43      	ldrb	r3, [r0, #29]
 8004fac:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004fb0:	b913      	cbnz	r3, 8004fb8 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8004fb2:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8004fb4:	f7fc fbb6 	bl	8001724 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8004fb8:	2302      	movs	r3, #2
 8004fba:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8004fbc:	7923      	ldrb	r3, [r4, #4]
 8004fbe:	b9e3      	cbnz	r3, 8004ffa <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8004fc0:	6823      	ldr	r3, [r4, #0]
 8004fc2:	4a13      	ldr	r2, [pc, #76]	; (8005010 <HAL_CRC_Init+0x70>)
 8004fc4:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8004fc6:	689a      	ldr	r2, [r3, #8]
 8004fc8:	f022 0218 	bic.w	r2, r2, #24
 8004fcc:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004fce:	7962      	ldrb	r2, [r4, #5]
 8004fd0:	6823      	ldr	r3, [r4, #0]
 8004fd2:	b9d2      	cbnz	r2, 800500a <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004fd4:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004fd8:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 8004fda:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004fdc:	689a      	ldr	r2, [r3, #8]
 8004fde:	6961      	ldr	r1, [r4, #20]
 8004fe0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8004fe4:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8004fe6:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004fe8:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8004fea:	689a      	ldr	r2, [r3, #8]
 8004fec:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004ff0:	430a      	orrs	r2, r1
 8004ff2:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8004ff4:	2301      	movs	r3, #1
 8004ff6:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8004ff8:	e7d6      	b.n	8004fa8 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8004ffa:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8004ffe:	4620      	mov	r0, r4
 8005000:	f000 f808 	bl	8005014 <HAL_CRCEx_Polynomial_Set>
 8005004:	2800      	cmp	r0, #0
 8005006:	d0e2      	beq.n	8004fce <HAL_CRC_Init+0x2e>
 8005008:	e7cd      	b.n	8004fa6 <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 800500a:	6922      	ldr	r2, [r4, #16]
 800500c:	e7e4      	b.n	8004fd8 <HAL_CRC_Init+0x38>
 800500e:	bf00      	nop
 8005010:	04c11db7 	.word	0x04c11db7

08005014 <HAL_CRCEx_Polynomial_Set>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8005014:	231f      	movs	r3, #31
{
 8005016:	b510      	push	{r4, lr}
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8005018:	f113 33ff 	adds.w	r3, r3, #4294967295
 800501c:	d306      	bcc.n	800502c <HAL_CRCEx_Polynomial_Set+0x18>
 800501e:	fa21 f403 	lsr.w	r4, r1, r3
 8005022:	07e4      	lsls	r4, r4, #31
 8005024:	d5f8      	bpl.n	8005018 <HAL_CRCEx_Polynomial_Set+0x4>
  {
  }

  switch (PolyLength)
 8005026:	2a08      	cmp	r2, #8
 8005028:	d014      	beq.n	8005054 <HAL_CRCEx_Polynomial_Set+0x40>
 800502a:	d802      	bhi.n	8005032 <HAL_CRCEx_Polynomial_Set+0x1e>
 800502c:	b13a      	cbz	r2, 800503e <HAL_CRCEx_Polynomial_Set+0x2a>

    case CRC_POLYLENGTH_32B:
      /* no polynomial definition vs. polynomial length issue possible */
      break;
    default:
      status =  HAL_ERROR;
 800502e:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8005030:	e00d      	b.n	800504e <HAL_CRCEx_Polynomial_Set+0x3a>
  switch (PolyLength)
 8005032:	2a10      	cmp	r2, #16
 8005034:	d00c      	beq.n	8005050 <HAL_CRCEx_Polynomial_Set+0x3c>
 8005036:	2a18      	cmp	r2, #24
 8005038:	d1f9      	bne.n	800502e <HAL_CRCEx_Polynomial_Set+0x1a>
      if (msb >= HAL_CRC_LENGTH_7B)
 800503a:	2b06      	cmp	r3, #6
      if (msb >= HAL_CRC_LENGTH_16B)
 800503c:	d8f7      	bhi.n	800502e <HAL_CRCEx_Polynomial_Set+0x1a>
    WRITE_REG(hcrc->Instance->POL, Pol);
 800503e:	6800      	ldr	r0, [r0, #0]
 8005040:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8005042:	6883      	ldr	r3, [r0, #8]
 8005044:	f023 0318 	bic.w	r3, r3, #24
 8005048:	431a      	orrs	r2, r3
 800504a:	6082      	str	r2, [r0, #8]
 800504c:	2000      	movs	r0, #0
}
 800504e:	bd10      	pop	{r4, pc}
      if (msb >= HAL_CRC_LENGTH_8B)
 8005050:	2b07      	cmp	r3, #7
 8005052:	e7f3      	b.n	800503c <HAL_CRCEx_Polynomial_Set+0x28>
      if (msb >= HAL_CRC_LENGTH_16B)
 8005054:	2b0f      	cmp	r3, #15
 8005056:	e7f1      	b.n	800503c <HAL_CRCEx_Polynomial_Set+0x28>

08005058 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8005058:	6803      	ldr	r3, [r0, #0]
 800505a:	2118      	movs	r1, #24
 800505c:	b2da      	uxtb	r2, r3
 800505e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8005062:	3a10      	subs	r2, #16
 8005064:	f023 0303 	bic.w	r3, r3, #3
 8005068:	fbb2 f2f1 	udiv	r2, r2, r1
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800506c:	4904      	ldr	r1, [pc, #16]	; (8005080 <DMA_CalcBaseAndBitshift+0x28>)
  
  if (stream_number > 3U)
 800506e:	2a03      	cmp	r2, #3
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8005070:	5c89      	ldrb	r1, [r1, r2]
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8005072:	bf88      	it	hi
 8005074:	3304      	addhi	r3, #4
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8005076:	65c1      	str	r1, [r0, #92]	; 0x5c
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8005078:	6583      	str	r3, [r0, #88]	; 0x58
  }
  
  return hdma->StreamBaseAddress;
}
 800507a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800507c:	4770      	bx	lr
 800507e:	bf00      	nop
 8005080:	08023099 	.word	0x08023099

08005084 <HAL_DMA_Init>:
{
 8005084:	b570      	push	{r4, r5, r6, lr}
 8005086:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005088:	f7ff fec2 	bl	8004e10 <HAL_GetTick>
 800508c:	4605      	mov	r5, r0
  if(hdma == NULL)
 800508e:	2c00      	cmp	r4, #0
 8005090:	d071      	beq.n	8005176 <HAL_DMA_Init+0xf2>
  __HAL_UNLOCK(hdma);
 8005092:	2300      	movs	r3, #0
  __HAL_DMA_DISABLE(hdma);
 8005094:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8005096:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_BUSY;
 800509a:	2302      	movs	r3, #2
 800509c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 80050a0:	6813      	ldr	r3, [r2, #0]
 80050a2:	f023 0301 	bic.w	r3, r3, #1
 80050a6:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80050a8:	6821      	ldr	r1, [r4, #0]
 80050aa:	680b      	ldr	r3, [r1, #0]
 80050ac:	07d8      	lsls	r0, r3, #31
 80050ae:	d43c      	bmi.n	800512a <HAL_DMA_Init+0xa6>
  tmp = hdma->Instance->CR;
 80050b0:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80050b2:	4d32      	ldr	r5, [pc, #200]	; (800517c <HAL_DMA_Init+0xf8>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80050b4:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80050b6:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80050b8:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 80050bc:	4313      	orrs	r3, r2
 80050be:	68e2      	ldr	r2, [r4, #12]
 80050c0:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80050c2:	6922      	ldr	r2, [r4, #16]
 80050c4:	4313      	orrs	r3, r2
 80050c6:	6962      	ldr	r2, [r4, #20]
 80050c8:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80050ca:	69e2      	ldr	r2, [r4, #28]
 80050cc:	4303      	orrs	r3, r0
 80050ce:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 80050d0:	6a22      	ldr	r2, [r4, #32]
 80050d2:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80050d4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80050d6:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80050d8:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 80050dc:	bf02      	ittt	eq
 80050de:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 80050e2:	4335      	orreq	r5, r6
 80050e4:	432b      	orreq	r3, r5
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80050e6:	2a04      	cmp	r2, #4
  hdma->Instance->CR = tmp;  
 80050e8:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 80050ea:	694b      	ldr	r3, [r1, #20]
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 80050ec:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 80050f0:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80050f4:	d10b      	bne.n	800510e <HAL_DMA_Init+0x8a>
    tmp |= hdma->Init.FIFOThreshold;
 80050f6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80050f8:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 80050fa:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80050fc:	b13d      	cbz	r5, 800510e <HAL_DMA_Init+0x8a>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 80050fe:	b9f8      	cbnz	r0, 8005140 <HAL_DMA_Init+0xbc>
  {
    switch (tmp)
 8005100:	2a01      	cmp	r2, #1
 8005102:	d02d      	beq.n	8005160 <HAL_DMA_Init+0xdc>
 8005104:	d301      	bcc.n	800510a <HAL_DMA_Init+0x86>
 8005106:	2a02      	cmp	r2, #2
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8005108:	d101      	bne.n	800510e <HAL_DMA_Init+0x8a>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800510a:	01ea      	lsls	r2, r5, #7
 800510c:	d42b      	bmi.n	8005166 <HAL_DMA_Init+0xe2>
  hdma->Instance->FCR = tmp;
 800510e:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8005110:	4620      	mov	r0, r4
 8005112:	f7ff ffa1 	bl	8005058 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8005116:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8005118:	233f      	movs	r3, #63	; 0x3f
 800511a:	4093      	lsls	r3, r2
 800511c:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800511e:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8005120:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8005122:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8005124:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8005128:	e009      	b.n	800513e <HAL_DMA_Init+0xba>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800512a:	f7ff fe71 	bl	8004e10 <HAL_GetTick>
 800512e:	1b40      	subs	r0, r0, r5
 8005130:	2805      	cmp	r0, #5
 8005132:	d9b9      	bls.n	80050a8 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8005134:	2320      	movs	r3, #32
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8005136:	2003      	movs	r0, #3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8005138:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800513a:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 800513e:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8005140:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8005144:	d113      	bne.n	800516e <HAL_DMA_Init+0xea>
    switch (tmp)
 8005146:	2a03      	cmp	r2, #3
 8005148:	d8e1      	bhi.n	800510e <HAL_DMA_Init+0x8a>
 800514a:	a001      	add	r0, pc, #4	; (adr r0, 8005150 <HAL_DMA_Init+0xcc>)
 800514c:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8005150:	08005167 	.word	0x08005167
 8005154:	0800510b 	.word	0x0800510b
 8005158:	08005167 	.word	0x08005167
 800515c:	08005161 	.word	0x08005161
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8005160:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8005164:	d1d3      	bne.n	800510e <HAL_DMA_Init+0x8a>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8005166:	2340      	movs	r3, #64	; 0x40
        hdma->State = HAL_DMA_STATE_READY;
 8005168:	2001      	movs	r0, #1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800516a:	6563      	str	r3, [r4, #84]	; 0x54
 800516c:	e7e5      	b.n	800513a <HAL_DMA_Init+0xb6>
    switch (tmp)
 800516e:	2a02      	cmp	r2, #2
 8005170:	d9f9      	bls.n	8005166 <HAL_DMA_Init+0xe2>
 8005172:	2a03      	cmp	r2, #3
 8005174:	e7c8      	b.n	8005108 <HAL_DMA_Init+0x84>
    return HAL_ERROR;
 8005176:	2001      	movs	r0, #1
 8005178:	e7e1      	b.n	800513e <HAL_DMA_Init+0xba>
 800517a:	bf00      	nop
 800517c:	e010803f 	.word	0xe010803f

08005180 <HAL_DMA_Start_IT>:
{
 8005180:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma);
 8005182:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
 8005186:	2c01      	cmp	r4, #1
 8005188:	d035      	beq.n	80051f6 <HAL_DMA_Start_IT+0x76>
 800518a:	2401      	movs	r4, #1
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800518c:	6d86      	ldr	r6, [r0, #88]	; 0x58
 800518e:	2500      	movs	r5, #0
  __HAL_LOCK(hdma);
 8005190:	f880 4034 	strb.w	r4, [r0, #52]	; 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 8005194:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
 8005198:	2c01      	cmp	r4, #1
 800519a:	f04f 0402 	mov.w	r4, #2
 800519e:	d128      	bne.n	80051f2 <HAL_DMA_Start_IT+0x72>
    hdma->State = HAL_DMA_STATE_BUSY;
 80051a0:	f880 4035 	strb.w	r4, [r0, #53]	; 0x35
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 80051a4:	6804      	ldr	r4, [r0, #0]
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80051a6:	6545      	str	r5, [r0, #84]	; 0x54
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 80051a8:	6825      	ldr	r5, [r4, #0]
 80051aa:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
 80051ae:	6025      	str	r5, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 80051b0:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80051b2:	6883      	ldr	r3, [r0, #8]
 80051b4:	2b40      	cmp	r3, #64	; 0x40
 80051b6:	d119      	bne.n	80051ec <HAL_DMA_Start_IT+0x6c>
    hdma->Instance->PAR = DstAddress;
 80051b8:	60a2      	str	r2, [r4, #8]
    hdma->Instance->M0AR = SrcAddress;
 80051ba:	60e1      	str	r1, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80051bc:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 80051be:	233f      	movs	r3, #63	; 0x3f
 80051c0:	4093      	lsls	r3, r2
 80051c2:	60b3      	str	r3, [r6, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 80051c4:	6823      	ldr	r3, [r4, #0]
 80051c6:	f043 0316 	orr.w	r3, r3, #22
 80051ca:	6023      	str	r3, [r4, #0]
    hdma->Instance->FCR |= DMA_IT_FE;
 80051cc:	6963      	ldr	r3, [r4, #20]
 80051ce:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80051d2:	6163      	str	r3, [r4, #20]
    if(hdma->XferHalfCpltCallback != NULL)
 80051d4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80051d6:	b11b      	cbz	r3, 80051e0 <HAL_DMA_Start_IT+0x60>
      hdma->Instance->CR  |= DMA_IT_HT;
 80051d8:	6823      	ldr	r3, [r4, #0]
 80051da:	f043 0308 	orr.w	r3, r3, #8
 80051de:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 80051e0:	6823      	ldr	r3, [r4, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80051e2:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 80051e4:	f043 0301 	orr.w	r3, r3, #1
 80051e8:	6023      	str	r3, [r4, #0]
}
 80051ea:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->PAR = SrcAddress;
 80051ec:	60a1      	str	r1, [r4, #8]
    hdma->Instance->M0AR = DstAddress;
 80051ee:	60e2      	str	r2, [r4, #12]
 80051f0:	e7e4      	b.n	80051bc <HAL_DMA_Start_IT+0x3c>
    __HAL_UNLOCK(hdma);	  
 80051f2:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
  __HAL_LOCK(hdma);
 80051f6:	2002      	movs	r0, #2
 80051f8:	e7f7      	b.n	80051ea <HAL_DMA_Start_IT+0x6a>

080051fa <HAL_DMA_Abort>:
{
 80051fa:	b570      	push	{r4, r5, r6, lr}
 80051fc:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80051fe:	6d85      	ldr	r5, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8005200:	f7ff fe06 	bl	8004e10 <HAL_GetTick>
 8005204:	4606      	mov	r6, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8005206:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 800520a:	2b02      	cmp	r3, #2
 800520c:	d006      	beq.n	800521c <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800520e:	2380      	movs	r3, #128	; 0x80
    return HAL_ERROR;
 8005210:	2001      	movs	r0, #1
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8005212:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8005214:	2300      	movs	r3, #0
 8005216:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
}
 800521a:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800521c:	6823      	ldr	r3, [r4, #0]
 800521e:	681a      	ldr	r2, [r3, #0]
 8005220:	f022 0216 	bic.w	r2, r2, #22
 8005224:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8005226:	695a      	ldr	r2, [r3, #20]
 8005228:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800522c:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800522e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005230:	b90a      	cbnz	r2, 8005236 <HAL_DMA_Abort+0x3c>
 8005232:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005234:	b11a      	cbz	r2, 800523e <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8005236:	681a      	ldr	r2, [r3, #0]
 8005238:	f022 0208 	bic.w	r2, r2, #8
 800523c:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 800523e:	681a      	ldr	r2, [r3, #0]
 8005240:	f022 0201 	bic.w	r2, r2, #1
 8005244:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8005246:	6823      	ldr	r3, [r4, #0]
 8005248:	6818      	ldr	r0, [r3, #0]
 800524a:	f010 0001 	ands.w	r0, r0, #1
 800524e:	d109      	bne.n	8005264 <HAL_DMA_Abort+0x6a>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8005250:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8005252:	233f      	movs	r3, #63	; 0x3f
 8005254:	4093      	lsls	r3, r2
 8005256:	60ab      	str	r3, [r5, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8005258:	2301      	movs	r3, #1
    __HAL_UNLOCK(hdma);
 800525a:	f884 0034 	strb.w	r0, [r4, #52]	; 0x34
    hdma->State = HAL_DMA_STATE_READY;
 800525e:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8005262:	e7da      	b.n	800521a <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8005264:	f7ff fdd4 	bl	8004e10 <HAL_GetTick>
 8005268:	1b80      	subs	r0, r0, r6
 800526a:	2805      	cmp	r0, #5
 800526c:	d9eb      	bls.n	8005246 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800526e:	2320      	movs	r3, #32
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8005270:	2003      	movs	r0, #3
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8005272:	6563      	str	r3, [r4, #84]	; 0x54
        __HAL_UNLOCK(hdma);
 8005274:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8005276:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 800527a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 800527e:	e7cc      	b.n	800521a <HAL_DMA_Abort+0x20>

08005280 <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8005280:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8005284:	2b02      	cmp	r3, #2
 8005286:	d003      	beq.n	8005290 <HAL_DMA_Abort_IT+0x10>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8005288:	2380      	movs	r3, #128	; 0x80
 800528a:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800528c:	2001      	movs	r0, #1
 800528e:	4770      	bx	lr
    __HAL_DMA_DISABLE(hdma);
 8005290:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8005292:	2305      	movs	r3, #5
 8005294:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
  return HAL_OK;
 8005298:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800529a:	6813      	ldr	r3, [r2, #0]
 800529c:	f023 0301 	bic.w	r3, r3, #1
 80052a0:	6013      	str	r3, [r2, #0]
}
 80052a2:	4770      	bx	lr

080052a4 <HAL_DMA_IRQHandler>:
  __IO uint32_t count = 0;
 80052a4:	2300      	movs	r3, #0
{
 80052a6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t count = 0;
 80052a8:	9301      	str	r3, [sp, #4]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80052aa:	2208      	movs	r2, #8
  uint32_t timeout = SystemCoreClock / 9600;
 80052ac:	4b5b      	ldr	r3, [pc, #364]	; (800541c <HAL_DMA_IRQHandler+0x178>)
{
 80052ae:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80052b0:	6d85      	ldr	r5, [r0, #88]	; 0x58
  uint32_t timeout = SystemCoreClock / 9600;
 80052b2:	681f      	ldr	r7, [r3, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80052b4:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
  tmpisr = regs->ISR;
 80052b6:	682e      	ldr	r6, [r5, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80052b8:	409a      	lsls	r2, r3
 80052ba:	4232      	tst	r2, r6
 80052bc:	d00c      	beq.n	80052d8 <HAL_DMA_IRQHandler+0x34>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 80052be:	6801      	ldr	r1, [r0, #0]
 80052c0:	6808      	ldr	r0, [r1, #0]
 80052c2:	0740      	lsls	r0, r0, #29
 80052c4:	d508      	bpl.n	80052d8 <HAL_DMA_IRQHandler+0x34>
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 80052c6:	6808      	ldr	r0, [r1, #0]
 80052c8:	f020 0004 	bic.w	r0, r0, #4
 80052cc:	6008      	str	r0, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 80052ce:	60aa      	str	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 80052d0:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80052d2:	f042 0201 	orr.w	r2, r2, #1
 80052d6:	6562      	str	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 80052d8:	2201      	movs	r2, #1
 80052da:	409a      	lsls	r2, r3
 80052dc:	4232      	tst	r2, r6
 80052de:	d008      	beq.n	80052f2 <HAL_DMA_IRQHandler+0x4e>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 80052e0:	6821      	ldr	r1, [r4, #0]
 80052e2:	6949      	ldr	r1, [r1, #20]
 80052e4:	0609      	lsls	r1, r1, #24
 80052e6:	d504      	bpl.n	80052f2 <HAL_DMA_IRQHandler+0x4e>
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 80052e8:	60aa      	str	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 80052ea:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80052ec:	f042 0202 	orr.w	r2, r2, #2
 80052f0:	6562      	str	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 80052f2:	2204      	movs	r2, #4
 80052f4:	409a      	lsls	r2, r3
 80052f6:	4232      	tst	r2, r6
 80052f8:	d008      	beq.n	800530c <HAL_DMA_IRQHandler+0x68>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 80052fa:	6821      	ldr	r1, [r4, #0]
 80052fc:	6809      	ldr	r1, [r1, #0]
 80052fe:	0788      	lsls	r0, r1, #30
 8005300:	d504      	bpl.n	800530c <HAL_DMA_IRQHandler+0x68>
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8005302:	60aa      	str	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8005304:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8005306:	f042 0204 	orr.w	r2, r2, #4
 800530a:	6562      	str	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 800530c:	2210      	movs	r2, #16
 800530e:	409a      	lsls	r2, r3
 8005310:	4232      	tst	r2, r6
 8005312:	d010      	beq.n	8005336 <HAL_DMA_IRQHandler+0x92>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8005314:	6823      	ldr	r3, [r4, #0]
 8005316:	6819      	ldr	r1, [r3, #0]
 8005318:	0709      	lsls	r1, r1, #28
 800531a:	d50c      	bpl.n	8005336 <HAL_DMA_IRQHandler+0x92>
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 800531c:	60aa      	str	r2, [r5, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800531e:	681a      	ldr	r2, [r3, #0]
 8005320:	0350      	lsls	r0, r2, #13
 8005322:	d537      	bpl.n	8005394 <HAL_DMA_IRQHandler+0xf0>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8005324:	681b      	ldr	r3, [r3, #0]
 8005326:	0319      	lsls	r1, r3, #12
 8005328:	d401      	bmi.n	800532e <HAL_DMA_IRQHandler+0x8a>
        if(hdma->XferHalfCpltCallback != NULL)
 800532a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800532c:	e000      	b.n	8005330 <HAL_DMA_IRQHandler+0x8c>
          if(hdma->XferM1HalfCpltCallback != NULL)
 800532e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
        if(hdma->XferHalfCpltCallback != NULL)
 8005330:	b10b      	cbz	r3, 8005336 <HAL_DMA_IRQHandler+0x92>
          hdma->XferHalfCpltCallback(hdma);
 8005332:	4620      	mov	r0, r4
 8005334:	4798      	blx	r3
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8005336:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8005338:	2220      	movs	r2, #32
 800533a:	408a      	lsls	r2, r1
 800533c:	4232      	tst	r2, r6
 800533e:	d03a      	beq.n	80053b6 <HAL_DMA_IRQHandler+0x112>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8005340:	6823      	ldr	r3, [r4, #0]
 8005342:	6818      	ldr	r0, [r3, #0]
 8005344:	06c6      	lsls	r6, r0, #27
 8005346:	d536      	bpl.n	80053b6 <HAL_DMA_IRQHandler+0x112>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8005348:	60aa      	str	r2, [r5, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 800534a:	f894 2035 	ldrb.w	r2, [r4, #53]	; 0x35
 800534e:	2a05      	cmp	r2, #5
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8005350:	681a      	ldr	r2, [r3, #0]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8005352:	d127      	bne.n	80053a4 <HAL_DMA_IRQHandler+0x100>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8005354:	f022 0216 	bic.w	r2, r2, #22
 8005358:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 800535a:	695a      	ldr	r2, [r3, #20]
 800535c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005360:	615a      	str	r2, [r3, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8005362:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005364:	b90a      	cbnz	r2, 800536a <HAL_DMA_IRQHandler+0xc6>
 8005366:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005368:	b11a      	cbz	r2, 8005372 <HAL_DMA_IRQHandler+0xce>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800536a:	681a      	ldr	r2, [r3, #0]
 800536c:	f022 0208 	bic.w	r2, r2, #8
 8005370:	601a      	str	r2, [r3, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8005372:	233f      	movs	r3, #63	; 0x3f
 8005374:	408b      	lsls	r3, r1
 8005376:	60ab      	str	r3, [r5, #8]
        __HAL_UNLOCK(hdma);
 8005378:	2300      	movs	r3, #0
 800537a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_READY;
 800537e:	2301      	movs	r3, #1
 8005380:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        if(hdma->XferAbortCallback != NULL)
 8005384:	6d23      	ldr	r3, [r4, #80]	; 0x50
    if(hdma->XferErrorCallback != NULL)
 8005386:	2b00      	cmp	r3, #0
 8005388:	d045      	beq.n	8005416 <HAL_DMA_IRQHandler+0x172>
      hdma->XferErrorCallback(hdma);
 800538a:	4620      	mov	r0, r4
}
 800538c:	b003      	add	sp, #12
 800538e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      hdma->XferErrorCallback(hdma);
 8005392:	4718      	bx	r3
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8005394:	681a      	ldr	r2, [r3, #0]
 8005396:	05d2      	lsls	r2, r2, #23
 8005398:	d4c7      	bmi.n	800532a <HAL_DMA_IRQHandler+0x86>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800539a:	681a      	ldr	r2, [r3, #0]
 800539c:	f022 0208 	bic.w	r2, r2, #8
 80053a0:	601a      	str	r2, [r3, #0]
 80053a2:	e7c2      	b.n	800532a <HAL_DMA_IRQHandler+0x86>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80053a4:	0350      	lsls	r0, r2, #13
 80053a6:	d527      	bpl.n	80053f8 <HAL_DMA_IRQHandler+0x154>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	0319      	lsls	r1, r3, #12
 80053ac:	d431      	bmi.n	8005412 <HAL_DMA_IRQHandler+0x16e>
          if(hdma->XferM1CpltCallback != NULL)
 80053ae:	6c63      	ldr	r3, [r4, #68]	; 0x44
        if(hdma->XferCpltCallback != NULL)
 80053b0:	b10b      	cbz	r3, 80053b6 <HAL_DMA_IRQHandler+0x112>
          hdma->XferCpltCallback(hdma);
 80053b2:	4620      	mov	r0, r4
 80053b4:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 80053b6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80053b8:	b36b      	cbz	r3, 8005416 <HAL_DMA_IRQHandler+0x172>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 80053ba:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80053bc:	07da      	lsls	r2, r3, #31
 80053be:	d519      	bpl.n	80053f4 <HAL_DMA_IRQHandler+0x150>
      hdma->State = HAL_DMA_STATE_ABORT;
 80053c0:	2305      	movs	r3, #5
      __HAL_DMA_DISABLE(hdma);
 80053c2:	6822      	ldr	r2, [r4, #0]
      hdma->State = HAL_DMA_STATE_ABORT;
 80053c4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_DMA_DISABLE(hdma);
 80053c8:	6813      	ldr	r3, [r2, #0]
 80053ca:	f023 0301 	bic.w	r3, r3, #1
 80053ce:	6013      	str	r3, [r2, #0]
  uint32_t timeout = SystemCoreClock / 9600;
 80053d0:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80053d4:	fbb7 f7f3 	udiv	r7, r7, r3
        if (++count > timeout)
 80053d8:	9b01      	ldr	r3, [sp, #4]
 80053da:	3301      	adds	r3, #1
 80053dc:	42bb      	cmp	r3, r7
 80053de:	9301      	str	r3, [sp, #4]
 80053e0:	d802      	bhi.n	80053e8 <HAL_DMA_IRQHandler+0x144>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 80053e2:	6813      	ldr	r3, [r2, #0]
 80053e4:	07db      	lsls	r3, r3, #31
 80053e6:	d4f7      	bmi.n	80053d8 <HAL_DMA_IRQHandler+0x134>
      __HAL_UNLOCK(hdma);
 80053e8:	2300      	movs	r3, #0
 80053ea:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
      hdma->State = HAL_DMA_STATE_READY;
 80053ee:	2301      	movs	r3, #1
 80053f0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
    if(hdma->XferErrorCallback != NULL)
 80053f4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80053f6:	e7c6      	b.n	8005386 <HAL_DMA_IRQHandler+0xe2>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 80053f8:	681a      	ldr	r2, [r3, #0]
 80053fa:	f412 7280 	ands.w	r2, r2, #256	; 0x100
 80053fe:	d108      	bne.n	8005412 <HAL_DMA_IRQHandler+0x16e>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8005400:	6819      	ldr	r1, [r3, #0]
 8005402:	f021 0110 	bic.w	r1, r1, #16
 8005406:	6019      	str	r1, [r3, #0]
          hdma->State = HAL_DMA_STATE_READY;
 8005408:	2301      	movs	r3, #1
          __HAL_UNLOCK(hdma);
 800540a:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
          hdma->State = HAL_DMA_STATE_READY;
 800540e:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        if(hdma->XferCpltCallback != NULL)
 8005412:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005414:	e7cc      	b.n	80053b0 <HAL_DMA_IRQHandler+0x10c>
}
 8005416:	b003      	add	sp, #12
 8005418:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800541a:	bf00      	nop
 800541c:	20000064 	.word	0x20000064

08005420 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8005420:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8005422:	4604      	mov	r4, r0
 8005424:	b380      	cbz	r0, 8005488 <HAL_DMA2D_Init+0x68>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8005426:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 800542a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800542e:	b91b      	cbnz	r3, 8005438 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8005430:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8005434:	f7fc f98c 	bl	8001750 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005438:	2302      	movs	r3, #2

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800543a:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800543c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005440:	6823      	ldr	r3, [r4, #0]
 8005442:	681a      	ldr	r2, [r3, #0]
 8005444:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8005448:	430a      	orrs	r2, r1

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800544a:	68a1      	ldr	r1, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800544c:	601a      	str	r2, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800544e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005450:	f022 0207 	bic.w	r2, r2, #7
 8005454:	430a      	orrs	r2, r1

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005456:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8005458:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800545a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800545c:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 8005460:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8005464:	430a      	orrs	r2, r1
 8005466:	641a      	str	r2, [r3, #64]	; 0x40
#if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR,(DMA2D_OPFCCR_AI|DMA2D_OPFCCR_RBS), ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));
 8005468:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800546a:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 800546e:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
 8005472:	0552      	lsls	r2, r2, #21
 8005474:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005478:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR,(DMA2D_OPFCCR_AI|DMA2D_OPFCCR_RBS), ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));
 800547a:	430a      	orrs	r2, r1
 800547c:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800547e:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005480:	6560      	str	r0, [r4, #84]	; 0x54
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005482:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51

  return HAL_OK;
}
 8005486:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8005488:	2001      	movs	r0, #1
 800548a:	e7fc      	b.n	8005486 <HAL_DMA2D_Init+0x66>

0800548c <HAL_DMA2D_LineEventCallback>:
 800548c:	4770      	bx	lr

0800548e <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800548e:	4770      	bx	lr

08005490 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005490:	6803      	ldr	r3, [r0, #0]
{
 8005492:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005494:	685e      	ldr	r6, [r3, #4]
{
 8005496:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8005498:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800549a:	07f2      	lsls	r2, r6, #31
 800549c:	d514      	bpl.n	80054c8 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800549e:	05e9      	lsls	r1, r5, #23
 80054a0:	d512      	bpl.n	80054c8 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80054a2:	681a      	ldr	r2, [r3, #0]
 80054a4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80054a8:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80054aa:	6d42      	ldr	r2, [r0, #84]	; 0x54
 80054ac:	f042 0201 	orr.w	r2, r2, #1
 80054b0:	6542      	str	r2, [r0, #84]	; 0x54

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80054b2:	2201      	movs	r2, #1
 80054b4:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80054b6:	2304      	movs	r3, #4
 80054b8:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80054bc:	2300      	movs	r3, #0
 80054be:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50

      if(hdma2d->XferErrorCallback != NULL)
 80054c2:	69c3      	ldr	r3, [r0, #28]
 80054c4:	b103      	cbz	r3, 80054c8 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80054c6:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80054c8:	06b2      	lsls	r2, r6, #26
 80054ca:	d516      	bpl.n	80054fa <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80054cc:	04ab      	lsls	r3, r5, #18
 80054ce:	d514      	bpl.n	80054fa <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80054d0:	6823      	ldr	r3, [r4, #0]
 80054d2:	681a      	ldr	r2, [r3, #0]
 80054d4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80054d8:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80054da:	2220      	movs	r2, #32
 80054dc:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80054de:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80054e0:	f043 0302 	orr.w	r3, r3, #2
 80054e4:	6563      	str	r3, [r4, #84]	; 0x54

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80054e6:	2304      	movs	r3, #4
 80054e8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80054ec:	2300      	movs	r3, #0
 80054ee:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50

      if(hdma2d->XferErrorCallback != NULL)
 80054f2:	69e3      	ldr	r3, [r4, #28]
 80054f4:	b10b      	cbz	r3, 80054fa <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80054f6:	4620      	mov	r0, r4
 80054f8:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80054fa:	0730      	lsls	r0, r6, #28
 80054fc:	d516      	bpl.n	800552c <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80054fe:	0529      	lsls	r1, r5, #20
 8005500:	d514      	bpl.n	800552c <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8005502:	6823      	ldr	r3, [r4, #0]
 8005504:	681a      	ldr	r2, [r3, #0]
 8005506:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800550a:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800550c:	2208      	movs	r2, #8
 800550e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8005510:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8005512:	f043 0304 	orr.w	r3, r3, #4
 8005516:	6563      	str	r3, [r4, #84]	; 0x54

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005518:	2304      	movs	r3, #4
 800551a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800551e:	2300      	movs	r3, #0
 8005520:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50

      if(hdma2d->XferErrorCallback != NULL)
 8005524:	69e3      	ldr	r3, [r4, #28]
 8005526:	b10b      	cbz	r3, 800552c <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005528:	4620      	mov	r0, r4
 800552a:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800552c:	0772      	lsls	r2, r6, #29
 800552e:	d50b      	bpl.n	8005548 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8005530:	056b      	lsls	r3, r5, #21
 8005532:	d509      	bpl.n	8005548 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8005534:	6823      	ldr	r3, [r4, #0]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8005536:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8005538:	681a      	ldr	r2, [r3, #0]
 800553a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800553e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8005540:	2204      	movs	r2, #4
 8005542:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8005544:	f7ff ffa2 	bl	800548c <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8005548:	07b0      	lsls	r0, r6, #30
 800554a:	d514      	bpl.n	8005576 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800554c:	05a9      	lsls	r1, r5, #22
 800554e:	d512      	bpl.n	8005576 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8005550:	6823      	ldr	r3, [r4, #0]
 8005552:	681a      	ldr	r2, [r3, #0]
 8005554:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005558:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800555a:	2202      	movs	r2, #2
 800555c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800555e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8005560:	6563      	str	r3, [r4, #84]	; 0x54

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005562:	2301      	movs	r3, #1
 8005564:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005568:	2300      	movs	r3, #0
 800556a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50

      if(hdma2d->XferCpltCallback != NULL)
 800556e:	69a3      	ldr	r3, [r4, #24]
 8005570:	b10b      	cbz	r3, 8005576 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8005572:	4620      	mov	r0, r4
 8005574:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8005576:	06f2      	lsls	r2, r6, #27
 8005578:	d513      	bpl.n	80055a2 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800557a:	04eb      	lsls	r3, r5, #19
 800557c:	d511      	bpl.n	80055a2 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800557e:	6823      	ldr	r3, [r4, #0]

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8005580:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8005582:	681a      	ldr	r2, [r3, #0]
 8005584:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8005588:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800558a:	2210      	movs	r2, #16
 800558c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800558e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8005590:	6563      	str	r3, [r4, #84]	; 0x54
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005592:	2301      	movs	r3, #1
 8005594:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
      __HAL_UNLOCK(hdma2d);
 8005598:	2300      	movs	r3, #0
 800559a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800559e:	f7ff ff76 	bl	800548e <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80055a2:	bd70      	pop	{r4, r5, r6, pc}

080055a4 <HAL_DMA2D_ConfigLayer>:
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80055a4:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 80055a8:	2b01      	cmp	r3, #1
 80055aa:	f04f 0302 	mov.w	r3, #2
{
 80055ae:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_LOCK(hdma2d);
 80055b0:	d040      	beq.n	8005634 <HAL_DMA2D_ConfigLayer+0x90>

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
#if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) |\
 80055b2:	2418      	movs	r4, #24
  __HAL_LOCK(hdma2d);
 80055b4:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80055b6:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) |\
 80055ba:	fb04 0401 	mla	r4, r4, r1, r0
 80055be:	4f22      	ldr	r7, [pc, #136]	; (8005648 <HAL_DMA2D_ConfigLayer+0xa4>)
  __HAL_LOCK(hdma2d);
 80055c0:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
 80055c4:	6b22      	ldr	r2, [r4, #48]	; 0x30
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) |\
 80055c6:	e9d4 5609 	ldrd	r5, r6, [r4, #36]	; 0x24
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
 80055ca:	0513      	lsls	r3, r2, #20
 80055cc:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80055ce:	6ae4      	ldr	r4, [r4, #44]	; 0x2c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) |\
 80055d0:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 80055d4:	432b      	orrs	r3, r5
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80055d6:	3d09      	subs	r5, #9
 80055d8:	2d01      	cmp	r5, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) |\
 80055da:	ea43 5342 	orr.w	r3, r3, r2, lsl #21
 80055de:	6802      	ldr	r2, [r0, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80055e0:	d80e      	bhi.n	8005600 <HAL_DMA2D_ConfigLayer+0x5c>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80055e2:	f004 467f 	and.w	r6, r4, #4278190080	; 0xff000000
 80055e6:	4333      	orrs	r3, r6
  {
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
  }

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80055e8:	b969      	cbnz	r1, 8005606 <HAL_DMA2D_ConfigLayer+0x62>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80055ea:	6a51      	ldr	r1, [r2, #36]	; 0x24
 80055ec:	4039      	ands	r1, r7
 80055ee:	430b      	orrs	r3, r1
 80055f0:	6253      	str	r3, [r2, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80055f2:	6a03      	ldr	r3, [r0, #32]
 80055f4:	6193      	str	r3, [r2, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80055f6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80055f8:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80055fc:	6293      	str	r3, [r2, #40]	; 0x28
 80055fe:	e013      	b.n	8005628 <HAL_DMA2D_ConfigLayer+0x84>
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8005600:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8005604:	b1c1      	cbz	r1, 8005638 <HAL_DMA2D_ConfigLayer+0x94>
  else
  {


     /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8005606:	69d6      	ldr	r6, [r2, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005608:	2d01      	cmp	r5, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800560a:	ea06 0607 	and.w	r6, r6, r7
 800560e:	ea43 0306 	orr.w	r3, r3, r6
 8005612:	61d3      	str	r3, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005614:	f04f 0318 	mov.w	r3, #24
 8005618:	fb03 0101 	mla	r1, r3, r1, r0
 800561c:	6a0b      	ldr	r3, [r1, #32]
 800561e:	6113      	str	r3, [r2, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005620:	d802      	bhi.n	8005628 <HAL_DMA2D_ConfigLayer+0x84>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8005622:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
 8005626:	6214      	str	r4, [r2, #32]
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005628:	2301      	movs	r3, #1
 800562a:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800562e:	2300      	movs	r3, #0
 8005630:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  __HAL_LOCK(hdma2d);
 8005634:	4618      	mov	r0, r3

  return HAL_OK;
}
 8005636:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005638:	6a51      	ldr	r1, [r2, #36]	; 0x24
 800563a:	4039      	ands	r1, r7
 800563c:	430b      	orrs	r3, r1
 800563e:	6253      	str	r3, [r2, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8005640:	6a03      	ldr	r3, [r0, #32]
 8005642:	6193      	str	r3, [r2, #24]
 8005644:	e7f0      	b.n	8005628 <HAL_DMA2D_ConfigLayer+0x84>
 8005646:	bf00      	nop
 8005648:	00ccfff0 	.word	0x00ccfff0

0800564c <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 800564c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005650:	4607      	mov	r7, r0
 8005652:	460d      	mov	r5, r1
 8005654:	4614      	mov	r4, r2
 8005656:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8005658:	f7ff fbda 	bl	8004e10 <HAL_GetTick>
 800565c:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800565e:	683b      	ldr	r3, [r7, #0]
 8005660:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8005662:	07d2      	lsls	r2, r2, #31
 8005664:	d50a      	bpl.n	800567c <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8005666:	ea44 2106 	orr.w	r1, r4, r6, lsl #8
 800566a:	9c06      	ldr	r4, [sp, #24]

  return HAL_OK;
 800566c:	2000      	movs	r0, #0
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800566e:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8005672:	ea41 1185 	orr.w	r1, r1, r5, lsl #6
 8005676:	66d9      	str	r1, [r3, #108]	; 0x6c
}
 8005678:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 800567c:	f7ff fbc8 	bl	8004e10 <HAL_GetTick>
 8005680:	eba0 0008 	sub.w	r0, r0, r8
 8005684:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005688:	d9e9      	bls.n	800565e <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 800568a:	2003      	movs	r0, #3
 800568c:	e7f4      	b.n	8005678 <DSI_ShortWrite+0x2c>

0800568e <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800568e:	7c03      	ldrb	r3, [r0, #16]
 8005690:	2b01      	cmp	r3, #1
 8005692:	d05e      	beq.n	8005752 <HAL_DSI_ConfigErrorMonitor+0xc4>
 8005694:	2301      	movs	r3, #1

  hdsi->Instance->IER[0U] = 0U;
 8005696:	2200      	movs	r2, #0
  __HAL_LOCK(hdsi);
 8005698:	7403      	strb	r3, [r0, #16]
  hdsi->Instance->IER[0U] = 0U;
 800569a:	6803      	ldr	r3, [r0, #0]
 800569c:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 80056a0:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 80056a4:	07ca      	lsls	r2, r1, #31
  hdsi->ErrorMsk = ActiveErrors;
 80056a6:	6181      	str	r1, [r0, #24]
  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 80056a8:	d507      	bpl.n	80056ba <HAL_DSI_ConfigErrorMonitor+0x2c>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 80056aa:	f8d3 20c4 	ldr.w	r2, [r3, #196]	; 0xc4
 80056ae:	ea6f 4212 	mvn.w	r2, r2, lsr #16
 80056b2:	ea6f 4202 	mvn.w	r2, r2, lsl #16
 80056b6:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 80056ba:	078a      	lsls	r2, r1, #30
 80056bc:	d505      	bpl.n	80056ca <HAL_DSI_ConfigErrorMonitor+0x3c>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 80056be:	f8d3 20c4 	ldr.w	r2, [r3, #196]	; 0xc4
 80056c2:	f442 12f8 	orr.w	r2, r2, #2031616	; 0x1f0000
 80056c6:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 80056ca:	074a      	lsls	r2, r1, #29
 80056cc:	d505      	bpl.n	80056da <HAL_DSI_ConfigErrorMonitor+0x4c>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 80056ce:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 80056d2:	f042 0201 	orr.w	r2, r2, #1
 80056d6:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 80056da:	070a      	lsls	r2, r1, #28
 80056dc:	d505      	bpl.n	80056ea <HAL_DSI_ConfigErrorMonitor+0x5c>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 80056de:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 80056e2:	f042 0202 	orr.w	r2, r2, #2
 80056e6:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 80056ea:	06ca      	lsls	r2, r1, #27
 80056ec:	d505      	bpl.n	80056fa <HAL_DSI_ConfigErrorMonitor+0x6c>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 80056ee:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 80056f2:	f042 020c 	orr.w	r2, r2, #12
 80056f6:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 80056fa:	068a      	lsls	r2, r1, #26
 80056fc:	d505      	bpl.n	800570a <HAL_DSI_ConfigErrorMonitor+0x7c>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 80056fe:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8005702:	f042 0210 	orr.w	r2, r2, #16
 8005706:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 800570a:	064a      	lsls	r2, r1, #25
 800570c:	d505      	bpl.n	800571a <HAL_DSI_ConfigErrorMonitor+0x8c>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 800570e:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8005712:	f042 0220 	orr.w	r2, r2, #32
 8005716:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 800571a:	060a      	lsls	r2, r1, #24
 800571c:	d505      	bpl.n	800572a <HAL_DSI_ConfigErrorMonitor+0x9c>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 800571e:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8005722:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005726:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 800572a:	05ca      	lsls	r2, r1, #23
 800572c:	d505      	bpl.n	800573a <HAL_DSI_ConfigErrorMonitor+0xac>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 800572e:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8005732:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005736:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 800573a:	058a      	lsls	r2, r1, #22
 800573c:	d505      	bpl.n	800574a <HAL_DSI_ConfigErrorMonitor+0xbc>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800573e:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8005742:	f442 52f8 	orr.w	r2, r2, #7936	; 0x1f00
 8005746:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 800574a:	2300      	movs	r3, #0
 800574c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800574e:	4618      	mov	r0, r3
 8005750:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005752:	2002      	movs	r0, #2
}
 8005754:	4770      	bx	lr
	...

08005758 <HAL_DSI_Init>:
{
 8005758:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800575a:	460d      	mov	r5, r1
  if (hdsi == NULL)
 800575c:	4604      	mov	r4, r0
 800575e:	2800      	cmp	r0, #0
 8005760:	f000 80a6 	beq.w	80058b0 <HAL_DSI_Init+0x158>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8005764:	7c43      	ldrb	r3, [r0, #17]
 8005766:	b90b      	cbnz	r3, 800576c <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8005768:	f7fc f812 	bl	8001790 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 800576c:	2303      	movs	r3, #3
 800576e:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 8005770:	2300      	movs	r3, #0
 8005772:	9300      	str	r3, [sp, #0]
 8005774:	6823      	ldr	r3, [r4, #0]
 8005776:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800577a:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800577e:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 8005782:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 8005786:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800578a:	9300      	str	r3, [sp, #0]
 800578c:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 800578e:	f7ff fb3f 	bl	8004e10 <HAL_GetTick>
 8005792:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8005794:	6822      	ldr	r2, [r4, #0]
 8005796:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800579a:	04d9      	lsls	r1, r3, #19
 800579c:	d577      	bpl.n	800588e <HAL_DSI_Init+0x136>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800579e:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80057a2:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 80057a6:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 80057aa:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 80057ae:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 80057b2:	e9d5 0300 	ldrd	r0, r3, [r5]
 80057b6:	02db      	lsls	r3, r3, #11
 80057b8:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 80057bc:	68a8      	ldr	r0, [r5, #8]
 80057be:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80057c2:	430b      	orrs	r3, r1
 80057c4:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 80057c8:	2300      	movs	r3, #0
 80057ca:	9301      	str	r3, [sp, #4]
 80057cc:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80057d0:	f043 0301 	orr.w	r3, r3, #1
 80057d4:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 80057d8:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80057dc:	f003 0301 	and.w	r3, r3, #1
 80057e0:	9301      	str	r3, [sp, #4]
 80057e2:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 80057e4:	f7ff fb14 	bl	8004e10 <HAL_GetTick>
 80057e8:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 80057ea:	6823      	ldr	r3, [r4, #0]
 80057ec:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80057f0:	05d2      	lsls	r2, r2, #23
 80057f2:	d556      	bpl.n	80058a2 <HAL_DSI_Init+0x14a>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 80057f4:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 80057f8:	6828      	ldr	r0, [r5, #0]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 80057fa:	f042 0206 	orr.w	r2, r2, #6
 80057fe:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8005802:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8005806:	f022 0203 	bic.w	r2, r2, #3
 800580a:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800580e:	6862      	ldr	r2, [r4, #4]
 8005810:	f8d3 1094 	ldr.w	r1, [r3, #148]	; 0x94
 8005814:	f042 0201 	orr.w	r2, r2, #1
 8005818:	430a      	orrs	r2, r1
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800581a:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800581c:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8005820:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005824:	f022 0203 	bic.w	r2, r2, #3
 8005828:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800582c:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005830:	430a      	orrs	r2, r1
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8005832:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8005834:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8005838:	689a      	ldr	r2, [r3, #8]
 800583a:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800583e:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8005840:	689a      	ldr	r2, [r3, #8]
 8005842:	430a      	orrs	r2, r1
  tempIDF = (PLLInit->PLLIDF > 0U) ? PLLInit->PLLIDF : 1U;
 8005844:	6869      	ldr	r1, [r5, #4]
 8005846:	2900      	cmp	r1, #0
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8005848:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800584a:	4a1a      	ldr	r2, [pc, #104]	; (80058b4 <HAL_DSI_Init+0x15c>)
  tempIDF = (PLLInit->PLLIDF > 0U) ? PLLInit->PLLIDF : 1U;
 800584c:	bf08      	it	eq
 800584e:	2101      	moveq	r1, #1
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8005850:	434a      	muls	r2, r1
 8005852:	68a9      	ldr	r1, [r5, #8]
 8005854:	f001 0103 	and.w	r1, r1, #3
 8005858:	408a      	lsls	r2, r1
 800585a:	f246 11a8 	movw	r1, #25000	; 0x61a8
 800585e:	4341      	muls	r1, r0
  hdsi->Instance->IER[0U] = 0U;
 8005860:	2000      	movs	r0, #0
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8005862:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8005866:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800586a:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800586e:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8005872:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 8005876:	430a      	orrs	r2, r1
 8005878:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800587c:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8005880:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8005884:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8005886:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 8005888:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 800588a:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800588c:	e007      	b.n	800589e <HAL_DSI_Init+0x146>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800588e:	f7ff fabf 	bl	8004e10 <HAL_GetTick>
 8005892:	1b80      	subs	r0, r0, r6
 8005894:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005898:	f67f af7c 	bls.w	8005794 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800589c:	2003      	movs	r0, #3
}
 800589e:	b002      	add	sp, #8
 80058a0:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80058a2:	f7ff fab5 	bl	8004e10 <HAL_GetTick>
 80058a6:	1b80      	subs	r0, r0, r6
 80058a8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80058ac:	d99d      	bls.n	80057ea <HAL_DSI_Init+0x92>
 80058ae:	e7f5      	b.n	800589c <HAL_DSI_Init+0x144>
    return HAL_ERROR;
 80058b0:	2001      	movs	r0, #1
 80058b2:	e7f4      	b.n	800589e <HAL_DSI_Init+0x146>
 80058b4:	003d0900 	.word	0x003d0900

080058b8 <HAL_DSI_ErrorCallback>:
 80058b8:	4770      	bx	lr

080058ba <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 80058ba:	6803      	ldr	r3, [r0, #0]
 80058bc:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80058c0:	07d1      	lsls	r1, r2, #31
{
 80058c2:	b510      	push	{r4, lr}
 80058c4:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 80058c6:	d508      	bpl.n	80058da <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 80058c8:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80058cc:	07d2      	lsls	r2, r2, #31
 80058ce:	d504      	bpl.n	80058da <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 80058d0:	2201      	movs	r2, #1
 80058d2:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 80058d6:	f7fc fe4f 	bl	8002578 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 80058da:	6823      	ldr	r3, [r4, #0]
 80058dc:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80058e0:	0791      	lsls	r1, r2, #30
 80058e2:	d509      	bpl.n	80058f8 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 80058e4:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80058e8:	0792      	lsls	r2, r2, #30
 80058ea:	d505      	bpl.n	80058f8 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 80058ec:	2202      	movs	r2, #2
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 80058ee:	4620      	mov	r0, r4
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 80058f0:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
      HAL_DSI_EndOfRefreshCallback(hdsi);
 80058f4:	f7fc fe74 	bl	80025e0 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 80058f8:	69a3      	ldr	r3, [r4, #24]
 80058fa:	2b00      	cmp	r3, #0
 80058fc:	d04e      	beq.n	800599c <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 80058fe:	6821      	ldr	r1, [r4, #0]
 8005900:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8005904:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 8005908:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800590c:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800590e:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8005912:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8005914:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8005916:	b119      	cbz	r1, 8005920 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 8005918:	6961      	ldr	r1, [r4, #20]
 800591a:	f041 0101 	orr.w	r1, r1, #1
 800591e:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8005920:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
 8005924:	d003      	beq.n	800592e <HAL_DSI_IRQHandler+0x74>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 8005926:	6962      	ldr	r2, [r4, #20]
 8005928:	f042 0202 	orr.w	r2, r2, #2
 800592c:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 800592e:	07d8      	lsls	r0, r3, #31
 8005930:	d503      	bpl.n	800593a <HAL_DSI_IRQHandler+0x80>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8005932:	6962      	ldr	r2, [r4, #20]
 8005934:	f042 0204 	orr.w	r2, r2, #4
 8005938:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800593a:	0799      	lsls	r1, r3, #30
 800593c:	d503      	bpl.n	8005946 <HAL_DSI_IRQHandler+0x8c>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 800593e:	6962      	ldr	r2, [r4, #20]
 8005940:	f042 0208 	orr.w	r2, r2, #8
 8005944:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 8005946:	f013 0f0c 	tst.w	r3, #12
 800594a:	d003      	beq.n	8005954 <HAL_DSI_IRQHandler+0x9a>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800594c:	6962      	ldr	r2, [r4, #20]
 800594e:	f042 0210 	orr.w	r2, r2, #16
 8005952:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 8005954:	06da      	lsls	r2, r3, #27
 8005956:	d503      	bpl.n	8005960 <HAL_DSI_IRQHandler+0xa6>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 8005958:	6962      	ldr	r2, [r4, #20]
 800595a:	f042 0220 	orr.w	r2, r2, #32
 800595e:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 8005960:	0698      	lsls	r0, r3, #26
 8005962:	d503      	bpl.n	800596c <HAL_DSI_IRQHandler+0xb2>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 8005964:	6962      	ldr	r2, [r4, #20]
 8005966:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800596a:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 800596c:	0659      	lsls	r1, r3, #25
 800596e:	d503      	bpl.n	8005978 <HAL_DSI_IRQHandler+0xbe>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 8005970:	6962      	ldr	r2, [r4, #20]
 8005972:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005976:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 8005978:	061a      	lsls	r2, r3, #24
 800597a:	d503      	bpl.n	8005984 <HAL_DSI_IRQHandler+0xca>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800597c:	6962      	ldr	r2, [r4, #20]
 800597e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005982:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8005984:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
 8005988:	d003      	beq.n	8005992 <HAL_DSI_IRQHandler+0xd8>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 800598a:	6963      	ldr	r3, [r4, #20]
 800598c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005990:	6163      	str	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 8005992:	6963      	ldr	r3, [r4, #20]
 8005994:	b113      	cbz	r3, 800599c <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 8005996:	4620      	mov	r0, r4
 8005998:	f7ff ff8e 	bl	80058b8 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 800599c:	bd10      	pop	{r4, pc}

0800599e <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800599e:	7c03      	ldrb	r3, [r0, #16]
 80059a0:	2b01      	cmp	r3, #1
 80059a2:	d00b      	beq.n	80059bc <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 80059a4:	6803      	ldr	r3, [r0, #0]
 80059a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80059a8:	f022 0203 	bic.w	r2, r2, #3
 80059ac:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 80059ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80059b0:	4311      	orrs	r1, r2
 80059b2:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80059b4:	2300      	movs	r3, #0
 80059b6:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80059b8:	4618      	mov	r0, r3
 80059ba:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80059bc:	2002      	movs	r0, #2
}
 80059be:	4770      	bx	lr

080059c0 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80059c0:	7c03      	ldrb	r3, [r0, #16]
 80059c2:	2b01      	cmp	r3, #1
{
 80059c4:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hdsi);
 80059c6:	d06a      	beq.n	8005a9e <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 80059c8:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 80059ca:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 80059cc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80059ce:	f042 0201 	orr.w	r2, r2, #1
 80059d2:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 80059d4:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80059d8:	f022 0201 	bic.w	r2, r2, #1
 80059dc:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 80059e0:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80059e4:	f042 0201 	orr.w	r2, r2, #1
 80059e8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 80059ec:	68da      	ldr	r2, [r3, #12]
 80059ee:	f022 0203 	bic.w	r2, r2, #3
 80059f2:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 80059f4:	68da      	ldr	r2, [r3, #12]
 80059f6:	4322      	orrs	r2, r4
 80059f8:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 80059fa:	695a      	ldr	r2, [r3, #20]
 80059fc:	f022 0207 	bic.w	r2, r2, #7
 8005a00:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 8005a02:	695c      	ldr	r4, [r3, #20]
 8005a04:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 8005a08:	432a      	orrs	r2, r5
 8005a0a:	694d      	ldr	r5, [r1, #20]
 8005a0c:	432a      	orrs	r2, r5

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8005a0e:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 8005a10:	4322      	orrs	r2, r4
 8005a12:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8005a14:	691a      	ldr	r2, [r3, #16]
 8005a16:	f022 020f 	bic.w	r2, r2, #15
 8005a1a:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8005a1c:	691c      	ldr	r4, [r3, #16]
 8005a1e:	432c      	orrs	r4, r5
 8005a20:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 8005a22:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8005a26:	f024 040e 	bic.w	r4, r4, #14
 8005a2a:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8005a2e:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8005a32:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8005a34:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8005a38:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 8005a3c:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8005a3e:	0c12      	lsrs	r2, r2, #16
 8005a40:	0412      	lsls	r2, r2, #16
 8005a42:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8005a44:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8005a46:	4322      	orrs	r2, r4
 8005a48:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 8005a4a:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8005a4e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8005a52:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8005a56:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8005a5a:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 8005a5e:	432a      	orrs	r2, r5
 8005a60:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8005a62:	432a      	orrs	r2, r5
 8005a64:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8005a66:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8005a68:	432a      	orrs	r2, r5
 8005a6a:	4322      	orrs	r2, r4
 8005a6c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 8005a70:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8005a72:	f022 0201 	bic.w	r2, r2, #1
 8005a76:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8005a78:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8005a7a:	430a      	orrs	r2, r1
 8005a7c:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 8005a7e:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8005a82:	f042 0201 	orr.w	r2, r2, #1
 8005a86:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 8005a8a:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8005a8e:	f042 0202 	orr.w	r2, r2, #2
 8005a92:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005a96:	2300      	movs	r3, #0
 8005a98:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005a9a:	4618      	mov	r0, r3
}
 8005a9c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8005a9e:	2002      	movs	r0, #2
 8005aa0:	e7fc      	b.n	8005a9c <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08005aa4 <HAL_DSI_ConfigCommand>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005aa4:	7c03      	ldrb	r3, [r0, #16]
 8005aa6:	2b01      	cmp	r3, #1
{
 8005aa8:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hdsi);
 8005aaa:	d02a      	beq.n	8005b02 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8005aac:	6802      	ldr	r2, [r0, #0]
 8005aae:	4b16      	ldr	r3, [pc, #88]	; (8005b08 <HAL_DSI_ConfigCommand+0x64>)
 8005ab0:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8005ab2:	4023      	ands	r3, r4
 8005ab4:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8005ab6:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8005ab8:	e9d1 3500 	ldrd	r3, r5, [r1]
 8005abc:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8005abe:	688d      	ldr	r5, [r1, #8]
 8005ac0:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 8005ac2:	68cd      	ldr	r5, [r1, #12]
 8005ac4:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 8005ac6:	690d      	ldr	r5, [r1, #16]
 8005ac8:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 8005aca:	694d      	ldr	r5, [r1, #20]
 8005acc:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 8005ace:	698d      	ldr	r5, [r1, #24]
 8005ad0:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 8005ad2:	69cd      	ldr	r5, [r1, #28]
 8005ad4:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 8005ad6:	6a0d      	ldr	r5, [r1, #32]
 8005ad8:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 8005ada:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8005adc:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 8005ade:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8005ae0:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 8005ae2:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8005ae4:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 8005ae6:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8005ae8:	4323      	orrs	r3, r4
 8005aea:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 8005aec:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8005aee:	f023 0302 	bic.w	r3, r3, #2
 8005af2:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8005af4:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8005af6:	430b      	orrs	r3, r1
 8005af8:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005afa:	2300      	movs	r3, #0
 8005afc:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005afe:	4618      	mov	r0, r3
}
 8005b00:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8005b02:	2002      	movs	r0, #2
 8005b04:	e7fc      	b.n	8005b00 <HAL_DSI_ConfigCommand+0x5c>
 8005b06:	bf00      	nop
 8005b08:	fef080ff 	.word	0xfef080ff

08005b0c <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005b0c:	7c03      	ldrb	r3, [r0, #16]
 8005b0e:	2b01      	cmp	r3, #1
 8005b10:	d00b      	beq.n	8005b2a <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 8005b12:	6803      	ldr	r3, [r0, #0]
 8005b14:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005b16:	f022 021f 	bic.w	r2, r2, #31
 8005b1a:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 8005b1c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005b1e:	4311      	orrs	r1, r2
 8005b20:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005b22:	2300      	movs	r3, #0
 8005b24:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005b26:	4618      	mov	r0, r3
 8005b28:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005b2a:	2002      	movs	r0, #2
}
 8005b2c:	4770      	bx	lr

08005b2e <HAL_DSI_ConfigPhyTimer>:
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005b2e:	7c03      	ldrb	r3, [r0, #16]
 8005b30:	2b01      	cmp	r3, #1
{
 8005b32:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hdsi);
 8005b34:	d035      	beq.n	8005ba2 <HAL_DSI_ConfigPhyTimer+0x74>
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8005b36:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8005b38:	e9d1 2400 	ldrd	r2, r4, [r1]
 8005b3c:	4294      	cmp	r4, r2
 8005b3e:	bf38      	it	cc
 8005b40:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8005b42:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8005b46:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 8005b4a:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 8005b4e:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8005b52:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8005b56:	4322      	orrs	r2, r4
 8005b58:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 8005b5c:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8005b60:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8005b64:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8005b68:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 8005b6c:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8005b70:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8005b72:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8005b76:	690d      	ldr	r5, [r1, #16]

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8005b78:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8005b7a:	432a      	orrs	r2, r5
 8005b7c:	4322      	orrs	r2, r4
 8005b7e:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 8005b82:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005b86:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8005b8a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8005b8e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005b92:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005b96:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005b9a:	2300      	movs	r3, #0
 8005b9c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005b9e:	4618      	mov	r0, r3
}
 8005ba0:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8005ba2:	2002      	movs	r0, #2
 8005ba4:	e7fc      	b.n	8005ba0 <HAL_DSI_ConfigPhyTimer+0x72>
	...

08005ba8 <HAL_DSI_ConfigHostTimeouts>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005ba8:	7c03      	ldrb	r3, [r0, #16]
 8005baa:	2b01      	cmp	r3, #1
{
 8005bac:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hdsi);
 8005bae:	d05c      	beq.n	8005c6a <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8005bb0:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8005bb2:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8005bb4:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8005bb6:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8005bb8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8005bbc:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8005bbe:	689a      	ldr	r2, [r3, #8]
 8005bc0:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8005bc4:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8005bc6:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8005bc8:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8005bca:	b292      	uxth	r2, r2
 8005bcc:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8005bce:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8005bd0:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8005bd4:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 8005bd6:	4a26      	ldr	r2, [pc, #152]	; (8005c70 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 8005bd8:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8005bda:	4014      	ands	r4, r2
 8005bdc:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8005bde:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8005be0:	432c      	orrs	r4, r5

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8005be2:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8005be4:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8005be6:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 8005be8:	4014      	ands	r4, r2
 8005bea:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8005bec:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 8005bee:	432c      	orrs	r4, r5

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8005bf0:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8005bf2:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8005bf4:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 8005bf8:	4014      	ands	r4, r2
 8005bfa:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8005bfe:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 8005c02:	432c      	orrs	r4, r5

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8005c04:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8005c06:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8005c0a:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8005c0e:	4014      	ands	r4, r2
 8005c10:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8005c14:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8005c18:	432c      	orrs	r4, r5
 8005c1a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 8005c1e:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8005c22:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 8005c26:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 8005c2a:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8005c2e:	698d      	ldr	r5, [r1, #24]
 8005c30:	432c      	orrs	r4, r5

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8005c32:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8005c34:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 8005c36:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8005c3a:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 8005c3e:	4014      	ands	r4, r2
 8005c40:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8005c44:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 8005c48:	432c      	orrs	r4, r5
 8005c4a:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 8005c4e:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 8005c52:	4022      	ands	r2, r4
 8005c54:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8005c58:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8005c5c:	430a      	orrs	r2, r1
 8005c5e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005c62:	2300      	movs	r3, #0
 8005c64:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005c66:	4618      	mov	r0, r3
}
 8005c68:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8005c6a:	2002      	movs	r0, #2
 8005c6c:	e7fc      	b.n	8005c68 <HAL_DSI_ConfigHostTimeouts+0xc0>
 8005c6e:	bf00      	nop
 8005c70:	ffff0000 	.word	0xffff0000

08005c74 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005c74:	7c03      	ldrb	r3, [r0, #16]
{
 8005c76:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 8005c78:	2b01      	cmp	r3, #1
 8005c7a:	d01c      	beq.n	8005cb6 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 8005c7c:	6802      	ldr	r2, [r0, #0]
 8005c7e:	2300      	movs	r3, #0
 8005c80:	9300      	str	r3, [sp, #0]
 8005c82:	6851      	ldr	r1, [r2, #4]
 8005c84:	f041 0101 	orr.w	r1, r1, #1
 8005c88:	6051      	str	r1, [r2, #4]
 8005c8a:	6851      	ldr	r1, [r2, #4]
 8005c8c:	f001 0101 	and.w	r1, r1, #1
 8005c90:	9100      	str	r1, [sp, #0]
 8005c92:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8005c94:	9301      	str	r3, [sp, #4]
 8005c96:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 8005c9a:	f041 0108 	orr.w	r1, r1, #8
 8005c9e:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 8005ca2:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005ca6:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005ca8:	4618      	mov	r0, r3
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8005caa:	f002 0208 	and.w	r2, r2, #8
 8005cae:	9201      	str	r2, [sp, #4]
 8005cb0:	9a01      	ldr	r2, [sp, #4]
}
 8005cb2:	b002      	add	sp, #8
 8005cb4:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005cb6:	2002      	movs	r0, #2
 8005cb8:	e7fb      	b.n	8005cb2 <HAL_DSI_Start+0x3e>

08005cba <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005cba:	7c03      	ldrb	r3, [r0, #16]
 8005cbc:	2b01      	cmp	r3, #1
 8005cbe:	d00a      	beq.n	8005cd6 <HAL_DSI_Refresh+0x1c>

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 8005cc0:	6802      	ldr	r2, [r0, #0]
 8005cc2:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8005cc6:	f043 0304 	orr.w	r3, r3, #4
 8005cca:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005cce:	2300      	movs	r3, #0
 8005cd0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005cd2:	4618      	mov	r0, r3
 8005cd4:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005cd6:	2002      	movs	r0, #2
}
 8005cd8:	4770      	bx	lr

08005cda <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 8005cda:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 8005cdc:	7c05      	ldrb	r5, [r0, #16]
{
 8005cde:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8005ce0:	2d01      	cmp	r5, #1
 8005ce2:	d009      	beq.n	8005cf8 <HAL_DSI_ShortWrite+0x1e>
 8005ce4:	2501      	movs	r5, #1
 8005ce6:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8005ce8:	9d06      	ldr	r5, [sp, #24]
 8005cea:	9500      	str	r5, [sp, #0]
 8005cec:	f7ff fcae 	bl	800564c <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005cf0:	2300      	movs	r3, #0
 8005cf2:	7423      	strb	r3, [r4, #16]

  return status;
}
 8005cf4:	b003      	add	sp, #12
 8005cf6:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8005cf8:	2002      	movs	r0, #2
 8005cfa:	e7fb      	b.n	8005cf4 <HAL_DSI_ShortWrite+0x1a>

08005cfc <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 8005cfc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d00:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 8005d02:	7c03      	ldrb	r3, [r0, #16]
{
 8005d04:	4606      	mov	r6, r0
 8005d06:	460f      	mov	r7, r1
  __HAL_LOCK(hdsi);
 8005d08:	2b01      	cmp	r3, #1
{
 8005d0a:	4615      	mov	r5, r2
 8005d0c:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
  __HAL_LOCK(hdsi);
 8005d10:	d052      	beq.n	8005db8 <HAL_DSI_LongWrite+0xbc>
 8005d12:	2301      	movs	r3, #1
 8005d14:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 8005d16:	f7ff f87b 	bl	8004e10 <HAL_GetTick>
 8005d1a:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8005d1c:	6832      	ldr	r2, [r6, #0]
 8005d1e:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8005d20:	f013 0a01 	ands.w	sl, r3, #1
 8005d24:	d019      	beq.n	8005d5a <HAL_DSI_LongWrite+0x5e>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8005d26:	2c03      	cmp	r4, #3
 8005d28:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 8005d2a:	f04f 0300 	mov.w	r3, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8005d2e:	bf28      	it	cs
 8005d30:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 8005d32:	4283      	cmp	r3, r0
 8005d34:	d11d      	bne.n	8005d72 <HAL_DSI_LongWrite+0x76>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 8005d36:	1ae0      	subs	r0, r4, r3
  pparams += nbBytes;
 8005d38:	4443      	add	r3, r8
  hdsi->Instance->GPDR = fifoword;
 8005d3a:	f8c2 9070 	str.w	r9, [r2, #112]	; 0x70
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 8005d3e:	bb10      	cbnz	r0, 8005d86 <HAL_DSI_LongWrite+0x8a>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 8005d40:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 8005d42:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 8005d46:	0223      	lsls	r3, r4, #8
 8005d48:	0224      	lsls	r4, r4, #8
 8005d4a:	b29b      	uxth	r3, r3
 8005d4c:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8005d50:	431d      	orrs	r5, r3
 8005d52:	432c      	orrs	r4, r5
 8005d54:	66d4      	str	r4, [r2, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005d56:	7430      	strb	r0, [r6, #16]

  return HAL_OK;
 8005d58:	e009      	b.n	8005d6e <HAL_DSI_LongWrite+0x72>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8005d5a:	f7ff f859 	bl	8004e10 <HAL_GetTick>
 8005d5e:	eba0 000b 	sub.w	r0, r0, fp
 8005d62:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005d66:	d9d9      	bls.n	8005d1c <HAL_DSI_LongWrite+0x20>
      return HAL_TIMEOUT;
 8005d68:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdsi);
 8005d6a:	f886 a010 	strb.w	sl, [r6, #16]
}
 8005d6e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8005d72:	f818 1003 	ldrb.w	r1, [r8, r3]
 8005d76:	3301      	adds	r3, #1
 8005d78:	ea4f 0cc3 	mov.w	ip, r3, lsl #3
 8005d7c:	fa01 f10c 	lsl.w	r1, r1, ip
 8005d80:	ea49 0901 	orr.w	r9, r9, r1
 8005d84:	e7d5      	b.n	8005d32 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8005d86:	2804      	cmp	r0, #4
    fifoword = 0U;
 8005d88:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8005d8c:	4686      	mov	lr, r0
    for (count = 0U; count < nbBytes; count++)
 8005d8e:	4661      	mov	r1, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8005d90:	bf28      	it	cs
 8005d92:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8005d96:	f813 8001 	ldrb.w	r8, [r3, r1]
 8005d9a:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8005d9e:	3101      	adds	r1, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8005da0:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 8005da4:	458e      	cmp	lr, r1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8005da6:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8005daa:	d1f4      	bne.n	8005d96 <HAL_DSI_LongWrite+0x9a>
    hdsi->Instance->GPDR = fifoword;
 8005dac:	f8c2 c070 	str.w	ip, [r2, #112]	; 0x70
    uicounter -= nbBytes;
 8005db0:	eba0 000e 	sub.w	r0, r0, lr
    pparams += nbBytes;
 8005db4:	4473      	add	r3, lr
 8005db6:	e7c2      	b.n	8005d3e <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 8005db8:	2002      	movs	r0, #2
 8005dba:	e7d8      	b.n	8005d6e <HAL_DSI_LongWrite+0x72>

08005dbc <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005dbc:	7c03      	ldrb	r3, [r0, #16]
 8005dbe:	2b01      	cmp	r3, #1
 8005dc0:	d010      	beq.n	8005de4 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 8005dc2:	6803      	ldr	r3, [r0, #0]
 8005dc4:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8005dc8:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8005dcc:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 8005dd0:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8005dd4:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 8005dd8:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005ddc:	2300      	movs	r3, #0
 8005dde:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005de0:	4618      	mov	r0, r3
 8005de2:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005de4:	2002      	movs	r0, #2
}
 8005de6:	4770      	bx	lr

08005de8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005de8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005dec:	680b      	ldr	r3, [r1, #0]
{
 8005dee:	b085      	sub	sp, #20
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005df0:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8005fb0 <HAL_GPIO_Init+0x1c8>
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005df4:	9301      	str	r3, [sp, #4]
  for(position = 0; position < GPIO_NUMBER; position++)
 8005df6:	2300      	movs	r3, #0
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8005df8:	4a6b      	ldr	r2, [pc, #428]	; (8005fa8 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8005dfa:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 8005fb4 <HAL_GPIO_Init+0x1cc>
    ioposition = ((uint32_t)0x01) << position;
 8005dfe:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005e00:	9d01      	ldr	r5, [sp, #4]
    ioposition = ((uint32_t)0x01) << position;
 8005e02:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005e04:	4025      	ands	r5, r4
    if(iocurrent == ioposition)
 8005e06:	42ac      	cmp	r4, r5
 8005e08:	f040 80b4 	bne.w	8005f74 <HAL_GPIO_Init+0x18c>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8005e0c:	684c      	ldr	r4, [r1, #4]
 8005e0e:	ea4f 0e43 	mov.w	lr, r3, lsl #1
 8005e12:	2603      	movs	r6, #3
 8005e14:	f024 0c10 	bic.w	ip, r4, #16
 8005e18:	fa06 f60e 	lsl.w	r6, r6, lr
 8005e1c:	f10c 37ff 	add.w	r7, ip, #4294967295
 8005e20:	43f6      	mvns	r6, r6
 8005e22:	2f01      	cmp	r7, #1
 8005e24:	d811      	bhi.n	8005e4a <HAL_GPIO_Init+0x62>
        temp = GPIOx->OSPEEDR; 
 8005e26:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8005e28:	ea07 0a06 	and.w	sl, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2));
 8005e2c:	68cf      	ldr	r7, [r1, #12]
 8005e2e:	fa07 f70e 	lsl.w	r7, r7, lr
 8005e32:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8005e36:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8005e38:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005e3a:	ea27 0a05 	bic.w	sl, r7, r5
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 8005e3e:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8005e42:	409f      	lsls	r7, r3
 8005e44:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8005e48:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8005e4a:	68c7      	ldr	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8005e4c:	f1bc 0f02 	cmp.w	ip, #2
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8005e50:	ea07 0a06 	and.w	sl, r7, r6
      temp |= ((GPIO_Init->Pull) << (position * 2));
 8005e54:	688f      	ldr	r7, [r1, #8]
 8005e56:	fa07 f70e 	lsl.w	r7, r7, lr
 8005e5a:	ea47 070a 	orr.w	r7, r7, sl
      GPIOx->PUPDR = temp;
 8005e5e:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8005e60:	d116      	bne.n	8005e90 <HAL_GPIO_Init+0xa8>
        temp = GPIOx->AFR[position >> 3];
 8005e62:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8005e66:	f003 0b07 	and.w	fp, r3, #7
 8005e6a:	f04f 0c0f 	mov.w	ip, #15
 8005e6e:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
 8005e72:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3];
 8005e76:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8005e7a:	fa0c fc0b 	lsl.w	ip, ip, fp
 8005e7e:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8005e82:	690f      	ldr	r7, [r1, #16]
 8005e84:	fa07 f70b 	lsl.w	r7, r7, fp
 8005e88:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3] = temp;
 8005e8c:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 8005e90:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8005e92:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8005e94:	f004 0703 	and.w	r7, r4, #3
 8005e98:	fa07 fe0e 	lsl.w	lr, r7, lr
 8005e9c:	ea4e 0606 	orr.w	r6, lr, r6
      GPIOx->MODER = temp;
 8005ea0:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8005ea2:	00e6      	lsls	r6, r4, #3
 8005ea4:	d566      	bpl.n	8005f74 <HAL_GPIO_Init+0x18c>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005ea6:	f8d8 6044 	ldr.w	r6, [r8, #68]	; 0x44
 8005eaa:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8005eae:	f003 0c03 	and.w	ip, r3, #3
 8005eb2:	f04f 0e0f 	mov.w	lr, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005eb6:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8005eba:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8005ebe:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005ec2:	f8c8 6044 	str.w	r6, [r8, #68]	; 0x44
 8005ec6:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
 8005eca:	f8d8 6044 	ldr.w	r6, [r8, #68]	; 0x44
 8005ece:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8005ed2:	9603      	str	r6, [sp, #12]
 8005ed4:	9e03      	ldr	r6, [sp, #12]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8005ed6:	fa0e f60c 	lsl.w	r6, lr, ip
        temp = SYSCFG->EXTICR[position >> 2];
 8005eda:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8005ede:	ea2a 0e06 	bic.w	lr, sl, r6
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8005ee2:	4e32      	ldr	r6, [pc, #200]	; (8005fac <HAL_GPIO_Init+0x1c4>)
 8005ee4:	42b0      	cmp	r0, r6
 8005ee6:	d04c      	beq.n	8005f82 <HAL_GPIO_Init+0x19a>
 8005ee8:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005eec:	42b0      	cmp	r0, r6
 8005eee:	d04a      	beq.n	8005f86 <HAL_GPIO_Init+0x19e>
 8005ef0:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005ef4:	42b0      	cmp	r0, r6
 8005ef6:	d048      	beq.n	8005f8a <HAL_GPIO_Init+0x1a2>
 8005ef8:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005efc:	42b0      	cmp	r0, r6
 8005efe:	d046      	beq.n	8005f8e <HAL_GPIO_Init+0x1a6>
 8005f00:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005f04:	42b0      	cmp	r0, r6
 8005f06:	d044      	beq.n	8005f92 <HAL_GPIO_Init+0x1aa>
 8005f08:	4548      	cmp	r0, r9
 8005f0a:	d044      	beq.n	8005f96 <HAL_GPIO_Init+0x1ae>
 8005f0c:	f506 6600 	add.w	r6, r6, #2048	; 0x800
 8005f10:	42b0      	cmp	r0, r6
 8005f12:	d042      	beq.n	8005f9a <HAL_GPIO_Init+0x1b2>
 8005f14:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005f18:	42b0      	cmp	r0, r6
 8005f1a:	d040      	beq.n	8005f9e <HAL_GPIO_Init+0x1b6>
 8005f1c:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005f20:	42b0      	cmp	r0, r6
 8005f22:	d03e      	beq.n	8005fa2 <HAL_GPIO_Init+0x1ba>
 8005f24:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005f28:	42b0      	cmp	r0, r6
 8005f2a:	bf14      	ite	ne
 8005f2c:	260a      	movne	r6, #10
 8005f2e:	2609      	moveq	r6, #9
 8005f30:	fa06 f60c 	lsl.w	r6, r6, ip
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8005f34:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8005f38:	ea46 060e 	orr.w	r6, r6, lr
        SYSCFG->EXTICR[position >> 2] = temp;
 8005f3c:	60be      	str	r6, [r7, #8]
        temp &= ~((uint32_t)iocurrent);
 8005f3e:	ea6f 0705 	mvn.w	r7, r5
        temp = EXTI->IMR;
 8005f42:	6816      	ldr	r6, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8005f44:	bf0c      	ite	eq
 8005f46:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 8005f48:	432e      	orrne	r6, r5
        }
        EXTI->IMR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8005f4a:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        EXTI->IMR = temp;
 8005f4e:	6016      	str	r6, [r2, #0]
        temp = EXTI->EMR;
 8005f50:	6856      	ldr	r6, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 8005f52:	bf0c      	ite	eq
 8005f54:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 8005f56:	432e      	orrne	r6, r5
        EXTI->EMR = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8005f58:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        EXTI->EMR = temp;
 8005f5c:	6056      	str	r6, [r2, #4]
        temp = EXTI->RTSR;
 8005f5e:	6896      	ldr	r6, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8005f60:	bf0c      	ite	eq
 8005f62:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 8005f64:	432e      	orrne	r6, r5
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8005f66:	02a4      	lsls	r4, r4, #10
        EXTI->RTSR = temp;
 8005f68:	6096      	str	r6, [r2, #8]
        temp = EXTI->FTSR;
 8005f6a:	68d6      	ldr	r6, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 8005f6c:	bf54      	ite	pl
 8005f6e:	403e      	andpl	r6, r7
        {
          temp |= iocurrent;
 8005f70:	432e      	orrmi	r6, r5
        }
        EXTI->FTSR = temp;
 8005f72:	60d6      	str	r6, [r2, #12]
  for(position = 0; position < GPIO_NUMBER; position++)
 8005f74:	3301      	adds	r3, #1
 8005f76:	2b10      	cmp	r3, #16
 8005f78:	f47f af41 	bne.w	8005dfe <HAL_GPIO_Init+0x16>
      }
    }
  }
}
 8005f7c:	b005      	add	sp, #20
 8005f7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8005f82:	2600      	movs	r6, #0
 8005f84:	e7d4      	b.n	8005f30 <HAL_GPIO_Init+0x148>
 8005f86:	2601      	movs	r6, #1
 8005f88:	e7d2      	b.n	8005f30 <HAL_GPIO_Init+0x148>
 8005f8a:	2602      	movs	r6, #2
 8005f8c:	e7d0      	b.n	8005f30 <HAL_GPIO_Init+0x148>
 8005f8e:	2603      	movs	r6, #3
 8005f90:	e7ce      	b.n	8005f30 <HAL_GPIO_Init+0x148>
 8005f92:	2604      	movs	r6, #4
 8005f94:	e7cc      	b.n	8005f30 <HAL_GPIO_Init+0x148>
 8005f96:	2605      	movs	r6, #5
 8005f98:	e7ca      	b.n	8005f30 <HAL_GPIO_Init+0x148>
 8005f9a:	2606      	movs	r6, #6
 8005f9c:	e7c8      	b.n	8005f30 <HAL_GPIO_Init+0x148>
 8005f9e:	2607      	movs	r6, #7
 8005fa0:	e7c6      	b.n	8005f30 <HAL_GPIO_Init+0x148>
 8005fa2:	2608      	movs	r6, #8
 8005fa4:	e7c4      	b.n	8005f30 <HAL_GPIO_Init+0x148>
 8005fa6:	bf00      	nop
 8005fa8:	40013c00 	.word	0x40013c00
 8005fac:	40020000 	.word	0x40020000
 8005fb0:	40023800 	.word	0x40023800
 8005fb4:	40021400 	.word	0x40021400

08005fb8 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8005fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8005fbc:	2200      	movs	r2, #0
      tmp = SYSCFG->EXTICR[position >> 2];
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8005fbe:	4d46      	ldr	r5, [pc, #280]	; (80060d8 <HAL_GPIO_DeInit+0x120>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 8005fc0:	f8df 911c 	ldr.w	r9, [pc, #284]	; 80060e0 <HAL_GPIO_DeInit+0x128>
 8005fc4:	f8df a11c 	ldr.w	sl, [pc, #284]	; 80060e4 <HAL_GPIO_DeInit+0x12c>
 8005fc8:	f8df b11c 	ldr.w	fp, [pc, #284]	; 80060e8 <HAL_GPIO_DeInit+0x130>
    ioposition = ((uint32_t)0x01) << position;
 8005fcc:	2301      	movs	r3, #1
 8005fce:	fa03 fe02 	lsl.w	lr, r3, r2
    iocurrent = (GPIO_Pin) & ioposition;
 8005fd2:	ea0e 0401 	and.w	r4, lr, r1
    if(iocurrent == ioposition)
 8005fd6:	45a6      	cmp	lr, r4
 8005fd8:	d167      	bne.n	80060aa <HAL_GPIO_DeInit+0xf2>
 8005fda:	f022 0603 	bic.w	r6, r2, #3
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 8005fde:	f002 0c03 	and.w	ip, r2, #3
 8005fe2:	270f      	movs	r7, #15
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 8005fe4:	4b3d      	ldr	r3, [pc, #244]	; (80060dc <HAL_GPIO_DeInit+0x124>)
 8005fe6:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 8005fea:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 8005fee:	4298      	cmp	r0, r3
 8005ff0:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 8005ff4:	fa07 f70c 	lsl.w	r7, r7, ip
      tmp = SYSCFG->EXTICR[position >> 2];
 8005ff8:	f8d6 8008 	ldr.w	r8, [r6, #8]
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 8005ffc:	ea07 0808 	and.w	r8, r7, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 8006000:	d058      	beq.n	80060b4 <HAL_GPIO_DeInit+0xfc>
 8006002:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006006:	4298      	cmp	r0, r3
 8006008:	d056      	beq.n	80060b8 <HAL_GPIO_DeInit+0x100>
 800600a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800600e:	4298      	cmp	r0, r3
 8006010:	d054      	beq.n	80060bc <HAL_GPIO_DeInit+0x104>
 8006012:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006016:	4298      	cmp	r0, r3
 8006018:	d052      	beq.n	80060c0 <HAL_GPIO_DeInit+0x108>
 800601a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800601e:	4298      	cmp	r0, r3
 8006020:	d050      	beq.n	80060c4 <HAL_GPIO_DeInit+0x10c>
 8006022:	4548      	cmp	r0, r9
 8006024:	d050      	beq.n	80060c8 <HAL_GPIO_DeInit+0x110>
 8006026:	4550      	cmp	r0, sl
 8006028:	d050      	beq.n	80060cc <HAL_GPIO_DeInit+0x114>
 800602a:	4558      	cmp	r0, fp
 800602c:	d050      	beq.n	80060d0 <HAL_GPIO_DeInit+0x118>
 800602e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8006032:	4298      	cmp	r0, r3
 8006034:	d04e      	beq.n	80060d4 <HAL_GPIO_DeInit+0x11c>
 8006036:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800603a:	4298      	cmp	r0, r3
 800603c:	bf0c      	ite	eq
 800603e:	2309      	moveq	r3, #9
 8006040:	230a      	movne	r3, #10
 8006042:	fa03 f30c 	lsl.w	r3, r3, ip
 8006046:	4543      	cmp	r3, r8
 8006048:	d110      	bne.n	800606c <HAL_GPIO_DeInit+0xb4>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800604a:	682b      	ldr	r3, [r5, #0]
 800604c:	43e4      	mvns	r4, r4
 800604e:	4023      	ands	r3, r4
 8006050:	602b      	str	r3, [r5, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8006052:	686b      	ldr	r3, [r5, #4]
 8006054:	4023      	ands	r3, r4
 8006056:	606b      	str	r3, [r5, #4]

        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8006058:	68ab      	ldr	r3, [r5, #8]
 800605a:	4023      	ands	r3, r4
 800605c:	60ab      	str	r3, [r5, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 800605e:	68eb      	ldr	r3, [r5, #12]
 8006060:	401c      	ands	r4, r3
 8006062:	60ec      	str	r4, [r5, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = ((uint32_t)0x0F) << (4 * (position & 0x03));
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
 8006064:	68b3      	ldr	r3, [r6, #8]
 8006066:	ea23 0707 	bic.w	r7, r3, r7
 800606a:	60b7      	str	r7, [r6, #8]
      }
      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 800606c:	0056      	lsls	r6, r2, #1
 800606e:	2303      	movs	r3, #3
 8006070:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8006072:	f002 0c07 	and.w	ip, r2, #7
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 8006076:	40b3      	lsls	r3, r6
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8006078:	270f      	movs	r7, #15
 800607a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 800607e:	43db      	mvns	r3, r3
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8006080:	fa07 f70c 	lsl.w	r7, r7, ip
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 8006084:	401c      	ands	r4, r3
 8006086:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8006088:	08d4      	lsrs	r4, r2, #3
 800608a:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 800608e:	6a26      	ldr	r6, [r4, #32]
 8006090:	ea26 0707 	bic.w	r7, r6, r7
 8006094:	6227      	str	r7, [r4, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8006096:	68c4      	ldr	r4, [r0, #12]
 8006098:	401c      	ands	r4, r3
 800609a:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800609c:	6844      	ldr	r4, [r0, #4]
 800609e:	ea24 040e 	bic.w	r4, r4, lr
 80060a2:	6044      	str	r4, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80060a4:	6884      	ldr	r4, [r0, #8]
 80060a6:	4023      	ands	r3, r4
 80060a8:	6083      	str	r3, [r0, #8]
  for(position = 0; position < GPIO_NUMBER; position++)
 80060aa:	3201      	adds	r2, #1
 80060ac:	2a10      	cmp	r2, #16
 80060ae:	d18d      	bne.n	8005fcc <HAL_GPIO_DeInit+0x14>
    }
  }
}
 80060b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 80060b4:	2300      	movs	r3, #0
 80060b6:	e7c4      	b.n	8006042 <HAL_GPIO_DeInit+0x8a>
 80060b8:	2301      	movs	r3, #1
 80060ba:	e7c2      	b.n	8006042 <HAL_GPIO_DeInit+0x8a>
 80060bc:	2302      	movs	r3, #2
 80060be:	e7c0      	b.n	8006042 <HAL_GPIO_DeInit+0x8a>
 80060c0:	2303      	movs	r3, #3
 80060c2:	e7be      	b.n	8006042 <HAL_GPIO_DeInit+0x8a>
 80060c4:	2304      	movs	r3, #4
 80060c6:	e7bc      	b.n	8006042 <HAL_GPIO_DeInit+0x8a>
 80060c8:	2305      	movs	r3, #5
 80060ca:	e7ba      	b.n	8006042 <HAL_GPIO_DeInit+0x8a>
 80060cc:	2306      	movs	r3, #6
 80060ce:	e7b8      	b.n	8006042 <HAL_GPIO_DeInit+0x8a>
 80060d0:	2307      	movs	r3, #7
 80060d2:	e7b6      	b.n	8006042 <HAL_GPIO_DeInit+0x8a>
 80060d4:	2308      	movs	r3, #8
 80060d6:	e7b4      	b.n	8006042 <HAL_GPIO_DeInit+0x8a>
 80060d8:	40013c00 	.word	0x40013c00
 80060dc:	40020000 	.word	0x40020000
 80060e0:	40021400 	.word	0x40021400
 80060e4:	40021800 	.word	0x40021800
 80060e8:	40021c00 	.word	0x40021c00

080060ec <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80060ec:	6903      	ldr	r3, [r0, #16]
 80060ee:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80060f0:	bf14      	ite	ne
 80060f2:	2001      	movne	r0, #1
 80060f4:	2000      	moveq	r0, #0
 80060f6:	4770      	bx	lr

080060f8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80060f8:	b10a      	cbz	r2, 80060fe <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 80060fa:	6181      	str	r1, [r0, #24]
  }
}
 80060fc:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 80060fe:	0409      	lsls	r1, r1, #16
 8006100:	e7fb      	b.n	80060fa <HAL_GPIO_WritePin+0x2>

08006102 <HAL_GPIO_TogglePin>:
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->ODR & GPIO_Pin) != 0X00u)
 8006102:	6943      	ldr	r3, [r0, #20]
 8006104:	420b      	tst	r3, r1
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8006106:	bf18      	it	ne
 8006108:	0409      	lslne	r1, r1, #16
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 800610a:	6181      	str	r1, [r0, #24]
  }
}
 800610c:	4770      	bx	lr

0800610e <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 800610e:	6803      	ldr	r3, [r0, #0]
 8006110:	699a      	ldr	r2, [r3, #24]
 8006112:	0791      	lsls	r1, r2, #30
 8006114:	d501      	bpl.n	800611a <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8006116:	2200      	movs	r2, #0
 8006118:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800611a:	699a      	ldr	r2, [r3, #24]
 800611c:	07d2      	lsls	r2, r2, #31
 800611e:	d403      	bmi.n	8006128 <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8006120:	699a      	ldr	r2, [r3, #24]
 8006122:	f042 0201 	orr.w	r2, r2, #1
 8006126:	619a      	str	r2, [r3, #24]
  }
}
 8006128:	4770      	bx	lr
	...

0800612c <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode, uint32_t Request)
{
 800612c:	b530      	push	{r4, r5, lr}
 800612e:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | I2C_CR2_START | I2C_CR2_STOP)), \
 8006130:	6804      	ldr	r4, [r0, #0]
 8006132:	ea45 4202 	orr.w	r2, r5, r2, lsl #16
 8006136:	6860      	ldr	r0, [r4, #4]
 8006138:	4313      	orrs	r3, r2
 800613a:	f3c1 0209 	ubfx	r2, r1, #0, #10
 800613e:	431a      	orrs	r2, r3
 8006140:	4b03      	ldr	r3, [pc, #12]	; (8006150 <I2C_TransferConfig+0x24>)
 8006142:	ea43 5355 	orr.w	r3, r3, r5, lsr #21
 8006146:	ea20 0003 	bic.w	r0, r0, r3
 800614a:	4302      	orrs	r2, r0
 800614c:	6062      	str	r2, [r4, #4]
             (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | (uint32_t)Mode | (uint32_t)Request));
}
 800614e:	bd30      	pop	{r4, r5, pc}
 8006150:	03ff63ff 	.word	0x03ff63ff

08006154 <I2C_IsAcknowledgeFailed>:
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006154:	6803      	ldr	r3, [r0, #0]
{
 8006156:	b570      	push	{r4, r5, r6, lr}
 8006158:	4604      	mov	r4, r0
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800615a:	6998      	ldr	r0, [r3, #24]
{
 800615c:	460d      	mov	r5, r1
 800615e:	4616      	mov	r6, r2
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006160:	f010 0010 	ands.w	r0, r0, #16
 8006164:	d116      	bne.n	8006194 <I2C_IsAcknowledgeFailed+0x40>
}
 8006166:	bd70      	pop	{r4, r5, r6, pc}
      if (Timeout != HAL_MAX_DELAY)
 8006168:	1c69      	adds	r1, r5, #1
 800616a:	d014      	beq.n	8006196 <I2C_IsAcknowledgeFailed+0x42>
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800616c:	f7fe fe50 	bl	8004e10 <HAL_GetTick>
 8006170:	1b80      	subs	r0, r0, r6
 8006172:	42a8      	cmp	r0, r5
 8006174:	d800      	bhi.n	8006178 <I2C_IsAcknowledgeFailed+0x24>
 8006176:	b96d      	cbnz	r5, 8006194 <I2C_IsAcknowledgeFailed+0x40>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006178:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800617a:	f043 0320 	orr.w	r3, r3, #32
 800617e:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8006180:	2320      	movs	r3, #32
 8006182:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006186:	2300      	movs	r3, #0
    return HAL_ERROR;
 8006188:	2001      	movs	r0, #1
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800618a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 800618e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
    return HAL_ERROR;
 8006192:	e7e8      	b.n	8006166 <I2C_IsAcknowledgeFailed+0x12>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8006194:	6823      	ldr	r3, [r4, #0]
 8006196:	6999      	ldr	r1, [r3, #24]
 8006198:	068a      	lsls	r2, r1, #26
 800619a:	d5e5      	bpl.n	8006168 <I2C_IsAcknowledgeFailed+0x14>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800619c:	2210      	movs	r2, #16
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800619e:	2520      	movs	r5, #32
    I2C_Flush_TXDR(hi2c);
 80061a0:	4620      	mov	r0, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80061a2:	61da      	str	r2, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80061a4:	61dd      	str	r5, [r3, #28]
    I2C_Flush_TXDR(hi2c);
 80061a6:	f7ff ffb2 	bl	800610e <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 80061aa:	6822      	ldr	r2, [r4, #0]
 80061ac:	6853      	ldr	r3, [r2, #4]
 80061ae:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
 80061b2:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
 80061b6:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 80061ba:	f023 0301 	bic.w	r3, r3, #1
 80061be:	6053      	str	r3, [r2, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 80061c0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80061c2:	f043 0304 	orr.w	r3, r3, #4
 80061c6:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 80061c8:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
 80061cc:	e7db      	b.n	8006186 <I2C_IsAcknowledgeFailed+0x32>

080061ce <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 80061ce:	b570      	push	{r4, r5, r6, lr}
 80061d0:	4604      	mov	r4, r0
 80061d2:	460d      	mov	r5, r1
 80061d4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80061d6:	6823      	ldr	r3, [r4, #0]
 80061d8:	699b      	ldr	r3, [r3, #24]
 80061da:	069b      	lsls	r3, r3, #26
 80061dc:	d501      	bpl.n	80061e2 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 80061de:	2000      	movs	r0, #0
}
 80061e0:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 80061e2:	4632      	mov	r2, r6
 80061e4:	4629      	mov	r1, r5
 80061e6:	4620      	mov	r0, r4
 80061e8:	f7ff ffb4 	bl	8006154 <I2C_IsAcknowledgeFailed>
 80061ec:	b990      	cbnz	r0, 8006214 <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80061ee:	f7fe fe0f 	bl	8004e10 <HAL_GetTick>
 80061f2:	1b80      	subs	r0, r0, r6
 80061f4:	42a8      	cmp	r0, r5
 80061f6:	d801      	bhi.n	80061fc <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 80061f8:	2d00      	cmp	r5, #0
 80061fa:	d1ec      	bne.n	80061d6 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80061fc:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80061fe:	f043 0320 	orr.w	r3, r3, #32
 8006202:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8006204:	2320      	movs	r3, #32
 8006206:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800620a:	2300      	movs	r3, #0
 800620c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          __HAL_UNLOCK(hi2c);
 8006210:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006214:	2001      	movs	r0, #1
 8006216:	e7e3      	b.n	80061e0 <I2C_WaitOnSTOPFlagUntilTimeout+0x12>

08006218 <I2C_WaitOnFlagUntilTimeout>:
{
 8006218:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800621c:	9f06      	ldr	r7, [sp, #24]
 800621e:	4604      	mov	r4, r0
 8006220:	4688      	mov	r8, r1
 8006222:	4616      	mov	r6, r2
 8006224:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006226:	6822      	ldr	r2, [r4, #0]
 8006228:	6993      	ldr	r3, [r2, #24]
 800622a:	ea38 0303 	bics.w	r3, r8, r3
 800622e:	bf0c      	ite	eq
 8006230:	2301      	moveq	r3, #1
 8006232:	2300      	movne	r3, #0
 8006234:	42b3      	cmp	r3, r6
 8006236:	d001      	beq.n	800623c <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 8006238:	2000      	movs	r0, #0
 800623a:	e015      	b.n	8006268 <I2C_WaitOnFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 800623c:	1c6b      	adds	r3, r5, #1
 800623e:	d0f3      	beq.n	8006228 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006240:	f7fe fde6 	bl	8004e10 <HAL_GetTick>
 8006244:	1bc0      	subs	r0, r0, r7
 8006246:	42a8      	cmp	r0, r5
 8006248:	d801      	bhi.n	800624e <I2C_WaitOnFlagUntilTimeout+0x36>
 800624a:	2d00      	cmp	r5, #0
 800624c:	d1eb      	bne.n	8006226 <I2C_WaitOnFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800624e:	6c63      	ldr	r3, [r4, #68]	; 0x44
          __HAL_UNLOCK(hi2c);
 8006250:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006252:	f043 0320 	orr.w	r3, r3, #32
 8006256:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8006258:	2320      	movs	r3, #32
 800625a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800625e:	2300      	movs	r3, #0
 8006260:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          __HAL_UNLOCK(hi2c);
 8006264:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006268:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800626c <I2C_WaitOnTXISFlagUntilTimeout>:
{
 800626c:	b570      	push	{r4, r5, r6, lr}
 800626e:	4604      	mov	r4, r0
 8006270:	460d      	mov	r5, r1
 8006272:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8006274:	6823      	ldr	r3, [r4, #0]
 8006276:	699b      	ldr	r3, [r3, #24]
 8006278:	079b      	lsls	r3, r3, #30
 800627a:	d501      	bpl.n	8006280 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 800627c:	2000      	movs	r0, #0
}
 800627e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 8006280:	4632      	mov	r2, r6
 8006282:	4629      	mov	r1, r5
 8006284:	4620      	mov	r0, r4
 8006286:	f7ff ff65 	bl	8006154 <I2C_IsAcknowledgeFailed>
 800628a:	b9a0      	cbnz	r0, 80062b6 <I2C_WaitOnTXISFlagUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800628c:	1c6a      	adds	r2, r5, #1
 800628e:	d0f1      	beq.n	8006274 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006290:	f7fe fdbe 	bl	8004e10 <HAL_GetTick>
 8006294:	1b80      	subs	r0, r0, r6
 8006296:	42a8      	cmp	r0, r5
 8006298:	d801      	bhi.n	800629e <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 800629a:	2d00      	cmp	r5, #0
 800629c:	d1ea      	bne.n	8006274 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800629e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80062a0:	f043 0320 	orr.w	r3, r3, #32
 80062a4:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 80062a6:	2320      	movs	r3, #32
 80062a8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 80062ac:	2300      	movs	r3, #0
 80062ae:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          __HAL_UNLOCK(hi2c);
 80062b2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 80062b6:	2001      	movs	r0, #1
 80062b8:	e7e1      	b.n	800627e <I2C_WaitOnTXISFlagUntilTimeout+0x12>
	...

080062bc <I2C_RequestMemoryWrite>:
{
 80062bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80062be:	461f      	mov	r7, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80062c0:	4b16      	ldr	r3, [pc, #88]	; (800631c <I2C_RequestMemoryWrite+0x60>)
{
 80062c2:	4605      	mov	r5, r0
 80062c4:	9e09      	ldr	r6, [sp, #36]	; 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80062c6:	9300      	str	r3, [sp, #0]
{
 80062c8:	4614      	mov	r4, r2
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80062ca:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80062ce:	b2fa      	uxtb	r2, r7
 80062d0:	f7ff ff2c 	bl	800612c <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80062d4:	4632      	mov	r2, r6
 80062d6:	9908      	ldr	r1, [sp, #32]
 80062d8:	4628      	mov	r0, r5
 80062da:	f7ff ffc7 	bl	800626c <I2C_WaitOnTXISFlagUntilTimeout>
 80062de:	b110      	cbz	r0, 80062e6 <I2C_RequestMemoryWrite+0x2a>
    return HAL_ERROR;
 80062e0:	2001      	movs	r0, #1
}
 80062e2:	b003      	add	sp, #12
 80062e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80062e6:	2f01      	cmp	r7, #1
 80062e8:	682b      	ldr	r3, [r5, #0]
 80062ea:	d10c      	bne.n	8006306 <I2C_RequestMemoryWrite+0x4a>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80062ec:	b2e4      	uxtb	r4, r4
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 80062ee:	2200      	movs	r2, #0
 80062f0:	2180      	movs	r1, #128	; 0x80
 80062f2:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80062f4:	629c      	str	r4, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 80062f6:	9b08      	ldr	r3, [sp, #32]
 80062f8:	9600      	str	r6, [sp, #0]
 80062fa:	f7ff ff8d 	bl	8006218 <I2C_WaitOnFlagUntilTimeout>
    return HAL_ERROR;
 80062fe:	3000      	adds	r0, #0
 8006300:	bf18      	it	ne
 8006302:	2001      	movne	r0, #1
 8006304:	e7ed      	b.n	80062e2 <I2C_RequestMemoryWrite+0x26>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8006306:	0a22      	lsrs	r2, r4, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006308:	9908      	ldr	r1, [sp, #32]
 800630a:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800630c:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800630e:	4632      	mov	r2, r6
 8006310:	f7ff ffac 	bl	800626c <I2C_WaitOnTXISFlagUntilTimeout>
 8006314:	2800      	cmp	r0, #0
 8006316:	d1e3      	bne.n	80062e0 <I2C_RequestMemoryWrite+0x24>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006318:	682b      	ldr	r3, [r5, #0]
 800631a:	e7e7      	b.n	80062ec <I2C_RequestMemoryWrite+0x30>
 800631c:	80002000 	.word	0x80002000

08006320 <I2C_RequestMemoryRead>:
{
 8006320:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006322:	461f      	mov	r7, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8006324:	4b16      	ldr	r3, [pc, #88]	; (8006380 <I2C_RequestMemoryRead+0x60>)
{
 8006326:	4605      	mov	r5, r0
 8006328:	9e09      	ldr	r6, [sp, #36]	; 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800632a:	9300      	str	r3, [sp, #0]
{
 800632c:	4614      	mov	r4, r2
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800632e:	2300      	movs	r3, #0
 8006330:	b2fa      	uxtb	r2, r7
 8006332:	f7ff fefb 	bl	800612c <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006336:	4632      	mov	r2, r6
 8006338:	9908      	ldr	r1, [sp, #32]
 800633a:	4628      	mov	r0, r5
 800633c:	f7ff ff96 	bl	800626c <I2C_WaitOnTXISFlagUntilTimeout>
 8006340:	b110      	cbz	r0, 8006348 <I2C_RequestMemoryRead+0x28>
    return HAL_ERROR;
 8006342:	2001      	movs	r0, #1
}
 8006344:	b003      	add	sp, #12
 8006346:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006348:	2f01      	cmp	r7, #1
 800634a:	682b      	ldr	r3, [r5, #0]
 800634c:	d10c      	bne.n	8006368 <I2C_RequestMemoryRead+0x48>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800634e:	b2e4      	uxtb	r4, r4
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8006350:	2200      	movs	r2, #0
 8006352:	2140      	movs	r1, #64	; 0x40
 8006354:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006356:	629c      	str	r4, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8006358:	9b08      	ldr	r3, [sp, #32]
 800635a:	9600      	str	r6, [sp, #0]
 800635c:	f7ff ff5c 	bl	8006218 <I2C_WaitOnFlagUntilTimeout>
    return HAL_ERROR;
 8006360:	3000      	adds	r0, #0
 8006362:	bf18      	it	ne
 8006364:	2001      	movne	r0, #1
 8006366:	e7ed      	b.n	8006344 <I2C_RequestMemoryRead+0x24>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8006368:	0a22      	lsrs	r2, r4, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800636a:	9908      	ldr	r1, [sp, #32]
 800636c:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800636e:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006370:	4632      	mov	r2, r6
 8006372:	f7ff ff7b 	bl	800626c <I2C_WaitOnTXISFlagUntilTimeout>
 8006376:	2800      	cmp	r0, #0
 8006378:	d1e3      	bne.n	8006342 <I2C_RequestMemoryRead+0x22>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800637a:	682b      	ldr	r3, [r5, #0]
 800637c:	e7e7      	b.n	800634e <I2C_RequestMemoryRead+0x2e>
 800637e:	bf00      	nop
 8006380:	80002000 	.word	0x80002000

08006384 <HAL_I2C_Init>:
{
 8006384:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8006386:	4604      	mov	r4, r0
 8006388:	2800      	cmp	r0, #0
 800638a:	d04a      	beq.n	8006422 <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800638c:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8006390:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006394:	b91b      	cbnz	r3, 800639e <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8006396:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
 800639a:	f7fb fa31 	bl	8001800 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800639e:	2324      	movs	r3, #36	; 0x24
 80063a0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 80063a4:	6823      	ldr	r3, [r4, #0]
 80063a6:	681a      	ldr	r2, [r3, #0]
 80063a8:	f022 0201 	bic.w	r2, r2, #1
 80063ac:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 80063ae:	6862      	ldr	r2, [r4, #4]
 80063b0:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80063b4:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 80063b6:	689a      	ldr	r2, [r3, #8]
 80063b8:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80063bc:	609a      	str	r2, [r3, #8]
 80063be:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 80063c2:	2901      	cmp	r1, #1
 80063c4:	d124      	bne.n	8006410 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80063c6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80063ca:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80063cc:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80063ce:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80063d0:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 80063d4:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80063d8:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80063da:	68da      	ldr	r2, [r3, #12]
 80063dc:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80063e0:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 80063e2:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 80063e6:	430a      	orrs	r2, r1
 80063e8:	69a1      	ldr	r1, [r4, #24]
 80063ea:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80063ee:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 80063f0:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 80063f4:	430a      	orrs	r2, r1
 80063f6:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 80063f8:	681a      	ldr	r2, [r3, #0]
 80063fa:	f042 0201 	orr.w	r2, r2, #1
 80063fe:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8006400:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006402:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8006404:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8006408:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800640a:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 800640e:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8006410:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8006414:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8006416:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8006418:	d1d8      	bne.n	80063cc <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 800641a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800641e:	605a      	str	r2, [r3, #4]
 8006420:	e7d4      	b.n	80063cc <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 8006422:	2001      	movs	r0, #1
 8006424:	e7f3      	b.n	800640e <HAL_I2C_Init+0x8a>

08006426 <HAL_I2C_DeInit>:
{
 8006426:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8006428:	4604      	mov	r4, r0
 800642a:	b198      	cbz	r0, 8006454 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800642c:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800642e:	2324      	movs	r3, #36	; 0x24
 8006430:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8006434:	6813      	ldr	r3, [r2, #0]
 8006436:	f023 0301 	bic.w	r3, r3, #1
 800643a:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800643c:	f7fb fa34 	bl	80018a8 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006440:	2000      	movs	r0, #0
 8006442:	6460      	str	r0, [r4, #68]	; 0x44
  __HAL_UNLOCK(hi2c);
 8006444:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 8006448:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 800644c:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800644e:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 8006452:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006454:	2001      	movs	r0, #1
 8006456:	e7fc      	b.n	8006452 <HAL_I2C_DeInit+0x2c>

08006458 <HAL_I2C_Mem_Write>:
{
 8006458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800645c:	469b      	mov	fp, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 800645e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
 8006462:	b085      	sub	sp, #20
 8006464:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006466:	2b20      	cmp	r3, #32
{
 8006468:	460f      	mov	r7, r1
 800646a:	9203      	str	r2, [sp, #12]
 800646c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8006470:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006474:	f040 80a2 	bne.w	80065bc <HAL_I2C_Mem_Write+0x164>
    if ((pData == NULL) || (Size == 0U))
 8006478:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800647a:	b113      	cbz	r3, 8006482 <HAL_I2C_Mem_Write+0x2a>
 800647c:	f1ba 0f00 	cmp.w	sl, #0
 8006480:	d106      	bne.n	8006490 <HAL_I2C_Mem_Write+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8006482:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006486:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 8006488:	2001      	movs	r0, #1
}
 800648a:	b005      	add	sp, #20
 800648c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8006490:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8006494:	2b01      	cmp	r3, #1
 8006496:	f000 8091 	beq.w	80065bc <HAL_I2C_Mem_Write+0x164>
 800649a:	2501      	movs	r5, #1
 800649c:	f880 5040 	strb.w	r5, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 80064a0:	f7fe fcb6 	bl	8004e10 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80064a4:	2319      	movs	r3, #25
 80064a6:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 80064a8:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80064aa:	462a      	mov	r2, r5
 80064ac:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80064b0:	4620      	mov	r0, r4
 80064b2:	f7ff feb1 	bl	8006218 <I2C_WaitOnFlagUntilTimeout>
 80064b6:	4681      	mov	r9, r0
 80064b8:	2800      	cmp	r0, #0
 80064ba:	d1e5      	bne.n	8006488 <HAL_I2C_Mem_Write+0x30>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80064bc:	2321      	movs	r3, #33	; 0x21
    hi2c->XferISR   = NULL;
 80064be:	6360      	str	r0, [r4, #52]	; 0x34
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80064c0:	9a03      	ldr	r2, [sp, #12]
 80064c2:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80064c4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80064c8:	2340      	movs	r3, #64	; 0x40
 80064ca:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 80064ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80064d0:	6460      	str	r0, [r4, #68]	; 0x44
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80064d2:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 80064d4:	6263      	str	r3, [r4, #36]	; 0x24
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80064d6:	465b      	mov	r3, fp
    hi2c->XferCount = Size;
 80064d8:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80064dc:	e9cd 8600 	strd	r8, r6, [sp]
 80064e0:	f7ff feec 	bl	80062bc <I2C_RequestMemoryWrite>
 80064e4:	b110      	cbz	r0, 80064ec <HAL_I2C_Mem_Write+0x94>
      __HAL_UNLOCK(hi2c);
 80064e6:	f884 9040 	strb.w	r9, [r4, #64]	; 0x40
 80064ea:	e7cd      	b.n	8006488 <HAL_I2C_Mem_Write+0x30>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80064ec:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80064ee:	2bff      	cmp	r3, #255	; 0xff
 80064f0:	d954      	bls.n	800659c <HAL_I2C_Mem_Write+0x144>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80064f2:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 80064f4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80064f8:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80064fa:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80064fc:	4639      	mov	r1, r7
 80064fe:	4620      	mov	r0, r4
 8006500:	f7ff fe14 	bl	800612c <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006504:	4632      	mov	r2, r6
 8006506:	4641      	mov	r1, r8
 8006508:	4620      	mov	r0, r4
 800650a:	f7ff feaf 	bl	800626c <I2C_WaitOnTXISFlagUntilTimeout>
 800650e:	2800      	cmp	r0, #0
 8006510:	d1ba      	bne.n	8006488 <HAL_I2C_Mem_Write+0x30>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8006512:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006514:	6822      	ldr	r2, [r4, #0]
 8006516:	f813 1b01 	ldrb.w	r1, [r3], #1
 800651a:	6291      	str	r1, [r2, #40]	; 0x28
      hi2c->pBuffPtr++;
 800651c:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800651e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006520:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006522:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8006524:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 8006526:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8006528:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 800652a:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800652c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800652e:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8006530:	b29b      	uxth	r3, r3
 8006532:	b1a3      	cbz	r3, 800655e <HAL_I2C_Mem_Write+0x106>
 8006534:	b99a      	cbnz	r2, 800655e <HAL_I2C_Mem_Write+0x106>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8006536:	9600      	str	r6, [sp, #0]
 8006538:	4643      	mov	r3, r8
 800653a:	2180      	movs	r1, #128	; 0x80
 800653c:	4620      	mov	r0, r4
 800653e:	f7ff fe6b 	bl	8006218 <I2C_WaitOnFlagUntilTimeout>
 8006542:	2800      	cmp	r0, #0
 8006544:	d1a0      	bne.n	8006488 <HAL_I2C_Mem_Write+0x30>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8006546:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006548:	2bff      	cmp	r3, #255	; 0xff
 800654a:	d92f      	bls.n	80065ac <HAL_I2C_Mem_Write+0x154>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800654c:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 800654e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8006552:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8006554:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8006556:	4639      	mov	r1, r7
 8006558:	4620      	mov	r0, r4
 800655a:	f7ff fde7 	bl	800612c <I2C_TransferConfig>
    while (hi2c->XferCount > 0U);
 800655e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006560:	b29b      	uxth	r3, r3
 8006562:	2b00      	cmp	r3, #0
 8006564:	d1ce      	bne.n	8006504 <HAL_I2C_Mem_Write+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006566:	4632      	mov	r2, r6
 8006568:	4641      	mov	r1, r8
 800656a:	4620      	mov	r0, r4
 800656c:	f7ff fe2f 	bl	80061ce <I2C_WaitOnSTOPFlagUntilTimeout>
 8006570:	2800      	cmp	r0, #0
 8006572:	d189      	bne.n	8006488 <HAL_I2C_Mem_Write+0x30>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006574:	6823      	ldr	r3, [r4, #0]
 8006576:	2120      	movs	r1, #32
 8006578:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 800657a:	685a      	ldr	r2, [r3, #4]
 800657c:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 8006580:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8006584:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8006588:	f022 0201 	bic.w	r2, r2, #1
 800658c:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800658e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8006592:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8006596:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 800659a:	e776      	b.n	800648a <HAL_I2C_Mem_Write+0x32>
      hi2c->XferSize = hi2c->XferCount;
 800659c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800659e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80065a2:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = hi2c->XferCount;
 80065a4:	b292      	uxth	r2, r2
 80065a6:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80065a8:	b2d2      	uxtb	r2, r2
 80065aa:	e7a7      	b.n	80064fc <HAL_I2C_Mem_Write+0xa4>
          hi2c->XferSize = hi2c->XferCount;
 80065ac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80065ae:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80065b2:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 80065b4:	b292      	uxth	r2, r2
 80065b6:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80065b8:	b2d2      	uxtb	r2, r2
 80065ba:	e7cc      	b.n	8006556 <HAL_I2C_Mem_Write+0xfe>
    return HAL_BUSY;
 80065bc:	2002      	movs	r0, #2
 80065be:	e764      	b.n	800648a <HAL_I2C_Mem_Write+0x32>

080065c0 <HAL_I2C_Mem_Read>:
{
 80065c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80065c4:	469b      	mov	fp, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 80065c6:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
 80065ca:	b085      	sub	sp, #20
 80065cc:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80065ce:	2b20      	cmp	r3, #32
{
 80065d0:	460f      	mov	r7, r1
 80065d2:	9203      	str	r2, [sp, #12]
 80065d4:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80065d8:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
  if (hi2c->State == HAL_I2C_STATE_READY)
 80065dc:	f040 80a6 	bne.w	800672c <HAL_I2C_Mem_Read+0x16c>
    if ((pData == NULL) || (Size == 0U))
 80065e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80065e2:	b113      	cbz	r3, 80065ea <HAL_I2C_Mem_Read+0x2a>
 80065e4:	f1ba 0f00 	cmp.w	sl, #0
 80065e8:	d106      	bne.n	80065f8 <HAL_I2C_Mem_Read+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80065ea:	f44f 7300 	mov.w	r3, #512	; 0x200
 80065ee:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 80065f0:	2001      	movs	r0, #1
}
 80065f2:	b005      	add	sp, #20
 80065f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 80065f8:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 80065fc:	2b01      	cmp	r3, #1
 80065fe:	f000 8095 	beq.w	800672c <HAL_I2C_Mem_Read+0x16c>
 8006602:	2501      	movs	r5, #1
 8006604:	f880 5040 	strb.w	r5, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8006608:	f7fe fc02 	bl	8004e10 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800660c:	2319      	movs	r3, #25
 800660e:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8006610:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8006612:	462a      	mov	r2, r5
 8006614:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8006618:	4620      	mov	r0, r4
 800661a:	f7ff fdfd 	bl	8006218 <I2C_WaitOnFlagUntilTimeout>
 800661e:	4681      	mov	r9, r0
 8006620:	2800      	cmp	r0, #0
 8006622:	d1e5      	bne.n	80065f0 <HAL_I2C_Mem_Read+0x30>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006624:	2322      	movs	r3, #34	; 0x22
    hi2c->XferISR   = NULL;
 8006626:	6360      	str	r0, [r4, #52]	; 0x34
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006628:	9a03      	ldr	r2, [sp, #12]
 800662a:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800662c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006630:	2340      	movs	r3, #64	; 0x40
 8006632:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 8006636:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006638:	6460      	str	r0, [r4, #68]	; 0x44
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800663a:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 800663c:	6263      	str	r3, [r4, #36]	; 0x24
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800663e:	465b      	mov	r3, fp
    hi2c->XferCount = Size;
 8006640:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006644:	e9cd 8600 	strd	r8, r6, [sp]
 8006648:	f7ff fe6a 	bl	8006320 <I2C_RequestMemoryRead>
 800664c:	b110      	cbz	r0, 8006654 <HAL_I2C_Mem_Read+0x94>
      __HAL_UNLOCK(hi2c);
 800664e:	f884 9040 	strb.w	r9, [r4, #64]	; 0x40
 8006652:	e7cd      	b.n	80065f0 <HAL_I2C_Mem_Read+0x30>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8006654:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006656:	2bff      	cmp	r3, #255	; 0xff
 8006658:	4b35      	ldr	r3, [pc, #212]	; (8006730 <HAL_I2C_Mem_Read+0x170>)
 800665a:	d957      	bls.n	800670c <HAL_I2C_Mem_Read+0x14c>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 800665c:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ);
 800665e:	9300      	str	r3, [sp, #0]
 8006660:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8006664:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_READ);
 8006666:	4639      	mov	r1, r7
 8006668:	4620      	mov	r0, r4
 800666a:	f7ff fd5f 	bl	800612c <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 800666e:	9600      	str	r6, [sp, #0]
 8006670:	4643      	mov	r3, r8
 8006672:	2200      	movs	r2, #0
 8006674:	2104      	movs	r1, #4
 8006676:	4620      	mov	r0, r4
 8006678:	f7ff fdce 	bl	8006218 <I2C_WaitOnFlagUntilTimeout>
 800667c:	2800      	cmp	r0, #0
 800667e:	d1b7      	bne.n	80065f0 <HAL_I2C_Mem_Read+0x30>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8006680:	6823      	ldr	r3, [r4, #0]
 8006682:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006684:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006686:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8006688:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800668a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->pBuffPtr++;
 800668c:	3301      	adds	r3, #1
      hi2c->XferSize--;
 800668e:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 8006690:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006692:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006694:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8006696:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8006698:	8522      	strh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800669a:	b29b      	uxth	r3, r3
 800669c:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800669e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80066a0:	b29b      	uxth	r3, r3
 80066a2:	b1a3      	cbz	r3, 80066ce <HAL_I2C_Mem_Read+0x10e>
 80066a4:	b99a      	cbnz	r2, 80066ce <HAL_I2C_Mem_Read+0x10e>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80066a6:	9600      	str	r6, [sp, #0]
 80066a8:	4643      	mov	r3, r8
 80066aa:	2180      	movs	r1, #128	; 0x80
 80066ac:	4620      	mov	r0, r4
 80066ae:	f7ff fdb3 	bl	8006218 <I2C_WaitOnFlagUntilTimeout>
 80066b2:	2800      	cmp	r0, #0
 80066b4:	d19c      	bne.n	80065f0 <HAL_I2C_Mem_Read+0x30>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80066b6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80066b8:	2bff      	cmp	r3, #255	; 0xff
 80066ba:	d92f      	bls.n	800671c <HAL_I2C_Mem_Read+0x15c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80066bc:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 80066be:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80066c2:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80066c4:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80066c6:	4639      	mov	r1, r7
 80066c8:	4620      	mov	r0, r4
 80066ca:	f7ff fd2f 	bl	800612c <I2C_TransferConfig>
    while (hi2c->XferCount > 0U);
 80066ce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80066d0:	b29b      	uxth	r3, r3
 80066d2:	2b00      	cmp	r3, #0
 80066d4:	d1cb      	bne.n	800666e <HAL_I2C_Mem_Read+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80066d6:	4632      	mov	r2, r6
 80066d8:	4641      	mov	r1, r8
 80066da:	4620      	mov	r0, r4
 80066dc:	f7ff fd77 	bl	80061ce <I2C_WaitOnSTOPFlagUntilTimeout>
 80066e0:	2800      	cmp	r0, #0
 80066e2:	d185      	bne.n	80065f0 <HAL_I2C_Mem_Read+0x30>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80066e4:	6823      	ldr	r3, [r4, #0]
 80066e6:	2120      	movs	r1, #32
 80066e8:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80066ea:	685a      	ldr	r2, [r3, #4]
 80066ec:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 80066f0:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 80066f4:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 80066f8:	f022 0201 	bic.w	r2, r2, #1
 80066fc:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80066fe:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8006702:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8006706:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 800670a:	e772      	b.n	80065f2 <HAL_I2C_Mem_Read+0x32>
      hi2c->XferSize = hi2c->XferCount;
 800670c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_READ);
 800670e:	9300      	str	r3, [sp, #0]
 8006710:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 8006714:	b292      	uxth	r2, r2
 8006716:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_READ);
 8006718:	b2d2      	uxtb	r2, r2
 800671a:	e7a4      	b.n	8006666 <HAL_I2C_Mem_Read+0xa6>
          hi2c->XferSize = hi2c->XferCount;
 800671c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800671e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8006722:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 8006724:	b292      	uxth	r2, r2
 8006726:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8006728:	b2d2      	uxtb	r2, r2
 800672a:	e7cc      	b.n	80066c6 <HAL_I2C_Mem_Read+0x106>
    return HAL_BUSY;
 800672c:	2002      	movs	r0, #2
 800672e:	e760      	b.n	80065f2 <HAL_I2C_Mem_Read+0x32>
 8006730:	80002400 	.word	0x80002400

08006734 <HAL_I2C_EV_IRQHandler>:
  uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 8006734:	6802      	ldr	r2, [r0, #0]
  if (hi2c->XferISR != NULL)
 8006736:	6b43      	ldr	r3, [r0, #52]	; 0x34
  uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 8006738:	6991      	ldr	r1, [r2, #24]
  uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 800673a:	6812      	ldr	r2, [r2, #0]
  if (hi2c->XferISR != NULL)
 800673c:	b103      	cbz	r3, 8006740 <HAL_I2C_EV_IRQHandler+0xc>
    hi2c->XferISR(hi2c, itflags, itsources);
 800673e:	4718      	bx	r3
}
 8006740:	4770      	bx	lr

08006742 <HAL_I2C_GetState>:
  return hi2c->State;
 8006742:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
 8006746:	4770      	bx	lr

08006748 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006748:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
 800674c:	b2d2      	uxtb	r2, r2
 800674e:	2a20      	cmp	r2, #32
{
 8006750:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006752:	d11d      	bne.n	8006790 <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8006754:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8006758:	2b01      	cmp	r3, #1
 800675a:	d019      	beq.n	8006790 <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 800675c:	2324      	movs	r3, #36	; 0x24
 800675e:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006762:	6803      	ldr	r3, [r0, #0]
 8006764:	681c      	ldr	r4, [r3, #0]
 8006766:	f024 0401 	bic.w	r4, r4, #1
 800676a:	601c      	str	r4, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 800676c:	681c      	ldr	r4, [r3, #0]
 800676e:	f424 5480 	bic.w	r4, r4, #4096	; 0x1000
 8006772:	601c      	str	r4, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8006774:	681c      	ldr	r4, [r3, #0]
 8006776:	4321      	orrs	r1, r4
 8006778:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 800677a:	6819      	ldr	r1, [r3, #0]
 800677c:	f041 0101 	orr.w	r1, r1, #1
 8006780:	6019      	str	r1, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006782:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8006784:	f880 2041 	strb.w	r2, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8006788:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 800678c:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 800678e:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8006790:	2002      	movs	r0, #2
 8006792:	e7fc      	b.n	800678e <HAL_I2CEx_ConfigAnalogFilter+0x46>

08006794 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8006794:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006796:	f890 4041 	ldrb.w	r4, [r0, #65]	; 0x41
 800679a:	b2e4      	uxtb	r4, r4
 800679c:	2c20      	cmp	r4, #32
 800679e:	d11c      	bne.n	80067da <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80067a0:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 80067a4:	2b01      	cmp	r3, #1
 80067a6:	d018      	beq.n	80067da <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80067a8:	2324      	movs	r3, #36	; 0x24
 80067aa:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80067ae:	6803      	ldr	r3, [r0, #0]
 80067b0:	681a      	ldr	r2, [r3, #0]
 80067b2:	f022 0201 	bic.w	r2, r2, #1
 80067b6:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 80067b8:	681a      	ldr	r2, [r3, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 80067ba:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 80067be:	ea42 2101 	orr.w	r1, r2, r1, lsl #8

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 80067c2:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 80067c4:	681a      	ldr	r2, [r3, #0]
 80067c6:	f042 0201 	orr.w	r2, r2, #1
 80067ca:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80067cc:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 80067ce:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 80067d2:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 80067d6:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 80067d8:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80067da:	2002      	movs	r0, #2
 80067dc:	e7fc      	b.n	80067d8 <HAL_I2CEx_ConfigDigitalFilter+0x44>

080067de <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80067de:	01d2      	lsls	r2, r2, #7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80067e0:	f8d1 c000 	ldr.w	ip, [r1]
{
 80067e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80067e8:	3284      	adds	r2, #132	; 0x84
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80067ea:	6804      	ldr	r4, [r0, #0]
 80067ec:	684f      	ldr	r7, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80067ee:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80067f2:	18a3      	adds	r3, r4, r2
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80067f4:	68e5      	ldr	r5, [r4, #12]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80067f6:	f04f 0e00 	mov.w	lr, #0
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80067fa:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80067fe:	6858      	ldr	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006800:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006804:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006808:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800680a:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800680c:	68e0      	ldr	r0, [r4, #12]
 800680e:	f3c0 400b 	ubfx	r0, r0, #16, #12
 8006812:	4430      	add	r0, r6
 8006814:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006818:	68cd      	ldr	r5, [r1, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800681a:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800681c:	68e0      	ldr	r0, [r4, #12]
 800681e:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8006822:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006824:	6898      	ldr	r0, [r3, #8]
 8006826:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800682a:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800682c:	6888      	ldr	r0, [r1, #8]
 800682e:	68e6      	ldr	r6, [r4, #12]
 8006830:	3001      	adds	r0, #1
 8006832:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8006836:	4430      	add	r0, r6
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006838:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800683a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800683e:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006840:	6918      	ldr	r0, [r3, #16]
 8006842:	f020 0007 	bic.w	r0, r0, #7
 8006846:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006848:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800684a:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800684c:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006850:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006854:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8006858:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800685c:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006860:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8006864:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8006868:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800686a:	6958      	ldr	r0, [r3, #20]
 800686c:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 8006870:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006872:	6948      	ldr	r0, [r1, #20]
 8006874:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006876:	69d8      	ldr	r0, [r3, #28]
 8006878:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 800687c:	f020 0007 	bic.w	r0, r0, #7
 8006880:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006882:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 8006886:	4305      	orrs	r5, r0
 8006888:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800688a:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800688c:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800688e:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006892:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006894:	b31e      	cbz	r6, 80068de <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006896:	2e01      	cmp	r6, #1
 8006898:	d023      	beq.n	80068e2 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800689a:	1eb0      	subs	r0, r6, #2
 800689c:	2802      	cmp	r0, #2
 800689e:	d922      	bls.n	80068e6 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80068a0:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80068a2:	bf0c      	ite	eq
 80068a4:	2002      	moveq	r0, #2
 80068a6:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80068a8:	6add      	ldr	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80068aa:	eba7 070c 	sub.w	r7, r7, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80068ae:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 80068b2:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80068b4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80068b6:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80068b8:	4345      	muls	r5, r0
 80068ba:	4378      	muls	r0, r7
 80068bc:	3003      	adds	r0, #3
 80068be:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80068c2:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80068c4:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80068c6:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 80068ca:	f020 0007 	bic.w	r0, r0, #7
 80068ce:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80068d0:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80068d2:	58a3      	ldr	r3, [r4, r2]
 80068d4:	f043 0301 	orr.w	r3, r3, #1
 80068d8:	50a3      	str	r3, [r4, r2]
}
 80068da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80068de:	2004      	movs	r0, #4
 80068e0:	e7e2      	b.n	80068a8 <LTDC_SetConfig+0xca>
    tmp = 3U;
 80068e2:	2003      	movs	r0, #3
 80068e4:	e7e0      	b.n	80068a8 <LTDC_SetConfig+0xca>
    tmp = 2U;
 80068e6:	2002      	movs	r0, #2
 80068e8:	e7de      	b.n	80068a8 <LTDC_SetConfig+0xca>
	...

080068ec <HAL_LTDC_Init>:
{
 80068ec:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80068ee:	4604      	mov	r4, r0
 80068f0:	2800      	cmp	r0, #0
 80068f2:	d063      	beq.n	80069bc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80068f4:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80068f8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80068fc:	b91b      	cbnz	r3, 8006906 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80068fe:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006902:	f7fa fff3 	bl	80018ec <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006906:	2302      	movs	r3, #2
 8006908:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800690c:	6823      	ldr	r3, [r4, #0]
 800690e:	699a      	ldr	r2, [r3, #24]
 8006910:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8006914:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006916:	6999      	ldr	r1, [r3, #24]
 8006918:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800691c:	4302      	orrs	r2, r0
 800691e:	68e0      	ldr	r0, [r4, #12]
 8006920:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006922:	6920      	ldr	r0, [r4, #16]
 8006924:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006926:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006928:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800692a:	4925      	ldr	r1, [pc, #148]	; (80069c0 <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800692c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800692e:	689a      	ldr	r2, [r3, #8]
 8006930:	400a      	ands	r2, r1
 8006932:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006934:	689a      	ldr	r2, [r3, #8]
 8006936:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800693a:	69a0      	ldr	r0, [r4, #24]
 800693c:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800693e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006940:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006942:	68da      	ldr	r2, [r3, #12]
 8006944:	400a      	ands	r2, r1
 8006946:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006948:	68da      	ldr	r2, [r3, #12]
 800694a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800694e:	6a20      	ldr	r0, [r4, #32]
 8006950:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8006952:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006954:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006956:	691a      	ldr	r2, [r3, #16]
 8006958:	400a      	ands	r2, r1
 800695a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800695c:	691a      	ldr	r2, [r3, #16]
 800695e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006962:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006964:	4302      	orrs	r2, r0
 8006966:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006968:	695a      	ldr	r2, [r3, #20]
 800696a:	4011      	ands	r1, r2
 800696c:	6159      	str	r1, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800696e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006970:	695a      	ldr	r2, [r3, #20]
 8006972:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8006976:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8006978:	430a      	orrs	r2, r1
 800697a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800697c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800697e:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006982:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8006986:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800698a:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800698c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800698e:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8006992:	430a      	orrs	r2, r1
 8006994:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8006998:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800699c:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800699e:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80069a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80069a2:	f042 0206 	orr.w	r2, r2, #6
 80069a6:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80069a8:	699a      	ldr	r2, [r3, #24]
 80069aa:	f042 0201 	orr.w	r2, r2, #1
 80069ae:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 80069b0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80069b2:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80069b6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80069ba:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80069bc:	2001      	movs	r0, #1
 80069be:	e7fc      	b.n	80069ba <HAL_LTDC_Init+0xce>
 80069c0:	f000f800 	.word	0xf000f800

080069c4 <HAL_LTDC_ErrorCallback>:
 80069c4:	4770      	bx	lr

080069c6 <HAL_LTDC_LineEventCallback>:
 80069c6:	4770      	bx	lr

080069c8 <HAL_LTDC_ReloadEventCallback>:
 80069c8:	4770      	bx	lr

080069ca <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80069ca:	6803      	ldr	r3, [r0, #0]
{
 80069cc:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80069ce:	6b9e      	ldr	r6, [r3, #56]	; 0x38
{
 80069d0:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80069d2:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80069d4:	0772      	lsls	r2, r6, #29
 80069d6:	d514      	bpl.n	8006a02 <HAL_LTDC_IRQHandler+0x38>
 80069d8:	0769      	lsls	r1, r5, #29
 80069da:	d512      	bpl.n	8006a02 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80069dc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80069de:	f022 0204 	bic.w	r2, r2, #4
 80069e2:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80069e4:	2204      	movs	r2, #4
 80069e6:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80069e8:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80069ec:	f043 0301 	orr.w	r3, r3, #1
 80069f0:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80069f4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80069f6:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80069fa:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80069fe:	f7ff ffe1 	bl	80069c4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006a02:	07b2      	lsls	r2, r6, #30
 8006a04:	d516      	bpl.n	8006a34 <HAL_LTDC_IRQHandler+0x6a>
 8006a06:	07ab      	lsls	r3, r5, #30
 8006a08:	d514      	bpl.n	8006a34 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006a0a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 8006a0c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006a0e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006a10:	f022 0202 	bic.w	r2, r2, #2
 8006a14:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8006a16:	2202      	movs	r2, #2
 8006a18:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8006a1a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8006a1e:	4313      	orrs	r3, r2
 8006a20:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006a24:	2304      	movs	r3, #4
 8006a26:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006a2a:	2300      	movs	r3, #0
 8006a2c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006a30:	f7ff ffc8 	bl	80069c4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8006a34:	07f0      	lsls	r0, r6, #31
 8006a36:	d510      	bpl.n	8006a5a <HAL_LTDC_IRQHandler+0x90>
 8006a38:	07e9      	lsls	r1, r5, #31
 8006a3a:	d50e      	bpl.n	8006a5a <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006a3c:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 8006a3e:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006a40:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006a42:	f022 0201 	bic.w	r2, r2, #1
 8006a46:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8006a48:	2201      	movs	r2, #1
 8006a4a:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8006a4c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8006a4e:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006a52:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8006a56:	f7ff ffb6 	bl	80069c6 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8006a5a:	0732      	lsls	r2, r6, #28
 8006a5c:	d511      	bpl.n	8006a82 <HAL_LTDC_IRQHandler+0xb8>
 8006a5e:	072b      	lsls	r3, r5, #28
 8006a60:	d50f      	bpl.n	8006a82 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006a62:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 8006a64:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006a66:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006a68:	f022 0208 	bic.w	r2, r2, #8
 8006a6c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8006a6e:	2208      	movs	r2, #8
 8006a70:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8006a72:	2301      	movs	r3, #1
 8006a74:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006a78:	2300      	movs	r3, #0
 8006a7a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8006a7e:	f7ff ffa3 	bl	80069c8 <HAL_LTDC_ReloadEventCallback>
}
 8006a82:	bd70      	pop	{r4, r5, r6, pc}

08006a84 <HAL_LTDC_ConfigLayer>:
{
 8006a84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(hltdc);
 8006a86:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
{
 8006a8a:	4606      	mov	r6, r0
 8006a8c:	468c      	mov	ip, r1
 8006a8e:	4696      	mov	lr, r2
  __HAL_LOCK(hltdc);
 8006a90:	2b01      	cmp	r3, #1
 8006a92:	f04f 0002 	mov.w	r0, #2
 8006a96:	d01d      	beq.n	8006ad4 <HAL_LTDC_ConfigLayer+0x50>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006a98:	2434      	movs	r4, #52	; 0x34
 8006a9a:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006a9c:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  __HAL_LOCK(hltdc);
 8006aa0:	2701      	movs	r7, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006aa2:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 8006aa6:	f886 70a0 	strb.w	r7, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006aaa:	3438      	adds	r4, #56	; 0x38
 8006aac:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006aae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006ab0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006ab2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006ab4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006ab6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006ab8:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006aba:	4630      	mov	r0, r6
 8006abc:	4672      	mov	r2, lr
 8006abe:	4661      	mov	r1, ip
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006ac0:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006ac2:	f7ff fe8c 	bl	80067de <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006ac6:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8006ac8:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006aca:	625f      	str	r7, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8006acc:	f886 70a1 	strb.w	r7, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8006ad0:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8006ad4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006ad8 <HAL_LTDC_SetPitch>:
  __HAL_LOCK(hltdc);
 8006ad8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8006adc:	2b01      	cmp	r3, #1
 8006ade:	f04f 0302 	mov.w	r3, #2
{
 8006ae2:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 8006ae4:	d02d      	beq.n	8006b42 <HAL_LTDC_SetPitch+0x6a>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8006ae6:	2434      	movs	r4, #52	; 0x34
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006ae8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8006aec:	fb04 0402 	mla	r4, r4, r2, r0
 8006af0:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006af2:	b344      	cbz	r4, 8006b46 <HAL_LTDC_SetPitch+0x6e>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006af4:	2c01      	cmp	r4, #1
 8006af6:	d028      	beq.n	8006b4a <HAL_LTDC_SetPitch+0x72>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006af8:	1ea5      	subs	r5, r4, #2
 8006afa:	429d      	cmp	r5, r3
 8006afc:	d902      	bls.n	8006b04 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 8006afe:	2c07      	cmp	r4, #7
 8006b00:	bf18      	it	ne
 8006b02:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8006b04:	01d2      	lsls	r2, r2, #7
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 8006b06:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8006b08:	f102 0484 	add.w	r4, r2, #132	; 0x84
 8006b0c:	6802      	ldr	r2, [r0, #0]
 8006b0e:	4422      	add	r2, r4
 8006b10:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 8006b12:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 8006b16:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 8006b1a:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8006b1c:	4c0c      	ldr	r4, [pc, #48]	; (8006b50 <HAL_LTDC_SetPitch+0x78>)
 8006b1e:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8006b20:	f045 0501 	orr.w	r5, r5, #1
 8006b24:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 8006b26:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 8006b28:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8006b2c:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8006b2e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006b30:	f043 0301 	orr.w	r3, r3, #1
 8006b34:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8006b36:	2301      	movs	r3, #1
 8006b38:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8006b3c:	2300      	movs	r3, #0
 8006b3e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 8006b42:	4618      	mov	r0, r3
 8006b44:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 8006b46:	2304      	movs	r3, #4
 8006b48:	e7dc      	b.n	8006b04 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 8006b4a:	2303      	movs	r3, #3
 8006b4c:	e7da      	b.n	8006b04 <HAL_LTDC_SetPitch+0x2c>
 8006b4e:	bf00      	nop
 8006b50:	40016800 	.word	0x40016800

08006b54 <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 8006b54:	4b19      	ldr	r3, [pc, #100]	; (8006bbc <HAL_PWREx_EnableOverDrive+0x68>)
{
 8006b56:	b537      	push	{r0, r1, r2, r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 8006b58:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8006b5a:	4c19      	ldr	r4, [pc, #100]	; (8006bc0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8006b5c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006b60:	641a      	str	r2, [r3, #64]	; 0x40
 8006b62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b64:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006b68:	9301      	str	r3, [sp, #4]
 8006b6a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8006b6c:	6823      	ldr	r3, [r4, #0]
 8006b6e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006b72:	6023      	str	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8006b74:	f7fe f94c 	bl	8004e10 <HAL_GetTick>
 8006b78:	4605      	mov	r5, r0

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8006b7a:	6863      	ldr	r3, [r4, #4]
 8006b7c:	03da      	lsls	r2, r3, #15
 8006b7e:	d50c      	bpl.n	8006b9a <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8006b80:	6823      	ldr	r3, [r4, #0]
 8006b82:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006b86:	6023      	str	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8006b88:	f7fe f942 	bl	8004e10 <HAL_GetTick>

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8006b8c:	4c0c      	ldr	r4, [pc, #48]	; (8006bc0 <HAL_PWREx_EnableOverDrive+0x6c>)
  tickstart = HAL_GetTick();
 8006b8e:	4605      	mov	r5, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8006b90:	6863      	ldr	r3, [r4, #4]
 8006b92:	039b      	lsls	r3, r3, #14
 8006b94:	d50a      	bpl.n	8006bac <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8006b96:	2000      	movs	r0, #0
 8006b98:	e006      	b.n	8006ba8 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8006b9a:	f7fe f939 	bl	8004e10 <HAL_GetTick>
 8006b9e:	1b40      	subs	r0, r0, r5
 8006ba0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006ba4:	d9e9      	bls.n	8006b7a <HAL_PWREx_EnableOverDrive+0x26>
      return HAL_TIMEOUT;
 8006ba6:	2003      	movs	r0, #3
}
 8006ba8:	b003      	add	sp, #12
 8006baa:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8006bac:	f7fe f930 	bl	8004e10 <HAL_GetTick>
 8006bb0:	1b40      	subs	r0, r0, r5
 8006bb2:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006bb6:	d9eb      	bls.n	8006b90 <HAL_PWREx_EnableOverDrive+0x3c>
 8006bb8:	e7f5      	b.n	8006ba6 <HAL_PWREx_EnableOverDrive+0x52>
 8006bba:	bf00      	nop
 8006bbc:	40023800 	.word	0x40023800
 8006bc0:	40007000 	.word	0x40007000

08006bc4 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8006bc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8006bc8:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8006bca:	b136      	cbz	r6, 8006bda <QSPI_Config+0x16>
 8006bcc:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
 8006bd0:	d003      	beq.n	8006bda <QSPI_Config+0x16>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8006bd2:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 8006bd4:	6804      	ldr	r4, [r0, #0]
 8006bd6:	3b01      	subs	r3, #1
 8006bd8:	6123      	str	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8006bda:	f8d1 a018 	ldr.w	sl, [r1, #24]
 8006bde:	e9d1 7c07 	ldrd	r7, ip, [r1, #28]
 8006be2:	f1ba 0f00 	cmp.w	sl, #0
 8006be6:	d04e      	beq.n	8006c86 <QSPI_Config+0xc2>
 8006be8:	694b      	ldr	r3, [r1, #20]
 8006bea:	ea46 0a0a 	orr.w	sl, r6, sl
 8006bee:	6805      	ldr	r5, [r0, #0]
 8006bf0:	f8d1 8000 	ldr.w	r8, [r1]
 8006bf4:	ea4f 4e83 	mov.w	lr, r3, lsl #18
 8006bf8:	6b48      	ldr	r0, [r1, #52]	; 0x34
 8006bfa:	ea4a 0a02 	orr.w	sl, sl, r2
 8006bfe:	e9d1 490b 	ldrd	r4, r9, [r1, #44]	; 0x2c
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8006c02:	f1bc 0f00 	cmp.w	ip, #0
 8006c06:	d026      	beq.n	8006c56 <QSPI_Config+0x92>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006c08:	688b      	ldr	r3, [r1, #8]
 8006c0a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8006c0e:	690e      	ldr	r6, [r1, #16]
 8006c10:	61eb      	str	r3, [r5, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006c12:	b1a7      	cbz	r7, 8006c3e <QSPI_Config+0x7a>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006c14:	ea48 0307 	orr.w	r3, r8, r7
 8006c18:	4323      	orrs	r3, r4
 8006c1a:	ea43 0309 	orr.w	r3, r3, r9
 8006c1e:	4303      	orrs	r3, r0
 8006c20:	68c8      	ldr	r0, [r1, #12]
 8006c22:	4333      	orrs	r3, r6
 8006c24:	4303      	orrs	r3, r0
 8006c26:	ea43 030e 	orr.w	r3, r3, lr
 8006c2a:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006c2e:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006c32:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006c34:	d001      	beq.n	8006c3a <QSPI_Config+0x76>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006c36:	684b      	ldr	r3, [r1, #4]
 8006c38:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8006c3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006c3e:	ea48 0304 	orr.w	r3, r8, r4
 8006c42:	ea43 0309 	orr.w	r3, r3, r9
 8006c46:	4303      	orrs	r3, r0
 8006c48:	4333      	orrs	r3, r6
 8006c4a:	ea43 030e 	orr.w	r3, r3, lr
 8006c4e:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006c52:	616b      	str	r3, [r5, #20]
 8006c54:	e7f1      	b.n	8006c3a <QSPI_Config+0x76>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006c56:	b167      	cbz	r7, 8006c72 <QSPI_Config+0xae>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006c58:	ea48 0307 	orr.w	r3, r8, r7
 8006c5c:	4323      	orrs	r3, r4
 8006c5e:	ea43 0309 	orr.w	r3, r3, r9
 8006c62:	4303      	orrs	r3, r0
 8006c64:	68c8      	ldr	r0, [r1, #12]
 8006c66:	4303      	orrs	r3, r0
 8006c68:	ea43 030e 	orr.w	r3, r3, lr
 8006c6c:	ea43 030a 	orr.w	r3, r3, sl
 8006c70:	e7dd      	b.n	8006c2e <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006c72:	ea48 0304 	orr.w	r3, r8, r4
 8006c76:	ea43 0309 	orr.w	r3, r3, r9
 8006c7a:	4303      	orrs	r3, r0
 8006c7c:	ea43 030e 	orr.w	r3, r3, lr
 8006c80:	ea43 030a 	orr.w	r3, r3, sl
 8006c84:	e7e5      	b.n	8006c52 <QSPI_Config+0x8e>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8006c86:	f1bc 0f00 	cmp.w	ip, #0
 8006c8a:	d02c      	beq.n	8006ce6 <QSPI_Config+0x122>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006c8c:	6804      	ldr	r4, [r0, #0]
 8006c8e:	688b      	ldr	r3, [r1, #8]
 8006c90:	6908      	ldr	r0, [r1, #16]
 8006c92:	61e3      	str	r3, [r4, #28]
 8006c94:	ea46 030c 	orr.w	r3, r6, ip
 8006c98:	694e      	ldr	r6, [r1, #20]
 8006c9a:	ea43 0502 	orr.w	r5, r3, r2
 8006c9e:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 8006ca2:	04b6      	lsls	r6, r6, #18
 8006ca4:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006ca8:	b1a7      	cbz	r7, 8006cd4 <QSPI_Config+0x110>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006caa:	4338      	orrs	r0, r7
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006cac:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006cb0:	ea40 0008 	orr.w	r0, r0, r8
 8006cb4:	ea43 0300 	orr.w	r3, r3, r0
 8006cb8:	68c8      	ldr	r0, [r1, #12]
 8006cba:	ea43 030c 	orr.w	r3, r3, ip
 8006cbe:	ea43 0300 	orr.w	r3, r3, r0
 8006cc2:	ea43 0306 	orr.w	r3, r3, r6
 8006cc6:	ea43 0305 	orr.w	r3, r3, r5
 8006cca:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006ccc:	d0b5      	beq.n	8006c3a <QSPI_Config+0x76>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006cce:	684b      	ldr	r3, [r1, #4]
 8006cd0:	61a3      	str	r3, [r4, #24]
 8006cd2:	e7b2      	b.n	8006c3a <QSPI_Config+0x76>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006cd4:	ea40 0008 	orr.w	r0, r0, r8
 8006cd8:	4303      	orrs	r3, r0
 8006cda:	ea43 030c 	orr.w	r3, r3, ip
 8006cde:	4333      	orrs	r3, r6
 8006ce0:	432b      	orrs	r3, r5
 8006ce2:	6163      	str	r3, [r4, #20]
 8006ce4:	e7a9      	b.n	8006c3a <QSPI_Config+0x76>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006ce6:	b1d7      	cbz	r7, 8006d1e <QSPI_Config+0x15a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006ce8:	ea46 0307 	orr.w	r3, r6, r7
 8006cec:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8006cee:	6800      	ldr	r0, [r0, #0]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006cf0:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006cf4:	ea43 0302 	orr.w	r3, r3, r2
 8006cf8:	ea43 0304 	orr.w	r3, r3, r4
 8006cfc:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8006cfe:	ea43 0304 	orr.w	r3, r3, r4
 8006d02:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 8006d04:	ea43 0304 	orr.w	r3, r3, r4
 8006d08:	68cc      	ldr	r4, [r1, #12]
 8006d0a:	ea43 0304 	orr.w	r3, r3, r4
 8006d0e:	694c      	ldr	r4, [r1, #20]
 8006d10:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8006d14:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006d16:	d090      	beq.n	8006c3a <QSPI_Config+0x76>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006d18:	684b      	ldr	r3, [r1, #4]
 8006d1a:	6183      	str	r3, [r0, #24]
 8006d1c:	e78d      	b.n	8006c3a <QSPI_Config+0x76>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8006d1e:	2e00      	cmp	r6, #0
 8006d20:	d08b      	beq.n	8006c3a <QSPI_Config+0x76>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006d22:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8006d24:	6800      	ldr	r0, [r0, #0]
 8006d26:	4333      	orrs	r3, r6
 8006d28:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 8006d2a:	431a      	orrs	r2, r3
 8006d2c:	694b      	ldr	r3, [r1, #20]
 8006d2e:	4332      	orrs	r2, r6
 8006d30:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8006d32:	4332      	orrs	r2, r6
 8006d34:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 8006d38:	6142      	str	r2, [r0, #20]
}
 8006d3a:	e77e      	b.n	8006c3a <QSPI_Config+0x76>

08006d3c <QSPI_WaitFlagStateUntilTimeout>:
{
 8006d3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d40:	9d06      	ldr	r5, [sp, #24]
 8006d42:	4604      	mov	r4, r0
 8006d44:	460f      	mov	r7, r1
 8006d46:	4616      	mov	r6, r2
 8006d48:	4698      	mov	r8, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8006d4a:	6821      	ldr	r1, [r4, #0]
 8006d4c:	688a      	ldr	r2, [r1, #8]
 8006d4e:	423a      	tst	r2, r7
 8006d50:	bf14      	ite	ne
 8006d52:	2201      	movne	r2, #1
 8006d54:	2200      	moveq	r2, #0
 8006d56:	42b2      	cmp	r2, r6
 8006d58:	d101      	bne.n	8006d5e <QSPI_WaitFlagStateUntilTimeout+0x22>
  return HAL_OK;
 8006d5a:	2000      	movs	r0, #0
 8006d5c:	e011      	b.n	8006d82 <QSPI_WaitFlagStateUntilTimeout+0x46>
    if (Timeout != HAL_MAX_DELAY)
 8006d5e:	1c6b      	adds	r3, r5, #1
 8006d60:	d0f4      	beq.n	8006d4c <QSPI_WaitFlagStateUntilTimeout+0x10>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006d62:	f7fe f855 	bl	8004e10 <HAL_GetTick>
 8006d66:	eba0 0008 	sub.w	r0, r0, r8
 8006d6a:	42a8      	cmp	r0, r5
 8006d6c:	d801      	bhi.n	8006d72 <QSPI_WaitFlagStateUntilTimeout+0x36>
 8006d6e:	2d00      	cmp	r5, #0
 8006d70:	d1eb      	bne.n	8006d4a <QSPI_WaitFlagStateUntilTimeout+0xe>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8006d72:	2304      	movs	r3, #4
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8006d74:	2001      	movs	r0, #1
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8006d76:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8006d7a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006d7c:	f043 0301 	orr.w	r3, r3, #1
 8006d80:	6463      	str	r3, [r4, #68]	; 0x44
}
 8006d82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08006d88 <HAL_QSPI_Init>:
{
 8006d88:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006d8a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006d8c:	f7fe f840 	bl	8004e10 <HAL_GetTick>
 8006d90:	4605      	mov	r5, r0
  if(hqspi == NULL)
 8006d92:	2c00      	cmp	r4, #0
 8006d94:	d046      	beq.n	8006e24 <HAL_QSPI_Init+0x9c>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8006d96:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006d9a:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 8006d9e:	b93a      	cbnz	r2, 8006db0 <HAL_QSPI_Init+0x28>
    hqspi->Lock = HAL_UNLOCKED;
 8006da0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 8006da4:	4620      	mov	r0, r4
 8006da6:	f7fa fdc1 	bl	800192c <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8006daa:	f241 3388 	movw	r3, #5000	; 0x1388
 8006dae:	64a3      	str	r3, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8006db0:	6820      	ldr	r0, [r4, #0]
 8006db2:	68a1      	ldr	r1, [r4, #8]
 8006db4:	6802      	ldr	r2, [r0, #0]
 8006db6:	3901      	subs	r1, #1
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006db8:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8006dba:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8006dbe:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006dc2:	2120      	movs	r1, #32
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8006dc4:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006dc6:	2200      	movs	r2, #0
 8006dc8:	9300      	str	r3, [sp, #0]
 8006dca:	4620      	mov	r0, r4
 8006dcc:	462b      	mov	r3, r5
 8006dce:	f7ff ffb5 	bl	8006d3c <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8006dd2:	bb10      	cbnz	r0, 8006e1a <HAL_QSPI_Init+0x92>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8006dd4:	6822      	ldr	r2, [r4, #0]
 8006dd6:	69e5      	ldr	r5, [r4, #28]
 8006dd8:	68e3      	ldr	r3, [r4, #12]
 8006dda:	6811      	ldr	r1, [r2, #0]
 8006ddc:	432b      	orrs	r3, r5
 8006dde:	6a25      	ldr	r5, [r4, #32]
 8006de0:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8006de4:	432b      	orrs	r3, r5
 8006de6:	6865      	ldr	r5, [r4, #4]
 8006de8:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8006dec:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8006df0:	430b      	orrs	r3, r1
 8006df2:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8006df4:	6855      	ldr	r5, [r2, #4]
 8006df6:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8006dfa:	430b      	orrs	r3, r1
 8006dfc:	6921      	ldr	r1, [r4, #16]
 8006dfe:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006e02:	4909      	ldr	r1, [pc, #36]	; (8006e28 <HAL_QSPI_Init+0xa0>)
 8006e04:	4029      	ands	r1, r5
 8006e06:	430b      	orrs	r3, r1
 8006e08:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8006e0a:	6813      	ldr	r3, [r2, #0]
 8006e0c:	f043 0301 	orr.w	r3, r3, #1
 8006e10:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8006e12:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006e14:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8006e16:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006e1a:	2300      	movs	r3, #0
 8006e1c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006e20:	b003      	add	sp, #12
 8006e22:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8006e24:	2001      	movs	r0, #1
 8006e26:	e7fb      	b.n	8006e20 <HAL_QSPI_Init+0x98>
 8006e28:	ffe0f8fe 	.word	0xffe0f8fe

08006e2c <HAL_QSPI_Command>:
{
 8006e2c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8006e30:	4604      	mov	r4, r0
 8006e32:	468a      	mov	sl, r1
 8006e34:	4691      	mov	r9, r2
  uint32_t tickstart = HAL_GetTick();
 8006e36:	f7fd ffeb 	bl	8004e10 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006e3a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8006e3e:	4680      	mov	r8, r0
  __HAL_LOCK(hqspi);
 8006e40:	2b01      	cmp	r3, #1
 8006e42:	d034      	beq.n	8006eae <HAL_QSPI_Command+0x82>
 8006e44:	2301      	movs	r3, #1
 8006e46:	2702      	movs	r7, #2
 8006e48:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006e4c:	f894 6041 	ldrb.w	r6, [r4, #65]	; 0x41
 8006e50:	b2f6      	uxtb	r6, r6
 8006e52:	429e      	cmp	r6, r3
 8006e54:	d129      	bne.n	8006eaa <HAL_QSPI_Command+0x7e>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006e56:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006e58:	4603      	mov	r3, r0
 8006e5a:	f8cd 9000 	str.w	r9, [sp]
 8006e5e:	2120      	movs	r1, #32
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006e60:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006e62:	4620      	mov	r0, r4
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8006e64:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006e68:	f7ff ff68 	bl	8006d3c <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006e6c:	4605      	mov	r5, r0
 8006e6e:	b9a8      	cbnz	r0, 8006e9c <HAL_QSPI_Command+0x70>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8006e70:	4602      	mov	r2, r0
 8006e72:	4651      	mov	r1, sl
 8006e74:	4620      	mov	r0, r4
 8006e76:	f7ff fea5 	bl	8006bc4 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8006e7a:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
 8006e7e:	b95b      	cbnz	r3, 8006e98 <HAL_QSPI_Command+0x6c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006e80:	f8cd 9000 	str.w	r9, [sp]
 8006e84:	4643      	mov	r3, r8
 8006e86:	4632      	mov	r2, r6
 8006e88:	4639      	mov	r1, r7
 8006e8a:	4620      	mov	r0, r4
 8006e8c:	f7ff ff56 	bl	8006d3c <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006e90:	4605      	mov	r5, r0
 8006e92:	b918      	cbnz	r0, 8006e9c <HAL_QSPI_Command+0x70>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006e94:	6823      	ldr	r3, [r4, #0]
 8006e96:	60df      	str	r7, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8006e98:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006e9c:	2300      	movs	r3, #0
 8006e9e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006ea2:	4628      	mov	r0, r5
 8006ea4:	b002      	add	sp, #8
 8006ea6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    status = HAL_BUSY;
 8006eaa:	463d      	mov	r5, r7
 8006eac:	e7f6      	b.n	8006e9c <HAL_QSPI_Command+0x70>
  __HAL_LOCK(hqspi);
 8006eae:	2502      	movs	r5, #2
 8006eb0:	e7f7      	b.n	8006ea2 <HAL_QSPI_Command+0x76>

08006eb2 <HAL_QSPI_Transmit>:
{
 8006eb2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006eb6:	4604      	mov	r4, r0
 8006eb8:	4688      	mov	r8, r1
 8006eba:	4617      	mov	r7, r2
  uint32_t tickstart = HAL_GetTick();
 8006ebc:	f7fd ffa8 	bl	8004e10 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006ec0:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8006ec4:	4606      	mov	r6, r0
  __HAL_LOCK(hqspi);
 8006ec6:	2b01      	cmp	r3, #1
 8006ec8:	d04d      	beq.n	8006f66 <HAL_QSPI_Transmit+0xb4>
 8006eca:	2301      	movs	r3, #1
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8006ecc:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8006ece:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006ed2:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 8006ed6:	b2c0      	uxtb	r0, r0
 8006ed8:	4298      	cmp	r0, r3
 8006eda:	d142      	bne.n	8006f62 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006edc:	2300      	movs	r3, #0
 8006ede:	6463      	str	r3, [r4, #68]	; 0x44
    if(pData != NULL )
 8006ee0:	f1b8 0f00 	cmp.w	r8, #0
 8006ee4:	d038      	beq.n	8006f58 <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8006ee6:	2312      	movs	r3, #18
 8006ee8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8006eec:	692b      	ldr	r3, [r5, #16]
 8006eee:	3301      	adds	r3, #1
 8006ef0:	62e3      	str	r3, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006ef2:	692b      	ldr	r3, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8006ef4:	f8c4 8024 	str.w	r8, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006ef8:	3301      	adds	r3, #1
 8006efa:	62a3      	str	r3, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8006efc:	696b      	ldr	r3, [r5, #20]
 8006efe:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8006f02:	616b      	str	r3, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8006f04:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006f06:	b99b      	cbnz	r3, 8006f30 <HAL_QSPI_Transmit+0x7e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006f08:	9700      	str	r7, [sp, #0]
 8006f0a:	4633      	mov	r3, r6
 8006f0c:	2201      	movs	r2, #1
 8006f0e:	2102      	movs	r1, #2
 8006f10:	4620      	mov	r0, r4
 8006f12:	f7ff ff13 	bl	8006d3c <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006f16:	b910      	cbnz	r0, 8006f1e <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006f18:	6823      	ldr	r3, [r4, #0]
 8006f1a:	2202      	movs	r2, #2
 8006f1c:	60da      	str	r2, [r3, #12]
      hqspi->State = HAL_QSPI_STATE_READY;
 8006f1e:	2301      	movs	r3, #1
 8006f20:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006f24:	2300      	movs	r3, #0
 8006f26:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006f2a:	b002      	add	sp, #8
 8006f2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8006f30:	9700      	str	r7, [sp, #0]
 8006f32:	4633      	mov	r3, r6
 8006f34:	2201      	movs	r2, #1
 8006f36:	2104      	movs	r1, #4
 8006f38:	4620      	mov	r0, r4
 8006f3a:	f7ff feff 	bl	8006d3c <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8006f3e:	2800      	cmp	r0, #0
 8006f40:	d1ed      	bne.n	8006f1e <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8006f42:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f44:	781b      	ldrb	r3, [r3, #0]
 8006f46:	f885 3020 	strb.w	r3, [r5, #32]
        hqspi->pTxBuffPtr++;
 8006f4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f4c:	3301      	adds	r3, #1
 8006f4e:	6263      	str	r3, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8006f50:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006f52:	3b01      	subs	r3, #1
 8006f54:	62e3      	str	r3, [r4, #44]	; 0x2c
 8006f56:	e7d5      	b.n	8006f04 <HAL_QSPI_Transmit+0x52>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006f58:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006f5a:	f043 0308 	orr.w	r3, r3, #8
 8006f5e:	6463      	str	r3, [r4, #68]	; 0x44
 8006f60:	e7e0      	b.n	8006f24 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8006f62:	2002      	movs	r0, #2
 8006f64:	e7de      	b.n	8006f24 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8006f66:	2002      	movs	r0, #2
 8006f68:	e7df      	b.n	8006f2a <HAL_QSPI_Transmit+0x78>

08006f6a <HAL_QSPI_Receive>:
{
 8006f6a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006f6e:	4604      	mov	r4, r0
 8006f70:	4617      	mov	r7, r2
 8006f72:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8006f74:	f7fd ff4c 	bl	8004e10 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8006f78:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8006f7a:	4606      	mov	r6, r0
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8006f7c:	69aa      	ldr	r2, [r5, #24]
  __HAL_LOCK(hqspi);
 8006f7e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8006f82:	2b01      	cmp	r3, #1
 8006f84:	d04f      	beq.n	8007026 <HAL_QSPI_Receive+0xbc>
 8006f86:	2301      	movs	r3, #1
 8006f88:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006f8c:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 8006f90:	b2c0      	uxtb	r0, r0
 8006f92:	4298      	cmp	r0, r3
 8006f94:	d145      	bne.n	8007022 <HAL_QSPI_Receive+0xb8>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006f96:	2300      	movs	r3, #0
 8006f98:	6463      	str	r3, [r4, #68]	; 0x44
    if(pData != NULL )
 8006f9a:	f1b8 0f00 	cmp.w	r8, #0
 8006f9e:	d03b      	beq.n	8007018 <HAL_QSPI_Receive+0xae>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8006fa0:	2322      	movs	r3, #34	; 0x22
 8006fa2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8006fa6:	692b      	ldr	r3, [r5, #16]
 8006fa8:	3301      	adds	r3, #1
 8006faa:	63a3      	str	r3, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006fac:	692b      	ldr	r3, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8006fae:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006fb2:	3301      	adds	r3, #1
 8006fb4:	6363      	str	r3, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8006fb6:	696b      	ldr	r3, [r5, #20]
 8006fb8:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8006fbc:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8006fc0:	616b      	str	r3, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8006fc2:	61aa      	str	r2, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8006fc4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006fc6:	b99b      	cbnz	r3, 8006ff0 <HAL_QSPI_Receive+0x86>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006fc8:	9700      	str	r7, [sp, #0]
 8006fca:	4633      	mov	r3, r6
 8006fcc:	2201      	movs	r2, #1
 8006fce:	2102      	movs	r1, #2
 8006fd0:	4620      	mov	r0, r4
 8006fd2:	f7ff feb3 	bl	8006d3c <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8006fd6:	b910      	cbnz	r0, 8006fde <HAL_QSPI_Receive+0x74>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006fd8:	6823      	ldr	r3, [r4, #0]
 8006fda:	2202      	movs	r2, #2
 8006fdc:	60da      	str	r2, [r3, #12]
      hqspi->State = HAL_QSPI_STATE_READY;
 8006fde:	2301      	movs	r3, #1
 8006fe0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006fe4:	2300      	movs	r3, #0
 8006fe6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006fea:	b002      	add	sp, #8
 8006fec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8006ff0:	9700      	str	r7, [sp, #0]
 8006ff2:	4633      	mov	r3, r6
 8006ff4:	2201      	movs	r2, #1
 8006ff6:	2106      	movs	r1, #6
 8006ff8:	4620      	mov	r0, r4
 8006ffa:	f7ff fe9f 	bl	8006d3c <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8006ffe:	2800      	cmp	r0, #0
 8007000:	d1ed      	bne.n	8006fde <HAL_QSPI_Receive+0x74>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8007002:	f895 2020 	ldrb.w	r2, [r5, #32]
 8007006:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007008:	701a      	strb	r2, [r3, #0]
        hqspi->pRxBuffPtr++;
 800700a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800700c:	3301      	adds	r3, #1
 800700e:	6323      	str	r3, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8007010:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007012:	3b01      	subs	r3, #1
 8007014:	63a3      	str	r3, [r4, #56]	; 0x38
 8007016:	e7d5      	b.n	8006fc4 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8007018:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800701a:	f043 0308 	orr.w	r3, r3, #8
 800701e:	6463      	str	r3, [r4, #68]	; 0x44
 8007020:	e7e0      	b.n	8006fe4 <HAL_QSPI_Receive+0x7a>
    status = HAL_BUSY;
 8007022:	2002      	movs	r0, #2
 8007024:	e7de      	b.n	8006fe4 <HAL_QSPI_Receive+0x7a>
  __HAL_LOCK(hqspi);
 8007026:	2002      	movs	r0, #2
 8007028:	e7df      	b.n	8006fea <HAL_QSPI_Receive+0x80>

0800702a <HAL_QSPI_AutoPolling>:
{
 800702a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800702e:	4604      	mov	r4, r0
 8007030:	4698      	mov	r8, r3
 8007032:	4689      	mov	r9, r1
 8007034:	4616      	mov	r6, r2
  uint32_t tickstart = HAL_GetTick();
 8007036:	f7fd feeb 	bl	8004e10 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800703a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 800703e:	4607      	mov	r7, r0
  __HAL_LOCK(hqspi);
 8007040:	2b01      	cmp	r3, #1
 8007042:	d042      	beq.n	80070ca <HAL_QSPI_AutoPolling+0xa0>
 8007044:	2301      	movs	r3, #1
 8007046:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800704a:	f894 5041 	ldrb.w	r5, [r4, #65]	; 0x41
 800704e:	b2ed      	uxtb	r5, r5
 8007050:	429d      	cmp	r5, r3
 8007052:	d138      	bne.n	80070c6 <HAL_QSPI_AutoPolling+0x9c>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8007054:	2342      	movs	r3, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007056:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007058:	f8cd 8000 	str.w	r8, [sp]
 800705c:	2120      	movs	r1, #32
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800705e:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8007060:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007064:	4603      	mov	r3, r0
 8007066:	4620      	mov	r0, r4
 8007068:	f7ff fe68 	bl	8006d3c <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800706c:	bb28      	cbnz	r0, 80070ba <HAL_QSPI_AutoPolling+0x90>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800706e:	6823      	ldr	r3, [r4, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8007070:	4620      	mov	r0, r4
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8007072:	6832      	ldr	r2, [r6, #0]
 8007074:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8007076:	6872      	ldr	r2, [r6, #4]
 8007078:	625a      	str	r2, [r3, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800707a:	68b2      	ldr	r2, [r6, #8]
 800707c:	62da      	str	r2, [r3, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800707e:	6932      	ldr	r2, [r6, #16]
 8007080:	6819      	ldr	r1, [r3, #0]
 8007082:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8007086:	f421 0140 	bic.w	r1, r1, #12582912	; 0xc00000
 800708a:	430a      	orrs	r2, r1
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800708c:	4649      	mov	r1, r9
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800708e:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8007090:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
      cmd->NbData = cfg->StatusBytesSize;
 8007094:	68f3      	ldr	r3, [r6, #12]
 8007096:	f8c9 3028 	str.w	r3, [r9, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800709a:	f7ff fd93 	bl	8006bc4 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800709e:	f8cd 8000 	str.w	r8, [sp]
 80070a2:	463b      	mov	r3, r7
 80070a4:	462a      	mov	r2, r5
 80070a6:	2108      	movs	r1, #8
 80070a8:	4620      	mov	r0, r4
 80070aa:	f7ff fe47 	bl	8006d3c <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80070ae:	b920      	cbnz	r0, 80070ba <HAL_QSPI_AutoPolling+0x90>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 80070b0:	6823      	ldr	r3, [r4, #0]
 80070b2:	2208      	movs	r2, #8
 80070b4:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80070b6:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80070ba:	2300      	movs	r3, #0
 80070bc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80070c0:	b003      	add	sp, #12
 80070c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 80070c6:	2002      	movs	r0, #2
 80070c8:	e7f7      	b.n	80070ba <HAL_QSPI_AutoPolling+0x90>
  __HAL_LOCK(hqspi);
 80070ca:	2002      	movs	r0, #2
 80070cc:	e7f8      	b.n	80070c0 <HAL_QSPI_AutoPolling+0x96>

080070ce <HAL_QSPI_MemoryMapped>:
{
 80070ce:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80070d0:	4604      	mov	r4, r0
 80070d2:	4617      	mov	r7, r2
 80070d4:	460e      	mov	r6, r1
  uint32_t tickstart = HAL_GetTick();
 80070d6:	f7fd fe9b 	bl	8004e10 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80070da:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 80070de:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80070e0:	2a01      	cmp	r2, #1
 80070e2:	d033      	beq.n	800714c <HAL_QSPI_MemoryMapped+0x7e>
 80070e4:	2201      	movs	r2, #1
 80070e6:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80070ea:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80070ee:	2a01      	cmp	r2, #1
 80070f0:	d12a      	bne.n	8007148 <HAL_QSPI_MemoryMapped+0x7a>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80070f2:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80070f4:	2182      	movs	r1, #130	; 0x82
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80070f6:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80070f8:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80070fa:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80070fe:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8007100:	9100      	str	r1, [sp, #0]
 8007102:	2120      	movs	r1, #32
 8007104:	f7ff fe1a 	bl	8006d3c <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8007108:	4605      	mov	r5, r0
 800710a:	b9b8      	cbnz	r0, 800713c <HAL_QSPI_MemoryMapped+0x6e>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800710c:	6823      	ldr	r3, [r4, #0]
 800710e:	6879      	ldr	r1, [r7, #4]
 8007110:	681a      	ldr	r2, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8007112:	2908      	cmp	r1, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8007114:	f022 0208 	bic.w	r2, r2, #8
 8007118:	ea42 0201 	orr.w	r2, r2, r1
 800711c:	601a      	str	r2, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800711e:	d107      	bne.n	8007130 <HAL_QSPI_MemoryMapped+0x62>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8007120:	683a      	ldr	r2, [r7, #0]
 8007122:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8007124:	2210      	movs	r2, #16
 8007126:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8007128:	681a      	ldr	r2, [r3, #0]
 800712a:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800712e:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8007130:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8007134:	4631      	mov	r1, r6
 8007136:	4620      	mov	r0, r4
 8007138:	f7ff fd44 	bl	8006bc4 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800713c:	2300      	movs	r3, #0
 800713e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007142:	4628      	mov	r0, r5
 8007144:	b003      	add	sp, #12
 8007146:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8007148:	2502      	movs	r5, #2
 800714a:	e7f7      	b.n	800713c <HAL_QSPI_MemoryMapped+0x6e>
  __HAL_LOCK(hqspi);
 800714c:	2502      	movs	r5, #2
 800714e:	e7f8      	b.n	8007142 <HAL_QSPI_MemoryMapped+0x74>

08007150 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007150:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8007154:	4604      	mov	r4, r0
 8007156:	b908      	cbnz	r0, 800715c <HAL_RCC_OscConfig+0xc>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
#endif
      {
        return HAL_ERROR;
 8007158:	2001      	movs	r0, #1
 800715a:	e03f      	b.n	80071dc <HAL_RCC_OscConfig+0x8c>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800715c:	6803      	ldr	r3, [r0, #0]
 800715e:	07d8      	lsls	r0, r3, #31
 8007160:	d410      	bmi.n	8007184 <HAL_RCC_OscConfig+0x34>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007162:	6823      	ldr	r3, [r4, #0]
 8007164:	0799      	lsls	r1, r3, #30
 8007166:	d460      	bmi.n	800722a <HAL_RCC_OscConfig+0xda>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007168:	6823      	ldr	r3, [r4, #0]
 800716a:	0719      	lsls	r1, r3, #28
 800716c:	f100 80a5 	bmi.w	80072ba <HAL_RCC_OscConfig+0x16a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007170:	6823      	ldr	r3, [r4, #0]
 8007172:	075a      	lsls	r2, r3, #29
 8007174:	f100 80c6 	bmi.w	8007304 <HAL_RCC_OscConfig+0x1b4>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007178:	69a0      	ldr	r0, [r4, #24]
 800717a:	2800      	cmp	r0, #0
 800717c:	f040 8130 	bne.w	80073e0 <HAL_RCC_OscConfig+0x290>
      }
    }
  }
  return HAL_OK;
 8007180:	2000      	movs	r0, #0
 8007182:	e02b      	b.n	80071dc <HAL_RCC_OscConfig+0x8c>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8007184:	4b94      	ldr	r3, [pc, #592]	; (80073d8 <HAL_RCC_OscConfig+0x288>)
 8007186:	689a      	ldr	r2, [r3, #8]
 8007188:	f002 020c 	and.w	r2, r2, #12
 800718c:	2a04      	cmp	r2, #4
 800718e:	d007      	beq.n	80071a0 <HAL_RCC_OscConfig+0x50>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007190:	689a      	ldr	r2, [r3, #8]
 8007192:	f002 020c 	and.w	r2, r2, #12
 8007196:	2a08      	cmp	r2, #8
 8007198:	d10a      	bne.n	80071b0 <HAL_RCC_OscConfig+0x60>
 800719a:	685b      	ldr	r3, [r3, #4]
 800719c:	025a      	lsls	r2, r3, #9
 800719e:	d507      	bpl.n	80071b0 <HAL_RCC_OscConfig+0x60>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80071a0:	4b8d      	ldr	r3, [pc, #564]	; (80073d8 <HAL_RCC_OscConfig+0x288>)
 80071a2:	681b      	ldr	r3, [r3, #0]
 80071a4:	039b      	lsls	r3, r3, #14
 80071a6:	d5dc      	bpl.n	8007162 <HAL_RCC_OscConfig+0x12>
 80071a8:	6863      	ldr	r3, [r4, #4]
 80071aa:	2b00      	cmp	r3, #0
 80071ac:	d1d9      	bne.n	8007162 <HAL_RCC_OscConfig+0x12>
 80071ae:	e7d3      	b.n	8007158 <HAL_RCC_OscConfig+0x8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80071b0:	6863      	ldr	r3, [r4, #4]
 80071b2:	4d89      	ldr	r5, [pc, #548]	; (80073d8 <HAL_RCC_OscConfig+0x288>)
 80071b4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80071b8:	d113      	bne.n	80071e2 <HAL_RCC_OscConfig+0x92>
 80071ba:	682b      	ldr	r3, [r5, #0]
 80071bc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80071c0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80071c2:	f7fd fe25 	bl	8004e10 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80071c6:	4d84      	ldr	r5, [pc, #528]	; (80073d8 <HAL_RCC_OscConfig+0x288>)
        tickstart = HAL_GetTick();
 80071c8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80071ca:	682b      	ldr	r3, [r5, #0]
 80071cc:	039f      	lsls	r7, r3, #14
 80071ce:	d4c8      	bmi.n	8007162 <HAL_RCC_OscConfig+0x12>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80071d0:	f7fd fe1e 	bl	8004e10 <HAL_GetTick>
 80071d4:	1b80      	subs	r0, r0, r6
 80071d6:	2864      	cmp	r0, #100	; 0x64
 80071d8:	d9f7      	bls.n	80071ca <HAL_RCC_OscConfig+0x7a>
            return HAL_TIMEOUT;
 80071da:	2003      	movs	r0, #3
}
 80071dc:	b002      	add	sp, #8
 80071de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80071e2:	b99b      	cbnz	r3, 800720c <HAL_RCC_OscConfig+0xbc>
 80071e4:	682b      	ldr	r3, [r5, #0]
 80071e6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80071ea:	602b      	str	r3, [r5, #0]
 80071ec:	682b      	ldr	r3, [r5, #0]
 80071ee:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80071f2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80071f4:	f7fd fe0c 	bl	8004e10 <HAL_GetTick>
 80071f8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80071fa:	682b      	ldr	r3, [r5, #0]
 80071fc:	0398      	lsls	r0, r3, #14
 80071fe:	d5b0      	bpl.n	8007162 <HAL_RCC_OscConfig+0x12>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8007200:	f7fd fe06 	bl	8004e10 <HAL_GetTick>
 8007204:	1b80      	subs	r0, r0, r6
 8007206:	2864      	cmp	r0, #100	; 0x64
 8007208:	d9f7      	bls.n	80071fa <HAL_RCC_OscConfig+0xaa>
 800720a:	e7e6      	b.n	80071da <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800720c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8007210:	682b      	ldr	r3, [r5, #0]
 8007212:	d103      	bne.n	800721c <HAL_RCC_OscConfig+0xcc>
 8007214:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007218:	602b      	str	r3, [r5, #0]
 800721a:	e7ce      	b.n	80071ba <HAL_RCC_OscConfig+0x6a>
 800721c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007220:	602b      	str	r3, [r5, #0]
 8007222:	682b      	ldr	r3, [r5, #0]
 8007224:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007228:	e7ca      	b.n	80071c0 <HAL_RCC_OscConfig+0x70>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 800722a:	4b6b      	ldr	r3, [pc, #428]	; (80073d8 <HAL_RCC_OscConfig+0x288>)
 800722c:	689a      	ldr	r2, [r3, #8]
 800722e:	f012 0f0c 	tst.w	r2, #12
 8007232:	d007      	beq.n	8007244 <HAL_RCC_OscConfig+0xf4>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007234:	689a      	ldr	r2, [r3, #8]
 8007236:	f002 020c 	and.w	r2, r2, #12
 800723a:	2a08      	cmp	r2, #8
 800723c:	d111      	bne.n	8007262 <HAL_RCC_OscConfig+0x112>
 800723e:	685b      	ldr	r3, [r3, #4]
 8007240:	0259      	lsls	r1, r3, #9
 8007242:	d40e      	bmi.n	8007262 <HAL_RCC_OscConfig+0x112>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007244:	4b64      	ldr	r3, [pc, #400]	; (80073d8 <HAL_RCC_OscConfig+0x288>)
 8007246:	681a      	ldr	r2, [r3, #0]
 8007248:	0792      	lsls	r2, r2, #30
 800724a:	d502      	bpl.n	8007252 <HAL_RCC_OscConfig+0x102>
 800724c:	68e2      	ldr	r2, [r4, #12]
 800724e:	2a01      	cmp	r2, #1
 8007250:	d182      	bne.n	8007158 <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007252:	681a      	ldr	r2, [r3, #0]
 8007254:	6921      	ldr	r1, [r4, #16]
 8007256:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800725a:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 800725e:	601a      	str	r2, [r3, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007260:	e782      	b.n	8007168 <HAL_RCC_OscConfig+0x18>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8007262:	68e3      	ldr	r3, [r4, #12]
 8007264:	4d5c      	ldr	r5, [pc, #368]	; (80073d8 <HAL_RCC_OscConfig+0x288>)
 8007266:	b1bb      	cbz	r3, 8007298 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_HSI_ENABLE();
 8007268:	682b      	ldr	r3, [r5, #0]
 800726a:	f043 0301 	orr.w	r3, r3, #1
 800726e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8007270:	f7fd fdce 	bl	8004e10 <HAL_GetTick>
 8007274:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007276:	682b      	ldr	r3, [r5, #0]
 8007278:	079f      	lsls	r7, r3, #30
 800727a:	d507      	bpl.n	800728c <HAL_RCC_OscConfig+0x13c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800727c:	682b      	ldr	r3, [r5, #0]
 800727e:	6922      	ldr	r2, [r4, #16]
 8007280:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007284:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007288:	602b      	str	r3, [r5, #0]
 800728a:	e76d      	b.n	8007168 <HAL_RCC_OscConfig+0x18>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800728c:	f7fd fdc0 	bl	8004e10 <HAL_GetTick>
 8007290:	1b80      	subs	r0, r0, r6
 8007292:	2802      	cmp	r0, #2
 8007294:	d9ef      	bls.n	8007276 <HAL_RCC_OscConfig+0x126>
 8007296:	e7a0      	b.n	80071da <HAL_RCC_OscConfig+0x8a>
        __HAL_RCC_HSI_DISABLE();
 8007298:	682b      	ldr	r3, [r5, #0]
 800729a:	f023 0301 	bic.w	r3, r3, #1
 800729e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80072a0:	f7fd fdb6 	bl	8004e10 <HAL_GetTick>
 80072a4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80072a6:	682b      	ldr	r3, [r5, #0]
 80072a8:	0798      	lsls	r0, r3, #30
 80072aa:	f57f af5d 	bpl.w	8007168 <HAL_RCC_OscConfig+0x18>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80072ae:	f7fd fdaf 	bl	8004e10 <HAL_GetTick>
 80072b2:	1b80      	subs	r0, r0, r6
 80072b4:	2802      	cmp	r0, #2
 80072b6:	d9f6      	bls.n	80072a6 <HAL_RCC_OscConfig+0x156>
 80072b8:	e78f      	b.n	80071da <HAL_RCC_OscConfig+0x8a>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80072ba:	6963      	ldr	r3, [r4, #20]
 80072bc:	4d46      	ldr	r5, [pc, #280]	; (80073d8 <HAL_RCC_OscConfig+0x288>)
 80072be:	b183      	cbz	r3, 80072e2 <HAL_RCC_OscConfig+0x192>
      __HAL_RCC_LSI_ENABLE();
 80072c0:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80072c2:	f043 0301 	orr.w	r3, r3, #1
 80072c6:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 80072c8:	f7fd fda2 	bl	8004e10 <HAL_GetTick>
 80072cc:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80072ce:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80072d0:	079b      	lsls	r3, r3, #30
 80072d2:	f53f af4d 	bmi.w	8007170 <HAL_RCC_OscConfig+0x20>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80072d6:	f7fd fd9b 	bl	8004e10 <HAL_GetTick>
 80072da:	1b80      	subs	r0, r0, r6
 80072dc:	2802      	cmp	r0, #2
 80072de:	d9f6      	bls.n	80072ce <HAL_RCC_OscConfig+0x17e>
 80072e0:	e77b      	b.n	80071da <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_LSI_DISABLE();
 80072e2:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80072e4:	f023 0301 	bic.w	r3, r3, #1
 80072e8:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 80072ea:	f7fd fd91 	bl	8004e10 <HAL_GetTick>
 80072ee:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80072f0:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80072f2:	079f      	lsls	r7, r3, #30
 80072f4:	f57f af3c 	bpl.w	8007170 <HAL_RCC_OscConfig+0x20>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80072f8:	f7fd fd8a 	bl	8004e10 <HAL_GetTick>
 80072fc:	1b80      	subs	r0, r0, r6
 80072fe:	2802      	cmp	r0, #2
 8007300:	d9f6      	bls.n	80072f0 <HAL_RCC_OscConfig+0x1a0>
 8007302:	e76a      	b.n	80071da <HAL_RCC_OscConfig+0x8a>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007304:	4b34      	ldr	r3, [pc, #208]	; (80073d8 <HAL_RCC_OscConfig+0x288>)
 8007306:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007308:	00d0      	lsls	r0, r2, #3
 800730a:	d427      	bmi.n	800735c <HAL_RCC_OscConfig+0x20c>
      __HAL_RCC_PWR_CLK_ENABLE();
 800730c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
      pwrclkchanged = SET;
 800730e:	2601      	movs	r6, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8007310:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007314:	641a      	str	r2, [r3, #64]	; 0x40
 8007316:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007318:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800731c:	9301      	str	r3, [sp, #4]
 800731e:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8007320:	4d2e      	ldr	r5, [pc, #184]	; (80073dc <HAL_RCC_OscConfig+0x28c>)
 8007322:	682b      	ldr	r3, [r5, #0]
 8007324:	05d9      	lsls	r1, r3, #23
 8007326:	d51b      	bpl.n	8007360 <HAL_RCC_OscConfig+0x210>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007328:	68a3      	ldr	r3, [r4, #8]
 800732a:	4d2b      	ldr	r5, [pc, #172]	; (80073d8 <HAL_RCC_OscConfig+0x288>)
 800732c:	2b01      	cmp	r3, #1
 800732e:	d127      	bne.n	8007380 <HAL_RCC_OscConfig+0x230>
 8007330:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007332:	f043 0301 	orr.w	r3, r3, #1
 8007336:	672b      	str	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007338:	f241 3588 	movw	r5, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800733c:	f7fd fd68 	bl	8004e10 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007340:	4f25      	ldr	r7, [pc, #148]	; (80073d8 <HAL_RCC_OscConfig+0x288>)
      tickstart = HAL_GetTick();
 8007342:	4680      	mov	r8, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007344:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8007346:	079b      	lsls	r3, r3, #30
 8007348:	d53f      	bpl.n	80073ca <HAL_RCC_OscConfig+0x27a>
    if (pwrclkchanged == SET)
 800734a:	2e00      	cmp	r6, #0
 800734c:	f43f af14 	beq.w	8007178 <HAL_RCC_OscConfig+0x28>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007350:	4a21      	ldr	r2, [pc, #132]	; (80073d8 <HAL_RCC_OscConfig+0x288>)
 8007352:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007354:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007358:	6413      	str	r3, [r2, #64]	; 0x40
 800735a:	e70d      	b.n	8007178 <HAL_RCC_OscConfig+0x28>
  FlagStatus pwrclkchanged = RESET;
 800735c:	2600      	movs	r6, #0
 800735e:	e7df      	b.n	8007320 <HAL_RCC_OscConfig+0x1d0>
      PWR->CR1 |= PWR_CR1_DBP;
 8007360:	682b      	ldr	r3, [r5, #0]
 8007362:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007366:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007368:	f7fd fd52 	bl	8004e10 <HAL_GetTick>
 800736c:	4607      	mov	r7, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 800736e:	682b      	ldr	r3, [r5, #0]
 8007370:	05da      	lsls	r2, r3, #23
 8007372:	d4d9      	bmi.n	8007328 <HAL_RCC_OscConfig+0x1d8>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007374:	f7fd fd4c 	bl	8004e10 <HAL_GetTick>
 8007378:	1bc0      	subs	r0, r0, r7
 800737a:	2864      	cmp	r0, #100	; 0x64
 800737c:	d9f7      	bls.n	800736e <HAL_RCC_OscConfig+0x21e>
 800737e:	e72c      	b.n	80071da <HAL_RCC_OscConfig+0x8a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007380:	b9ab      	cbnz	r3, 80073ae <HAL_RCC_OscConfig+0x25e>
 8007382:	6f2b      	ldr	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007384:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007388:	f023 0301 	bic.w	r3, r3, #1
 800738c:	672b      	str	r3, [r5, #112]	; 0x70
 800738e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007390:	f023 0304 	bic.w	r3, r3, #4
 8007394:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8007396:	f7fd fd3b 	bl	8004e10 <HAL_GetTick>
 800739a:	4607      	mov	r7, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800739c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800739e:	0798      	lsls	r0, r3, #30
 80073a0:	d5d3      	bpl.n	800734a <HAL_RCC_OscConfig+0x1fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80073a2:	f7fd fd35 	bl	8004e10 <HAL_GetTick>
 80073a6:	1bc0      	subs	r0, r0, r7
 80073a8:	4540      	cmp	r0, r8
 80073aa:	d9f7      	bls.n	800739c <HAL_RCC_OscConfig+0x24c>
 80073ac:	e715      	b.n	80071da <HAL_RCC_OscConfig+0x8a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80073ae:	2b05      	cmp	r3, #5
 80073b0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80073b2:	d103      	bne.n	80073bc <HAL_RCC_OscConfig+0x26c>
 80073b4:	f043 0304 	orr.w	r3, r3, #4
 80073b8:	672b      	str	r3, [r5, #112]	; 0x70
 80073ba:	e7b9      	b.n	8007330 <HAL_RCC_OscConfig+0x1e0>
 80073bc:	f023 0301 	bic.w	r3, r3, #1
 80073c0:	672b      	str	r3, [r5, #112]	; 0x70
 80073c2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80073c4:	f023 0304 	bic.w	r3, r3, #4
 80073c8:	e7b5      	b.n	8007336 <HAL_RCC_OscConfig+0x1e6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80073ca:	f7fd fd21 	bl	8004e10 <HAL_GetTick>
 80073ce:	eba0 0008 	sub.w	r0, r0, r8
 80073d2:	42a8      	cmp	r0, r5
 80073d4:	d9b6      	bls.n	8007344 <HAL_RCC_OscConfig+0x1f4>
 80073d6:	e700      	b.n	80071da <HAL_RCC_OscConfig+0x8a>
 80073d8:	40023800 	.word	0x40023800
 80073dc:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80073e0:	4d3c      	ldr	r5, [pc, #240]	; (80074d4 <HAL_RCC_OscConfig+0x384>)
 80073e2:	68ab      	ldr	r3, [r5, #8]
 80073e4:	f003 030c 	and.w	r3, r3, #12
 80073e8:	2b08      	cmp	r3, #8
 80073ea:	d042      	beq.n	8007472 <HAL_RCC_OscConfig+0x322>
        __HAL_RCC_PLL_DISABLE();
 80073ec:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80073ee:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80073f0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80073f4:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80073f6:	d12f      	bne.n	8007458 <HAL_RCC_OscConfig+0x308>
        tickstart = HAL_GetTick();
 80073f8:	f7fd fd0a 	bl	8004e10 <HAL_GetTick>
 80073fc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80073fe:	682b      	ldr	r3, [r5, #0]
 8007400:	0199      	lsls	r1, r3, #6
 8007402:	d423      	bmi.n	800744c <HAL_RCC_OscConfig+0x2fc>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8007404:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8007408:	4313      	orrs	r3, r2
 800740a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800740c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007410:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007412:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007416:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007418:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800741c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800741e:	4c2d      	ldr	r4, [pc, #180]	; (80074d4 <HAL_RCC_OscConfig+0x384>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8007420:	0852      	lsrs	r2, r2, #1
 8007422:	3a01      	subs	r2, #1
 8007424:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007428:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800742a:	682b      	ldr	r3, [r5, #0]
 800742c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8007430:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8007432:	f7fd fced 	bl	8004e10 <HAL_GetTick>
 8007436:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007438:	6823      	ldr	r3, [r4, #0]
 800743a:	019a      	lsls	r2, r3, #6
 800743c:	f53f aea0 	bmi.w	8007180 <HAL_RCC_OscConfig+0x30>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007440:	f7fd fce6 	bl	8004e10 <HAL_GetTick>
 8007444:	1b40      	subs	r0, r0, r5
 8007446:	2802      	cmp	r0, #2
 8007448:	d9f6      	bls.n	8007438 <HAL_RCC_OscConfig+0x2e8>
 800744a:	e6c6      	b.n	80071da <HAL_RCC_OscConfig+0x8a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800744c:	f7fd fce0 	bl	8004e10 <HAL_GetTick>
 8007450:	1b80      	subs	r0, r0, r6
 8007452:	2802      	cmp	r0, #2
 8007454:	d9d3      	bls.n	80073fe <HAL_RCC_OscConfig+0x2ae>
 8007456:	e6c0      	b.n	80071da <HAL_RCC_OscConfig+0x8a>
        tickstart = HAL_GetTick();
 8007458:	f7fd fcda 	bl	8004e10 <HAL_GetTick>
 800745c:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800745e:	682b      	ldr	r3, [r5, #0]
 8007460:	019b      	lsls	r3, r3, #6
 8007462:	f57f ae8d 	bpl.w	8007180 <HAL_RCC_OscConfig+0x30>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007466:	f7fd fcd3 	bl	8004e10 <HAL_GetTick>
 800746a:	1b00      	subs	r0, r0, r4
 800746c:	2802      	cmp	r0, #2
 800746e:	d9f6      	bls.n	800745e <HAL_RCC_OscConfig+0x30e>
 8007470:	e6b3      	b.n	80071da <HAL_RCC_OscConfig+0x8a>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007472:	2801      	cmp	r0, #1
      pll_config = RCC->PLLCFGR;
 8007474:	686b      	ldr	r3, [r5, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007476:	f43f aeb1 	beq.w	80071dc <HAL_RCC_OscConfig+0x8c>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800747a:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800747e:	69e1      	ldr	r1, [r4, #28]
 8007480:	428a      	cmp	r2, r1
 8007482:	f47f ae69 	bne.w	8007158 <HAL_RCC_OscConfig+0x8>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007486:	f003 023f 	and.w	r2, r3, #63	; 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800748a:	6a21      	ldr	r1, [r4, #32]
 800748c:	428a      	cmp	r2, r1
 800748e:	f47f ae63 	bne.w	8007158 <HAL_RCC_OscConfig+0x8>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007492:	f647 72c0 	movw	r2, #32704	; 0x7fc0
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8007496:	6a61      	ldr	r1, [r4, #36]	; 0x24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007498:	401a      	ands	r2, r3
 800749a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800749e:	f47f ae5b 	bne.w	8007158 <HAL_RCC_OscConfig+0x8>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80074a2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80074a4:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 80074a8:	0852      	lsrs	r2, r2, #1
 80074aa:	3a01      	subs	r2, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80074ac:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80074b0:	f47f ae52 	bne.w	8007158 <HAL_RCC_OscConfig+0x8>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80074b4:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80074b8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80074ba:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 80074be:	f47f ae4b 	bne.w	8007158 <HAL_RCC_OscConfig+0x8>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 80074c2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80074c4:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80074c8:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
    return HAL_ERROR;
 80074cc:	bf14      	ite	ne
 80074ce:	2001      	movne	r0, #1
 80074d0:	2000      	moveq	r0, #0
 80074d2:	e683      	b.n	80071dc <HAL_RCC_OscConfig+0x8c>
 80074d4:	40023800 	.word	0x40023800

080074d8 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80074d8:	4913      	ldr	r1, [pc, #76]	; (8007528 <HAL_RCC_GetSysClockFreq+0x50>)
{
 80074da:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80074dc:	688b      	ldr	r3, [r1, #8]
 80074de:	f003 030c 	and.w	r3, r3, #12
 80074e2:	2b04      	cmp	r3, #4
 80074e4:	d003      	beq.n	80074ee <HAL_RCC_GetSysClockFreq+0x16>
 80074e6:	2b08      	cmp	r3, #8
 80074e8:	d003      	beq.n	80074f2 <HAL_RCC_GetSysClockFreq+0x1a>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80074ea:	4810      	ldr	r0, [pc, #64]	; (800752c <HAL_RCC_GetSysClockFreq+0x54>)
    {
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
 80074ec:	e000      	b.n	80074f0 <HAL_RCC_GetSysClockFreq+0x18>
      sysclockfreq = HSE_VALUE;
 80074ee:	4810      	ldr	r0, [pc, #64]	; (8007530 <HAL_RCC_GetSysClockFreq+0x58>)
}
 80074f0:	bd08      	pop	{r3, pc}
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80074f2:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80074f4:	684b      	ldr	r3, [r1, #4]
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80074f6:	6849      	ldr	r1, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80074f8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80074fc:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007500:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8007504:	bf1a      	itte	ne
 8007506:	480a      	ldrne	r0, [pc, #40]	; (8007530 <HAL_RCC_GetSysClockFreq+0x58>)
 8007508:	2300      	movne	r3, #0
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800750a:	4808      	ldreq	r0, [pc, #32]	; (800752c <HAL_RCC_GetSysClockFreq+0x54>)
 800750c:	fba1 0100 	umull	r0, r1, r1, r0
 8007510:	f7f8 fee6 	bl	80002e0 <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8007514:	4b04      	ldr	r3, [pc, #16]	; (8007528 <HAL_RCC_GetSysClockFreq+0x50>)
 8007516:	685b      	ldr	r3, [r3, #4]
 8007518:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800751c:	3301      	adds	r3, #1
 800751e:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco / pllp;
 8007520:	fbb0 f0f3 	udiv	r0, r0, r3
 8007524:	e7e4      	b.n	80074f0 <HAL_RCC_GetSysClockFreq+0x18>
 8007526:	bf00      	nop
 8007528:	40023800 	.word	0x40023800
 800752c:	00f42400 	.word	0x00f42400
 8007530:	017d7840 	.word	0x017d7840

08007534 <HAL_RCC_ClockConfig>:
{
 8007534:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007538:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800753a:	4604      	mov	r4, r0
 800753c:	b910      	cbnz	r0, 8007544 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800753e:	2001      	movs	r0, #1
}
 8007540:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8007544:	4a45      	ldr	r2, [pc, #276]	; (800765c <HAL_RCC_ClockConfig+0x128>)
 8007546:	6813      	ldr	r3, [r2, #0]
 8007548:	f003 030f 	and.w	r3, r3, #15
 800754c:	428b      	cmp	r3, r1
 800754e:	d328      	bcc.n	80075a2 <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007550:	6821      	ldr	r1, [r4, #0]
 8007552:	078f      	lsls	r7, r1, #30
 8007554:	d430      	bmi.n	80075b8 <HAL_RCC_ClockConfig+0x84>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8007556:	07c8      	lsls	r0, r1, #31
 8007558:	d443      	bmi.n	80075e2 <HAL_RCC_ClockConfig+0xae>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800755a:	4a40      	ldr	r2, [pc, #256]	; (800765c <HAL_RCC_ClockConfig+0x128>)
 800755c:	6813      	ldr	r3, [r2, #0]
 800755e:	f003 030f 	and.w	r3, r3, #15
 8007562:	42ab      	cmp	r3, r5
 8007564:	d866      	bhi.n	8007634 <HAL_RCC_ClockConfig+0x100>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007566:	6822      	ldr	r2, [r4, #0]
 8007568:	0751      	lsls	r1, r2, #29
 800756a:	d46f      	bmi.n	800764c <HAL_RCC_ClockConfig+0x118>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800756c:	0713      	lsls	r3, r2, #28
 800756e:	d507      	bpl.n	8007580 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8007570:	4a3b      	ldr	r2, [pc, #236]	; (8007660 <HAL_RCC_ClockConfig+0x12c>)
 8007572:	6921      	ldr	r1, [r4, #16]
 8007574:	6893      	ldr	r3, [r2, #8]
 8007576:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800757a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800757e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8007580:	f7ff ffaa 	bl	80074d8 <HAL_RCC_GetSysClockFreq>
 8007584:	4b36      	ldr	r3, [pc, #216]	; (8007660 <HAL_RCC_ClockConfig+0x12c>)
 8007586:	4a37      	ldr	r2, [pc, #220]	; (8007664 <HAL_RCC_ClockConfig+0x130>)
 8007588:	689b      	ldr	r3, [r3, #8]
 800758a:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800758e:	5cd3      	ldrb	r3, [r2, r3]
 8007590:	40d8      	lsrs	r0, r3
 8007592:	4b35      	ldr	r3, [pc, #212]	; (8007668 <HAL_RCC_ClockConfig+0x134>)
 8007594:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8007596:	4b35      	ldr	r3, [pc, #212]	; (800766c <HAL_RCC_ClockConfig+0x138>)
 8007598:	6818      	ldr	r0, [r3, #0]
 800759a:	f7fa fb95 	bl	8001cc8 <HAL_InitTick>
  return HAL_OK;
 800759e:	2000      	movs	r0, #0
 80075a0:	e7ce      	b.n	8007540 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80075a2:	6813      	ldr	r3, [r2, #0]
 80075a4:	f023 030f 	bic.w	r3, r3, #15
 80075a8:	430b      	orrs	r3, r1
 80075aa:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80075ac:	6813      	ldr	r3, [r2, #0]
 80075ae:	f003 030f 	and.w	r3, r3, #15
 80075b2:	428b      	cmp	r3, r1
 80075b4:	d1c3      	bne.n	800753e <HAL_RCC_ClockConfig+0xa>
 80075b6:	e7cb      	b.n	8007550 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80075b8:	f011 0f04 	tst.w	r1, #4
 80075bc:	4b28      	ldr	r3, [pc, #160]	; (8007660 <HAL_RCC_ClockConfig+0x12c>)
 80075be:	d003      	beq.n	80075c8 <HAL_RCC_ClockConfig+0x94>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80075c0:	689a      	ldr	r2, [r3, #8]
 80075c2:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 80075c6:	609a      	str	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80075c8:	070e      	lsls	r6, r1, #28
 80075ca:	d503      	bpl.n	80075d4 <HAL_RCC_ClockConfig+0xa0>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80075cc:	689a      	ldr	r2, [r3, #8]
 80075ce:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 80075d2:	609a      	str	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80075d4:	689a      	ldr	r2, [r3, #8]
 80075d6:	68a0      	ldr	r0, [r4, #8]
 80075d8:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80075dc:	4302      	orrs	r2, r0
 80075de:	609a      	str	r2, [r3, #8]
 80075e0:	e7b9      	b.n	8007556 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80075e2:	6861      	ldr	r1, [r4, #4]
 80075e4:	4b1e      	ldr	r3, [pc, #120]	; (8007660 <HAL_RCC_ClockConfig+0x12c>)
 80075e6:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80075e8:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80075ea:	d11b      	bne.n	8007624 <HAL_RCC_ClockConfig+0xf0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80075ec:	f412 3f00 	tst.w	r2, #131072	; 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80075f0:	d0a5      	beq.n	800753e <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80075f2:	689a      	ldr	r2, [r3, #8]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80075f4:	f241 3888 	movw	r8, #5000	; 0x1388
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80075f8:	4e19      	ldr	r6, [pc, #100]	; (8007660 <HAL_RCC_ClockConfig+0x12c>)
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80075fa:	f022 0203 	bic.w	r2, r2, #3
 80075fe:	430a      	orrs	r2, r1
 8007600:	609a      	str	r2, [r3, #8]
    tickstart = HAL_GetTick();
 8007602:	f7fd fc05 	bl	8004e10 <HAL_GetTick>
 8007606:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007608:	68b3      	ldr	r3, [r6, #8]
 800760a:	6862      	ldr	r2, [r4, #4]
 800760c:	f003 030c 	and.w	r3, r3, #12
 8007610:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8007614:	d0a1      	beq.n	800755a <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007616:	f7fd fbfb 	bl	8004e10 <HAL_GetTick>
 800761a:	1bc0      	subs	r0, r0, r7
 800761c:	4540      	cmp	r0, r8
 800761e:	d9f3      	bls.n	8007608 <HAL_RCC_ClockConfig+0xd4>
        return HAL_TIMEOUT;
 8007620:	2003      	movs	r0, #3
 8007622:	e78d      	b.n	8007540 <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8007624:	2902      	cmp	r1, #2
 8007626:	d102      	bne.n	800762e <HAL_RCC_ClockConfig+0xfa>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007628:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
 800762c:	e7e0      	b.n	80075f0 <HAL_RCC_ClockConfig+0xbc>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800762e:	f012 0f02 	tst.w	r2, #2
 8007632:	e7dd      	b.n	80075f0 <HAL_RCC_ClockConfig+0xbc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007634:	6813      	ldr	r3, [r2, #0]
 8007636:	f023 030f 	bic.w	r3, r3, #15
 800763a:	432b      	orrs	r3, r5
 800763c:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800763e:	6813      	ldr	r3, [r2, #0]
 8007640:	f003 030f 	and.w	r3, r3, #15
 8007644:	42ab      	cmp	r3, r5
 8007646:	f47f af7a 	bne.w	800753e <HAL_RCC_ClockConfig+0xa>
 800764a:	e78c      	b.n	8007566 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800764c:	4904      	ldr	r1, [pc, #16]	; (8007660 <HAL_RCC_ClockConfig+0x12c>)
 800764e:	68e0      	ldr	r0, [r4, #12]
 8007650:	688b      	ldr	r3, [r1, #8]
 8007652:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8007656:	4303      	orrs	r3, r0
 8007658:	608b      	str	r3, [r1, #8]
 800765a:	e787      	b.n	800756c <HAL_RCC_ClockConfig+0x38>
 800765c:	40023c00 	.word	0x40023c00
 8007660:	40023800 	.word	0x40023800
 8007664:	08023081 	.word	0x08023081
 8007668:	20000064 	.word	0x20000064
 800766c:	2000006c 	.word	0x2000006c

08007670 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8007670:	4b04      	ldr	r3, [pc, #16]	; (8007684 <HAL_RCC_GetPCLK1Freq+0x14>)
 8007672:	4a05      	ldr	r2, [pc, #20]	; (8007688 <HAL_RCC_GetPCLK1Freq+0x18>)
 8007674:	689b      	ldr	r3, [r3, #8]
 8007676:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800767a:	5cd3      	ldrb	r3, [r2, r3]
 800767c:	4a03      	ldr	r2, [pc, #12]	; (800768c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800767e:	6810      	ldr	r0, [r2, #0]
}
 8007680:	40d8      	lsrs	r0, r3
 8007682:	4770      	bx	lr
 8007684:	40023800 	.word	0x40023800
 8007688:	08023091 	.word	0x08023091
 800768c:	20000064 	.word	0x20000064

08007690 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8007690:	4b04      	ldr	r3, [pc, #16]	; (80076a4 <HAL_RCC_GetPCLK2Freq+0x14>)
 8007692:	4a05      	ldr	r2, [pc, #20]	; (80076a8 <HAL_RCC_GetPCLK2Freq+0x18>)
 8007694:	689b      	ldr	r3, [r3, #8]
 8007696:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800769a:	5cd3      	ldrb	r3, [r2, r3]
 800769c:	4a03      	ldr	r2, [pc, #12]	; (80076ac <HAL_RCC_GetPCLK2Freq+0x1c>)
 800769e:	6810      	ldr	r0, [r2, #0]
}
 80076a0:	40d8      	lsrs	r0, r3
 80076a2:	4770      	bx	lr
 80076a4:	40023800 	.word	0x40023800
 80076a8:	08023091 	.word	0x08023091
 80076ac:	20000064 	.word	0x20000064

080076b0 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80076b0:	230f      	movs	r3, #15
 80076b2:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80076b4:	4b0b      	ldr	r3, [pc, #44]	; (80076e4 <HAL_RCC_GetClockConfig+0x34>)
 80076b6:	689a      	ldr	r2, [r3, #8]
 80076b8:	f002 0203 	and.w	r2, r2, #3
 80076bc:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80076be:	689a      	ldr	r2, [r3, #8]
 80076c0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80076c4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80076c6:	689a      	ldr	r2, [r3, #8]
 80076c8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80076cc:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 80076ce:	689b      	ldr	r3, [r3, #8]
 80076d0:	08db      	lsrs	r3, r3, #3
 80076d2:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80076d6:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80076d8:	4b03      	ldr	r3, [pc, #12]	; (80076e8 <HAL_RCC_GetClockConfig+0x38>)
 80076da:	681b      	ldr	r3, [r3, #0]
 80076dc:	f003 030f 	and.w	r3, r3, #15
 80076e0:	600b      	str	r3, [r1, #0]
}
 80076e2:	4770      	bx	lr
 80076e4:	40023800 	.word	0x40023800
 80076e8:	40023c00 	.word	0x40023c00

080076ec <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80076ec:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80076f0:	6802      	ldr	r2, [r0, #0]
{
 80076f2:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80076f4:	f012 0601 	ands.w	r6, r2, #1
 80076f8:	d00b      	beq.n	8007712 <HAL_RCCEx_PeriphCLKConfig+0x26>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 80076fa:	4bba      	ldr	r3, [pc, #744]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 80076fc:	6899      	ldr	r1, [r3, #8]
 80076fe:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 8007702:	6099      	str	r1, [r3, #8]
 8007704:	6b46      	ldr	r6, [r0, #52]	; 0x34
 8007706:	6899      	ldr	r1, [r3, #8]
 8007708:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 800770a:	fab6 f686 	clz	r6, r6
 800770e:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8007710:	6099      	str	r1, [r3, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 8007712:	f412 2500 	ands.w	r5, r2, #524288	; 0x80000
 8007716:	d012      	beq.n	800773e <HAL_RCCEx_PeriphCLKConfig+0x52>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8007718:	49b2      	ldr	r1, [pc, #712]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 800771a:	6be5      	ldr	r5, [r4, #60]	; 0x3c
 800771c:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8007720:	f5b5 1f80 	cmp.w	r5, #1048576	; 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8007724:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
    {
      plli2sused = 1;
 8007728:	bf08      	it	eq
 800772a:	2601      	moveq	r6, #1
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 800772c:	ea43 0305 	orr.w	r3, r3, r5
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8007730:	bf16      	itet	ne
 8007732:	fab5 f585 	clzne	r5, r5
  uint32_t pllsaiused = 0;
 8007736:	2500      	moveq	r5, #0
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8007738:	096d      	lsrne	r5, r5, #5
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 800773a:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 800773e:	02d7      	lsls	r7, r2, #11
 8007740:	d510      	bpl.n	8007764 <HAL_RCCEx_PeriphCLKConfig+0x78>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8007742:	48a8      	ldr	r0, [pc, #672]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8007744:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8007746:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 800774a:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 800774e:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8007752:	ea43 0301 	orr.w	r3, r3, r1
 8007756:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 800775a:	f000 81a9 	beq.w	8007ab0 <HAL_RCCEx_PeriphCLKConfig+0x3c4>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
 800775e:	2900      	cmp	r1, #0
 8007760:	bf08      	it	eq
 8007762:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
 8007764:	f012 7f80 	tst.w	r2, #16777216	; 0x1000000
 8007768:	bf18      	it	ne
 800776a:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800776c:	0690      	lsls	r0, r2, #26
 800776e:	d531      	bpl.n	80077d4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8007770:	4b9c      	ldr	r3, [pc, #624]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8007772:	4f9d      	ldr	r7, [pc, #628]	; (80079e8 <HAL_RCCEx_PeriphCLKConfig+0x2fc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8007774:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007776:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800777a:	641a      	str	r2, [r3, #64]	; 0x40
 800777c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800777e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007782:	9301      	str	r3, [sp, #4]
 8007784:	9b01      	ldr	r3, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 8007786:	683b      	ldr	r3, [r7, #0]
 8007788:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800778c:	603b      	str	r3, [r7, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800778e:	f7fd fb3f 	bl	8004e10 <HAL_GetTick>
 8007792:	4680      	mov	r8, r0

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8007794:	683b      	ldr	r3, [r7, #0]
 8007796:	05d9      	lsls	r1, r3, #23
 8007798:	f140 818c 	bpl.w	8007ab4 <HAL_RCCEx_PeriphCLKConfig+0x3c8>
        return HAL_TIMEOUT;
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800779c:	4f91      	ldr	r7, [pc, #580]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 800779e:	6f3b      	ldr	r3, [r7, #112]	; 0x70

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80077a0:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 80077a4:	f040 8191 	bne.w	8007aca <HAL_RCCEx_PeriphCLKConfig+0x3de>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80077a8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80077aa:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80077ae:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80077b2:	4a8c      	ldr	r2, [pc, #560]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 80077b4:	f040 81af 	bne.w	8007b16 <HAL_RCCEx_PeriphCLKConfig+0x42a>
 80077b8:	6891      	ldr	r1, [r2, #8]
 80077ba:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 80077be:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80077c2:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 80077c6:	4301      	orrs	r1, r0
 80077c8:	6091      	str	r1, [r2, #8]
 80077ca:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80077ce:	6f11      	ldr	r1, [r2, #112]	; 0x70
 80077d0:	430b      	orrs	r3, r1
 80077d2:	6713      	str	r3, [r2, #112]	; 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80077d4:	6823      	ldr	r3, [r4, #0]
 80077d6:	06df      	lsls	r7, r3, #27
 80077d8:	d50c      	bpl.n	80077f4 <HAL_RCCEx_PeriphCLKConfig+0x108>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80077da:	4a82      	ldr	r2, [pc, #520]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 80077dc:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 80077e0:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
 80077e4:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
 80077e8:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 80077ec:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80077ee:	4301      	orrs	r1, r0
 80077f0:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 80077f4:	0458      	lsls	r0, r3, #17
 80077f6:	d508      	bpl.n	800780a <HAL_RCCEx_PeriphCLKConfig+0x11e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 80077f8:	497a      	ldr	r1, [pc, #488]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 80077fa:	6e60      	ldr	r0, [r4, #100]	; 0x64
 80077fc:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8007800:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8007804:	4302      	orrs	r2, r0
 8007806:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 800780a:	0419      	lsls	r1, r3, #16
 800780c:	d508      	bpl.n	8007820 <HAL_RCCEx_PeriphCLKConfig+0x134>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 800780e:	4975      	ldr	r1, [pc, #468]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8007810:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8007812:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8007816:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 800781a:	4302      	orrs	r2, r0
 800781c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8007820:	03da      	lsls	r2, r3, #15
 8007822:	d508      	bpl.n	8007836 <HAL_RCCEx_PeriphCLKConfig+0x14a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8007824:	496f      	ldr	r1, [pc, #444]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8007826:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8007828:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800782c:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8007830:	4302      	orrs	r2, r0
 8007832:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8007836:	039f      	lsls	r7, r3, #14
 8007838:	d508      	bpl.n	800784c <HAL_RCCEx_PeriphCLKConfig+0x160>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 800783a:	496a      	ldr	r1, [pc, #424]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 800783c:	6f20      	ldr	r0, [r4, #112]	; 0x70
 800783e:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8007842:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8007846:	4302      	orrs	r2, r0
 8007848:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 800784c:	0658      	lsls	r0, r3, #25
 800784e:	d508      	bpl.n	8007862 <HAL_RCCEx_PeriphCLKConfig+0x176>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8007850:	4964      	ldr	r1, [pc, #400]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8007852:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8007854:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8007858:	f022 0203 	bic.w	r2, r2, #3
 800785c:	4302      	orrs	r2, r0
 800785e:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8007862:	0619      	lsls	r1, r3, #24
 8007864:	d508      	bpl.n	8007878 <HAL_RCCEx_PeriphCLKConfig+0x18c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8007866:	495f      	ldr	r1, [pc, #380]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8007868:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800786a:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800786e:	f022 020c 	bic.w	r2, r2, #12
 8007872:	4302      	orrs	r2, r0
 8007874:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8007878:	05da      	lsls	r2, r3, #23
 800787a:	d508      	bpl.n	800788e <HAL_RCCEx_PeriphCLKConfig+0x1a2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 800787c:	4959      	ldr	r1, [pc, #356]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 800787e:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8007880:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8007884:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 8007888:	4302      	orrs	r2, r0
 800788a:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 800788e:	059f      	lsls	r7, r3, #22
 8007890:	d508      	bpl.n	80078a4 <HAL_RCCEx_PeriphCLKConfig+0x1b8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8007892:	4954      	ldr	r1, [pc, #336]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8007894:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8007896:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800789a:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 800789e:	4302      	orrs	r2, r0
 80078a0:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 80078a4:	0558      	lsls	r0, r3, #21
 80078a6:	d508      	bpl.n	80078ba <HAL_RCCEx_PeriphCLKConfig+0x1ce>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 80078a8:	494e      	ldr	r1, [pc, #312]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 80078aa:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80078ac:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80078b0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80078b4:	4302      	orrs	r2, r0
 80078b6:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 80078ba:	0519      	lsls	r1, r3, #20
 80078bc:	d508      	bpl.n	80078d0 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 80078be:	4949      	ldr	r1, [pc, #292]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 80078c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80078c2:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80078c6:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 80078ca:	4302      	orrs	r2, r0
 80078cc:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 80078d0:	04da      	lsls	r2, r3, #19
 80078d2:	d508      	bpl.n	80078e6 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 80078d4:	4943      	ldr	r1, [pc, #268]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 80078d6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80078d8:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80078dc:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 80078e0:	4302      	orrs	r2, r0
 80078e2:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 80078e6:	049f      	lsls	r7, r3, #18
 80078e8:	d508      	bpl.n	80078fc <HAL_RCCEx_PeriphCLKConfig+0x210>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 80078ea:	493e      	ldr	r1, [pc, #248]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 80078ec:	6e20      	ldr	r0, [r4, #96]	; 0x60
 80078ee:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80078f2:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 80078f6:	4302      	orrs	r2, r0
 80078f8:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 80078fc:	0258      	lsls	r0, r3, #9
 80078fe:	d508      	bpl.n	8007912 <HAL_RCCEx_PeriphCLKConfig+0x226>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8007900:	4938      	ldr	r1, [pc, #224]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8007902:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8007904:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8007908:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 800790c:	4302      	orrs	r2, r0
 800790e:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8007912:	0299      	lsls	r1, r3, #10
 8007914:	d50c      	bpl.n	8007930 <HAL_RCCEx_PeriphCLKConfig+0x244>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8007916:	4833      	ldr	r0, [pc, #204]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8007918:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
 800791a:	f8d0 2090 	ldr.w	r2, [r0, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
 800791e:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8007922:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
      pllsaiused = 1;
 8007926:	bf08      	it	eq
 8007928:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800792a:	430a      	orrs	r2, r1
 800792c:	f8c0 2090 	str.w	r2, [r0, #144]	; 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
 8007930:	f013 0f08 	tst.w	r3, #8
 8007934:	bf18      	it	ne
 8007936:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8007938:	035a      	lsls	r2, r3, #13
 800793a:	d508      	bpl.n	800794e <HAL_RCCEx_PeriphCLKConfig+0x262>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 800793c:	4929      	ldr	r1, [pc, #164]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 800793e:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8007940:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8007944:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8007948:	4302      	orrs	r2, r0
 800794a:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 800794e:	021f      	lsls	r7, r3, #8
 8007950:	d509      	bpl.n	8007966 <HAL_RCCEx_PeriphCLKConfig+0x27a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8007952:	4924      	ldr	r1, [pc, #144]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8007954:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
 8007958:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800795c:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8007960:	4302      	orrs	r2, r0
 8007962:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

#if defined (STM32F765xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx)
  /*------------------------------------- SDMMC2 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC2) == RCC_PERIPHCLK_SDMMC2)
 8007966:	0158      	lsls	r0, r3, #5
 8007968:	d509      	bpl.n	800797e <HAL_RCCEx_PeriphCLKConfig+0x292>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC2CLKSOURCE(PeriphClkInit->Sdmmc2ClockSelection));

    /* Configure the SDMMC2 clock source */
    __HAL_RCC_SDMMC2_CONFIG(PeriphClkInit->Sdmmc2ClockSelection);
 800796a:	491e      	ldr	r1, [pc, #120]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 800796c:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
 8007970:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8007974:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8007978:	4302      	orrs	r2, r0
 800797a:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*------------------------------------- DFSDM1 Configuration -------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 800797e:	0119      	lsls	r1, r3, #4
 8007980:	d509      	bpl.n	8007996 <HAL_RCCEx_PeriphCLKConfig+0x2aa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));

    /* Configure the DFSDM1 interface clock source */
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8007982:	4918      	ldr	r1, [pc, #96]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8007984:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8007988:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 800798c:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 8007990:	4302      	orrs	r2, r0
 8007992:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
  }

  /*------------------------------------- DFSDM AUDIO Configuration -------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1_AUDIO) == RCC_PERIPHCLK_DFSDM1_AUDIO)
 8007996:	00da      	lsls	r2, r3, #3
 8007998:	d509      	bpl.n	80079ae <HAL_RCCEx_PeriphCLKConfig+0x2c2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1AUDIOCLKSOURCE(PeriphClkInit->Dfsdm1AudioClockSelection));

    /* Configure the DFSDM interface clock source */
    __HAL_RCC_DFSDM1AUDIO_CONFIG(PeriphClkInit->Dfsdm1AudioClockSelection);
 800799a:	4912      	ldr	r1, [pc, #72]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 800799c:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 80079a0:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 80079a4:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 80079a8:	4302      	orrs	r2, r0
 80079aa:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || (PeriphClkInit->PeriphClockSelection == RCC_PERIPHCLK_PLLI2S))
 80079ae:	2e01      	cmp	r6, #1
 80079b0:	f000 80b5 	beq.w	8007b1e <HAL_RCCEx_PeriphCLKConfig+0x432>
 80079b4:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80079b8:	f000 80b1 	beq.w	8007b1e <HAL_RCCEx_PeriphCLKConfig+0x432>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 80079bc:	2d01      	cmp	r5, #1
 80079be:	d175      	bne.n	8007aac <HAL_RCCEx_PeriphCLKConfig+0x3c0>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80079c0:	4d08      	ldr	r5, [pc, #32]	; (80079e4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 80079c2:	682b      	ldr	r3, [r5, #0]
 80079c4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80079c8:	602b      	str	r3, [r5, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80079ca:	f7fd fa21 	bl	8004e10 <HAL_GetTick>
 80079ce:	4606      	mov	r6, r0

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80079d0:	682b      	ldr	r3, [r5, #0]
 80079d2:	009f      	lsls	r7, r3, #2
 80079d4:	f100 8127 	bmi.w	8007c26 <HAL_RCCEx_PeriphCLKConfig+0x53a>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 80079d8:	6821      	ldr	r1, [r4, #0]
 80079da:	030e      	lsls	r6, r1, #12
 80079dc:	d506      	bpl.n	80079ec <HAL_RCCEx_PeriphCLKConfig+0x300>
 80079de:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80079e0:	b143      	cbz	r3, 80079f4 <HAL_RCCEx_PeriphCLKConfig+0x308>
 80079e2:	e003      	b.n	80079ec <HAL_RCCEx_PeriphCLKConfig+0x300>
 80079e4:	40023800 	.word	0x40023800
 80079e8:	40007000 	.word	0x40007000
 80079ec:	02cd      	lsls	r5, r1, #11
 80079ee:	d51d      	bpl.n	8007a2c <HAL_RCCEx_PeriphCLKConfig+0x340>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 80079f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80079f2:	b9db      	cbnz	r3, 8007a2c <HAL_RCCEx_PeriphCLKConfig+0x340>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 80079f4:	4a93      	ldr	r2, [pc, #588]	; (8007c44 <HAL_RCCEx_PeriphCLKConfig+0x558>)
 80079f6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80079fa:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80079fe:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8007a02:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8007a06:	4303      	orrs	r3, r0
 8007a08:	6960      	ldr	r0, [r4, #20]
 8007a0a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007a0e:	69a0      	ldr	r0, [r4, #24]
 8007a10:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8007a14:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8007a18:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8007a1c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007a1e:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8007a22:	3801      	subs	r0, #1
 8007a24:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8007a28:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8007a2c:	0288      	lsls	r0, r1, #10
 8007a2e:	d515      	bpl.n	8007a5c <HAL_RCCEx_PeriphCLKConfig+0x370>
 8007a30:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
 8007a32:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8007a36:	d111      	bne.n	8007a5c <HAL_RCCEx_PeriphCLKConfig+0x370>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007a38:	4a82      	ldr	r2, [pc, #520]	; (8007c44 <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8007a3a:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8007a3e:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8007a42:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8007a46:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8007a4a:	4303      	orrs	r3, r0
 8007a4c:	6960      	ldr	r0, [r4, #20]
 8007a4e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007a52:	6a20      	ldr	r0, [r4, #32]
 8007a54:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8007a58:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8007a5c:	070a      	lsls	r2, r1, #28
 8007a5e:	d519      	bpl.n	8007a94 <HAL_RCCEx_PeriphCLKConfig+0x3a8>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007a60:	4978      	ldr	r1, [pc, #480]	; (8007c44 <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8007a62:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8007a66:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8007a6a:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 8007a6e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8007a72:	4313      	orrs	r3, r2
 8007a74:	6962      	ldr	r2, [r4, #20]
 8007a76:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007a7a:	69e2      	ldr	r2, [r4, #28]
 8007a7c:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007a80:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8007a84:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8007a88:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007a8a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007a8e:	4313      	orrs	r3, r2
 8007a90:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007a94:	4c6b      	ldr	r4, [pc, #428]	; (8007c44 <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8007a96:	6823      	ldr	r3, [r4, #0]
 8007a98:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007a9c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8007a9e:	f7fd f9b7 	bl	8004e10 <HAL_GetTick>
 8007aa2:	4605      	mov	r5, r0

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007aa4:	6823      	ldr	r3, [r4, #0]
 8007aa6:	009b      	lsls	r3, r3, #2
 8007aa8:	f140 80c4 	bpl.w	8007c34 <HAL_RCCEx_PeriphCLKConfig+0x548>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8007aac:	2000      	movs	r0, #0
 8007aae:	e009      	b.n	8007ac4 <HAL_RCCEx_PeriphCLKConfig+0x3d8>
      plli2sused = 1;
 8007ab0:	2601      	movs	r6, #1
 8007ab2:	e657      	b.n	8007764 <HAL_RCCEx_PeriphCLKConfig+0x78>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007ab4:	f7fd f9ac 	bl	8004e10 <HAL_GetTick>
 8007ab8:	eba0 0008 	sub.w	r0, r0, r8
 8007abc:	2864      	cmp	r0, #100	; 0x64
 8007abe:	f67f ae69 	bls.w	8007794 <HAL_RCCEx_PeriphCLKConfig+0xa8>
        return HAL_TIMEOUT;
 8007ac2:	2003      	movs	r0, #3
}
 8007ac4:	b003      	add	sp, #12
 8007ac6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007aca:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007acc:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8007ad0:	429a      	cmp	r2, r3
 8007ad2:	f43f ae69 	beq.w	80077a8 <HAL_RCCEx_PeriphCLKConfig+0xbc>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007ad6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007ad8:	6f3a      	ldr	r2, [r7, #112]	; 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007ada:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 8007ade:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8007ae2:	673a      	str	r2, [r7, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007ae4:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 8007ae6:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8007aea:	673a      	str	r2, [r7, #112]	; 0x70
      RCC->BDCR = tmpreg0;
 8007aec:	673b      	str	r3, [r7, #112]	; 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007aee:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8007af0:	07da      	lsls	r2, r3, #31
 8007af2:	f57f ae59 	bpl.w	80077a8 <HAL_RCCEx_PeriphCLKConfig+0xbc>
        tickstart = HAL_GetTick();
 8007af6:	f7fd f98b 	bl	8004e10 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007afa:	f241 3988 	movw	r9, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8007afe:	4680      	mov	r8, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007b00:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8007b02:	079b      	lsls	r3, r3, #30
 8007b04:	f53f ae50 	bmi.w	80077a8 <HAL_RCCEx_PeriphCLKConfig+0xbc>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007b08:	f7fd f982 	bl	8004e10 <HAL_GetTick>
 8007b0c:	eba0 0008 	sub.w	r0, r0, r8
 8007b10:	4548      	cmp	r0, r9
 8007b12:	d9f5      	bls.n	8007b00 <HAL_RCCEx_PeriphCLKConfig+0x414>
 8007b14:	e7d5      	b.n	8007ac2 <HAL_RCCEx_PeriphCLKConfig+0x3d6>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007b16:	6891      	ldr	r1, [r2, #8]
 8007b18:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007b1c:	e654      	b.n	80077c8 <HAL_RCCEx_PeriphCLKConfig+0xdc>
    __HAL_RCC_PLLI2S_DISABLE();
 8007b1e:	4e49      	ldr	r6, [pc, #292]	; (8007c44 <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8007b20:	6833      	ldr	r3, [r6, #0]
 8007b22:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8007b26:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 8007b28:	f7fd f972 	bl	8004e10 <HAL_GetTick>
 8007b2c:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007b2e:	6833      	ldr	r3, [r6, #0]
 8007b30:	011b      	lsls	r3, r3, #4
 8007b32:	d472      	bmi.n	8007c1a <HAL_RCCEx_PeriphCLKConfig+0x52e>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8007b34:	6822      	ldr	r2, [r4, #0]
 8007b36:	07d7      	lsls	r7, r2, #31
 8007b38:	d512      	bpl.n	8007b60 <HAL_RCCEx_PeriphCLKConfig+0x474>
 8007b3a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007b3c:	b983      	cbnz	r3, 8007b60 <HAL_RCCEx_PeriphCLKConfig+0x474>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8007b3e:	f8d6 3084 	ldr.w	r3, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8007b42:	f8d6 1084 	ldr.w	r1, [r6, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8007b46:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8007b4a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8007b4e:	430b      	orrs	r3, r1
 8007b50:	6861      	ldr	r1, [r4, #4]
 8007b52:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8007b56:	68a1      	ldr	r1, [r4, #8]
 8007b58:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8007b5c:	f8c6 3084 	str.w	r3, [r6, #132]	; 0x84
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8007b60:	0316      	lsls	r6, r2, #12
 8007b62:	d503      	bpl.n	8007b6c <HAL_RCCEx_PeriphCLKConfig+0x480>
 8007b64:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007b66:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007b6a:	d005      	beq.n	8007b78 <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8007b6c:	02d0      	lsls	r0, r2, #11
 8007b6e:	d51e      	bpl.n	8007bae <HAL_RCCEx_PeriphCLKConfig+0x4c2>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8007b70:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007b72:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007b76:	d11a      	bne.n	8007bae <HAL_RCCEx_PeriphCLKConfig+0x4c2>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8007b78:	4932      	ldr	r1, [pc, #200]	; (8007c44 <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8007b7a:	f8d1 3084 	ldr.w	r3, [r1, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007b7e:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8007b82:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8007b86:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8007b8a:	4303      	orrs	r3, r0
 8007b8c:	6860      	ldr	r0, [r4, #4]
 8007b8e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007b92:	68e0      	ldr	r0, [r4, #12]
 8007b94:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8007b98:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8007b9c:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 8007ba0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007ba2:	f020 001f 	bic.w	r0, r0, #31
 8007ba6:	3b01      	subs	r3, #1
 8007ba8:	4303      	orrs	r3, r0
 8007baa:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8007bae:	01d1      	lsls	r1, r2, #7
 8007bb0:	d511      	bpl.n	8007bd6 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8007bb2:	4924      	ldr	r1, [pc, #144]	; (8007c44 <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8007bb4:	f8d1 3084 	ldr.w	r3, [r1, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007bb8:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8007bbc:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8007bc0:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8007bc4:	4303      	orrs	r3, r0
 8007bc6:	6860      	ldr	r0, [r4, #4]
 8007bc8:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007bcc:	6920      	ldr	r0, [r4, #16]
 8007bce:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8007bd2:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8007bd6:	0192      	lsls	r2, r2, #6
 8007bd8:	d50d      	bpl.n	8007bf6 <HAL_RCCEx_PeriphCLKConfig+0x50a>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8007bda:	6923      	ldr	r3, [r4, #16]
 8007bdc:	6862      	ldr	r2, [r4, #4]
 8007bde:	041b      	lsls	r3, r3, #16
 8007be0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007be4:	68e2      	ldr	r2, [r4, #12]
 8007be6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007bea:	68a2      	ldr	r2, [r4, #8]
 8007bec:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007bf0:	4a14      	ldr	r2, [pc, #80]	; (8007c44 <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8007bf2:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007bf6:	4e13      	ldr	r6, [pc, #76]	; (8007c44 <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8007bf8:	6833      	ldr	r3, [r6, #0]
 8007bfa:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8007bfe:	6033      	str	r3, [r6, #0]
    tickstart = HAL_GetTick();
 8007c00:	f7fd f906 	bl	8004e10 <HAL_GetTick>
 8007c04:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007c06:	6833      	ldr	r3, [r6, #0]
 8007c08:	011b      	lsls	r3, r3, #4
 8007c0a:	f53f aed7 	bmi.w	80079bc <HAL_RCCEx_PeriphCLKConfig+0x2d0>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8007c0e:	f7fd f8ff 	bl	8004e10 <HAL_GetTick>
 8007c12:	1bc0      	subs	r0, r0, r7
 8007c14:	2864      	cmp	r0, #100	; 0x64
 8007c16:	d9f6      	bls.n	8007c06 <HAL_RCCEx_PeriphCLKConfig+0x51a>
 8007c18:	e753      	b.n	8007ac2 <HAL_RCCEx_PeriphCLKConfig+0x3d6>
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8007c1a:	f7fd f8f9 	bl	8004e10 <HAL_GetTick>
 8007c1e:	1bc0      	subs	r0, r0, r7
 8007c20:	2864      	cmp	r0, #100	; 0x64
 8007c22:	d984      	bls.n	8007b2e <HAL_RCCEx_PeriphCLKConfig+0x442>
 8007c24:	e74d      	b.n	8007ac2 <HAL_RCCEx_PeriphCLKConfig+0x3d6>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8007c26:	f7fd f8f3 	bl	8004e10 <HAL_GetTick>
 8007c2a:	1b80      	subs	r0, r0, r6
 8007c2c:	2864      	cmp	r0, #100	; 0x64
 8007c2e:	f67f aecf 	bls.w	80079d0 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 8007c32:	e746      	b.n	8007ac2 <HAL_RCCEx_PeriphCLKConfig+0x3d6>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8007c34:	f7fd f8ec 	bl	8004e10 <HAL_GetTick>
 8007c38:	1b40      	subs	r0, r0, r5
 8007c3a:	2864      	cmp	r0, #100	; 0x64
 8007c3c:	f67f af32 	bls.w	8007aa4 <HAL_RCCEx_PeriphCLKConfig+0x3b8>
 8007c40:	e73f      	b.n	8007ac2 <HAL_RCCEx_PeriphCLKConfig+0x3d6>
 8007c42:	bf00      	nop
 8007c44:	40023800 	.word	0x40023800

08007c48 <HAL_RCCEx_GetPeriphCLKFreq>:
  /* This variable is used to store the VCO Input (value in Hz) */
  uint32_t vcoinput = 0;
  /* This variable is used to store the SAI clock source */
  uint32_t saiclocksource = 0;

  if (PeriphClk == RCC_PERIPHCLK_SAI1)
 8007c48:	f5b0 2f00 	cmp.w	r0, #524288	; 0x80000
 8007c4c:	d131      	bne.n	8007cb2 <HAL_RCCEx_GetPeriphCLKFreq+0x6a>
  {
    saiclocksource = RCC->DCKCFGR1;
 8007c4e:	4b34      	ldr	r3, [pc, #208]	; (8007d20 <HAL_RCCEx_GetPeriphCLKFreq+0xd8>)
 8007c50:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
    saiclocksource &= RCC_DCKCFGR1_SAI1SEL;
 8007c54:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
    switch (saiclocksource)
 8007c58:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
 8007c5c:	d056      	beq.n	8007d0c <HAL_RCCEx_GetPeriphCLKFreq+0xc4>
 8007c5e:	d803      	bhi.n	8007c68 <HAL_RCCEx_GetPeriphCLKFreq+0x20>

  if (PeriphClk == RCC_PERIPHCLK_SAI2)
  {
    saiclocksource = RCC->DCKCFGR1;
    saiclocksource &= RCC_DCKCFGR1_SAI2SEL;
    switch (saiclocksource)
 8007c60:	2a00      	cmp	r2, #0
 8007c62:	d038      	beq.n	8007cd6 <HAL_RCCEx_GetPeriphCLKFreq+0x8e>
    default :
      {
        break;
      }
    }
  }
 8007c64:	2000      	movs	r0, #0
 8007c66:	4770      	bx	lr
    switch (saiclocksource)
 8007c68:	f5b2 1f00 	cmp.w	r2, #2097152	; 0x200000
 8007c6c:	d056      	beq.n	8007d1c <HAL_RCCEx_GetPeriphCLKFreq+0xd4>
 8007c6e:	f5b2 1f40 	cmp.w	r2, #3145728	; 0x300000
    switch (saiclocksource)
 8007c72:	d1f7      	bne.n	8007c64 <HAL_RCCEx_GetPeriphCLKFreq+0x1c>
        if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 8007c74:	685b      	ldr	r3, [r3, #4]
          frequency = HSI_VALUE;
 8007c76:	482b      	ldr	r0, [pc, #172]	; (8007d24 <HAL_RCCEx_GetPeriphCLKFreq+0xdc>)
        if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 8007c78:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
          frequency = HSI_VALUE;
 8007c7c:	4b2a      	ldr	r3, [pc, #168]	; (8007d28 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>)
 8007c7e:	bf08      	it	eq
 8007c80:	4618      	moveq	r0, r3
 8007c82:	4770      	bx	lr
          vcoinput = ((HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM)));
 8007c84:	4b27      	ldr	r3, [pc, #156]	; (8007d24 <HAL_RCCEx_GetPeriphCLKFreq+0xdc>)
        tmpreg = (RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> 24;
 8007c86:	4a26      	ldr	r2, [pc, #152]	; (8007d20 <HAL_RCCEx_GetPeriphCLKFreq+0xd8>)
          vcoinput = ((HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM)));
 8007c88:	fbb3 f3f0 	udiv	r3, r3, r0
        tmpreg = (RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> 24;
 8007c8c:	f8d2 1084 	ldr.w	r1, [r2, #132]	; 0x84
        frequency = (vcoinput * ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6))/(tmpreg);
 8007c90:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
 8007c94:	f3c0 1088 	ubfx	r0, r0, #6, #9
 8007c98:	4358      	muls	r0, r3
        tmpreg = (RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> 24;
 8007c9a:	f3c1 6303 	ubfx	r3, r1, #24, #4
        frequency = (vcoinput * ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6))/(tmpreg);
 8007c9e:	fbb0 f0f3 	udiv	r0, r0, r3
        tmpreg = ((RCC->DCKCFGR1 & RCC_DCKCFGR1_PLLI2SDIVQ) + 1);
 8007ca2:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8007ca6:	f003 031f 	and.w	r3, r3, #31
 8007caa:	3301      	adds	r3, #1
        frequency = frequency/(tmpreg);
 8007cac:	fbb0 f0f3 	udiv	r0, r0, r3
        break;
 8007cb0:	4770      	bx	lr
  if (PeriphClk == RCC_PERIPHCLK_SAI2)
 8007cb2:	f5b0 1f80 	cmp.w	r0, #1048576	; 0x100000
 8007cb6:	d1d5      	bne.n	8007c64 <HAL_RCCEx_GetPeriphCLKFreq+0x1c>
    saiclocksource = RCC->DCKCFGR1;
 8007cb8:	4b19      	ldr	r3, [pc, #100]	; (8007d20 <HAL_RCCEx_GetPeriphCLKFreq+0xd8>)
 8007cba:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
    saiclocksource &= RCC_DCKCFGR1_SAI2SEL;
 8007cbe:	f402 0240 	and.w	r2, r2, #12582912	; 0xc00000
    switch (saiclocksource)
 8007cc2:	f5b2 0f80 	cmp.w	r2, #4194304	; 0x400000
 8007cc6:	d021      	beq.n	8007d0c <HAL_RCCEx_GetPeriphCLKFreq+0xc4>
 8007cc8:	d9ca      	bls.n	8007c60 <HAL_RCCEx_GetPeriphCLKFreq+0x18>
 8007cca:	f5b2 0f00 	cmp.w	r2, #8388608	; 0x800000
 8007cce:	d025      	beq.n	8007d1c <HAL_RCCEx_GetPeriphCLKFreq+0xd4>
 8007cd0:	f5b2 0f40 	cmp.w	r2, #12582912	; 0xc00000
 8007cd4:	e7cd      	b.n	8007c72 <HAL_RCCEx_GetPeriphCLKFreq+0x2a>
        if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 8007cd6:	685a      	ldr	r2, [r3, #4]
          vcoinput = (HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 8007cd8:	6858      	ldr	r0, [r3, #4]
        if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 8007cda:	0252      	lsls	r2, r2, #9
        tmpreg = (RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> 24;
 8007cdc:	4a10      	ldr	r2, [pc, #64]	; (8007d20 <HAL_RCCEx_GetPeriphCLKFreq+0xd8>)
          vcoinput = (HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 8007cde:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8007ce2:	bf54      	ite	pl
 8007ce4:	4b10      	ldrpl	r3, [pc, #64]	; (8007d28 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>)
          vcoinput = ((HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM)));
 8007ce6:	4b0f      	ldrmi	r3, [pc, #60]	; (8007d24 <HAL_RCCEx_GetPeriphCLKFreq+0xdc>)
        tmpreg = (RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> 24;
 8007ce8:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
          vcoinput = ((HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM)));
 8007cec:	fbb3 f3f0 	udiv	r3, r3, r0
        frequency = (vcoinput * ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIN) >> 6))/(tmpreg);
 8007cf0:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
 8007cf4:	f3c0 1088 	ubfx	r0, r0, #6, #9
 8007cf8:	4358      	muls	r0, r3
        tmpreg = (RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> 24;
 8007cfa:	f3c1 6303 	ubfx	r3, r1, #24, #4
        frequency = (vcoinput * ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIN) >> 6))/(tmpreg);
 8007cfe:	fbb0 f0f3 	udiv	r0, r0, r3
        tmpreg = (((RCC->DCKCFGR1 & RCC_DCKCFGR1_PLLSAIDIVQ) >> 8) + 1);
 8007d02:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8007d06:	f3c3 2304 	ubfx	r3, r3, #8, #5
 8007d0a:	e7ce      	b.n	8007caa <HAL_RCCEx_GetPeriphCLKFreq+0x62>
        if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 8007d0c:	685a      	ldr	r2, [r3, #4]
          vcoinput = (HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 8007d0e:	6858      	ldr	r0, [r3, #4]
        if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 8007d10:	0253      	lsls	r3, r2, #9
          vcoinput = (HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 8007d12:	f000 003f 	and.w	r0, r0, #63	; 0x3f
        if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 8007d16:	d4b5      	bmi.n	8007c84 <HAL_RCCEx_GetPeriphCLKFreq+0x3c>
          vcoinput = (HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 8007d18:	4b03      	ldr	r3, [pc, #12]	; (8007d28 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>)
 8007d1a:	e7b4      	b.n	8007c86 <HAL_RCCEx_GetPeriphCLKFreq+0x3e>
        frequency = EXTERNAL_CLOCK_VALUE;
 8007d1c:	4803      	ldr	r0, [pc, #12]	; (8007d2c <HAL_RCCEx_GetPeriphCLKFreq+0xe4>)

  return frequency;
}
 8007d1e:	4770      	bx	lr
 8007d20:	40023800 	.word	0x40023800
 8007d24:	017d7840 	.word	0x017d7840
 8007d28:	00f42400 	.word	0x00f42400
 8007d2c:	00bb8000 	.word	0x00bb8000

08007d30 <SAI_InterruptFlag>:
 */
static uint32_t SAI_InterruptFlag(SAI_HandleTypeDef *hsai, uint32_t mode)
{
  uint32_t tmpIT = SAI_IT_OVRUDR;

  if(mode == SAI_MODE_IT)
 8007d30:	2901      	cmp	r1, #1
  {
    tmpIT|= SAI_IT_FREQ;
  }

  if((hsai->Init.Protocol == SAI_AC97_PROTOCOL) &&
 8007d32:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8007d34:	6842      	ldr	r2, [r0, #4]
  uint32_t tmpIT = SAI_IT_OVRUDR;
 8007d36:	bf0c      	ite	eq
 8007d38:	2309      	moveq	r3, #9
 8007d3a:	2301      	movne	r3, #1
  if((hsai->Init.Protocol == SAI_AC97_PROTOCOL) &&
 8007d3c:	2908      	cmp	r1, #8
 8007d3e:	d105      	bne.n	8007d4c <SAI_InterruptFlag+0x1c>
    ((hsai->Init.AudioMode == SAI_MODESLAVE_RX) || (hsai->Init.AudioMode == SAI_MODEMASTER_RX)))
 8007d40:	f022 0102 	bic.w	r1, r2, #2
 8007d44:	2901      	cmp	r1, #1
  {
    tmpIT|= SAI_IT_CNRDY;
 8007d46:	bf08      	it	eq
 8007d48:	f043 0310 	orreq.w	r3, r3, #16
  }

  if((hsai->Init.AudioMode == SAI_MODESLAVE_RX) || (hsai->Init.AudioMode == SAI_MODESLAVE_TX))
 8007d4c:	3a02      	subs	r2, #2
 8007d4e:	2a01      	cmp	r2, #1
  {
    tmpIT|= SAI_IT_AFSDET | SAI_IT_LFSDET;
 8007d50:	bf94      	ite	ls
 8007d52:	f043 0060 	orrls.w	r0, r3, #96	; 0x60
  }
  else
  {
    /* hsai has been configured in master mode */
    tmpIT|= SAI_IT_WCKCFG;
 8007d56:	f043 0004 	orrhi.w	r0, r3, #4
  }
  return tmpIT;
}
 8007d5a:	4770      	bx	lr

08007d5c <SAI_Disable>:
  *                the configuration information for SAI module.
  * @retval None
  */
static HAL_StatusTypeDef SAI_Disable(SAI_HandleTypeDef *hsai)
{
  register uint32_t count = SAI_DEFAULT_TIMEOUT * (SystemCoreClock /7/1000);
 8007d5c:	4b0e      	ldr	r3, [pc, #56]	; (8007d98 <SAI_Disable+0x3c>)
  HAL_StatusTypeDef status = HAL_OK;

  /* Disable the SAI instance */
  __HAL_SAI_DISABLE(hsai);
 8007d5e:	6801      	ldr	r1, [r0, #0]
  register uint32_t count = SAI_DEFAULT_TIMEOUT * (SystemCoreClock /7/1000);
 8007d60:	681a      	ldr	r2, [r3, #0]
 8007d62:	f641 3358 	movw	r3, #7000	; 0x1b58
 8007d66:	fbb2 f2f3 	udiv	r2, r2, r3
  __HAL_SAI_DISABLE(hsai);
 8007d6a:	680b      	ldr	r3, [r1, #0]
  register uint32_t count = SAI_DEFAULT_TIMEOUT * (SystemCoreClock /7/1000);
 8007d6c:	0092      	lsls	r2, r2, #2
  __HAL_SAI_DISABLE(hsai);
 8007d6e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007d72:	600b      	str	r3, [r1, #0]

  do
  {
    /* Check for the Timeout */
    if (count-- == 0)
 8007d74:	f112 32ff 	adds.w	r2, r2, #4294967295
 8007d78:	d207      	bcs.n	8007d8a <SAI_Disable+0x2e>
    {
      /* Update error code */
      hsai->ErrorCode |= HAL_SAI_ERROR_TIMEOUT;
 8007d7a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
 8007d7e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007d82:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80
      status = HAL_TIMEOUT;
 8007d86:	2003      	movs	r0, #3
      break;
 8007d88:	4770      	bx	lr
    }
  } while((hsai->Instance->CR1 & SAI_xCR1_SAIEN) != RESET);
 8007d8a:	680b      	ldr	r3, [r1, #0]
 8007d8c:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
 8007d90:	d1f0      	bne.n	8007d74 <SAI_Disable+0x18>
  HAL_StatusTypeDef status = HAL_OK;
 8007d92:	4618      	mov	r0, r3

  return status;
}
 8007d94:	4770      	bx	lr
 8007d96:	bf00      	nop
 8007d98:	20000064 	.word	0x20000064

08007d9c <HAL_SAI_Init>:
{
 8007d9c:	b570      	push	{r4, r5, r6, lr}
  if(hsai == NULL)
 8007d9e:	4604      	mov	r4, r0
 8007da0:	2800      	cmp	r0, #0
 8007da2:	f000 80c4 	beq.w	8007f2e <HAL_SAI_Init+0x192>
  if(hsai->State == HAL_SAI_STATE_RESET)
 8007da6:	f890 307d 	ldrb.w	r3, [r0, #125]	; 0x7d
 8007daa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007dae:	b91b      	cbnz	r3, 8007db8 <HAL_SAI_Init+0x1c>
    hsai->Lock = HAL_UNLOCKED;
 8007db0:	f880 207c 	strb.w	r2, [r0, #124]	; 0x7c
    HAL_SAI_MspInit(hsai);
 8007db4:	f7f9 ff1e 	bl	8001bf4 <HAL_SAI_MspInit>
  hsai->State = HAL_SAI_STATE_BUSY;
 8007db8:	2302      	movs	r3, #2
  SAI_Disable(hsai);
 8007dba:	4620      	mov	r0, r4
  hsai->State = HAL_SAI_STATE_BUSY;
 8007dbc:	f884 307d 	strb.w	r3, [r4, #125]	; 0x7d
  SAI_Disable(hsai);
 8007dc0:	f7ff ffcc 	bl	8007d5c <SAI_Disable>
  switch(hsai->Init.SynchroExt)
 8007dc4:	68e3      	ldr	r3, [r4, #12]
 8007dc6:	2b01      	cmp	r3, #1
 8007dc8:	f000 80a0 	beq.w	8007f0c <HAL_SAI_Init+0x170>
  uint32_t tmpregisterGCR = 0;
 8007dcc:	2b02      	cmp	r3, #2
 8007dce:	bf0c      	ite	eq
 8007dd0:	2320      	moveq	r3, #32
 8007dd2:	2300      	movne	r3, #0
  switch(hsai->Init.Synchro)
 8007dd4:	68a2      	ldr	r2, [r4, #8]
 8007dd6:	2a02      	cmp	r2, #2
 8007dd8:	f000 809c 	beq.w	8007f14 <HAL_SAI_Init+0x178>
 8007ddc:	2a03      	cmp	r2, #3
 8007dde:	f000 8097 	beq.w	8007f10 <HAL_SAI_Init+0x174>
  uint32_t syncen_bits = 0;
 8007de2:	2a01      	cmp	r2, #1
 8007de4:	bf0c      	ite	eq
 8007de6:	f44f 6580 	moveq.w	r5, #1024	; 0x400
 8007dea:	2500      	movne	r5, #0
  if((hsai->Instance == SAI1_Block_A) || (hsai->Instance == SAI1_Block_B))
 8007dec:	6822      	ldr	r2, [r4, #0]
 8007dee:	4951      	ldr	r1, [pc, #324]	; (8007f34 <HAL_SAI_Init+0x198>)
 8007df0:	428a      	cmp	r2, r1
 8007df2:	d003      	beq.n	8007dfc <HAL_SAI_Init+0x60>
 8007df4:	4850      	ldr	r0, [pc, #320]	; (8007f38 <HAL_SAI_Init+0x19c>)
 8007df6:	4282      	cmp	r2, r0
 8007df8:	f040 808f 	bne.w	8007f1a <HAL_SAI_Init+0x17e>
    SAI1->GCR = tmpregisterGCR;
 8007dfc:	484f      	ldr	r0, [pc, #316]	; (8007f3c <HAL_SAI_Init+0x1a0>)
    SAI2->GCR = tmpregisterGCR;
 8007dfe:	6003      	str	r3, [r0, #0]
  if(hsai->Init.AudioFrequency != SAI_AUDIO_FREQUENCY_MCKDIV)
 8007e00:	69e3      	ldr	r3, [r4, #28]
 8007e02:	b313      	cbz	r3, 8007e4a <HAL_SAI_Init+0xae>
    if((hsai->Instance == SAI1_Block_A ) || (hsai->Instance == SAI1_Block_B ))
 8007e04:	428a      	cmp	r2, r1
 8007e06:	d003      	beq.n	8007e10 <HAL_SAI_Init+0x74>
 8007e08:	4b4b      	ldr	r3, [pc, #300]	; (8007f38 <HAL_SAI_Init+0x19c>)
 8007e0a:	429a      	cmp	r2, r3
 8007e0c:	f040 8087 	bne.w	8007f1e <HAL_SAI_Init+0x182>
      freq = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_SAI1);
 8007e10:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8007e14:	f7ff ff18 	bl	8007c48 <HAL_RCCEx_GetPeriphCLKFreq>
    if((hsai->Instance == SAI2_Block_A ) || (hsai->Instance == SAI2_Block_B ))
 8007e18:	6823      	ldr	r3, [r4, #0]
 8007e1a:	4a49      	ldr	r2, [pc, #292]	; (8007f40 <HAL_SAI_Init+0x1a4>)
 8007e1c:	4293      	cmp	r3, r2
 8007e1e:	d002      	beq.n	8007e26 <HAL_SAI_Init+0x8a>
 8007e20:	3220      	adds	r2, #32
 8007e22:	4293      	cmp	r3, r2
 8007e24:	d103      	bne.n	8007e2e <HAL_SAI_Init+0x92>
      freq = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_SAI2);
 8007e26:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8007e2a:	f7ff ff0d 	bl	8007c48 <HAL_RCCEx_GetPeriphCLKFreq>
    tmpval = (freq * 10) / (hsai->Init.AudioFrequency * 2 * 256);
 8007e2e:	220a      	movs	r2, #10
 8007e30:	69e3      	ldr	r3, [r4, #28]
 8007e32:	4350      	muls	r0, r2
 8007e34:	025b      	lsls	r3, r3, #9
 8007e36:	fbb0 f0f3 	udiv	r0, r0, r3
    hsai->Init.Mckdiv = tmpval / 10;
 8007e3a:	fbb0 f3f2 	udiv	r3, r0, r2
    if((tmpval % 10) > 8)
 8007e3e:	fb02 0013 	mls	r0, r2, r3, r0
 8007e42:	2809      	cmp	r0, #9
      hsai->Init.Mckdiv+= 1;
 8007e44:	bf08      	it	eq
 8007e46:	3301      	addeq	r3, #1
 8007e48:	6223      	str	r3, [r4, #32]
  if((hsai->Init.AudioMode == SAI_MODEMASTER_TX) || (hsai->Init.AudioMode == SAI_MODESLAVE_TX))
 8007e4a:	6863      	ldr	r3, [r4, #4]
 8007e4c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8007e4e:	f033 0102 	bics.w	r1, r3, #2
 8007e52:	d166      	bne.n	8007f22 <HAL_SAI_Init+0x186>
    ckstr_bits = (hsai->Init.ClockStrobing == SAI_CLOCKSTROBING_RISINGEDGE) ? 0 : SAI_xCR1_CKSTR;
 8007e54:	2a01      	cmp	r2, #1
 8007e56:	bf18      	it	ne
 8007e58:	f44f 7100 	movne.w	r1, #512	; 0x200
  hsai->Instance->CR1&=~(SAI_xCR1_MODE | SAI_xCR1_PRTCFG |  SAI_xCR1_DS |      \
 8007e5c:	6822      	ldr	r2, [r4, #0]
 8007e5e:	4839      	ldr	r0, [pc, #228]	; (8007f44 <HAL_SAI_Init+0x1a8>)
 8007e60:	6816      	ldr	r6, [r2, #0]
 8007e62:	4030      	ands	r0, r6
  hsai->Instance->CR1|=(hsai->Init.AudioMode | hsai->Init.Protocol |           \
 8007e64:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8007e66:	4333      	orrs	r3, r6
 8007e68:	6b66      	ldr	r6, [r4, #52]	; 0x34
  hsai->Instance->CR1&=~(SAI_xCR1_MODE | SAI_xCR1_PRTCFG |  SAI_xCR1_DS |      \
 8007e6a:	6010      	str	r0, [r2, #0]
  hsai->Instance->CR1|=(hsai->Init.AudioMode | hsai->Init.Protocol |           \
 8007e6c:	4333      	orrs	r3, r6
 8007e6e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8007e70:	6810      	ldr	r0, [r2, #0]
 8007e72:	4333      	orrs	r3, r6
 8007e74:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8007e76:	4333      	orrs	r3, r6
 8007e78:	6926      	ldr	r6, [r4, #16]
 8007e7a:	4333      	orrs	r3, r6
 8007e7c:	6966      	ldr	r6, [r4, #20]
 8007e7e:	4333      	orrs	r3, r6
 8007e80:	4303      	orrs	r3, r0
                        hsai->Init.NoDivider | (hsai->Init.Mckdiv << 20));
 8007e82:	6a20      	ldr	r0, [r4, #32]
  hsai->Instance->CR1|=(hsai->Init.AudioMode | hsai->Init.Protocol |           \
 8007e84:	ea43 5300 	orr.w	r3, r3, r0, lsl #20
  hsai->Instance->CR2|=  (hsai->Init.FIFOThreshold | hsai->Init.CompandingMode | hsai->Init.TriState);
 8007e88:	6aa0      	ldr	r0, [r4, #40]	; 0x28
  hsai->Instance->CR1|=(hsai->Init.AudioMode | hsai->Init.Protocol |           \
 8007e8a:	432b      	orrs	r3, r5
 8007e8c:	430b      	orrs	r3, r1
 8007e8e:	6013      	str	r3, [r2, #0]
  hsai->Instance->CR2&= ~(SAI_xCR2_FTH | SAI_xCR2_FFLUSH | SAI_xCR2_COMP | SAI_xCR2_CPL);
 8007e90:	6853      	ldr	r3, [r2, #4]
 8007e92:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007e96:	f023 030f 	bic.w	r3, r3, #15
 8007e9a:	6053      	str	r3, [r2, #4]
  hsai->Instance->CR2|=  (hsai->Init.FIFOThreshold | hsai->Init.CompandingMode | hsai->Init.TriState);
 8007e9c:	69a3      	ldr	r3, [r4, #24]
 8007e9e:	6851      	ldr	r1, [r2, #4]
 8007ea0:	4303      	orrs	r3, r0
 8007ea2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8007ea4:	4303      	orrs	r3, r0
  hsai->Instance->FRCR|=((hsai->FrameInit.FrameLength - 1) |
 8007ea6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
  hsai->Instance->CR2|=  (hsai->Init.FIFOThreshold | hsai->Init.CompandingMode | hsai->Init.TriState);
 8007ea8:	430b      	orrs	r3, r1
 8007eaa:	6053      	str	r3, [r2, #4]
  hsai->Instance->FRCR&=(~(SAI_xFRCR_FRL | SAI_xFRCR_FSALL | SAI_xFRCR_FSDEF | \
 8007eac:	4b26      	ldr	r3, [pc, #152]	; (8007f48 <HAL_SAI_Init+0x1ac>)
 8007eae:	6891      	ldr	r1, [r2, #8]
 8007eb0:	400b      	ands	r3, r1
 8007eb2:	6093      	str	r3, [r2, #8]
  hsai->Instance->FRCR|=((hsai->FrameInit.FrameLength - 1) |
 8007eb4:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8007eb6:	6891      	ldr	r1, [r2, #8]
 8007eb8:	4303      	orrs	r3, r0
 8007eba:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8007ebc:	4303      	orrs	r3, r0
 8007ebe:	430b      	orrs	r3, r1
 8007ec0:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8007ec2:	3901      	subs	r1, #1
 8007ec4:	430b      	orrs	r3, r1
                          ((hsai->FrameInit.ActiveFrameLength - 1) << 8));
 8007ec6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8007ec8:	3901      	subs	r1, #1
  hsai->Instance->FRCR|=((hsai->FrameInit.FrameLength - 1) |
 8007eca:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8007ece:	6093      	str	r3, [r2, #8]
  hsai->Instance->SLOTR&= (~(SAI_xSLOTR_FBOFF | SAI_xSLOTR_SLOTSZ |            \
 8007ed0:	68d3      	ldr	r3, [r2, #12]
 8007ed2:	f423 637d 	bic.w	r3, r3, #4048	; 0xfd0
 8007ed6:	f023 030f 	bic.w	r3, r3, #15
 8007eda:	041b      	lsls	r3, r3, #16
 8007edc:	0c1b      	lsrs	r3, r3, #16
 8007ede:	60d3      	str	r3, [r2, #12]
  hsai->Instance->SLOTR|=  hsai->SlotInit.FirstBitOffset |  hsai->SlotInit.SlotSize
 8007ee0:	68d1      	ldr	r1, [r2, #12]
 8007ee2:	e9d4 3015 	ldrd	r3, r0, [r4, #84]	; 0x54
 8007ee6:	4303      	orrs	r3, r0
  hsai->ErrorCode = HAL_SAI_ERROR_NONE;
 8007ee8:	2000      	movs	r0, #0
  hsai->Instance->SLOTR|=  hsai->SlotInit.FirstBitOffset |  hsai->SlotInit.SlotSize
 8007eea:	430b      	orrs	r3, r1
                          | (hsai->SlotInit.SlotActive << 16) | ((hsai->SlotInit.SlotNumber - 1) <<  8);
 8007eec:	6e21      	ldr	r1, [r4, #96]	; 0x60
  hsai->Instance->SLOTR|=  hsai->SlotInit.FirstBitOffset |  hsai->SlotInit.SlotSize
 8007eee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                          | (hsai->SlotInit.SlotActive << 16) | ((hsai->SlotInit.SlotNumber - 1) <<  8);
 8007ef2:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8007ef4:	3901      	subs	r1, #1
  hsai->Instance->SLOTR|=  hsai->SlotInit.FirstBitOffset |  hsai->SlotInit.SlotSize
 8007ef6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8007efa:	60d3      	str	r3, [r2, #12]
  hsai->State= HAL_SAI_STATE_READY;
 8007efc:	2301      	movs	r3, #1
  hsai->ErrorCode = HAL_SAI_ERROR_NONE;
 8007efe:	f8c4 0080 	str.w	r0, [r4, #128]	; 0x80
  __HAL_UNLOCK(hsai);
 8007f02:	f884 007c 	strb.w	r0, [r4, #124]	; 0x7c
  hsai->State= HAL_SAI_STATE_READY;
 8007f06:	f884 307d 	strb.w	r3, [r4, #125]	; 0x7d
}
 8007f0a:	bd70      	pop	{r4, r5, r6, pc}
      tmpregisterGCR = SAI_GCR_SYNCOUT_0;
 8007f0c:	2310      	movs	r3, #16
 8007f0e:	e761      	b.n	8007dd4 <HAL_SAI_Init+0x38>
        tmpregisterGCR |= SAI_GCR_SYNCIN_0;
 8007f10:	f043 0301 	orr.w	r3, r3, #1
        syncen_bits = SAI_xCR1_SYNCEN_1;
 8007f14:	f44f 6500 	mov.w	r5, #2048	; 0x800
      break;
 8007f18:	e768      	b.n	8007dec <HAL_SAI_Init+0x50>
    SAI2->GCR = tmpregisterGCR;
 8007f1a:	480c      	ldr	r0, [pc, #48]	; (8007f4c <HAL_SAI_Init+0x1b0>)
 8007f1c:	e76f      	b.n	8007dfe <HAL_SAI_Init+0x62>
    uint32_t freq = 0;
 8007f1e:	2000      	movs	r0, #0
 8007f20:	e77a      	b.n	8007e18 <HAL_SAI_Init+0x7c>
    ckstr_bits = (hsai->Init.ClockStrobing == SAI_CLOCKSTROBING_RISINGEDGE) ? 0 : SAI_xCR1_CKSTR;
 8007f22:	2a01      	cmp	r2, #1
 8007f24:	bf14      	ite	ne
 8007f26:	2100      	movne	r1, #0
 8007f28:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8007f2c:	e796      	b.n	8007e5c <HAL_SAI_Init+0xc0>
    return HAL_ERROR;
 8007f2e:	2001      	movs	r0, #1
 8007f30:	e7eb      	b.n	8007f0a <HAL_SAI_Init+0x16e>
 8007f32:	bf00      	nop
 8007f34:	40015804 	.word	0x40015804
 8007f38:	40015824 	.word	0x40015824
 8007f3c:	40015800 	.word	0x40015800
 8007f40:	40015c04 	.word	0x40015c04
 8007f44:	ff05c010 	.word	0xff05c010
 8007f48:	fff88000 	.word	0xfff88000
 8007f4c:	40015c00 	.word	0x40015c00

08007f50 <HAL_SAI_InitProtocol>:
{
 8007f50:	b430      	push	{r4, r5}
  switch(protocol)
 8007f52:	2904      	cmp	r1, #4
 8007f54:	f200 8094 	bhi.w	8008080 <HAL_SAI_InitProtocol+0x130>
 8007f58:	e8df f001 	tbb	[pc, r1]
 8007f5c:	5d030303 	.word	0x5d030303
 8007f60:	5d          	.byte	0x5d
 8007f61:	00          	.byte	0x00
  hsai->Init.Protocol            = SAI_FREE_PROTOCOL;
 8007f62:	2400      	movs	r4, #0
  hsai->SlotInit.SlotNumber      = nbslot;
 8007f64:	65c3      	str	r3, [r0, #92]	; 0x5c
  hsai->Init.Protocol            = SAI_FREE_PROTOCOL;
 8007f66:	6304      	str	r4, [r0, #48]	; 0x30
  hsai->Init.FirstBit            = SAI_FIRSTBIT_MSB;
 8007f68:	6384      	str	r4, [r0, #56]	; 0x38
  if((hsai->Init.AudioMode == SAI_MODEMASTER_TX) || (hsai->Init.AudioMode == SAI_MODESLAVE_TX))
 8007f6a:	6844      	ldr	r4, [r0, #4]
 8007f6c:	f034 0402 	bics.w	r4, r4, #2
    hsai->Init.ClockStrobing     = SAI_CLOCKSTROBING_RISINGEDGE;
 8007f70:	bf18      	it	ne
 8007f72:	2401      	movne	r4, #1
 8007f74:	63c4      	str	r4, [r0, #60]	; 0x3c
  hsai->FrameInit.FSDefinition   = SAI_FS_CHANNEL_IDENTIFICATION;
 8007f76:	f44f 3480 	mov.w	r4, #65536	; 0x10000
 8007f7a:	6484      	str	r4, [r0, #72]	; 0x48
  hsai->SlotInit.SlotActive      = SAI_SLOTACTIVE_ALL;
 8007f7c:	f64f 74ff 	movw	r4, #65535	; 0xffff
 8007f80:	6604      	str	r4, [r0, #96]	; 0x60
  hsai->SlotInit.FirstBitOffset  = 0;
 8007f82:	2400      	movs	r4, #0
 8007f84:	6544      	str	r4, [r0, #84]	; 0x54
  if((nbslot & 0x1) != 0 )
 8007f86:	f013 0401 	ands.w	r4, r3, #1
 8007f8a:	d179      	bne.n	8008080 <HAL_SAI_InitProtocol+0x130>
  switch(protocol)
 8007f8c:	1e4d      	subs	r5, r1, #1
 8007f8e:	2d01      	cmp	r5, #1
    hsai->FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 8007f90:	bf8b      	itete	hi
 8007f92:	64c4      	strhi	r4, [r0, #76]	; 0x4c
    hsai->FrameInit.FSPolarity = SAI_FS_ACTIVE_HIGH;
 8007f94:	f44f 3500 	movls.w	r5, #131072	; 0x20000
    hsai->FrameInit.FSOffset   = SAI_FS_BEFOREFIRSTBIT;
 8007f98:	f44f 2480 	movhi.w	r4, #262144	; 0x40000
    hsai->FrameInit.FSPolarity = SAI_FS_ACTIVE_HIGH;
 8007f9c:	64c5      	strls	r5, [r0, #76]	; 0x4c
    hsai->FrameInit.FSOffset   = SAI_FS_FIRSTBIT;
 8007f9e:	6504      	str	r4, [r0, #80]	; 0x50
  switch(datasize)
 8007fa0:	2a03      	cmp	r2, #3
 8007fa2:	d86d      	bhi.n	8008080 <HAL_SAI_InitProtocol+0x130>
 8007fa4:	e8df f002 	tbb	[pc, r2]
 8007fa8:	2b1b0c02 	.word	0x2b1b0c02
    hsai->Init.DataSize = SAI_DATASIZE_16;
 8007fac:	2280      	movs	r2, #128	; 0x80
    hsai->FrameInit.FrameLength = 32*(nbslot/2);
 8007fae:	085b      	lsrs	r3, r3, #1
    hsai->Init.DataSize = SAI_DATASIZE_16;
 8007fb0:	6342      	str	r2, [r0, #52]	; 0x34
    hsai->FrameInit.FrameLength = 32*(nbslot/2);
 8007fb2:	015a      	lsls	r2, r3, #5
    hsai->FrameInit.ActiveFrameLength = 16*(nbslot/2);
 8007fb4:	011b      	lsls	r3, r3, #4
    hsai->FrameInit.FrameLength = 32*(nbslot/2);
 8007fb6:	6402      	str	r2, [r0, #64]	; 0x40
    hsai->FrameInit.ActiveFrameLength = 16*(nbslot/2);
 8007fb8:	6443      	str	r3, [r0, #68]	; 0x44
    hsai->SlotInit.SlotSize = SAI_SLOTSIZE_16B;
 8007fba:	2340      	movs	r3, #64	; 0x40
    hsai->SlotInit.SlotSize = SAI_SLOTSIZE_32B;
 8007fbc:	6583      	str	r3, [r0, #88]	; 0x58
 8007fbe:	e00b      	b.n	8007fd8 <HAL_SAI_InitProtocol+0x88>
    hsai->FrameInit.FrameLength = 64*(nbslot/2);
 8007fc0:	085b      	lsrs	r3, r3, #1
    hsai->Init.DataSize = SAI_DATASIZE_16;
 8007fc2:	2280      	movs	r2, #128	; 0x80
  if(protocol == SAI_I2S_LSBJUSTIFIED)
 8007fc4:	2902      	cmp	r1, #2
    hsai->FrameInit.FrameLength = 64*(nbslot/2);
 8007fc6:	ea4f 1483 	mov.w	r4, r3, lsl #6
    hsai->Init.DataSize = SAI_DATASIZE_16;
 8007fca:	6342      	str	r2, [r0, #52]	; 0x34
    hsai->FrameInit.ActiveFrameLength = 32*(nbslot/2);
 8007fcc:	ea4f 1343 	mov.w	r3, r3, lsl #5
    hsai->SlotInit.SlotSize = SAI_SLOTSIZE_32B;
 8007fd0:	6582      	str	r2, [r0, #88]	; 0x58
    hsai->FrameInit.FrameLength = 64*(nbslot/2);
 8007fd2:	6404      	str	r4, [r0, #64]	; 0x40
    hsai->FrameInit.ActiveFrameLength = 32*(nbslot/2);
 8007fd4:	6443      	str	r3, [r0, #68]	; 0x44
  if(protocol == SAI_I2S_LSBJUSTIFIED)
 8007fd6:	d01b      	beq.n	8008010 <HAL_SAI_InitProtocol+0xc0>
}
 8007fd8:	bc30      	pop	{r4, r5}
    status = HAL_SAI_Init(hsai);
 8007fda:	f7ff bedf 	b.w	8007d9c <HAL_SAI_Init>
    hsai->Init.DataSize = SAI_DATASIZE_24;
 8007fde:	22c0      	movs	r2, #192	; 0xc0
    hsai->FrameInit.FrameLength = 64*(nbslot/2);
 8007fe0:	085b      	lsrs	r3, r3, #1
  if(protocol == SAI_I2S_LSBJUSTIFIED)
 8007fe2:	2902      	cmp	r1, #2
    hsai->Init.DataSize = SAI_DATASIZE_24;
 8007fe4:	6342      	str	r2, [r0, #52]	; 0x34
    hsai->FrameInit.FrameLength = 64*(nbslot/2);
 8007fe6:	ea4f 1283 	mov.w	r2, r3, lsl #6
    hsai->FrameInit.ActiveFrameLength = 32*(nbslot/2);
 8007fea:	ea4f 1343 	mov.w	r3, r3, lsl #5
    hsai->FrameInit.FrameLength = 64*(nbslot/2);
 8007fee:	6402      	str	r2, [r0, #64]	; 0x40
    hsai->FrameInit.ActiveFrameLength = 32*(nbslot/2);
 8007ff0:	6443      	str	r3, [r0, #68]	; 0x44
    hsai->SlotInit.SlotSize = SAI_SLOTSIZE_32B;
 8007ff2:	f04f 0380 	mov.w	r3, #128	; 0x80
 8007ff6:	6583      	str	r3, [r0, #88]	; 0x58
  if(protocol == SAI_I2S_LSBJUSTIFIED)
 8007ff8:	d1ee      	bne.n	8007fd8 <HAL_SAI_InitProtocol+0x88>
      hsai->SlotInit.FirstBitOffset = 8;
 8007ffa:	2308      	movs	r3, #8
 8007ffc:	e009      	b.n	8008012 <HAL_SAI_InitProtocol+0xc2>
    hsai->Init.DataSize = SAI_DATASIZE_32;
 8007ffe:	22e0      	movs	r2, #224	; 0xe0
    hsai->FrameInit.FrameLength = 64*(nbslot/2);
 8008000:	085b      	lsrs	r3, r3, #1
    hsai->Init.DataSize = SAI_DATASIZE_32;
 8008002:	6342      	str	r2, [r0, #52]	; 0x34
    hsai->FrameInit.FrameLength = 64*(nbslot/2);
 8008004:	019a      	lsls	r2, r3, #6
    hsai->FrameInit.ActiveFrameLength = 32*(nbslot/2);
 8008006:	015b      	lsls	r3, r3, #5
    hsai->FrameInit.FrameLength = 64*(nbslot/2);
 8008008:	6402      	str	r2, [r0, #64]	; 0x40
    hsai->FrameInit.ActiveFrameLength = 32*(nbslot/2);
 800800a:	6443      	str	r3, [r0, #68]	; 0x44
    hsai->SlotInit.SlotSize = SAI_SLOTSIZE_32B;
 800800c:	2380      	movs	r3, #128	; 0x80
 800800e:	e7d5      	b.n	8007fbc <HAL_SAI_InitProtocol+0x6c>
      hsai->SlotInit.FirstBitOffset = 16;
 8008010:	2310      	movs	r3, #16
      hsai->SlotInit.FirstBitOffset = 8;
 8008012:	6543      	str	r3, [r0, #84]	; 0x54
 8008014:	e7e0      	b.n	8007fd8 <HAL_SAI_InitProtocol+0x88>
  if((hsai->Init.AudioMode == SAI_MODEMASTER_TX) || (hsai->Init.AudioMode == SAI_MODESLAVE_TX))
 8008016:	6845      	ldr	r5, [r0, #4]
  hsai->Init.Protocol            = SAI_FREE_PROTOCOL;
 8008018:	2400      	movs	r4, #0
  hsai->FrameInit.FSOffset       = SAI_FS_BEFOREFIRSTBIT;
 800801a:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  hsai->SlotInit.SlotNumber      = nbslot;
 800801e:	65c3      	str	r3, [r0, #92]	; 0x5c
  if((hsai->Init.AudioMode == SAI_MODEMASTER_TX) || (hsai->Init.AudioMode == SAI_MODESLAVE_TX))
 8008020:	f035 0502 	bics.w	r5, r5, #2
  hsai->Init.Protocol            = SAI_FREE_PROTOCOL;
 8008024:	6304      	str	r4, [r0, #48]	; 0x30
  hsai->Init.FirstBit            = SAI_FIRSTBIT_MSB;
 8008026:	6384      	str	r4, [r0, #56]	; 0x38
    hsai->Init.ClockStrobing     = SAI_CLOCKSTROBING_RISINGEDGE;
 8008028:	bf0c      	ite	eq
 800802a:	2501      	moveq	r5, #1
    hsai->Init.ClockStrobing     = SAI_CLOCKSTROBING_FALLINGEDGE;
 800802c:	63c4      	strne	r4, [r0, #60]	; 0x3c
  hsai->FrameInit.FSDefinition   = SAI_FS_STARTFRAME;
 800802e:	6484      	str	r4, [r0, #72]	; 0x48
    hsai->Init.ClockStrobing     = SAI_CLOCKSTROBING_RISINGEDGE;
 8008030:	bf08      	it	eq
 8008032:	63c5      	streq	r5, [r0, #60]	; 0x3c
  switch(protocol)
 8008034:	2904      	cmp	r1, #4
  hsai->FrameInit.FSOffset       = SAI_FS_BEFOREFIRSTBIT;
 8008036:	f44f 2580 	mov.w	r5, #262144	; 0x40000
  hsai->SlotInit.FirstBitOffset  = 0;
 800803a:	6544      	str	r4, [r0, #84]	; 0x54
    hsai->FrameInit.ActiveFrameLength = 1;
 800803c:	bf08      	it	eq
 800803e:	2101      	moveq	r1, #1
  hsai->SlotInit.SlotActive      = SAI_SLOTACTIVE_ALL;
 8008040:	f64f 74ff 	movw	r4, #65535	; 0xffff
    hsai->FrameInit.ActiveFrameLength = 13;
 8008044:	bf18      	it	ne
 8008046:	210d      	movne	r1, #13
  hsai->SlotInit.SlotActive      = SAI_SLOTACTIVE_ALL;
 8008048:	6604      	str	r4, [r0, #96]	; 0x60
    hsai->FrameInit.ActiveFrameLength = 13;
 800804a:	6441      	str	r1, [r0, #68]	; 0x44
  hsai->FrameInit.FSOffset       = SAI_FS_BEFOREFIRSTBIT;
 800804c:	e9c0 c513 	strd	ip, r5, [r0, #76]	; 0x4c
  switch(datasize)
 8008050:	2a03      	cmp	r2, #3
 8008052:	d815      	bhi.n	8008080 <HAL_SAI_InitProtocol+0x130>
 8008054:	e8df f002 	tbb	[pc, r2]
 8008058:	120d0702 	.word	0x120d0702
    hsai->Init.DataSize = SAI_DATASIZE_16;
 800805c:	2280      	movs	r2, #128	; 0x80
    hsai->FrameInit.FrameLength = 16 * nbslot;
 800805e:	011b      	lsls	r3, r3, #4
    hsai->Init.DataSize = SAI_DATASIZE_16;
 8008060:	6342      	str	r2, [r0, #52]	; 0x34
    hsai->FrameInit.FrameLength = 16 * nbslot;
 8008062:	6403      	str	r3, [r0, #64]	; 0x40
 8008064:	e7a9      	b.n	8007fba <HAL_SAI_InitProtocol+0x6a>
    hsai->Init.DataSize = SAI_DATASIZE_16;
 8008066:	2280      	movs	r2, #128	; 0x80
    hsai->FrameInit.FrameLength = 32 * nbslot;
 8008068:	015b      	lsls	r3, r3, #5
    hsai->Init.DataSize = SAI_DATASIZE_16;
 800806a:	6342      	str	r2, [r0, #52]	; 0x34
    hsai->FrameInit.FrameLength = 32 * nbslot;
 800806c:	6403      	str	r3, [r0, #64]	; 0x40
    hsai->SlotInit.SlotSize = SAI_SLOTSIZE_32B;
 800806e:	6582      	str	r2, [r0, #88]	; 0x58
 8008070:	e7b2      	b.n	8007fd8 <HAL_SAI_InitProtocol+0x88>
    hsai->Init.DataSize = SAI_DATASIZE_24;
 8008072:	22c0      	movs	r2, #192	; 0xc0
    hsai->FrameInit.FrameLength = 32 * nbslot;
 8008074:	015b      	lsls	r3, r3, #5
    hsai->Init.DataSize = SAI_DATASIZE_32;
 8008076:	6342      	str	r2, [r0, #52]	; 0x34
    hsai->FrameInit.FrameLength = 32 * nbslot;
 8008078:	6403      	str	r3, [r0, #64]	; 0x40
 800807a:	e7c7      	b.n	800800c <HAL_SAI_InitProtocol+0xbc>
    hsai->Init.DataSize = SAI_DATASIZE_32;
 800807c:	22e0      	movs	r2, #224	; 0xe0
 800807e:	e7f9      	b.n	8008074 <HAL_SAI_InitProtocol+0x124>
}
 8008080:	2001      	movs	r0, #1
 8008082:	bc30      	pop	{r4, r5}
 8008084:	4770      	bx	lr

08008086 <HAL_SAI_Abort>:
  __HAL_LOCK(hsai);
 8008086:	f890 307c 	ldrb.w	r3, [r0, #124]	; 0x7c
 800808a:	2b01      	cmp	r3, #1
{
 800808c:	b570      	push	{r4, r5, r6, lr}
 800808e:	4604      	mov	r4, r0
  __HAL_LOCK(hsai);
 8008090:	d04b      	beq.n	800812a <HAL_SAI_Abort+0xa4>
  if((hsai->Instance->CR1 & SAI_xCR1_DMAEN) == SAI_xCR1_DMAEN)
 8008092:	6802      	ldr	r2, [r0, #0]
  __HAL_LOCK(hsai);
 8008094:	2601      	movs	r6, #1
  if((hsai->Instance->CR1 & SAI_xCR1_DMAEN) == SAI_xCR1_DMAEN)
 8008096:	6815      	ldr	r5, [r2, #0]
  __HAL_LOCK(hsai);
 8008098:	f880 607c 	strb.w	r6, [r0, #124]	; 0x7c
  if((hsai->Instance->CR1 & SAI_xCR1_DMAEN) == SAI_xCR1_DMAEN)
 800809c:	f415 3500 	ands.w	r5, r5, #131072	; 0x20000
 80080a0:	d01a      	beq.n	80080d8 <HAL_SAI_Abort+0x52>
    hsai->Instance->CR1 &= ~SAI_xCR1_DMAEN;
 80080a2:	6813      	ldr	r3, [r2, #0]
    if((hsai->hdmatx != NULL) && (hsai->State == HAL_SAI_STATE_BUSY_TX))
 80080a4:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
    hsai->Instance->CR1 &= ~SAI_xCR1_DMAEN;
 80080a6:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 80080aa:	6013      	str	r3, [r2, #0]
    if((hsai->hdmatx != NULL) && (hsai->State == HAL_SAI_STATE_BUSY_TX))
 80080ac:	bb48      	cbnz	r0, 8008102 <HAL_SAI_Abort+0x7c>
  HAL_StatusTypeDef status = HAL_OK;
 80080ae:	2500      	movs	r5, #0
    if((hsai->hdmarx != NULL) && (hsai->State == HAL_SAI_STATE_BUSY_RX))
 80080b0:	6f20      	ldr	r0, [r4, #112]	; 0x70
 80080b2:	b188      	cbz	r0, 80080d8 <HAL_SAI_Abort+0x52>
 80080b4:	f894 307d 	ldrb.w	r3, [r4, #125]	; 0x7d
 80080b8:	2b22      	cmp	r3, #34	; 0x22
 80080ba:	d10d      	bne.n	80080d8 <HAL_SAI_Abort+0x52>
      if(HAL_DMA_Abort(hsai->hdmarx) != HAL_OK)
 80080bc:	f7fd f89d 	bl	80051fa <HAL_DMA_Abort>
 80080c0:	b150      	cbz	r0, 80080d8 <HAL_SAI_Abort+0x52>
        if(hsai->hdmarx->ErrorCode != HAL_DMA_ERROR_NO_XFER)
 80080c2:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80080c4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80080c6:	2b80      	cmp	r3, #128	; 0x80
 80080c8:	d006      	beq.n	80080d8 <HAL_SAI_Abort+0x52>
          hsai->ErrorCode |= HAL_SAI_ERROR_DMA;
 80080ca:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
          status = HAL_ERROR;
 80080ce:	2501      	movs	r5, #1
          hsai->ErrorCode |= HAL_SAI_ERROR_DMA;
 80080d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80080d4:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
  hsai->Instance->IMR = 0;
 80080d8:	6823      	ldr	r3, [r4, #0]
  hsai->Instance->CLRFR = 0xFFFFFFFFU;
 80080da:	f04f 32ff 	mov.w	r2, #4294967295
  hsai->Instance->IMR = 0;
 80080de:	2600      	movs	r6, #0
  SAI_Disable(hsai);
 80080e0:	4620      	mov	r0, r4
  hsai->Instance->IMR = 0;
 80080e2:	611e      	str	r6, [r3, #16]
  hsai->Instance->CLRFR = 0xFFFFFFFFU;
 80080e4:	619a      	str	r2, [r3, #24]
  SAI_Disable(hsai);
 80080e6:	f7ff fe39 	bl	8007d5c <SAI_Disable>
  SET_BIT(hsai->Instance->CR2, SAI_xCR2_FFLUSH);
 80080ea:	6822      	ldr	r2, [r4, #0]
 80080ec:	6853      	ldr	r3, [r2, #4]
 80080ee:	f043 0308 	orr.w	r3, r3, #8
 80080f2:	6053      	str	r3, [r2, #4]
  hsai->State = HAL_SAI_STATE_READY;
 80080f4:	2301      	movs	r3, #1
  __HAL_UNLOCK(hsai);
 80080f6:	f884 607c 	strb.w	r6, [r4, #124]	; 0x7c
  hsai->State = HAL_SAI_STATE_READY;
 80080fa:	f884 307d 	strb.w	r3, [r4, #125]	; 0x7d
}
 80080fe:	4628      	mov	r0, r5
 8008100:	bd70      	pop	{r4, r5, r6, pc}
    if((hsai->hdmatx != NULL) && (hsai->State == HAL_SAI_STATE_BUSY_TX))
 8008102:	f894 307d 	ldrb.w	r3, [r4, #125]	; 0x7d
 8008106:	2b12      	cmp	r3, #18
 8008108:	d1d1      	bne.n	80080ae <HAL_SAI_Abort+0x28>
      if(HAL_DMA_Abort(hsai->hdmatx) != HAL_OK)
 800810a:	f7fd f876 	bl	80051fa <HAL_DMA_Abort>
 800810e:	2800      	cmp	r0, #0
 8008110:	d0cd      	beq.n	80080ae <HAL_SAI_Abort+0x28>
        if(hsai->hdmatx->ErrorCode != HAL_DMA_ERROR_NO_XFER)
 8008112:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8008114:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008116:	2b80      	cmp	r3, #128	; 0x80
 8008118:	d0c9      	beq.n	80080ae <HAL_SAI_Abort+0x28>
          hsai->ErrorCode |= HAL_SAI_ERROR_DMA;
 800811a:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
          status = HAL_ERROR;
 800811e:	4635      	mov	r5, r6
          hsai->ErrorCode |= HAL_SAI_ERROR_DMA;
 8008120:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008124:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8008128:	e7c2      	b.n	80080b0 <HAL_SAI_Abort+0x2a>
  __HAL_LOCK(hsai);
 800812a:	2502      	movs	r5, #2
 800812c:	e7e7      	b.n	80080fe <HAL_SAI_Abort+0x78>
	...

08008130 <HAL_SAI_Transmit_DMA>:
{
 8008130:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008132:	4604      	mov	r4, r0
 8008134:	4613      	mov	r3, r2
  if((pData == NULL) || (Size == 0))
 8008136:	b331      	cbz	r1, 8008186 <HAL_SAI_Transmit_DMA+0x56>
 8008138:	b32b      	cbz	r3, 8008186 <HAL_SAI_Transmit_DMA+0x56>
  if(hsai->State == HAL_SAI_STATE_READY)
 800813a:	f890 607d 	ldrb.w	r6, [r0, #125]	; 0x7d
 800813e:	b2f6      	uxtb	r6, r6
 8008140:	2e01      	cmp	r6, #1
 8008142:	d13a      	bne.n	80081ba <HAL_SAI_Transmit_DMA+0x8a>
    __HAL_LOCK(hsai);
 8008144:	f890 007c 	ldrb.w	r0, [r0, #124]	; 0x7c
 8008148:	2801      	cmp	r0, #1
 800814a:	d036      	beq.n	80081ba <HAL_SAI_Transmit_DMA+0x8a>
    hsai->ErrorCode = HAL_SAI_ERROR_NONE;
 800814c:	2700      	movs	r7, #0
    hsai->State = HAL_SAI_STATE_BUSY_TX;
 800814e:	2212      	movs	r2, #18
    hsai->hdmatx->XferHalfCpltCallback = SAI_DMATxHalfCplt;
 8008150:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
    hsai->ErrorCode = HAL_SAI_ERROR_NONE;
 8008152:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
    hsai->State = HAL_SAI_STATE_BUSY_TX;
 8008156:	f884 207d 	strb.w	r2, [r4, #125]	; 0x7d
    hsai->hdmatx->XferHalfCpltCallback = SAI_DMATxHalfCplt;
 800815a:	4a19      	ldr	r2, [pc, #100]	; (80081c0 <HAL_SAI_Transmit_DMA+0x90>)
    __HAL_LOCK(hsai);
 800815c:	f884 607c 	strb.w	r6, [r4, #124]	; 0x7c
    hsai->pBuffPtr = pData;
 8008160:	6661      	str	r1, [r4, #100]	; 0x64
    hsai->XferSize = Size;
 8008162:	f8a4 3068 	strh.w	r3, [r4, #104]	; 0x68
    hsai->XferCount = Size;
 8008166:	f8a4 306a 	strh.w	r3, [r4, #106]	; 0x6a
    hsai->hdmatx->XferHalfCpltCallback = SAI_DMATxHalfCplt;
 800816a:	6402      	str	r2, [r0, #64]	; 0x40
    hsai->hdmatx->XferCpltCallback = SAI_DMATxCplt;
 800816c:	4a15      	ldr	r2, [pc, #84]	; (80081c4 <HAL_SAI_Transmit_DMA+0x94>)
 800816e:	63c2      	str	r2, [r0, #60]	; 0x3c
    hsai->hdmatx->XferErrorCallback = SAI_DMAError;
 8008170:	4a15      	ldr	r2, [pc, #84]	; (80081c8 <HAL_SAI_Transmit_DMA+0x98>)
    hsai->hdmatx->XferAbortCallback = NULL;
 8008172:	e9c0 2713 	strd	r2, r7, [r0, #76]	; 0x4c
    if(HAL_DMA_Start_IT(hsai->hdmatx, (uint32_t)hsai->pBuffPtr, (uint32_t)&hsai->Instance->DR, hsai->XferSize) != HAL_OK)
 8008176:	6822      	ldr	r2, [r4, #0]
 8008178:	321c      	adds	r2, #28
 800817a:	f7fd f801 	bl	8005180 <HAL_DMA_Start_IT>
 800817e:	4605      	mov	r5, r0
 8008180:	b118      	cbz	r0, 800818a <HAL_SAI_Transmit_DMA+0x5a>
      __HAL_UNLOCK(hsai);
 8008182:	f884 707c 	strb.w	r7, [r4, #124]	; 0x7c
    return  HAL_ERROR;
 8008186:	2501      	movs	r5, #1
 8008188:	e015      	b.n	80081b6 <HAL_SAI_Transmit_DMA+0x86>
    if((hsai->Instance->CR1 & SAI_xCR1_SAIEN) == RESET)
 800818a:	6826      	ldr	r6, [r4, #0]
 800818c:	6833      	ldr	r3, [r6, #0]
 800818e:	03db      	lsls	r3, r3, #15
 8008190:	d403      	bmi.n	800819a <HAL_SAI_Transmit_DMA+0x6a>
      __HAL_SAI_ENABLE(hsai);
 8008192:	6833      	ldr	r3, [r6, #0]
 8008194:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008198:	6033      	str	r3, [r6, #0]
    __HAL_SAI_ENABLE_IT(hsai, SAI_InterruptFlag(hsai, SAI_MODE_DMA));
 800819a:	2100      	movs	r1, #0
 800819c:	4620      	mov	r0, r4
 800819e:	f7ff fdc7 	bl	8007d30 <SAI_InterruptFlag>
 80081a2:	6933      	ldr	r3, [r6, #16]
 80081a4:	4318      	orrs	r0, r3
 80081a6:	6130      	str	r0, [r6, #16]
    hsai->Instance->CR1 |= SAI_xCR1_DMAEN;
 80081a8:	6833      	ldr	r3, [r6, #0]
 80081aa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80081ae:	6033      	str	r3, [r6, #0]
    __HAL_UNLOCK(hsai);
 80081b0:	2300      	movs	r3, #0
 80081b2:	f884 307c 	strb.w	r3, [r4, #124]	; 0x7c
}
 80081b6:	4628      	mov	r0, r5
 80081b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_BUSY;
 80081ba:	2502      	movs	r5, #2
 80081bc:	e7fb      	b.n	80081b6 <HAL_SAI_Transmit_DMA+0x86>
 80081be:	bf00      	nop
 80081c0:	08008205 	.word	0x08008205
 80081c4:	080081cd 	.word	0x080081cd
 80081c8:	08008211 	.word	0x08008211

080081cc <SAI_DMATxCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void SAI_DMATxCplt(DMA_HandleTypeDef *hdma)
{
 80081cc:	b538      	push	{r3, r4, r5, lr}
  SAI_HandleTypeDef* hsai = (SAI_HandleTypeDef*)((DMA_HandleTypeDef* )hdma)->Parent;

  if (hdma->Init.Mode != DMA_CIRCULAR)
 80081ce:	69c3      	ldr	r3, [r0, #28]
  SAI_HandleTypeDef* hsai = (SAI_HandleTypeDef*)((DMA_HandleTypeDef* )hdma)->Parent;
 80081d0:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma->Init.Mode != DMA_CIRCULAR)
 80081d2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80081d6:	d011      	beq.n	80081fc <SAI_DMATxCplt+0x30>
  {
    hsai->XferCount = 0;

    /* Disable SAI Tx DMA Request */
    hsai->Instance->CR1 &= (uint32_t)(~SAI_xCR1_DMAEN);
 80081d8:	6825      	ldr	r5, [r4, #0]
    hsai->XferCount = 0;
 80081da:	2100      	movs	r1, #0

    /* Stop the interrupts error handling */
    __HAL_SAI_DISABLE_IT(hsai, SAI_InterruptFlag(hsai, SAI_MODE_DMA));
 80081dc:	4620      	mov	r0, r4
    hsai->Instance->CR1 &= (uint32_t)(~SAI_xCR1_DMAEN);
 80081de:	682b      	ldr	r3, [r5, #0]
    hsai->XferCount = 0;
 80081e0:	f8a4 106a 	strh.w	r1, [r4, #106]	; 0x6a
    hsai->Instance->CR1 &= (uint32_t)(~SAI_xCR1_DMAEN);
 80081e4:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 80081e8:	602b      	str	r3, [r5, #0]
    __HAL_SAI_DISABLE_IT(hsai, SAI_InterruptFlag(hsai, SAI_MODE_DMA));
 80081ea:	f7ff fda1 	bl	8007d30 <SAI_InterruptFlag>
 80081ee:	692b      	ldr	r3, [r5, #16]
 80081f0:	ea23 0000 	bic.w	r0, r3, r0

    hsai->State= HAL_SAI_STATE_READY;
 80081f4:	2301      	movs	r3, #1
    __HAL_SAI_DISABLE_IT(hsai, SAI_InterruptFlag(hsai, SAI_MODE_DMA));
 80081f6:	6128      	str	r0, [r5, #16]
    hsai->State= HAL_SAI_STATE_READY;
 80081f8:	f884 307d 	strb.w	r3, [r4, #125]	; 0x7d
  }
#if (USE_HAL_SAI_REGISTER_CALLBACKS == 1)
  hsai->TxCpltCallback(hsai);
#else
  HAL_SAI_TxCpltCallback(hsai);
 80081fc:	4620      	mov	r0, r4
 80081fe:	f7f9 fa59 	bl	80016b4 <HAL_SAI_TxCpltCallback>
#endif /* USE_HAL_SAI_REGISTER_CALLBACKS */
}
 8008202:	bd38      	pop	{r3, r4, r5, pc}

08008204 <SAI_DMATxHalfCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void SAI_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
{
 8008204:	b508      	push	{r3, lr}
  SAI_HandleTypeDef* hsai = (SAI_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;

#if (USE_HAL_SAI_REGISTER_CALLBACKS == 1)
  hsai->TxHalfCpltCallback(hsai);
#else
  HAL_SAI_TxHalfCpltCallback(hsai);
 8008206:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8008208:	f7f9 fa5a 	bl	80016c0 <HAL_SAI_TxHalfCpltCallback>
#endif /* USE_HAL_SAI_REGISTER_CALLBACKS */
}
 800820c:	bd08      	pop	{r3, pc}

0800820e <HAL_SAI_ErrorCallback>:
 800820e:	4770      	bx	lr

08008210 <SAI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void SAI_DMAError(DMA_HandleTypeDef *hdma)
{
 8008210:	b510      	push	{r4, lr}
  SAI_HandleTypeDef* hsai = ( SAI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 8008212:	6b84      	ldr	r4, [r0, #56]	; 0x38

  /* Set SAI error code */
  hsai->ErrorCode |= HAL_SAI_ERROR_DMA;
 8008214:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 8008218:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800821c:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80

  if((hsai->hdmatx->ErrorCode == HAL_DMA_ERROR_TE) || (hsai->hdmarx->ErrorCode == HAL_DMA_ERROR_TE))
 8008220:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8008222:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008224:	2b01      	cmp	r3, #1
 8008226:	d003      	beq.n	8008230 <SAI_DMAError+0x20>
 8008228:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800822a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800822c:	2b01      	cmp	r3, #1
 800822e:	d10d      	bne.n	800824c <SAI_DMAError+0x3c>
  {
    /* Disable the SAI DMA request */
    hsai->Instance->CR1 &= ~SAI_xCR1_DMAEN;
 8008230:	6822      	ldr	r2, [r4, #0]

    /* Disable SAI peripheral */
    SAI_Disable(hsai);
 8008232:	4620      	mov	r0, r4
    hsai->Instance->CR1 &= ~SAI_xCR1_DMAEN;
 8008234:	6813      	ldr	r3, [r2, #0]
 8008236:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800823a:	6013      	str	r3, [r2, #0]
    SAI_Disable(hsai);
 800823c:	f7ff fd8e 	bl	8007d5c <SAI_Disable>

    /* Set the SAI state ready to be able to start again the process */
    hsai->State = HAL_SAI_STATE_READY;
 8008240:	2301      	movs	r3, #1
 8008242:	f884 307d 	strb.w	r3, [r4, #125]	; 0x7d

    /* Initialize XferCount */
    hsai->XferCount = 0U;
 8008246:	2300      	movs	r3, #0
 8008248:	f8a4 306a 	strh.w	r3, [r4, #106]	; 0x6a
  }
  /* SAI error Callback */
#if (USE_HAL_SAI_REGISTER_CALLBACKS == 1)
  hsai->ErrorCallback(hsai);
#else
  HAL_SAI_ErrorCallback(hsai);
 800824c:	4620      	mov	r0, r4
 800824e:	f7ff ffde 	bl	800820e <HAL_SAI_ErrorCallback>
#endif /* USE_HAL_SAI_REGISTER_CALLBACKS */
}
 8008252:	bd10      	pop	{r4, pc}

08008254 <HAL_SAI_IRQHandler>:
  if(hsai->State != HAL_SAI_STATE_RESET)
 8008254:	f890 307d 	ldrb.w	r3, [r0, #125]	; 0x7d
{
 8008258:	b570      	push	{r4, r5, r6, lr}
 800825a:	4604      	mov	r4, r0
  if(hsai->State != HAL_SAI_STATE_RESET)
 800825c:	2b00      	cmp	r3, #0
 800825e:	d04f      	beq.n	8008300 <HAL_SAI_IRQHandler+0xac>
    uint32_t itflags = hsai->Instance->SR;
 8008260:	6803      	ldr	r3, [r0, #0]
 8008262:	6959      	ldr	r1, [r3, #20]
    uint32_t itsources = hsai->Instance->IMR;
 8008264:	691a      	ldr	r2, [r3, #16]
    if(((itflags & SAI_xSR_FREQ) == SAI_xSR_FREQ) && ((itsources & SAI_IT_FREQ) == SAI_IT_FREQ))
 8008266:	070e      	lsls	r6, r1, #28
    uint32_t cr1config = hsai->Instance->CR1;
 8008268:	681d      	ldr	r5, [r3, #0]
    if(((itflags & SAI_xSR_FREQ) == SAI_xSR_FREQ) && ((itsources & SAI_IT_FREQ) == SAI_IT_FREQ))
 800826a:	d505      	bpl.n	8008278 <HAL_SAI_IRQHandler+0x24>
 800826c:	0716      	lsls	r6, r2, #28
 800826e:	d503      	bpl.n	8008278 <HAL_SAI_IRQHandler+0x24>
      hsai->InterruptServiceRoutine(hsai);
 8008270:	6f83      	ldr	r3, [r0, #120]	; 0x78
}
 8008272:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      hsai->InterruptServiceRoutine(hsai);
 8008276:	4718      	bx	r3
    else if(((itflags & SAI_FLAG_OVRUDR) == SAI_FLAG_OVRUDR) && ((itsources & SAI_IT_OVRUDR) == SAI_IT_OVRUDR))
 8008278:	07c8      	lsls	r0, r1, #31
 800827a:	d50f      	bpl.n	800829c <HAL_SAI_IRQHandler+0x48>
 800827c:	f012 0001 	ands.w	r0, r2, #1
 8008280:	d00c      	beq.n	800829c <HAL_SAI_IRQHandler+0x48>
      __HAL_SAI_CLEAR_FLAG(hsai, SAI_FLAG_OVRUDR);
 8008282:	2201      	movs	r2, #1
 8008284:	619a      	str	r2, [r3, #24]
      tmperror = ((hsai->State == HAL_SAI_STATE_BUSY_RX) ? HAL_SAI_ERROR_OVR : HAL_SAI_ERROR_UDR);
 8008286:	f894 307d 	ldrb.w	r3, [r4, #125]	; 0x7d
 800828a:	2b22      	cmp	r3, #34	; 0x22
      hsai->ErrorCode |= tmperror;
 800828c:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
      tmperror = ((hsai->State == HAL_SAI_STATE_BUSY_RX) ? HAL_SAI_ERROR_OVR : HAL_SAI_ERROR_UDR);
 8008290:	bf18      	it	ne
 8008292:	2002      	movne	r0, #2
      hsai->ErrorCode |= tmperror;
 8008294:	4303      	orrs	r3, r0
      hsai->ErrorCode |= HAL_SAI_ERROR_CNREADY;
 8008296:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 800829a:	e021      	b.n	80082e0 <HAL_SAI_IRQHandler+0x8c>
    else if(((itflags & SAI_FLAG_MUTEDET) == SAI_FLAG_MUTEDET) && ((itsources & SAI_IT_MUTEDET) == SAI_IT_MUTEDET))
 800829c:	078e      	lsls	r6, r1, #30
 800829e:	d508      	bpl.n	80082b2 <HAL_SAI_IRQHandler+0x5e>
 80082a0:	0790      	lsls	r0, r2, #30
 80082a2:	d506      	bpl.n	80082b2 <HAL_SAI_IRQHandler+0x5e>
      __HAL_SAI_CLEAR_FLAG(hsai, SAI_FLAG_MUTEDET);
 80082a4:	2202      	movs	r2, #2
 80082a6:	619a      	str	r2, [r3, #24]
      if(hsai->mutecallback != (SAIcallback)NULL)
 80082a8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80082aa:	b34b      	cbz	r3, 8008300 <HAL_SAI_IRQHandler+0xac>
}
 80082ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        hsai->mutecallback();
 80082b0:	4718      	bx	r3
    else if(((itflags & SAI_FLAG_AFSDET) == SAI_FLAG_AFSDET) && ((itsources & SAI_IT_AFSDET) == SAI_IT_AFSDET))
 80082b2:	068e      	lsls	r6, r1, #26
 80082b4:	d518      	bpl.n	80082e8 <HAL_SAI_IRQHandler+0x94>
 80082b6:	0690      	lsls	r0, r2, #26
 80082b8:	d516      	bpl.n	80082e8 <HAL_SAI_IRQHandler+0x94>
      hsai->ErrorCode |= HAL_SAI_ERROR_AFSDET;
 80082ba:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 80082be:	f043 0304 	orr.w	r3, r3, #4
      if((cr1config & SAI_xCR1_DMAEN) == SAI_xCR1_DMAEN)
 80082c2:	03ae      	lsls	r6, r5, #14
      hsai->ErrorCode |= HAL_SAI_ERROR_LFSDET;
 80082c4:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
      if((cr1config & SAI_xCR1_DMAEN) == SAI_xCR1_DMAEN)
 80082c8:	d507      	bpl.n	80082da <HAL_SAI_IRQHandler+0x86>
        if(hsai->hdmatx != NULL)
 80082ca:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 80082cc:	b1a8      	cbz	r0, 80082fa <HAL_SAI_IRQHandler+0xa6>
        hsai->hdmarx->XferAbortCallback = SAI_DMAAbort;
 80082ce:	4b1f      	ldr	r3, [pc, #124]	; (800834c <HAL_SAI_IRQHandler+0xf8>)
}
 80082d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        hsai->hdmarx->XferAbortCallback = SAI_DMAAbort;
 80082d4:	6503      	str	r3, [r0, #80]	; 0x50
        HAL_DMA_Abort_IT(hsai->hdmarx);
 80082d6:	f7fc bfd3 	b.w	8005280 <HAL_DMA_Abort_IT>
        HAL_SAI_Abort(hsai);
 80082da:	4620      	mov	r0, r4
 80082dc:	f7ff fed3 	bl	8008086 <HAL_SAI_Abort>
      HAL_SAI_ErrorCallback(hsai);
 80082e0:	4620      	mov	r0, r4
 80082e2:	f7ff ff94 	bl	800820e <HAL_SAI_ErrorCallback>
}
 80082e6:	e00b      	b.n	8008300 <HAL_SAI_IRQHandler+0xac>
    else if(((itflags & SAI_FLAG_LFSDET) == SAI_FLAG_LFSDET) && ((itsources & SAI_IT_LFSDET) == SAI_IT_LFSDET))
 80082e8:	064e      	lsls	r6, r1, #25
 80082ea:	d50a      	bpl.n	8008302 <HAL_SAI_IRQHandler+0xae>
 80082ec:	0650      	lsls	r0, r2, #25
 80082ee:	d508      	bpl.n	8008302 <HAL_SAI_IRQHandler+0xae>
      hsai->ErrorCode |= HAL_SAI_ERROR_LFSDET;
 80082f0:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 80082f4:	f043 0308 	orr.w	r3, r3, #8
 80082f8:	e7e3      	b.n	80082c2 <HAL_SAI_IRQHandler+0x6e>
        else if(hsai->hdmarx != NULL)
 80082fa:	6f20      	ldr	r0, [r4, #112]	; 0x70
 80082fc:	2800      	cmp	r0, #0
 80082fe:	d1e6      	bne.n	80082ce <HAL_SAI_IRQHandler+0x7a>
}
 8008300:	bd70      	pop	{r4, r5, r6, pc}
    else if(((itflags & SAI_FLAG_WCKCFG) == SAI_FLAG_WCKCFG) && ((itsources & SAI_IT_WCKCFG) == SAI_IT_WCKCFG))
 8008302:	074d      	lsls	r5, r1, #29
 8008304:	d517      	bpl.n	8008336 <HAL_SAI_IRQHandler+0xe2>
 8008306:	0750      	lsls	r0, r2, #29
 8008308:	d515      	bpl.n	8008336 <HAL_SAI_IRQHandler+0xe2>
      hsai->ErrorCode |= HAL_SAI_ERROR_WCKCFG;
 800830a:	f8d4 2080 	ldr.w	r2, [r4, #128]	; 0x80
      if(hsai->hdmatx != NULL)
 800830e:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
      hsai->ErrorCode |= HAL_SAI_ERROR_WCKCFG;
 8008310:	f042 0220 	orr.w	r2, r2, #32
 8008314:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
      if(hsai->hdmatx != NULL)
 8008318:	2800      	cmp	r0, #0
 800831a:	d1d8      	bne.n	80082ce <HAL_SAI_IRQHandler+0x7a>
      else if(hsai->hdmarx != NULL)
 800831c:	6f20      	ldr	r0, [r4, #112]	; 0x70
 800831e:	2800      	cmp	r0, #0
 8008320:	d1d5      	bne.n	80082ce <HAL_SAI_IRQHandler+0x7a>
        hsai->Instance->CLRFR = 0xFFFFFFFFU;
 8008322:	f04f 32ff 	mov.w	r2, #4294967295
        hsai->Instance->IMR = 0U;
 8008326:	6118      	str	r0, [r3, #16]
        hsai->Instance->CLRFR = 0xFFFFFFFFU;
 8008328:	619a      	str	r2, [r3, #24]
        hsai->State = HAL_SAI_STATE_READY;
 800832a:	2301      	movs	r3, #1
        hsai->XferCount = 0U;
 800832c:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
        hsai->State = HAL_SAI_STATE_READY;
 8008330:	f884 307d 	strb.w	r3, [r4, #125]	; 0x7d
 8008334:	e7d4      	b.n	80082e0 <HAL_SAI_IRQHandler+0x8c>
    else if(((itflags & SAI_FLAG_CNRDY) == SAI_FLAG_CNRDY) && ((itsources & SAI_IT_CNRDY) == SAI_IT_CNRDY))
 8008336:	06c9      	lsls	r1, r1, #27
 8008338:	d5e2      	bpl.n	8008300 <HAL_SAI_IRQHandler+0xac>
 800833a:	06d2      	lsls	r2, r2, #27
 800833c:	d5e0      	bpl.n	8008300 <HAL_SAI_IRQHandler+0xac>
      __HAL_SAI_CLEAR_FLAG(hsai, SAI_FLAG_CNRDY);
 800833e:	2210      	movs	r2, #16
 8008340:	619a      	str	r2, [r3, #24]
      hsai->ErrorCode |= HAL_SAI_ERROR_CNREADY;
 8008342:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 8008346:	4313      	orrs	r3, r2
 8008348:	e7a5      	b.n	8008296 <HAL_SAI_IRQHandler+0x42>
 800834a:	bf00      	nop
 800834c:	08008351 	.word	0x08008351

08008350 <SAI_DMAAbort>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void SAI_DMAAbort(DMA_HandleTypeDef *hdma)
{
 8008350:	b510      	push	{r4, lr}
  SAI_HandleTypeDef* hsai = ( SAI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 8008352:	6b84      	ldr	r4, [r0, #56]	; 0x38

  /* Disable DMA request */
  hsai->Instance->CR1 &= ~SAI_xCR1_DMAEN;
 8008354:	6823      	ldr	r3, [r4, #0]
 8008356:	681a      	ldr	r2, [r3, #0]
 8008358:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 800835c:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts and clear all flags */
  hsai->Instance->IMR = 0U;
 800835e:	2200      	movs	r2, #0
 8008360:	611a      	str	r2, [r3, #16]
  hsai->Instance->CLRFR = 0xFFFFFFFFU;
 8008362:	f04f 32ff 	mov.w	r2, #4294967295
 8008366:	619a      	str	r2, [r3, #24]

  if(hsai->ErrorCode != HAL_SAI_ERROR_WCKCFG)
 8008368:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 800836c:	2b20      	cmp	r3, #32
 800836e:	d007      	beq.n	8008380 <SAI_DMAAbort+0x30>
  {
    /* Disable SAI peripheral */
    SAI_Disable(hsai);
 8008370:	4620      	mov	r0, r4
 8008372:	f7ff fcf3 	bl	8007d5c <SAI_Disable>

    /* Flush the fifo */
    SET_BIT(hsai->Instance->CR2, SAI_xCR2_FFLUSH);
 8008376:	6822      	ldr	r2, [r4, #0]
 8008378:	6853      	ldr	r3, [r2, #4]
 800837a:	f043 0308 	orr.w	r3, r3, #8
 800837e:	6053      	str	r3, [r2, #4]
  }
  /* Set the SAI state to ready to be able to start again the process */
  hsai->State = HAL_SAI_STATE_READY;
 8008380:	2301      	movs	r3, #1

  /* SAI error Callback */
#if (USE_HAL_SAI_REGISTER_CALLBACKS == 1)
  hsai->ErrorCallback(hsai);
#else
  HAL_SAI_ErrorCallback(hsai);
 8008382:	4620      	mov	r0, r4
  hsai->State = HAL_SAI_STATE_READY;
 8008384:	f884 307d 	strb.w	r3, [r4, #125]	; 0x7d
  hsai->XferCount = 0U;
 8008388:	2300      	movs	r3, #0
 800838a:	f8a4 306a 	strh.w	r3, [r4, #106]	; 0x6a
  HAL_SAI_ErrorCallback(hsai);
 800838e:	f7ff ff3e 	bl	800820e <HAL_SAI_ErrorCallback>
#endif /* USE_HAL_SAI_REGISTER_CALLBACKS */
}
 8008392:	bd10      	pop	{r4, pc}

08008394 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8008394:	b538      	push	{r3, r4, r5, lr}
 8008396:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8008398:	4604      	mov	r4, r0
 800839a:	b1c8      	cbz	r0, 80083d0 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 800839c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80083a0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80083a4:	b91b      	cbnz	r3, 80083ae <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80083a6:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80083aa:	f7f9 fbb5 	bl	8001b18 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80083ae:	2302      	movs	r3, #2
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80083b0:	1d21      	adds	r1, r4, #4
 80083b2:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80083b4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80083b8:	f000 fd92 	bl	8008ee0 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80083bc:	6862      	ldr	r2, [r4, #4]
 80083be:	4629      	mov	r1, r5
 80083c0:	6820      	ldr	r0, [r4, #0]
 80083c2:	f000 fdc3 	bl	8008f4c <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80083c6:	2301      	movs	r3, #1
  
  return HAL_OK;
 80083c8:	2000      	movs	r0, #0
  hsdram->State = HAL_SDRAM_STATE_READY;
 80083ca:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 80083ce:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80083d0:	2001      	movs	r0, #1
 80083d2:	e7fc      	b.n	80083ce <HAL_SDRAM_Init+0x3a>

080083d4 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80083d4:	b538      	push	{r3, r4, r5, lr}
 80083d6:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80083d8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
{
 80083dc:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80083de:	b2c0      	uxtb	r0, r0
 80083e0:	2802      	cmp	r0, #2
 80083e2:	d00d      	beq.n	8008400 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80083e4:	2302      	movs	r3, #2
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80083e6:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80083e8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80083ec:	f000 fdf2 	bl	8008fd4 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80083f0:	682b      	ldr	r3, [r5, #0]
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  
  return HAL_OK;  
 80083f2:	2000      	movs	r0, #0
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80083f4:	2b02      	cmp	r3, #2
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80083f6:	bf0c      	ite	eq
 80083f8:	2305      	moveq	r3, #5
    hsdram->State = HAL_SDRAM_STATE_READY;
 80083fa:	2301      	movne	r3, #1
 80083fc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 8008400:	bd38      	pop	{r3, r4, r5, pc}

08008402 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8008402:	b510      	push	{r4, lr}
 8008404:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008406:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800840a:	b2c0      	uxtb	r0, r0
 800840c:	2802      	cmp	r0, #2
 800840e:	d009      	beq.n	8008424 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008410:	2302      	movs	r3, #2
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8008412:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008414:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8008418:	f000 fdef 	bl	8008ffa <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800841c:	2301      	movs	r3, #1
  
  return HAL_OK;   
 800841e:	2000      	movs	r0, #0
  hsdram->State = HAL_SDRAM_STATE_READY;
 8008420:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 8008424:	bd10      	pop	{r4, pc}

08008426 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8008426:	4770      	bx	lr

08008428 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008428:	6803      	ldr	r3, [r0, #0]
 800842a:	68da      	ldr	r2, [r3, #12]
 800842c:	f042 0201 	orr.w	r2, r2, #1
 8008430:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008432:	4a07      	ldr	r2, [pc, #28]	; (8008450 <HAL_TIM_Base_Start_IT+0x28>)
 8008434:	6899      	ldr	r1, [r3, #8]
 8008436:	400a      	ands	r2, r1
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008438:	2a06      	cmp	r2, #6
 800843a:	d006      	beq.n	800844a <HAL_TIM_Base_Start_IT+0x22>
 800843c:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8008440:	d003      	beq.n	800844a <HAL_TIM_Base_Start_IT+0x22>
  {
    __HAL_TIM_ENABLE(htim);
 8008442:	681a      	ldr	r2, [r3, #0]
 8008444:	f042 0201 	orr.w	r2, r2, #1
 8008448:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 800844a:	2000      	movs	r0, #0
 800844c:	4770      	bx	lr
 800844e:	bf00      	nop
 8008450:	00010007 	.word	0x00010007

08008454 <HAL_TIM_OC_DelayElapsedCallback>:
 8008454:	4770      	bx	lr

08008456 <HAL_TIM_IC_CaptureCallback>:
 8008456:	4770      	bx	lr

08008458 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008458:	4770      	bx	lr

0800845a <HAL_TIM_TriggerCallback>:
 800845a:	4770      	bx	lr

0800845c <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800845c:	6803      	ldr	r3, [r0, #0]
 800845e:	691a      	ldr	r2, [r3, #16]
 8008460:	0791      	lsls	r1, r2, #30
{
 8008462:	b510      	push	{r4, lr}
 8008464:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008466:	d50f      	bpl.n	8008488 <HAL_TIM_IRQHandler+0x2c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8008468:	68da      	ldr	r2, [r3, #12]
 800846a:	0792      	lsls	r2, r2, #30
 800846c:	d50c      	bpl.n	8008488 <HAL_TIM_IRQHandler+0x2c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800846e:	f06f 0202 	mvn.w	r2, #2
 8008472:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8008474:	2201      	movs	r2, #1

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8008476:	699b      	ldr	r3, [r3, #24]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8008478:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800847a:	0799      	lsls	r1, r3, #30
 800847c:	f000 8085 	beq.w	800858a <HAL_TIM_IRQHandler+0x12e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8008480:	f7ff ffe9 	bl	8008456 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008484:	2300      	movs	r3, #0
 8008486:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8008488:	6823      	ldr	r3, [r4, #0]
 800848a:	691a      	ldr	r2, [r3, #16]
 800848c:	0752      	lsls	r2, r2, #29
 800848e:	d510      	bpl.n	80084b2 <HAL_TIM_IRQHandler+0x56>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8008490:	68da      	ldr	r2, [r3, #12]
 8008492:	0750      	lsls	r0, r2, #29
 8008494:	d50d      	bpl.n	80084b2 <HAL_TIM_IRQHandler+0x56>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8008496:	f06f 0204 	mvn.w	r2, #4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800849a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800849c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800849e:	2202      	movs	r2, #2
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80084a0:	699b      	ldr	r3, [r3, #24]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80084a2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80084a4:	f413 7f40 	tst.w	r3, #768	; 0x300
 80084a8:	d075      	beq.n	8008596 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 80084aa:	f7ff ffd4 	bl	8008456 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80084ae:	2300      	movs	r3, #0
 80084b0:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80084b2:	6823      	ldr	r3, [r4, #0]
 80084b4:	691a      	ldr	r2, [r3, #16]
 80084b6:	0711      	lsls	r1, r2, #28
 80084b8:	d50f      	bpl.n	80084da <HAL_TIM_IRQHandler+0x7e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80084ba:	68da      	ldr	r2, [r3, #12]
 80084bc:	0712      	lsls	r2, r2, #28
 80084be:	d50c      	bpl.n	80084da <HAL_TIM_IRQHandler+0x7e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80084c0:	f06f 0208 	mvn.w	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80084c4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80084c6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80084c8:	2204      	movs	r2, #4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80084ca:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80084cc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80084ce:	079b      	lsls	r3, r3, #30
 80084d0:	d067      	beq.n	80085a2 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 80084d2:	f7ff ffc0 	bl	8008456 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80084d6:	2300      	movs	r3, #0
 80084d8:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80084da:	6823      	ldr	r3, [r4, #0]
 80084dc:	691a      	ldr	r2, [r3, #16]
 80084de:	06d0      	lsls	r0, r2, #27
 80084e0:	d510      	bpl.n	8008504 <HAL_TIM_IRQHandler+0xa8>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80084e2:	68da      	ldr	r2, [r3, #12]
 80084e4:	06d1      	lsls	r1, r2, #27
 80084e6:	d50d      	bpl.n	8008504 <HAL_TIM_IRQHandler+0xa8>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80084e8:	f06f 0210 	mvn.w	r2, #16
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80084ec:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80084ee:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80084f0:	2208      	movs	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80084f2:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80084f4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80084f6:	f413 7f40 	tst.w	r3, #768	; 0x300
 80084fa:	d058      	beq.n	80085ae <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 80084fc:	f7ff ffab 	bl	8008456 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008500:	2300      	movs	r3, #0
 8008502:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008504:	6823      	ldr	r3, [r4, #0]
 8008506:	691a      	ldr	r2, [r3, #16]
 8008508:	07d2      	lsls	r2, r2, #31
 800850a:	d508      	bpl.n	800851e <HAL_TIM_IRQHandler+0xc2>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800850c:	68da      	ldr	r2, [r3, #12]
 800850e:	07d0      	lsls	r0, r2, #31
 8008510:	d505      	bpl.n	800851e <HAL_TIM_IRQHandler+0xc2>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008512:	f06f 0201 	mvn.w	r2, #1
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008516:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008518:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800851a:	f7f9 f8d9 	bl	80016d0 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800851e:	6823      	ldr	r3, [r4, #0]
 8008520:	691a      	ldr	r2, [r3, #16]
 8008522:	0611      	lsls	r1, r2, #24
 8008524:	d508      	bpl.n	8008538 <HAL_TIM_IRQHandler+0xdc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008526:	68da      	ldr	r2, [r3, #12]
 8008528:	0612      	lsls	r2, r2, #24
 800852a:	d505      	bpl.n	8008538 <HAL_TIM_IRQHandler+0xdc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800852c:	f06f 0280 	mvn.w	r2, #128	; 0x80
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8008530:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008532:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8008534:	f000 f8c3 	bl	80086be <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 8008538:	6823      	ldr	r3, [r4, #0]
 800853a:	691a      	ldr	r2, [r3, #16]
 800853c:	05d0      	lsls	r0, r2, #23
 800853e:	d508      	bpl.n	8008552 <HAL_TIM_IRQHandler+0xf6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008540:	68da      	ldr	r2, [r3, #12]
 8008542:	0611      	lsls	r1, r2, #24
 8008544:	d505      	bpl.n	8008552 <HAL_TIM_IRQHandler+0xf6>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8008546:	f46f 7280 	mvn.w	r2, #256	; 0x100
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 800854a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 800854c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 800854e:	f000 f8b7 	bl	80086c0 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8008552:	6823      	ldr	r3, [r4, #0]
 8008554:	691a      	ldr	r2, [r3, #16]
 8008556:	0652      	lsls	r2, r2, #25
 8008558:	d508      	bpl.n	800856c <HAL_TIM_IRQHandler+0x110>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800855a:	68da      	ldr	r2, [r3, #12]
 800855c:	0650      	lsls	r0, r2, #25
 800855e:	d505      	bpl.n	800856c <HAL_TIM_IRQHandler+0x110>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8008560:	f06f 0240 	mvn.w	r2, #64	; 0x40
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8008564:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8008566:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8008568:	f7ff ff77 	bl	800845a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800856c:	6823      	ldr	r3, [r4, #0]
 800856e:	691a      	ldr	r2, [r3, #16]
 8008570:	0691      	lsls	r1, r2, #26
 8008572:	d522      	bpl.n	80085ba <HAL_TIM_IRQHandler+0x15e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8008574:	68da      	ldr	r2, [r3, #12]
 8008576:	0692      	lsls	r2, r2, #26
 8008578:	d51f      	bpl.n	80085ba <HAL_TIM_IRQHandler+0x15e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800857a:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800857e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008580:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8008582:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8008586:	f000 b899 	b.w	80086bc <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800858a:	f7ff ff63 	bl	8008454 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800858e:	4620      	mov	r0, r4
 8008590:	f7ff ff62 	bl	8008458 <HAL_TIM_PWM_PulseFinishedCallback>
 8008594:	e776      	b.n	8008484 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008596:	f7ff ff5d 	bl	8008454 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800859a:	4620      	mov	r0, r4
 800859c:	f7ff ff5c 	bl	8008458 <HAL_TIM_PWM_PulseFinishedCallback>
 80085a0:	e785      	b.n	80084ae <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80085a2:	f7ff ff57 	bl	8008454 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80085a6:	4620      	mov	r0, r4
 80085a8:	f7ff ff56 	bl	8008458 <HAL_TIM_PWM_PulseFinishedCallback>
 80085ac:	e793      	b.n	80084d6 <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80085ae:	f7ff ff51 	bl	8008454 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80085b2:	4620      	mov	r0, r4
 80085b4:	f7ff ff50 	bl	8008458 <HAL_TIM_PWM_PulseFinishedCallback>
 80085b8:	e7a2      	b.n	8008500 <HAL_TIM_IRQHandler+0xa4>
}
 80085ba:	bd10      	pop	{r4, pc}

080085bc <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80085bc:	4a30      	ldr	r2, [pc, #192]	; (8008680 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80085be:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80085c0:	4290      	cmp	r0, r2
 80085c2:	d012      	beq.n	80085ea <TIM_Base_SetConfig+0x2e>
 80085c4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80085c8:	d00f      	beq.n	80085ea <TIM_Base_SetConfig+0x2e>
 80085ca:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80085ce:	4290      	cmp	r0, r2
 80085d0:	d00b      	beq.n	80085ea <TIM_Base_SetConfig+0x2e>
 80085d2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80085d6:	4290      	cmp	r0, r2
 80085d8:	d007      	beq.n	80085ea <TIM_Base_SetConfig+0x2e>
 80085da:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80085de:	4290      	cmp	r0, r2
 80085e0:	d003      	beq.n	80085ea <TIM_Base_SetConfig+0x2e>
 80085e2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80085e6:	4290      	cmp	r0, r2
 80085e8:	d119      	bne.n	800861e <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80085ea:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80085ec:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80085f0:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80085f2:	4a23      	ldr	r2, [pc, #140]	; (8008680 <TIM_Base_SetConfig+0xc4>)
 80085f4:	4290      	cmp	r0, r2
 80085f6:	d029      	beq.n	800864c <TIM_Base_SetConfig+0x90>
 80085f8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80085fc:	d026      	beq.n	800864c <TIM_Base_SetConfig+0x90>
 80085fe:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008602:	4290      	cmp	r0, r2
 8008604:	d022      	beq.n	800864c <TIM_Base_SetConfig+0x90>
 8008606:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800860a:	4290      	cmp	r0, r2
 800860c:	d01e      	beq.n	800864c <TIM_Base_SetConfig+0x90>
 800860e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008612:	4290      	cmp	r0, r2
 8008614:	d01a      	beq.n	800864c <TIM_Base_SetConfig+0x90>
 8008616:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800861a:	4290      	cmp	r0, r2
 800861c:	d016      	beq.n	800864c <TIM_Base_SetConfig+0x90>
 800861e:	4a19      	ldr	r2, [pc, #100]	; (8008684 <TIM_Base_SetConfig+0xc8>)
 8008620:	4290      	cmp	r0, r2
 8008622:	d013      	beq.n	800864c <TIM_Base_SetConfig+0x90>
 8008624:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008628:	4290      	cmp	r0, r2
 800862a:	d00f      	beq.n	800864c <TIM_Base_SetConfig+0x90>
 800862c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008630:	4290      	cmp	r0, r2
 8008632:	d00b      	beq.n	800864c <TIM_Base_SetConfig+0x90>
 8008634:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8008638:	4290      	cmp	r0, r2
 800863a:	d007      	beq.n	800864c <TIM_Base_SetConfig+0x90>
 800863c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008640:	4290      	cmp	r0, r2
 8008642:	d003      	beq.n	800864c <TIM_Base_SetConfig+0x90>
 8008644:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008648:	4290      	cmp	r0, r2
 800864a:	d103      	bne.n	8008654 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 800864c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008650:	68ca      	ldr	r2, [r1, #12]
 8008652:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008654:	694a      	ldr	r2, [r1, #20]
 8008656:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800865a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800865c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800865e:	688b      	ldr	r3, [r1, #8]
 8008660:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8008662:	680b      	ldr	r3, [r1, #0]
 8008664:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008666:	4b06      	ldr	r3, [pc, #24]	; (8008680 <TIM_Base_SetConfig+0xc4>)
 8008668:	4298      	cmp	r0, r3
 800866a:	d003      	beq.n	8008674 <TIM_Base_SetConfig+0xb8>
 800866c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008670:	4298      	cmp	r0, r3
 8008672:	d101      	bne.n	8008678 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008674:	690b      	ldr	r3, [r1, #16]
 8008676:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008678:	2301      	movs	r3, #1
 800867a:	6143      	str	r3, [r0, #20]
}
 800867c:	4770      	bx	lr
 800867e:	bf00      	nop
 8008680:	40010000 	.word	0x40010000
 8008684:	40014000 	.word	0x40014000

08008688 <HAL_TIM_Base_Init>:
{
 8008688:	b510      	push	{r4, lr}
  if (htim == NULL)
 800868a:	4604      	mov	r4, r0
 800868c:	b1a0      	cbz	r0, 80086b8 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 800868e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008692:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008696:	b91b      	cbnz	r3, 80086a0 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8008698:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800869c:	f7ff fec3 	bl	8008426 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80086a0:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80086a2:	6820      	ldr	r0, [r4, #0]
 80086a4:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 80086a6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80086aa:	f7ff ff87 	bl	80085bc <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80086ae:	2301      	movs	r3, #1
  return HAL_OK;
 80086b0:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 80086b2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 80086b6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80086b8:	2001      	movs	r0, #1
 80086ba:	e7fc      	b.n	80086b6 <HAL_TIM_Base_Init+0x2e>

080086bc <HAL_TIMEx_CommutCallback>:
 80086bc:	4770      	bx	lr

080086be <HAL_TIMEx_BreakCallback>:
 80086be:	4770      	bx	lr

080086c0 <HAL_TIMEx_Break2Callback>:
 80086c0:	4770      	bx	lr

080086c2 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80086c2:	6803      	ldr	r3, [r0, #0]
 80086c4:	681a      	ldr	r2, [r3, #0]
 80086c6:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80086ca:	601a      	str	r2, [r3, #0]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80086cc:	689a      	ldr	r2, [r3, #8]
 80086ce:	f022 0201 	bic.w	r2, r2, #1
 80086d2:	609a      	str	r2, [r3, #8]

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80086d4:	2320      	movs	r3, #32
 80086d6:	6783      	str	r3, [r0, #120]	; 0x78

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 80086d8:	2300      	movs	r3, #0
 80086da:	6603      	str	r3, [r0, #96]	; 0x60
}
 80086dc:	4770      	bx	lr
	...

080086e0 <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
 80086e0:	6f83      	ldr	r3, [r0, #120]	; 0x78
 80086e2:	2b20      	cmp	r3, #32
 80086e4:	d149      	bne.n	800877a <HAL_UART_Receive_IT+0x9a>
    if ((pData == NULL) || (Size == 0U))
 80086e6:	2900      	cmp	r1, #0
 80086e8:	d045      	beq.n	8008776 <HAL_UART_Receive_IT+0x96>
 80086ea:	2a00      	cmp	r2, #0
 80086ec:	d043      	beq.n	8008776 <HAL_UART_Receive_IT+0x96>
    __HAL_LOCK(huart);
 80086ee:	f890 3070 	ldrb.w	r3, [r0, #112]	; 0x70
 80086f2:	2b01      	cmp	r3, #1
 80086f4:	d041      	beq.n	800877a <HAL_UART_Receive_IT+0x9a>
 80086f6:	2301      	movs	r3, #1
    huart->RxXferSize  = Size;
 80086f8:	f8a0 2058 	strh.w	r2, [r0, #88]	; 0x58
    huart->RxXferCount = Size;
 80086fc:	f8a0 205a 	strh.w	r2, [r0, #90]	; 0x5a
    huart->RxISR       = NULL;
 8008700:	2200      	movs	r2, #0
    __HAL_LOCK(huart);
 8008702:	f880 3070 	strb.w	r3, [r0, #112]	; 0x70
    UART_MASK_COMPUTATION(huart);
 8008706:	6883      	ldr	r3, [r0, #8]
    huart->pRxBuffPtr  = pData;
 8008708:	6541      	str	r1, [r0, #84]	; 0x54
    UART_MASK_COMPUTATION(huart);
 800870a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    huart->RxISR       = NULL;
 800870e:	6602      	str	r2, [r0, #96]	; 0x60
    UART_MASK_COMPUTATION(huart);
 8008710:	d121      	bne.n	8008756 <HAL_UART_Receive_IT+0x76>
 8008712:	6902      	ldr	r2, [r0, #16]
 8008714:	b9ea      	cbnz	r2, 8008752 <HAL_UART_Receive_IT+0x72>
 8008716:	f240 12ff 	movw	r2, #511	; 0x1ff
 800871a:	f8a0 205c 	strh.w	r2, [r0, #92]	; 0x5c
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800871e:	2200      	movs	r2, #0
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8008720:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008724:	67c2      	str	r2, [r0, #124]	; 0x7c
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8008726:	f04f 0222 	mov.w	r2, #34	; 0x22
 800872a:	6782      	str	r2, [r0, #120]	; 0x78
    SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800872c:	6802      	ldr	r2, [r0, #0]
 800872e:	6891      	ldr	r1, [r2, #8]
 8008730:	f041 0101 	orr.w	r1, r1, #1
 8008734:	6091      	str	r1, [r2, #8]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8008736:	d11c      	bne.n	8008772 <HAL_UART_Receive_IT+0x92>
 8008738:	6903      	ldr	r3, [r0, #16]
 800873a:	b9d3      	cbnz	r3, 8008772 <HAL_UART_Receive_IT+0x92>
      huart->RxISR = UART_RxISR_16BIT;
 800873c:	4b10      	ldr	r3, [pc, #64]	; (8008780 <HAL_UART_Receive_IT+0xa0>)
    SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 800873e:	6811      	ldr	r1, [r2, #0]
      huart->RxISR = UART_RxISR_8BIT;
 8008740:	6603      	str	r3, [r0, #96]	; 0x60
    __HAL_UNLOCK(huart);
 8008742:	2300      	movs	r3, #0
    SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 8008744:	f441 7190 	orr.w	r1, r1, #288	; 0x120
    __HAL_UNLOCK(huart);
 8008748:	f880 3070 	strb.w	r3, [r0, #112]	; 0x70
    return HAL_OK;
 800874c:	4618      	mov	r0, r3
    SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 800874e:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 8008750:	4770      	bx	lr
    UART_MASK_COMPUTATION(huart);
 8008752:	22ff      	movs	r2, #255	; 0xff
 8008754:	e7e1      	b.n	800871a <HAL_UART_Receive_IT+0x3a>
 8008756:	b923      	cbnz	r3, 8008762 <HAL_UART_Receive_IT+0x82>
 8008758:	6902      	ldr	r2, [r0, #16]
 800875a:	2a00      	cmp	r2, #0
 800875c:	d0f9      	beq.n	8008752 <HAL_UART_Receive_IT+0x72>
 800875e:	227f      	movs	r2, #127	; 0x7f
 8008760:	e7db      	b.n	800871a <HAL_UART_Receive_IT+0x3a>
 8008762:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008766:	d1d8      	bne.n	800871a <HAL_UART_Receive_IT+0x3a>
 8008768:	6902      	ldr	r2, [r0, #16]
 800876a:	2a00      	cmp	r2, #0
 800876c:	d0f7      	beq.n	800875e <HAL_UART_Receive_IT+0x7e>
 800876e:	223f      	movs	r2, #63	; 0x3f
 8008770:	e7d3      	b.n	800871a <HAL_UART_Receive_IT+0x3a>
      huart->RxISR = UART_RxISR_8BIT;
 8008772:	4b04      	ldr	r3, [pc, #16]	; (8008784 <HAL_UART_Receive_IT+0xa4>)
 8008774:	e7e3      	b.n	800873e <HAL_UART_Receive_IT+0x5e>
      return HAL_ERROR;
 8008776:	2001      	movs	r0, #1
 8008778:	4770      	bx	lr
    return HAL_BUSY;
 800877a:	2002      	movs	r0, #2
}
 800877c:	4770      	bx	lr
 800877e:	bf00      	nop
 8008780:	080087e3 	.word	0x080087e3
 8008784:	0800878b 	.word	0x0800878b

08008788 <HAL_UART_TxCpltCallback>:
 8008788:	4770      	bx	lr

0800878a <UART_RxISR_8BIT>:
{
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800878a:	6f81      	ldr	r1, [r0, #120]	; 0x78
 800878c:	6802      	ldr	r2, [r0, #0]
 800878e:	2922      	cmp	r1, #34	; 0x22
{
 8008790:	b510      	push	{r4, lr}
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8008792:	d121      	bne.n	80087d8 <UART_RxISR_8BIT+0x4e>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 8008794:	6a52      	ldr	r2, [r2, #36]	; 0x24
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 8008796:	f890 405c 	ldrb.w	r4, [r0, #92]	; 0x5c
 800879a:	6d41      	ldr	r1, [r0, #84]	; 0x54
 800879c:	4022      	ands	r2, r4
 800879e:	700a      	strb	r2, [r1, #0]
    huart->pRxBuffPtr++;
 80087a0:	6d42      	ldr	r2, [r0, #84]	; 0x54
 80087a2:	3201      	adds	r2, #1
 80087a4:	6542      	str	r2, [r0, #84]	; 0x54
    huart->RxXferCount--;
 80087a6:	f8b0 205a 	ldrh.w	r2, [r0, #90]	; 0x5a
 80087aa:	3a01      	subs	r2, #1
 80087ac:	b292      	uxth	r2, r2
 80087ae:	f8a0 205a 	strh.w	r2, [r0, #90]	; 0x5a

    if (huart->RxXferCount == 0U)
 80087b2:	f8b0 205a 	ldrh.w	r2, [r0, #90]	; 0x5a
 80087b6:	b292      	uxth	r2, r2
 80087b8:	b96a      	cbnz	r2, 80087d6 <UART_RxISR_8BIT+0x4c>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80087ba:	6801      	ldr	r1, [r0, #0]
 80087bc:	680c      	ldr	r4, [r1, #0]
 80087be:	f424 7490 	bic.w	r4, r4, #288	; 0x120
 80087c2:	600c      	str	r4, [r1, #0]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80087c4:	688c      	ldr	r4, [r1, #8]
 80087c6:	f024 0401 	bic.w	r4, r4, #1
 80087ca:	608c      	str	r4, [r1, #8]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 80087cc:	2120      	movs	r1, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 80087ce:	6602      	str	r2, [r0, #96]	; 0x60
      huart->RxState = HAL_UART_STATE_READY;
 80087d0:	6781      	str	r1, [r0, #120]	; 0x78
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
      /*Call registered Rx complete callback*/
      huart->RxCpltCallback(huart);
#else
      /*Call legacy weak Rx complete callback*/
      HAL_UART_RxCpltCallback(huart);
 80087d2:	f7f8 f86b 	bl	80008ac <HAL_UART_RxCpltCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 80087d6:	bd10      	pop	{r4, pc}
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 80087d8:	6993      	ldr	r3, [r2, #24]
 80087da:	f043 0308 	orr.w	r3, r3, #8
 80087de:	6193      	str	r3, [r2, #24]
}
 80087e0:	e7f9      	b.n	80087d6 <UART_RxISR_8BIT+0x4c>

080087e2 <UART_RxISR_16BIT>:
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80087e2:	6f81      	ldr	r1, [r0, #120]	; 0x78
 80087e4:	6802      	ldr	r2, [r0, #0]
 80087e6:	2922      	cmp	r1, #34	; 0x22
{
 80087e8:	b510      	push	{r4, lr}
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80087ea:	d11f      	bne.n	800882c <UART_RxISR_16BIT+0x4a>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80087ec:	6a54      	ldr	r4, [r2, #36]	; 0x24
    tmp = (uint16_t *) huart->pRxBuffPtr ;
    *tmp = (uint16_t)(uhdata & uhMask);
 80087ee:	f8b0 105c 	ldrh.w	r1, [r0, #92]	; 0x5c
 80087f2:	400c      	ands	r4, r1
 80087f4:	6d41      	ldr	r1, [r0, #84]	; 0x54
 80087f6:	f821 4b02 	strh.w	r4, [r1], #2
    huart->pRxBuffPtr += 2U;
 80087fa:	6541      	str	r1, [r0, #84]	; 0x54
    huart->RxXferCount--;
 80087fc:	f8b0 105a 	ldrh.w	r1, [r0, #90]	; 0x5a
 8008800:	3901      	subs	r1, #1
 8008802:	b289      	uxth	r1, r1
 8008804:	f8a0 105a 	strh.w	r1, [r0, #90]	; 0x5a

    if (huart->RxXferCount == 0U)
 8008808:	f8b0 105a 	ldrh.w	r1, [r0, #90]	; 0x5a
 800880c:	b289      	uxth	r1, r1
 800880e:	b961      	cbnz	r1, 800882a <UART_RxISR_16BIT+0x48>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
      CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8008810:	6814      	ldr	r4, [r2, #0]
 8008812:	f424 7490 	bic.w	r4, r4, #288	; 0x120
 8008816:	6014      	str	r4, [r2, #0]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8008818:	6894      	ldr	r4, [r2, #8]
 800881a:	f024 0401 	bic.w	r4, r4, #1
 800881e:	6094      	str	r4, [r2, #8]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8008820:	2220      	movs	r2, #32

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 8008822:	6601      	str	r1, [r0, #96]	; 0x60
      huart->RxState = HAL_UART_STATE_READY;
 8008824:	6782      	str	r2, [r0, #120]	; 0x78
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
      /*Call registered Rx complete callback*/
      huart->RxCpltCallback(huart);
#else
      /*Call legacy weak Rx complete callback*/
      HAL_UART_RxCpltCallback(huart);
 8008826:	f7f8 f841 	bl	80008ac <HAL_UART_RxCpltCallback>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 800882a:	bd10      	pop	{r4, pc}
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 800882c:	6993      	ldr	r3, [r2, #24]
 800882e:	f043 0308 	orr.w	r3, r3, #8
 8008832:	6193      	str	r3, [r2, #24]
}
 8008834:	e7f9      	b.n	800882a <UART_RxISR_16BIT+0x48>

08008836 <HAL_UART_ErrorCallback>:
 8008836:	4770      	bx	lr

08008838 <UART_DMAAbortOnError>:
{
 8008838:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 800883a:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0U;
 800883c:	2300      	movs	r3, #0
 800883e:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
  huart->TxXferCount = 0U;
 8008842:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
  HAL_UART_ErrorCallback(huart);
 8008846:	f7ff fff6 	bl	8008836 <HAL_UART_ErrorCallback>
}
 800884a:	bd08      	pop	{r3, pc}

0800884c <HAL_UARTEx_WakeupCallback>:
}
 800884c:	4770      	bx	lr
	...

08008850 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8008850:	6803      	ldr	r3, [r0, #0]
{
 8008852:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8008854:	69da      	ldr	r2, [r3, #28]
  if (errorflags == 0U)
 8008856:	f640 060f 	movw	r6, #2063	; 0x80f
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 800885a:	6819      	ldr	r1, [r3, #0]
{
 800885c:	4604      	mov	r4, r0
  if (errorflags == 0U)
 800885e:	4232      	tst	r2, r6
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8008860:	689d      	ldr	r5, [r3, #8]
  if (errorflags == 0U)
 8008862:	d109      	bne.n	8008878 <HAL_UART_IRQHandler+0x28>
    if (((isrflags & USART_ISR_RXNE) != 0U)
 8008864:	0696      	lsls	r6, r2, #26
 8008866:	d56e      	bpl.n	8008946 <HAL_UART_IRQHandler+0xf6>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 8008868:	068e      	lsls	r6, r1, #26
 800886a:	d56c      	bpl.n	8008946 <HAL_UART_IRQHandler+0xf6>
      if (huart->RxISR != NULL)
 800886c:	6e03      	ldr	r3, [r0, #96]	; 0x60
 800886e:	2b00      	cmp	r3, #0
 8008870:	d064      	beq.n	800893c <HAL_UART_IRQHandler+0xec>
}
 8008872:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      huart->TxISR(huart);
 8008876:	4718      	bx	r3
      && (((cr3its & USART_CR3_EIE) != 0U)
 8008878:	f015 0001 	ands.w	r0, r5, #1
 800887c:	d102      	bne.n	8008884 <HAL_UART_IRQHandler+0x34>
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
 800887e:	f411 7f90 	tst.w	r1, #288	; 0x120
 8008882:	d060      	beq.n	8008946 <HAL_UART_IRQHandler+0xf6>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 8008884:	07d6      	lsls	r6, r2, #31
 8008886:	d507      	bpl.n	8008898 <HAL_UART_IRQHandler+0x48>
 8008888:	05cd      	lsls	r5, r1, #23
 800888a:	d505      	bpl.n	8008898 <HAL_UART_IRQHandler+0x48>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 800888c:	2501      	movs	r5, #1
 800888e:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8008890:	6fe5      	ldr	r5, [r4, #124]	; 0x7c
 8008892:	f045 0501 	orr.w	r5, r5, #1
 8008896:	67e5      	str	r5, [r4, #124]	; 0x7c
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8008898:	0796      	lsls	r6, r2, #30
 800889a:	d506      	bpl.n	80088aa <HAL_UART_IRQHandler+0x5a>
 800889c:	b128      	cbz	r0, 80088aa <HAL_UART_IRQHandler+0x5a>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 800889e:	2502      	movs	r5, #2
 80088a0:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 80088a2:	6fe5      	ldr	r5, [r4, #124]	; 0x7c
 80088a4:	f045 0504 	orr.w	r5, r5, #4
 80088a8:	67e5      	str	r5, [r4, #124]	; 0x7c
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80088aa:	0755      	lsls	r5, r2, #29
 80088ac:	d506      	bpl.n	80088bc <HAL_UART_IRQHandler+0x6c>
 80088ae:	b128      	cbz	r0, 80088bc <HAL_UART_IRQHandler+0x6c>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 80088b0:	2504      	movs	r5, #4
 80088b2:	621d      	str	r5, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 80088b4:	6fe5      	ldr	r5, [r4, #124]	; 0x7c
 80088b6:	f045 0502 	orr.w	r5, r5, #2
 80088ba:	67e5      	str	r5, [r4, #124]	; 0x7c
    if (((isrflags & USART_ISR_ORE) != 0U)
 80088bc:	0716      	lsls	r6, r2, #28
 80088be:	d508      	bpl.n	80088d2 <HAL_UART_IRQHandler+0x82>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 80088c0:	068d      	lsls	r5, r1, #26
 80088c2:	d400      	bmi.n	80088c6 <HAL_UART_IRQHandler+0x76>
 80088c4:	b128      	cbz	r0, 80088d2 <HAL_UART_IRQHandler+0x82>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 80088c6:	2008      	movs	r0, #8
 80088c8:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80088ca:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 80088cc:	f040 0008 	orr.w	r0, r0, #8
 80088d0:	67e0      	str	r0, [r4, #124]	; 0x7c
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 80088d2:	0510      	lsls	r0, r2, #20
 80088d4:	d508      	bpl.n	80088e8 <HAL_UART_IRQHandler+0x98>
 80088d6:	014e      	lsls	r6, r1, #5
 80088d8:	d506      	bpl.n	80088e8 <HAL_UART_IRQHandler+0x98>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80088da:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80088de:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 80088e0:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
 80088e2:	f043 0320 	orr.w	r3, r3, #32
 80088e6:	67e3      	str	r3, [r4, #124]	; 0x7c
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80088e8:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
 80088ea:	b33b      	cbz	r3, 800893c <HAL_UART_IRQHandler+0xec>
      if (((isrflags & USART_ISR_RXNE) != 0U)
 80088ec:	0695      	lsls	r5, r2, #26
 80088ee:	d505      	bpl.n	80088fc <HAL_UART_IRQHandler+0xac>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 80088f0:	0688      	lsls	r0, r1, #26
 80088f2:	d503      	bpl.n	80088fc <HAL_UART_IRQHandler+0xac>
        if (huart->RxISR != NULL)
 80088f4:	6e23      	ldr	r3, [r4, #96]	; 0x60
 80088f6:	b10b      	cbz	r3, 80088fc <HAL_UART_IRQHandler+0xac>
          huart->RxISR(huart);
 80088f8:	4620      	mov	r0, r4
 80088fa:	4798      	blx	r3
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80088fc:	6822      	ldr	r2, [r4, #0]
        UART_EndRxTransfer(huart);
 80088fe:	4620      	mov	r0, r4
      errorcode = huart->ErrorCode;
 8008900:	6fe5      	ldr	r5, [r4, #124]	; 0x7c
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8008902:	6892      	ldr	r2, [r2, #8]
 8008904:	0651      	lsls	r1, r2, #25
 8008906:	d402      	bmi.n	800890e <HAL_UART_IRQHandler+0xbe>
 8008908:	f015 0528 	ands.w	r5, r5, #40	; 0x28
 800890c:	d017      	beq.n	800893e <HAL_UART_IRQHandler+0xee>
        UART_EndRxTransfer(huart);
 800890e:	f7ff fed8 	bl	80086c2 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8008912:	6823      	ldr	r3, [r4, #0]
 8008914:	689a      	ldr	r2, [r3, #8]
 8008916:	0652      	lsls	r2, r2, #25
 8008918:	d50d      	bpl.n	8008936 <HAL_UART_IRQHandler+0xe6>
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800891a:	689a      	ldr	r2, [r3, #8]
          if (huart->hdmarx != NULL)
 800891c:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800891e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008922:	609a      	str	r2, [r3, #8]
          if (huart->hdmarx != NULL)
 8008924:	b138      	cbz	r0, 8008936 <HAL_UART_IRQHandler+0xe6>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8008926:	4b1a      	ldr	r3, [pc, #104]	; (8008990 <HAL_UART_IRQHandler+0x140>)
 8008928:	6503      	str	r3, [r0, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 800892a:	f7fc fca9 	bl	8005280 <HAL_DMA_Abort_IT>
 800892e:	b128      	cbz	r0, 800893c <HAL_UART_IRQHandler+0xec>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8008930:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8008932:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8008934:	e79d      	b.n	8008872 <HAL_UART_IRQHandler+0x22>
            HAL_UART_ErrorCallback(huart);
 8008936:	4620      	mov	r0, r4
 8008938:	f7ff ff7d 	bl	8008836 <HAL_UART_ErrorCallback>
}
 800893c:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_ErrorCallback(huart);
 800893e:	f7ff ff7a 	bl	8008836 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008942:	67e5      	str	r5, [r4, #124]	; 0x7c
 8008944:	e7fa      	b.n	800893c <HAL_UART_IRQHandler+0xec>
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 8008946:	02d6      	lsls	r6, r2, #11
 8008948:	d508      	bpl.n	800895c <HAL_UART_IRQHandler+0x10c>
 800894a:	0268      	lsls	r0, r5, #9
 800894c:	d506      	bpl.n	800895c <HAL_UART_IRQHandler+0x10c>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 800894e:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
    HAL_UARTEx_WakeupCallback(huart);
 8008952:	4620      	mov	r0, r4
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 8008954:	621a      	str	r2, [r3, #32]
    HAL_UARTEx_WakeupCallback(huart);
 8008956:	f7ff ff79 	bl	800884c <HAL_UARTEx_WakeupCallback>
    return;
 800895a:	e7ef      	b.n	800893c <HAL_UART_IRQHandler+0xec>
  if (((isrflags & USART_ISR_TXE) != 0U)
 800895c:	0616      	lsls	r6, r2, #24
 800895e:	d506      	bpl.n	800896e <HAL_UART_IRQHandler+0x11e>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 8008960:	060d      	lsls	r5, r1, #24
 8008962:	d504      	bpl.n	800896e <HAL_UART_IRQHandler+0x11e>
    if (huart->TxISR != NULL)
 8008964:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008966:	2b00      	cmp	r3, #0
 8008968:	d0e8      	beq.n	800893c <HAL_UART_IRQHandler+0xec>
      huart->TxISR(huart);
 800896a:	4620      	mov	r0, r4
 800896c:	e781      	b.n	8008872 <HAL_UART_IRQHandler+0x22>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 800896e:	0650      	lsls	r0, r2, #25
 8008970:	d5e4      	bpl.n	800893c <HAL_UART_IRQHandler+0xec>
 8008972:	064a      	lsls	r2, r1, #25
 8008974:	d5e2      	bpl.n	800893c <HAL_UART_IRQHandler+0xec>
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8008976:	681a      	ldr	r2, [r3, #0]
  HAL_UART_TxCpltCallback(huart);
 8008978:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 800897a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800897e:	601a      	str	r2, [r3, #0]
  huart->gState = HAL_UART_STATE_READY;
 8008980:	2320      	movs	r3, #32
 8008982:	6763      	str	r3, [r4, #116]	; 0x74
  huart->TxISR = NULL;
 8008984:	2300      	movs	r3, #0
 8008986:	6663      	str	r3, [r4, #100]	; 0x64
  HAL_UART_TxCpltCallback(huart);
 8008988:	f7ff fefe 	bl	8008788 <HAL_UART_TxCpltCallback>
 800898c:	e7d6      	b.n	800893c <HAL_UART_IRQHandler+0xec>
 800898e:	bf00      	nop
 8008990:	08008839 	.word	0x08008839

08008994 <UART_SetConfig>:
{
 8008994:	b538      	push	{r3, r4, r5, lr}
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8008996:	69c2      	ldr	r2, [r0, #28]
{
 8008998:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800899a:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800899c:	6881      	ldr	r1, [r0, #8]
 800899e:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80089a0:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80089a2:	4301      	orrs	r1, r0
 80089a4:	6960      	ldr	r0, [r4, #20]
 80089a6:	4301      	orrs	r1, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80089a8:	489a      	ldr	r0, [pc, #616]	; (8008c14 <UART_SetConfig+0x280>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80089aa:	4311      	orrs	r1, r2
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80089ac:	4028      	ands	r0, r5
  tmpreg |= huart->Init.OneBitSampling;
 80089ae:	6a25      	ldr	r5, [r4, #32]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80089b0:	4301      	orrs	r1, r0
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80089b2:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80089b4:	6019      	str	r1, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80089b6:	6859      	ldr	r1, [r3, #4]
 80089b8:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
 80089bc:	4301      	orrs	r1, r0
 80089be:	6059      	str	r1, [r3, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 80089c0:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80089c2:	6898      	ldr	r0, [r3, #8]
  tmpreg |= huart->Init.OneBitSampling;
 80089c4:	4329      	orrs	r1, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80089c6:	f420 6030 	bic.w	r0, r0, #2816	; 0xb00
 80089ca:	4301      	orrs	r1, r0
 80089cc:	6099      	str	r1, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 80089ce:	4992      	ldr	r1, [pc, #584]	; (8008c18 <UART_SetConfig+0x284>)
 80089d0:	428b      	cmp	r3, r1
 80089d2:	d118      	bne.n	8008a06 <UART_SetConfig+0x72>
 80089d4:	4b91      	ldr	r3, [pc, #580]	; (8008c1c <UART_SetConfig+0x288>)
 80089d6:	4992      	ldr	r1, [pc, #584]	; (8008c20 <UART_SetConfig+0x28c>)
 80089d8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80089dc:	f003 0303 	and.w	r3, r3, #3
 80089e0:	5ccb      	ldrb	r3, [r1, r3]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80089e2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80089e6:	f040 80bd 	bne.w	8008b64 <UART_SetConfig+0x1d0>
    switch (clocksource)
 80089ea:	2b08      	cmp	r3, #8
 80089ec:	f200 80af 	bhi.w	8008b4e <UART_SetConfig+0x1ba>
 80089f0:	e8df f013 	tbh	[pc, r3, lsl #1]
 80089f4:	00aa0095 	.word	0x00aa0095
 80089f8:	00ad00f9 	.word	0x00ad00f9
 80089fc:	00ad0105 	.word	0x00ad0105
 8008a00:	00ad00ad 	.word	0x00ad00ad
 8008a04:	010b      	.short	0x010b
  UART_GETCLOCKSOURCE(huart, clocksource);
 8008a06:	4987      	ldr	r1, [pc, #540]	; (8008c24 <UART_SetConfig+0x290>)
 8008a08:	428b      	cmp	r3, r1
 8008a0a:	d106      	bne.n	8008a1a <UART_SetConfig+0x86>
 8008a0c:	4b83      	ldr	r3, [pc, #524]	; (8008c1c <UART_SetConfig+0x288>)
 8008a0e:	4986      	ldr	r1, [pc, #536]	; (8008c28 <UART_SetConfig+0x294>)
 8008a10:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008a14:	f003 030c 	and.w	r3, r3, #12
 8008a18:	e7e2      	b.n	80089e0 <UART_SetConfig+0x4c>
 8008a1a:	4984      	ldr	r1, [pc, #528]	; (8008c2c <UART_SetConfig+0x298>)
 8008a1c:	428b      	cmp	r3, r1
 8008a1e:	d118      	bne.n	8008a52 <UART_SetConfig+0xbe>
 8008a20:	4b7e      	ldr	r3, [pc, #504]	; (8008c1c <UART_SetConfig+0x288>)
 8008a22:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008a26:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8008a2a:	2b10      	cmp	r3, #16
 8008a2c:	f000 80e4 	beq.w	8008bf8 <UART_SetConfig+0x264>
 8008a30:	d802      	bhi.n	8008a38 <UART_SetConfig+0xa4>
 8008a32:	2b00      	cmp	r3, #0
 8008a34:	d0d5      	beq.n	80089e2 <UART_SetConfig+0x4e>
 8008a36:	e005      	b.n	8008a44 <UART_SetConfig+0xb0>
 8008a38:	2b20      	cmp	r3, #32
 8008a3a:	f000 80d1 	beq.w	8008be0 <UART_SetConfig+0x24c>
 8008a3e:	2b30      	cmp	r3, #48	; 0x30
 8008a40:	f000 80e0 	beq.w	8008c04 <UART_SetConfig+0x270>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8008a44:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8008a48:	f000 8081 	beq.w	8008b4e <UART_SetConfig+0x1ba>
        ret = HAL_ERROR;
 8008a4c:	2001      	movs	r0, #1
  uint32_t usartdiv                   = 0x00000000U;
 8008a4e:	2300      	movs	r3, #0
 8008a50:	e0a9      	b.n	8008ba6 <UART_SetConfig+0x212>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8008a52:	4977      	ldr	r1, [pc, #476]	; (8008c30 <UART_SetConfig+0x29c>)
 8008a54:	428b      	cmp	r3, r1
 8008a56:	d10d      	bne.n	8008a74 <UART_SetConfig+0xe0>
 8008a58:	4b70      	ldr	r3, [pc, #448]	; (8008c1c <UART_SetConfig+0x288>)
 8008a5a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008a5e:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8008a62:	2b40      	cmp	r3, #64	; 0x40
 8008a64:	f000 80c8 	beq.w	8008bf8 <UART_SetConfig+0x264>
 8008a68:	d9e3      	bls.n	8008a32 <UART_SetConfig+0x9e>
 8008a6a:	2b80      	cmp	r3, #128	; 0x80
 8008a6c:	f000 80b8 	beq.w	8008be0 <UART_SetConfig+0x24c>
 8008a70:	2bc0      	cmp	r3, #192	; 0xc0
 8008a72:	e7e5      	b.n	8008a40 <UART_SetConfig+0xac>
 8008a74:	496f      	ldr	r1, [pc, #444]	; (8008c34 <UART_SetConfig+0x2a0>)
 8008a76:	428b      	cmp	r3, r1
 8008a78:	d110      	bne.n	8008a9c <UART_SetConfig+0x108>
 8008a7a:	4b68      	ldr	r3, [pc, #416]	; (8008c1c <UART_SetConfig+0x288>)
 8008a7c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008a80:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008a84:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008a88:	f000 80b6 	beq.w	8008bf8 <UART_SetConfig+0x264>
 8008a8c:	d9d1      	bls.n	8008a32 <UART_SetConfig+0x9e>
 8008a8e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008a92:	f000 80a5 	beq.w	8008be0 <UART_SetConfig+0x24c>
 8008a96:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8008a9a:	e7d1      	b.n	8008a40 <UART_SetConfig+0xac>
 8008a9c:	4966      	ldr	r1, [pc, #408]	; (8008c38 <UART_SetConfig+0x2a4>)
 8008a9e:	428b      	cmp	r3, r1
 8008aa0:	d114      	bne.n	8008acc <UART_SetConfig+0x138>
 8008aa2:	4b5e      	ldr	r3, [pc, #376]	; (8008c1c <UART_SetConfig+0x288>)
 8008aa4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008aa8:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8008aac:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008ab0:	f000 80a2 	beq.w	8008bf8 <UART_SetConfig+0x264>
 8008ab4:	d803      	bhi.n	8008abe <UART_SetConfig+0x12a>
 8008ab6:	2b00      	cmp	r3, #0
 8008ab8:	d1c4      	bne.n	8008a44 <UART_SetConfig+0xb0>
 8008aba:	2301      	movs	r3, #1
 8008abc:	e791      	b.n	80089e2 <UART_SetConfig+0x4e>
 8008abe:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008ac2:	f000 808d 	beq.w	8008be0 <UART_SetConfig+0x24c>
 8008ac6:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8008aca:	e7b9      	b.n	8008a40 <UART_SetConfig+0xac>
 8008acc:	495b      	ldr	r1, [pc, #364]	; (8008c3c <UART_SetConfig+0x2a8>)
 8008ace:	428b      	cmp	r3, r1
 8008ad0:	d113      	bne.n	8008afa <UART_SetConfig+0x166>
 8008ad2:	4b52      	ldr	r3, [pc, #328]	; (8008c1c <UART_SetConfig+0x288>)
 8008ad4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008ad8:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8008adc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008ae0:	f000 808a 	beq.w	8008bf8 <UART_SetConfig+0x264>
 8008ae4:	d803      	bhi.n	8008aee <UART_SetConfig+0x15a>
 8008ae6:	2b00      	cmp	r3, #0
 8008ae8:	d1ac      	bne.n	8008a44 <UART_SetConfig+0xb0>
 8008aea:	2300      	movs	r3, #0
 8008aec:	e779      	b.n	80089e2 <UART_SetConfig+0x4e>
 8008aee:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008af2:	d075      	beq.n	8008be0 <UART_SetConfig+0x24c>
 8008af4:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8008af8:	e7a2      	b.n	8008a40 <UART_SetConfig+0xac>
 8008afa:	4951      	ldr	r1, [pc, #324]	; (8008c40 <UART_SetConfig+0x2ac>)
 8008afc:	428b      	cmp	r3, r1
 8008afe:	d1a1      	bne.n	8008a44 <UART_SetConfig+0xb0>
 8008b00:	4b46      	ldr	r3, [pc, #280]	; (8008c1c <UART_SetConfig+0x288>)
 8008b02:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008b06:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8008b0a:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008b0e:	d073      	beq.n	8008bf8 <UART_SetConfig+0x264>
 8008b10:	d98f      	bls.n	8008a32 <UART_SetConfig+0x9e>
 8008b12:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008b16:	d063      	beq.n	8008be0 <UART_SetConfig+0x24c>
 8008b18:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8008b1c:	e790      	b.n	8008a40 <UART_SetConfig+0xac>
        pclk = HAL_RCC_GetPCLK1Freq();
 8008b1e:	f7fe fda7 	bl	8007670 <HAL_RCC_GetPCLK1Freq>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8008b22:	6861      	ldr	r1, [r4, #4]
 8008b24:	084a      	lsrs	r2, r1, #1
 8008b26:	eb02 0340 	add.w	r3, r2, r0, lsl #1
 8008b2a:	fbb3 f3f1 	udiv	r3, r3, r1
 8008b2e:	b29b      	uxth	r3, r3
  HAL_StatusTypeDef ret               = HAL_OK;
 8008b30:	2000      	movs	r0, #0
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8008b32:	f1a3 0110 	sub.w	r1, r3, #16
 8008b36:	f64f 72ef 	movw	r2, #65519	; 0xffef
 8008b3a:	4291      	cmp	r1, r2
 8008b3c:	d90a      	bls.n	8008b54 <UART_SetConfig+0x1c0>
      ret = HAL_ERROR;
 8008b3e:	2001      	movs	r0, #1
  huart->RxISR = NULL;
 8008b40:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 8008b42:	e9c4 3318 	strd	r3, r3, [r4, #96]	; 0x60
}
 8008b46:	bd38      	pop	{r3, r4, r5, pc}
        pclk = HAL_RCC_GetPCLK2Freq();
 8008b48:	f7fe fda2 	bl	8007690 <HAL_RCC_GetPCLK2Freq>
 8008b4c:	e7e9      	b.n	8008b22 <UART_SetConfig+0x18e>
        ret = HAL_ERROR;
 8008b4e:	2001      	movs	r0, #1
  uint32_t usartdiv                   = 0x00000000U;
 8008b50:	2300      	movs	r3, #0
 8008b52:	e7ee      	b.n	8008b32 <UART_SetConfig+0x19e>
      brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8008b54:	f023 020f 	bic.w	r2, r3, #15
      brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8008b58:	f3c3 0342 	ubfx	r3, r3, #1, #3
      huart->Instance->BRR = brrtemp;
 8008b5c:	6821      	ldr	r1, [r4, #0]
 8008b5e:	4313      	orrs	r3, r2
 8008b60:	60cb      	str	r3, [r1, #12]
 8008b62:	e7ed      	b.n	8008b40 <UART_SetConfig+0x1ac>
    switch (clocksource)
 8008b64:	2b08      	cmp	r3, #8
 8008b66:	f63f af71 	bhi.w	8008a4c <UART_SetConfig+0xb8>
 8008b6a:	a201      	add	r2, pc, #4	; (adr r2, 8008b70 <UART_SetConfig+0x1dc>)
 8008b6c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008b70:	08008b95 	.word	0x08008b95
 8008b74:	08008bb9 	.word	0x08008bb9
 8008b78:	08008bbf 	.word	0x08008bbf
 8008b7c:	08008a4d 	.word	0x08008a4d
 8008b80:	08008bd1 	.word	0x08008bd1
 8008b84:	08008a4d 	.word	0x08008a4d
 8008b88:	08008a4d 	.word	0x08008a4d
 8008b8c:	08008a4d 	.word	0x08008a4d
 8008b90:	08008bd7 	.word	0x08008bd7
        pclk = HAL_RCC_GetPCLK1Freq();
 8008b94:	f7fe fd6c 	bl	8007670 <HAL_RCC_GetPCLK1Freq>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8008b98:	6862      	ldr	r2, [r4, #4]
 8008b9a:	eb00 0352 	add.w	r3, r0, r2, lsr #1
 8008b9e:	fbb3 f3f2 	udiv	r3, r3, r2
 8008ba2:	b29b      	uxth	r3, r3
  HAL_StatusTypeDef ret               = HAL_OK;
 8008ba4:	2000      	movs	r0, #0
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8008ba6:	f1a3 0110 	sub.w	r1, r3, #16
 8008baa:	f64f 72ef 	movw	r2, #65519	; 0xffef
 8008bae:	4291      	cmp	r1, r2
 8008bb0:	d8c5      	bhi.n	8008b3e <UART_SetConfig+0x1aa>
      huart->Instance->BRR = usartdiv;
 8008bb2:	6822      	ldr	r2, [r4, #0]
 8008bb4:	60d3      	str	r3, [r2, #12]
 8008bb6:	e7c3      	b.n	8008b40 <UART_SetConfig+0x1ac>
        pclk = HAL_RCC_GetPCLK2Freq();
 8008bb8:	f7fe fd6a 	bl	8007690 <HAL_RCC_GetPCLK2Freq>
 8008bbc:	e7ec      	b.n	8008b98 <UART_SetConfig+0x204>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 8008bbe:	6860      	ldr	r0, [r4, #4]
 8008bc0:	0843      	lsrs	r3, r0, #1
 8008bc2:	f503 0374 	add.w	r3, r3, #15990784	; 0xf40000
 8008bc6:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 8008bca:	fbb3 f3f0 	udiv	r3, r3, r0
 8008bce:	e7e8      	b.n	8008ba2 <UART_SetConfig+0x20e>
        pclk = HAL_RCC_GetSysClockFreq();
 8008bd0:	f7fe fc82 	bl	80074d8 <HAL_RCC_GetSysClockFreq>
 8008bd4:	e7e0      	b.n	8008b98 <UART_SetConfig+0x204>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 8008bd6:	6860      	ldr	r0, [r4, #4]
 8008bd8:	0843      	lsrs	r3, r0, #1
 8008bda:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 8008bde:	e7f4      	b.n	8008bca <UART_SetConfig+0x236>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8008be0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8008be4:	d1eb      	bne.n	8008bbe <UART_SetConfig+0x22a>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 8008be6:	6860      	ldr	r0, [r4, #4]
 8008be8:	0843      	lsrs	r3, r0, #1
 8008bea:	f103 73f4 	add.w	r3, r3, #31981568	; 0x1e80000
 8008bee:	f503 4390 	add.w	r3, r3, #18432	; 0x4800
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 8008bf2:	fbb3 f3f0 	udiv	r3, r3, r0
 8008bf6:	e79a      	b.n	8008b2e <UART_SetConfig+0x19a>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8008bf8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8008bfc:	d1e8      	bne.n	8008bd0 <UART_SetConfig+0x23c>
        pclk = HAL_RCC_GetSysClockFreq();
 8008bfe:	f7fe fc6b 	bl	80074d8 <HAL_RCC_GetSysClockFreq>
 8008c02:	e78e      	b.n	8008b22 <UART_SetConfig+0x18e>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8008c04:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8008c08:	d1e5      	bne.n	8008bd6 <UART_SetConfig+0x242>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 8008c0a:	6860      	ldr	r0, [r4, #4]
 8008c0c:	0843      	lsrs	r3, r0, #1
 8008c0e:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 8008c12:	e7ee      	b.n	8008bf2 <UART_SetConfig+0x25e>
 8008c14:	efff69f3 	.word	0xefff69f3
 8008c18:	40011000 	.word	0x40011000
 8008c1c:	40023800 	.word	0x40023800
 8008c20:	080230a1 	.word	0x080230a1
 8008c24:	40004400 	.word	0x40004400
 8008c28:	080230a5 	.word	0x080230a5
 8008c2c:	40004800 	.word	0x40004800
 8008c30:	40004c00 	.word	0x40004c00
 8008c34:	40005000 	.word	0x40005000
 8008c38:	40011400 	.word	0x40011400
 8008c3c:	40007800 	.word	0x40007800
 8008c40:	40007c00 	.word	0x40007c00

08008c44 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8008c44:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8008c46:	07da      	lsls	r2, r3, #31
{
 8008c48:	b510      	push	{r4, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8008c4a:	d506      	bpl.n	8008c5a <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8008c4c:	6801      	ldr	r1, [r0, #0]
 8008c4e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008c50:	684a      	ldr	r2, [r1, #4]
 8008c52:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8008c56:	4322      	orrs	r2, r4
 8008c58:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8008c5a:	079c      	lsls	r4, r3, #30
 8008c5c:	d506      	bpl.n	8008c6c <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8008c5e:	6801      	ldr	r1, [r0, #0]
 8008c60:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8008c62:	684a      	ldr	r2, [r1, #4]
 8008c64:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8008c68:	4322      	orrs	r2, r4
 8008c6a:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8008c6c:	0759      	lsls	r1, r3, #29
 8008c6e:	d506      	bpl.n	8008c7e <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8008c70:	6801      	ldr	r1, [r0, #0]
 8008c72:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8008c74:	684a      	ldr	r2, [r1, #4]
 8008c76:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8008c7a:	4322      	orrs	r2, r4
 8008c7c:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8008c7e:	071a      	lsls	r2, r3, #28
 8008c80:	d506      	bpl.n	8008c90 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8008c82:	6801      	ldr	r1, [r0, #0]
 8008c84:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8008c86:	684a      	ldr	r2, [r1, #4]
 8008c88:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8008c8c:	4322      	orrs	r2, r4
 8008c8e:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8008c90:	06dc      	lsls	r4, r3, #27
 8008c92:	d506      	bpl.n	8008ca2 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8008c94:	6801      	ldr	r1, [r0, #0]
 8008c96:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8008c98:	688a      	ldr	r2, [r1, #8]
 8008c9a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8008c9e:	4322      	orrs	r2, r4
 8008ca0:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8008ca2:	0699      	lsls	r1, r3, #26
 8008ca4:	d506      	bpl.n	8008cb4 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8008ca6:	6801      	ldr	r1, [r0, #0]
 8008ca8:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8008caa:	688a      	ldr	r2, [r1, #8]
 8008cac:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8008cb0:	4322      	orrs	r2, r4
 8008cb2:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8008cb4:	065a      	lsls	r2, r3, #25
 8008cb6:	d510      	bpl.n	8008cda <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8008cb8:	6801      	ldr	r1, [r0, #0]
 8008cba:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8008cbc:	684a      	ldr	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8008cbe:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8008cc2:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8008cc6:	ea42 0204 	orr.w	r2, r2, r4
 8008cca:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8008ccc:	d105      	bne.n	8008cda <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8008cce:	684a      	ldr	r2, [r1, #4]
 8008cd0:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8008cd2:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8008cd6:	4322      	orrs	r2, r4
 8008cd8:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8008cda:	061b      	lsls	r3, r3, #24
 8008cdc:	d506      	bpl.n	8008cec <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8008cde:	6802      	ldr	r2, [r0, #0]
 8008ce0:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8008ce2:	6853      	ldr	r3, [r2, #4]
 8008ce4:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8008ce8:	430b      	orrs	r3, r1
 8008cea:	6053      	str	r3, [r2, #4]
}
 8008cec:	bd10      	pop	{r4, pc}

08008cee <UART_WaitOnFlagUntilTimeout>:
{
 8008cee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008cf2:	9d06      	ldr	r5, [sp, #24]
 8008cf4:	4604      	mov	r4, r0
 8008cf6:	460f      	mov	r7, r1
 8008cf8:	4616      	mov	r6, r2
 8008cfa:	4698      	mov	r8, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8008cfc:	6821      	ldr	r1, [r4, #0]
 8008cfe:	69ca      	ldr	r2, [r1, #28]
 8008d00:	ea37 0302 	bics.w	r3, r7, r2
 8008d04:	bf0c      	ite	eq
 8008d06:	2201      	moveq	r2, #1
 8008d08:	2200      	movne	r2, #0
 8008d0a:	42b2      	cmp	r2, r6
 8008d0c:	d001      	beq.n	8008d12 <UART_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 8008d0e:	2000      	movs	r0, #0
 8008d10:	e018      	b.n	8008d44 <UART_WaitOnFlagUntilTimeout+0x56>
    if (Timeout != HAL_MAX_DELAY)
 8008d12:	1c68      	adds	r0, r5, #1
 8008d14:	d0f3      	beq.n	8008cfe <UART_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008d16:	f7fc f87b 	bl	8004e10 <HAL_GetTick>
 8008d1a:	eba0 0008 	sub.w	r0, r0, r8
 8008d1e:	42a8      	cmp	r0, r5
 8008d20:	6820      	ldr	r0, [r4, #0]
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8008d22:	6803      	ldr	r3, [r0, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008d24:	d800      	bhi.n	8008d28 <UART_WaitOnFlagUntilTimeout+0x3a>
 8008d26:	b97d      	cbnz	r5, 8008d48 <UART_WaitOnFlagUntilTimeout+0x5a>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8008d28:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8008d2c:	6003      	str	r3, [r0, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8008d2e:	6883      	ldr	r3, [r0, #8]
 8008d30:	f023 0301 	bic.w	r3, r3, #1
 8008d34:	6083      	str	r3, [r0, #8]
        huart->gState = HAL_UART_STATE_READY;
 8008d36:	2320      	movs	r3, #32
 8008d38:	6763      	str	r3, [r4, #116]	; 0x74
        huart->RxState = HAL_UART_STATE_READY;
 8008d3a:	67a3      	str	r3, [r4, #120]	; 0x78
          __HAL_UNLOCK(huart);
 8008d3c:	2300      	movs	r3, #0
          return HAL_TIMEOUT;
 8008d3e:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 8008d40:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
}
 8008d44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8008d48:	075a      	lsls	r2, r3, #29
 8008d4a:	d5d7      	bpl.n	8008cfc <UART_WaitOnFlagUntilTimeout+0xe>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8008d4c:	69c3      	ldr	r3, [r0, #28]
 8008d4e:	051b      	lsls	r3, r3, #20
 8008d50:	d5d4      	bpl.n	8008cfc <UART_WaitOnFlagUntilTimeout+0xe>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8008d52:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8008d56:	6203      	str	r3, [r0, #32]
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8008d58:	6803      	ldr	r3, [r0, #0]
 8008d5a:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8008d5e:	6003      	str	r3, [r0, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8008d60:	6883      	ldr	r3, [r0, #8]
 8008d62:	f023 0301 	bic.w	r3, r3, #1
 8008d66:	6083      	str	r3, [r0, #8]
          huart->gState = HAL_UART_STATE_READY;
 8008d68:	2320      	movs	r3, #32
 8008d6a:	6763      	str	r3, [r4, #116]	; 0x74
          huart->RxState = HAL_UART_STATE_READY;
 8008d6c:	67a3      	str	r3, [r4, #120]	; 0x78
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8008d6e:	67e3      	str	r3, [r4, #124]	; 0x7c
 8008d70:	e7e4      	b.n	8008d3c <UART_WaitOnFlagUntilTimeout+0x4e>

08008d72 <HAL_UART_Transmit>:
{
 8008d72:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008d76:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8008d78:	6f43      	ldr	r3, [r0, #116]	; 0x74
{
 8008d7a:	4604      	mov	r4, r0
 8008d7c:	460e      	mov	r6, r1
  if (huart->gState == HAL_UART_STATE_READY)
 8008d7e:	2b20      	cmp	r3, #32
{
 8008d80:	4691      	mov	r9, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8008d82:	d14c      	bne.n	8008e1e <HAL_UART_Transmit+0xac>
    if ((pData == NULL) || (Size == 0U))
 8008d84:	2900      	cmp	r1, #0
 8008d86:	d048      	beq.n	8008e1a <HAL_UART_Transmit+0xa8>
 8008d88:	2a00      	cmp	r2, #0
 8008d8a:	d046      	beq.n	8008e1a <HAL_UART_Transmit+0xa8>
    __HAL_LOCK(huart);
 8008d8c:	f890 3070 	ldrb.w	r3, [r0, #112]	; 0x70
 8008d90:	2b01      	cmp	r3, #1
 8008d92:	d044      	beq.n	8008e1e <HAL_UART_Transmit+0xac>
 8008d94:	2301      	movs	r3, #1
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008d96:	2500      	movs	r5, #0
    __HAL_LOCK(huart);
 8008d98:	f880 3070 	strb.w	r3, [r0, #112]	; 0x70
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8008d9c:	2321      	movs	r3, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008d9e:	67c5      	str	r5, [r0, #124]	; 0x7c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8008da0:	6743      	str	r3, [r0, #116]	; 0x74
    tickstart = HAL_GetTick();
 8008da2:	f7fc f835 	bl	8004e10 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8008da6:	68a3      	ldr	r3, [r4, #8]
    tickstart = HAL_GetTick();
 8008da8:	4607      	mov	r7, r0
    huart->TxXferSize  = Size;
 8008daa:	f8a4 9050 	strh.w	r9, [r4, #80]	; 0x50
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8008dae:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    huart->TxXferCount = Size;
 8008db2:	f8a4 9052 	strh.w	r9, [r4, #82]	; 0x52
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8008db6:	d103      	bne.n	8008dc0 <HAL_UART_Transmit+0x4e>
 8008db8:	6923      	ldr	r3, [r4, #16]
 8008dba:	b90b      	cbnz	r3, 8008dc0 <HAL_UART_Transmit+0x4e>
 8008dbc:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 8008dbe:	461e      	mov	r6, r3
    __HAL_UNLOCK(huart);
 8008dc0:	2300      	movs	r3, #0
 8008dc2:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
    while (huart->TxXferCount > 0U)
 8008dc6:	f8b4 2052 	ldrh.w	r2, [r4, #82]	; 0x52
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8008dca:	463b      	mov	r3, r7
 8008dcc:	f8cd 8000 	str.w	r8, [sp]
    while (huart->TxXferCount > 0U)
 8008dd0:	b292      	uxth	r2, r2
 8008dd2:	b93a      	cbnz	r2, 8008de4 <HAL_UART_Transmit+0x72>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8008dd4:	2140      	movs	r1, #64	; 0x40
 8008dd6:	4620      	mov	r0, r4
 8008dd8:	f7ff ff89 	bl	8008cee <UART_WaitOnFlagUntilTimeout>
 8008ddc:	b940      	cbnz	r0, 8008df0 <HAL_UART_Transmit+0x7e>
    huart->gState = HAL_UART_STATE_READY;
 8008dde:	2320      	movs	r3, #32
 8008de0:	6763      	str	r3, [r4, #116]	; 0x74
    return HAL_OK;
 8008de2:	e006      	b.n	8008df2 <HAL_UART_Transmit+0x80>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8008de4:	2200      	movs	r2, #0
 8008de6:	2180      	movs	r1, #128	; 0x80
 8008de8:	4620      	mov	r0, r4
 8008dea:	f7ff ff80 	bl	8008cee <UART_WaitOnFlagUntilTimeout>
 8008dee:	b118      	cbz	r0, 8008df8 <HAL_UART_Transmit+0x86>
        return HAL_TIMEOUT;
 8008df0:	2003      	movs	r0, #3
}
 8008df2:	b003      	add	sp, #12
 8008df4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008df8:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 8008dfa:	b95e      	cbnz	r6, 8008e14 <HAL_UART_Transmit+0xa2>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8008dfc:	f835 3b02 	ldrh.w	r3, [r5], #2
 8008e00:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8008e04:	6293      	str	r3, [r2, #40]	; 0x28
      huart->TxXferCount--;
 8008e06:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 8008e0a:	3b01      	subs	r3, #1
 8008e0c:	b29b      	uxth	r3, r3
 8008e0e:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8008e12:	e7d8      	b.n	8008dc6 <HAL_UART_Transmit+0x54>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8008e14:	f816 3b01 	ldrb.w	r3, [r6], #1
 8008e18:	e7f4      	b.n	8008e04 <HAL_UART_Transmit+0x92>
      return  HAL_ERROR;
 8008e1a:	2001      	movs	r0, #1
 8008e1c:	e7e9      	b.n	8008df2 <HAL_UART_Transmit+0x80>
    return HAL_BUSY;
 8008e1e:	2002      	movs	r0, #2
 8008e20:	e7e7      	b.n	8008df2 <HAL_UART_Transmit+0x80>

08008e22 <UART_CheckIdleState>:
{
 8008e22:	b573      	push	{r0, r1, r4, r5, r6, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008e24:	2600      	movs	r6, #0
{
 8008e26:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008e28:	67c6      	str	r6, [r0, #124]	; 0x7c
  tickstart = HAL_GetTick();
 8008e2a:	f7fb fff1 	bl	8004e10 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8008e2e:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8008e30:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8008e32:	681b      	ldr	r3, [r3, #0]
 8008e34:	071a      	lsls	r2, r3, #28
 8008e36:	d415      	bmi.n	8008e64 <UART_CheckIdleState+0x42>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8008e38:	6823      	ldr	r3, [r4, #0]
 8008e3a:	681b      	ldr	r3, [r3, #0]
 8008e3c:	075b      	lsls	r3, r3, #29
 8008e3e:	d50a      	bpl.n	8008e56 <UART_CheckIdleState+0x34>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8008e40:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8008e44:	2200      	movs	r2, #0
 8008e46:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8008e4a:	4620      	mov	r0, r4
 8008e4c:	9300      	str	r3, [sp, #0]
 8008e4e:	462b      	mov	r3, r5
 8008e50:	f7ff ff4d 	bl	8008cee <UART_WaitOnFlagUntilTimeout>
 8008e54:	b990      	cbnz	r0, 8008e7c <UART_CheckIdleState+0x5a>
  huart->gState = HAL_UART_STATE_READY;
 8008e56:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 8008e58:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8008e5a:	6763      	str	r3, [r4, #116]	; 0x74
  __HAL_UNLOCK(huart);
 8008e5c:	f884 0070 	strb.w	r0, [r4, #112]	; 0x70
  huart->RxState = HAL_UART_STATE_READY;
 8008e60:	67a3      	str	r3, [r4, #120]	; 0x78
  return HAL_OK;
 8008e62:	e00c      	b.n	8008e7e <UART_CheckIdleState+0x5c>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8008e64:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8008e68:	4632      	mov	r2, r6
 8008e6a:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8008e6e:	9300      	str	r3, [sp, #0]
 8008e70:	4603      	mov	r3, r0
 8008e72:	4620      	mov	r0, r4
 8008e74:	f7ff ff3b 	bl	8008cee <UART_WaitOnFlagUntilTimeout>
 8008e78:	2800      	cmp	r0, #0
 8008e7a:	d0dd      	beq.n	8008e38 <UART_CheckIdleState+0x16>
      return HAL_TIMEOUT;
 8008e7c:	2003      	movs	r0, #3
}
 8008e7e:	b002      	add	sp, #8
 8008e80:	bd70      	pop	{r4, r5, r6, pc}

08008e82 <HAL_UART_Init>:
{
 8008e82:	b510      	push	{r4, lr}
  if (huart == NULL)
 8008e84:	4604      	mov	r4, r0
 8008e86:	b340      	cbz	r0, 8008eda <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8008e88:	6f43      	ldr	r3, [r0, #116]	; 0x74
 8008e8a:	b91b      	cbnz	r3, 8008e94 <HAL_UART_Init+0x12>
    huart->Lock = HAL_UNLOCKED;
 8008e8c:	f880 3070 	strb.w	r3, [r0, #112]	; 0x70
    HAL_UART_MspInit(huart);
 8008e90:	f7f8 fdd8 	bl	8001a44 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8008e94:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8008e96:	2324      	movs	r3, #36	; 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
 8008e98:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
 8008e9a:	6763      	str	r3, [r4, #116]	; 0x74
  __HAL_UART_DISABLE(huart);
 8008e9c:	6813      	ldr	r3, [r2, #0]
 8008e9e:	f023 0301 	bic.w	r3, r3, #1
 8008ea2:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8008ea4:	f7ff fd76 	bl	8008994 <UART_SetConfig>
 8008ea8:	2801      	cmp	r0, #1
 8008eaa:	d016      	beq.n	8008eda <HAL_UART_Init+0x58>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8008eac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008eae:	b113      	cbz	r3, 8008eb6 <HAL_UART_Init+0x34>
    UART_AdvFeatureConfig(huart);
 8008eb0:	4620      	mov	r0, r4
 8008eb2:	f7ff fec7 	bl	8008c44 <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8008eb6:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
 8008eb8:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8008eba:	685a      	ldr	r2, [r3, #4]
 8008ebc:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8008ec0:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8008ec2:	689a      	ldr	r2, [r3, #8]
 8008ec4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8008ec8:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8008eca:	681a      	ldr	r2, [r3, #0]
 8008ecc:	f042 0201 	orr.w	r2, r2, #1
}
 8008ed0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
 8008ed4:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 8008ed6:	f7ff bfa4 	b.w	8008e22 <UART_CheckIdleState>
}
 8008eda:	2001      	movs	r0, #1
 8008edc:	bd10      	pop	{r4, pc}
	...

08008ee0 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008ee0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008ee4:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8008ee6:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8008eea:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8008eee:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8008ef2:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008ef6:	6809      	ldr	r1, [r1, #0]
 8008ef8:	4323      	orrs	r3, r4
  {
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8008efa:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008efc:	2901      	cmp	r1, #1
 8008efe:	4912      	ldr	r1, [pc, #72]	; (8008f48 <FMC_SDRAM_Init+0x68>)
 8008f00:	d00f      	beq.n	8008f22 <FMC_SDRAM_Init+0x42>
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                          FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP   | \
                          FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));

    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008f02:	431a      	orrs	r2, r3
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8008f04:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008f06:	432a      	orrs	r2, r5
 8008f08:	ea42 0308 	orr.w	r3, r2, r8
 8008f0c:	ea43 030e 	orr.w	r3, r3, lr
 8008f10:	ea43 030c 	orr.w	r3, r3, ip
 8008f14:	433b      	orrs	r3, r7
 8008f16:	4333      	orrs	r3, r6
 8008f18:	430b      	orrs	r3, r1
                        Init->WriteProtection    |\
                        Init->SDClockPeriod      |\
                        Init->ReadBurst          |\
                        Init->ReadPipeDelay
                        );                                      
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8008f1a:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }
  
  return HAL_OK;
}
 8008f1c:	2000      	movs	r0, #0
 8008f1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8008f22:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8008f24:	6842      	ldr	r2, [r0, #4]
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8008f26:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8008f2a:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008f2c:	ea45 0208 	orr.w	r2, r5, r8
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8008f30:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008f32:	ea42 020e 	orr.w	r2, r2, lr
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8008f36:	6003      	str	r3, [r0, #0]
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008f38:	ea42 020c 	orr.w	r2, r2, ip
 8008f3c:	433a      	orrs	r2, r7
 8008f3e:	4332      	orrs	r2, r6
 8008f40:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8008f42:	6042      	str	r2, [r0, #4]
 8008f44:	e7ea      	b.n	8008f1c <FMC_SDRAM_Init+0x3c>
 8008f46:	bf00      	nop
 8008f48:	ffff8000 	.word	0xffff8000

08008f4c <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 8008f4c:	68cb      	ldr	r3, [r1, #12]
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 8008f4e:	2a01      	cmp	r2, #1
{
 8008f50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f52:	680c      	ldr	r4, [r1, #0]
 8008f54:	f103 37ff 	add.w	r7, r3, #4294967295
 8008f58:	694b      	ldr	r3, [r1, #20]
 8008f5a:	688e      	ldr	r6, [r1, #8]
 8008f5c:	f104 3cff 	add.w	ip, r4, #4294967295
 8008f60:	690d      	ldr	r5, [r1, #16]
 8008f62:	f103 33ff 	add.w	r3, r3, #4294967295
 8008f66:	684c      	ldr	r4, [r1, #4]
 8008f68:	f106 36ff 	add.w	r6, r6, #4294967295
 8008f6c:	6989      	ldr	r1, [r1, #24]
 8008f6e:	ea4f 5303 	mov.w	r3, r3, lsl #20
 8008f72:	f104 34ff 	add.w	r4, r4, #4294967295
 8008f76:	f105 35ff 	add.w	r5, r5, #4294967295
 8008f7a:	f101 31ff 	add.w	r1, r1, #4294967295
 8008f7e:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8008f82:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8008f86:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8008f8a:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8008f8e:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 8008f92:	d00c      	beq.n	8008fae <FMC_SDRAM_Timing_Init+0x62>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 8008f94:	ea43 030c 	orr.w	r3, r3, ip
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008f98:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 8008f9a:	4323      	orrs	r3, r4
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008f9c:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 8008fa0:	4333      	orrs	r3, r6
 8008fa2:	432b      	orrs	r3, r5
 8008fa4:	430b      	orrs	r3, r1
 8008fa6:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1) << 8)      |\
                       (((Timing->RowCycleDelay)-1) << 12)       |\
                       (((Timing->WriteRecoveryTime)-1) <<16)    |\
                       (((Timing->RPDelay)-1) << 20)             |\
                       (((Timing->RCDDelay)-1) << 24));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008fa8:	6083      	str	r3, [r0, #8]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  
  return HAL_OK;
}
 8008faa:	2000      	movs	r0, #0
 8008fac:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008fae:	6887      	ldr	r7, [r0, #8]
    tmpr2 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 8008fb0:	ea44 0206 	orr.w	r2, r4, r6
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8008fb4:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
    tmpr2 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 8008fb8:	ea42 020c 	orr.w	r2, r2, ip
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8008fbc:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 8008fc0:	432a      	orrs	r2, r5
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1) << 12)       |\
 8008fc2:	433b      	orrs	r3, r7
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8008fc4:	68c7      	ldr	r7, [r0, #12]
    tmpr2 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 8008fc6:	430a      	orrs	r2, r1
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008fc8:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008fcc:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)(((Timing->LoadToActiveDelay)-1)           |\
 8008fce:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8008fd0:	60c2      	str	r2, [r0, #12]
 8008fd2:	e7ea      	b.n	8008faa <FMC_SDRAM_Timing_Init+0x5e>

08008fd4 <FMC_SDRAM_SendCommand>:
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008fd4:	e9d1 3200 	ldrd	r3, r2, [r1]
{
 8008fd8:	b513      	push	{r0, r1, r4, lr}
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008fda:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1) << 5) |\
                    ((Command->ModeRegisterDefinition) << 9)
 8008fdc:	68ca      	ldr	r2, [r1, #12]
{
 8008fde:	4604      	mov	r4, r0
  __IO uint32_t tmpr = 0;
 8008fe0:	2000      	movs	r0, #0
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008fe2:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1) << 5) |\
 8008fe6:	688a      	ldr	r2, [r1, #8]
  __IO uint32_t tmpr = 0;
 8008fe8:	9001      	str	r0, [sp, #4]
                    (((Command->AutoRefreshNumber)-1) << 5) |\
 8008fea:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008fec:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008ff0:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8008ff2:	9b01      	ldr	r3, [sp, #4]
 8008ff4:	6123      	str	r3, [r4, #16]
  
  return HAL_OK;  
}
 8008ff6:	b002      	add	sp, #8
 8008ff8:	bd10      	pop	{r4, pc}

08008ffa <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1);
 8008ffa:	6943      	ldr	r3, [r0, #20]
 8008ffc:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8009000:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8009002:	2000      	movs	r0, #0
 8009004:	4770      	bx	lr
	...

08009008 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009008:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800900c:	b113      	cbz	r3, 8009014 <osKernelInitialize+0xc>
    stat = osErrorISR;
 800900e:	f06f 0005 	mvn.w	r0, #5
 8009012:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8009014:	f3ef 8210 	mrs	r2, PRIMASK
 8009018:	4b07      	ldr	r3, [pc, #28]	; (8009038 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 800901a:	b912      	cbnz	r2, 8009022 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800901c:	f3ef 8211 	mrs	r2, BASEPRI
 8009020:	b112      	cbz	r2, 8009028 <osKernelInitialize+0x20>
 8009022:	681a      	ldr	r2, [r3, #0]
 8009024:	2a02      	cmp	r2, #2
 8009026:	d0f2      	beq.n	800900e <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8009028:	6818      	ldr	r0, [r3, #0]
 800902a:	b910      	cbnz	r0, 8009032 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800902c:	2201      	movs	r2, #1
 800902e:	601a      	str	r2, [r3, #0]
 8009030:	4770      	bx	lr
      stat = osOK;
    } else {
      stat = osError;
 8009032:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8009036:	4770      	bx	lr
 8009038:	20001af8 	.word	0x20001af8

0800903c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800903c:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800903e:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8009042:	b113      	cbz	r3, 800904a <osKernelStart+0xe>
    stat = osErrorISR;
 8009044:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8009048:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800904a:	f3ef 8210 	mrs	r2, PRIMASK
 800904e:	4b0a      	ldr	r3, [pc, #40]	; (8009078 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8009050:	b912      	cbnz	r2, 8009058 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8009052:	f3ef 8211 	mrs	r2, BASEPRI
 8009056:	b112      	cbz	r2, 800905e <osKernelStart+0x22>
 8009058:	681a      	ldr	r2, [r3, #0]
 800905a:	2a02      	cmp	r2, #2
 800905c:	d0f2      	beq.n	8009044 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 800905e:	681a      	ldr	r2, [r3, #0]
 8009060:	2a01      	cmp	r2, #1
 8009062:	d105      	bne.n	8009070 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8009064:	2202      	movs	r2, #2
 8009066:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8009068:	f001 fd64 	bl	800ab34 <vTaskStartScheduler>
      stat = osOK;
 800906c:	2000      	movs	r0, #0
 800906e:	e7eb      	b.n	8009048 <osKernelStart+0xc>
      stat = osError;
 8009070:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8009074:	e7e8      	b.n	8009048 <osKernelStart+0xc>
 8009076:	bf00      	nop
 8009078:	20001af8 	.word	0x20001af8

0800907c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800907c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800907e:	4614      	mov	r4, r2
 8009080:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8009082:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8009084:	460b      	mov	r3, r1
  hTask = NULL;
 8009086:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009088:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800908c:	bb32      	cbnz	r2, 80090dc <osThreadNew+0x60>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800908e:	f3ef 8210 	mrs	r2, PRIMASK
 8009092:	b912      	cbnz	r2, 800909a <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8009094:	f3ef 8211 	mrs	r2, BASEPRI
 8009098:	b11a      	cbz	r2, 80090a2 <osThreadNew+0x26>
 800909a:	4a22      	ldr	r2, [pc, #136]	; (8009124 <osThreadNew+0xa8>)
 800909c:	6812      	ldr	r2, [r2, #0]
 800909e:	2a02      	cmp	r2, #2
 80090a0:	d01c      	beq.n	80090dc <osThreadNew+0x60>
 80090a2:	b1d8      	cbz	r0, 80090dc <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80090a4:	2c00      	cmp	r4, #0
 80090a6:	d036      	beq.n	8009116 <osThreadNew+0x9a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80090a8:	69a5      	ldr	r5, [r4, #24]
      if (attr->name != NULL) {
 80090aa:	6821      	ldr	r1, [r4, #0]
 80090ac:	2d00      	cmp	r5, #0
 80090ae:	bf08      	it	eq
 80090b0:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80090b2:	1e6a      	subs	r2, r5, #1
 80090b4:	462f      	mov	r7, r5
 80090b6:	2a37      	cmp	r2, #55	; 0x37
 80090b8:	d831      	bhi.n	800911e <osThreadNew+0xa2>
 80090ba:	6862      	ldr	r2, [r4, #4]
 80090bc:	07d2      	lsls	r2, r2, #31
 80090be:	d42e      	bmi.n	800911e <osThreadNew+0xa2>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80090c0:	6966      	ldr	r6, [r4, #20]
 80090c2:	b176      	cbz	r6, 80090e2 <osThreadNew+0x66>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80090c4:	08b2      	lsrs	r2, r6, #2
 80090c6:	e9d4 ce02 	ldrd	ip, lr, [r4, #8]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80090ca:	f1bc 0f00 	cmp.w	ip, #0
 80090ce:	d00a      	beq.n	80090e6 <osThreadNew+0x6a>
 80090d0:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 80090d4:	d902      	bls.n	80090dc <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80090d6:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80090d8:	b104      	cbz	r4, 80090dc <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80090da:	b9ae      	cbnz	r6, 8009108 <osThreadNew+0x8c>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 80090dc:	9805      	ldr	r0, [sp, #20]
}
 80090de:	b007      	add	sp, #28
 80090e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80090e2:	2280      	movs	r2, #128	; 0x80
 80090e4:	e7ef      	b.n	80090c6 <osThreadNew+0x4a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80090e6:	f1be 0f00 	cmp.w	lr, #0
 80090ea:	d1f7      	bne.n	80090dc <osThreadNew+0x60>
      if (mem == 0) {
 80090ec:	6924      	ldr	r4, [r4, #16]
 80090ee:	2c00      	cmp	r4, #0
 80090f0:	d1f4      	bne.n	80090dc <osThreadNew+0x60>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80090f2:	ac05      	add	r4, sp, #20
 80090f4:	b292      	uxth	r2, r2
 80090f6:	e9cd 7400 	strd	r7, r4, [sp]
 80090fa:	f001 fb95 	bl	800a828 <xTaskCreate>
 80090fe:	2801      	cmp	r0, #1
          hTask = NULL;
 8009100:	bf1c      	itt	ne
 8009102:	2300      	movne	r3, #0
 8009104:	9305      	strne	r3, [sp, #20]
 8009106:	e7e9      	b.n	80090dc <osThreadNew+0x60>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8009108:	e9cd 4c01 	strd	r4, ip, [sp, #4]
 800910c:	9500      	str	r5, [sp, #0]
 800910e:	f001 fb4d 	bl	800a7ac <xTaskCreateStatic>
 8009112:	9005      	str	r0, [sp, #20]
 8009114:	e7e2      	b.n	80090dc <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;
 8009116:	2718      	movs	r7, #24
    stack = configMINIMAL_STACK_SIZE;
 8009118:	2280      	movs	r2, #128	; 0x80
    name = NULL;
 800911a:	4621      	mov	r1, r4
 800911c:	e7e9      	b.n	80090f2 <osThreadNew+0x76>
        return (NULL);
 800911e:	2000      	movs	r0, #0
 8009120:	e7dd      	b.n	80090de <osThreadNew+0x62>
 8009122:	bf00      	nop
 8009124:	20001af8 	.word	0x20001af8

08009128 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8009128:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800912a:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800912e:	b113      	cbz	r3, 8009136 <osDelay+0xe>
    stat = osErrorISR;
 8009130:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8009134:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8009136:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800913a:	b913      	cbnz	r3, 8009142 <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800913c:	f3ef 8311 	mrs	r3, BASEPRI
 8009140:	b11b      	cbz	r3, 800914a <osDelay+0x22>
 8009142:	4b05      	ldr	r3, [pc, #20]	; (8009158 <osDelay+0x30>)
 8009144:	681b      	ldr	r3, [r3, #0]
 8009146:	2b02      	cmp	r3, #2
 8009148:	d0f2      	beq.n	8009130 <osDelay+0x8>
    if (ticks != 0U) {
 800914a:	2800      	cmp	r0, #0
 800914c:	d0f2      	beq.n	8009134 <osDelay+0xc>
      vTaskDelay(ticks);
 800914e:	f001 fcaf 	bl	800aab0 <vTaskDelay>
    stat = osOK;
 8009152:	2000      	movs	r0, #0
 8009154:	e7ee      	b.n	8009134 <osDelay+0xc>
 8009156:	bf00      	nop
 8009158:	20001af8 	.word	0x20001af8

0800915c <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800915c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800915e:	460e      	mov	r6, r1
 8009160:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009162:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8009166:	b11b      	cbz	r3, 8009170 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8009168:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800916a:	4620      	mov	r0, r4
 800916c:	b002      	add	sp, #8
 800916e:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8009170:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8009174:	b913      	cbnz	r3, 800917c <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8009176:	f3ef 8311 	mrs	r3, BASEPRI
 800917a:	b11b      	cbz	r3, 8009184 <osSemaphoreNew+0x28>
 800917c:	4b21      	ldr	r3, [pc, #132]	; (8009204 <osSemaphoreNew+0xa8>)
 800917e:	681b      	ldr	r3, [r3, #0]
 8009180:	2b02      	cmp	r3, #2
 8009182:	d0f1      	beq.n	8009168 <osSemaphoreNew+0xc>
 8009184:	2800      	cmp	r0, #0
 8009186:	d0ef      	beq.n	8009168 <osSemaphoreNew+0xc>
 8009188:	42b0      	cmp	r0, r6
 800918a:	d3ed      	bcc.n	8009168 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 800918c:	b1ed      	cbz	r5, 80091ca <osSemaphoreNew+0x6e>
 800918e:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8009192:	b1c3      	cbz	r3, 80091c6 <osSemaphoreNew+0x6a>
 8009194:	2a4f      	cmp	r2, #79	; 0x4f
 8009196:	d9e7      	bls.n	8009168 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8009198:	2801      	cmp	r0, #1
 800919a:	d126      	bne.n	80091ea <osSemaphoreNew+0x8e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800919c:	2203      	movs	r2, #3
 800919e:	9200      	str	r2, [sp, #0]
 80091a0:	2200      	movs	r2, #0
 80091a2:	4611      	mov	r1, r2
 80091a4:	f000 fd26 	bl	8009bf4 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 80091a8:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80091aa:	2800      	cmp	r0, #0
 80091ac:	d0dc      	beq.n	8009168 <osSemaphoreNew+0xc>
 80091ae:	b1ce      	cbz	r6, 80091e4 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80091b0:	2300      	movs	r3, #0
 80091b2:	461a      	mov	r2, r3
 80091b4:	4619      	mov	r1, r3
 80091b6:	f000 fde7 	bl	8009d88 <xQueueGenericSend>
 80091ba:	2801      	cmp	r0, #1
 80091bc:	d012      	beq.n	80091e4 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 80091be:	4620      	mov	r0, r4
 80091c0:	f001 f94e 	bl	800a460 <vQueueDelete>
 80091c4:	e7d0      	b.n	8009168 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80091c6:	2a00      	cmp	r2, #0
 80091c8:	d1ce      	bne.n	8009168 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 80091ca:	2801      	cmp	r0, #1
 80091cc:	d104      	bne.n	80091d8 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 80091ce:	2203      	movs	r2, #3
 80091d0:	2100      	movs	r1, #0
 80091d2:	f000 fd67 	bl	8009ca4 <xQueueGenericCreate>
 80091d6:	e7e7      	b.n	80091a8 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80091d8:	4631      	mov	r1, r6
 80091da:	f000 fdb2 	bl	8009d42 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80091de:	4604      	mov	r4, r0
 80091e0:	2800      	cmp	r0, #0
 80091e2:	d0c1      	beq.n	8009168 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 80091e4:	b945      	cbnz	r5, 80091f8 <osSemaphoreNew+0x9c>
          name = NULL;
 80091e6:	4629      	mov	r1, r5
 80091e8:	e007      	b.n	80091fa <osSemaphoreNew+0x9e>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80091ea:	461a      	mov	r2, r3
 80091ec:	4631      	mov	r1, r6
 80091ee:	f000 fd82 	bl	8009cf6 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80091f2:	4604      	mov	r4, r0
 80091f4:	2800      	cmp	r0, #0
 80091f6:	d0b7      	beq.n	8009168 <osSemaphoreNew+0xc>
          name = attr->name;
 80091f8:	6829      	ldr	r1, [r5, #0]
        vQueueAddToRegistry (hSemaphore, name);
 80091fa:	4620      	mov	r0, r4
 80091fc:	f001 f90a 	bl	800a414 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8009200:	e7b3      	b.n	800916a <osSemaphoreNew+0xe>
 8009202:	bf00      	nop
 8009204:	20001af8 	.word	0x20001af8

08009208 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8009208:	b513      	push	{r0, r1, r4, lr}
 800920a:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800920c:	b918      	cbnz	r0, 8009216 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 800920e:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8009212:	b002      	add	sp, #8
 8009214:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009216:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 800921a:	b16b      	cbz	r3, 8009238 <osSemaphoreAcquire+0x30>
    if (timeout != 0U) {
 800921c:	2c00      	cmp	r4, #0
 800921e:	d1f6      	bne.n	800920e <osSemaphoreAcquire+0x6>
      yield = pdFALSE;
 8009220:	aa02      	add	r2, sp, #8
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8009222:	4621      	mov	r1, r4
      yield = pdFALSE;
 8009224:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8009228:	f001 f89e 	bl	800a368 <xQueueReceiveFromISR>
 800922c:	2801      	cmp	r0, #1
 800922e:	d113      	bne.n	8009258 <osSemaphoreAcquire+0x50>
        portYIELD_FROM_ISR (yield);
 8009230:	9b01      	ldr	r3, [sp, #4]
 8009232:	b9a3      	cbnz	r3, 800925e <osSemaphoreAcquire+0x56>
  stat = osOK;
 8009234:	2000      	movs	r0, #0
 8009236:	e7ec      	b.n	8009212 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8009238:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800923c:	b913      	cbnz	r3, 8009244 <osSemaphoreAcquire+0x3c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800923e:	f3ef 8311 	mrs	r3, BASEPRI
 8009242:	b11b      	cbz	r3, 800924c <osSemaphoreAcquire+0x44>
 8009244:	4b0c      	ldr	r3, [pc, #48]	; (8009278 <osSemaphoreAcquire+0x70>)
 8009246:	681b      	ldr	r3, [r3, #0]
 8009248:	2b02      	cmp	r3, #2
 800924a:	d0e7      	beq.n	800921c <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800924c:	4621      	mov	r1, r4
 800924e:	f000 ffc1 	bl	800a1d4 <xQueueSemaphoreTake>
 8009252:	2801      	cmp	r0, #1
 8009254:	d0ee      	beq.n	8009234 <osSemaphoreAcquire+0x2c>
      if (timeout != 0U) {
 8009256:	b95c      	cbnz	r4, 8009270 <osSemaphoreAcquire+0x68>
        stat = osErrorResource;
 8009258:	f06f 0002 	mvn.w	r0, #2
 800925c:	e7d9      	b.n	8009212 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 800925e:	4b07      	ldr	r3, [pc, #28]	; (800927c <osSemaphoreAcquire+0x74>)
 8009260:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009264:	601a      	str	r2, [r3, #0]
 8009266:	f3bf 8f4f 	dsb	sy
 800926a:	f3bf 8f6f 	isb	sy
 800926e:	e7e1      	b.n	8009234 <osSemaphoreAcquire+0x2c>
        stat = osErrorTimeout;
 8009270:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009274:	e7cd      	b.n	8009212 <osSemaphoreAcquire+0xa>
 8009276:	bf00      	nop
 8009278:	20001af8 	.word	0x20001af8
 800927c:	e000ed04 	.word	0xe000ed04

08009280 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8009280:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8009282:	b368      	cbz	r0, 80092e0 <osSemaphoreRelease+0x60>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009284:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8009288:	b153      	cbz	r3, 80092a0 <osSemaphoreRelease+0x20>
    yield = pdFALSE;
 800928a:	a902      	add	r1, sp, #8
 800928c:	2400      	movs	r4, #0
 800928e:	f841 4d04 	str.w	r4, [r1, #-4]!

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009292:	f000 fe9c 	bl	8009fce <xQueueGiveFromISR>
 8009296:	2801      	cmp	r0, #1
 8009298:	d014      	beq.n	80092c4 <osSemaphoreRelease+0x44>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800929a:	f06f 0002 	mvn.w	r0, #2
 800929e:	e014      	b.n	80092ca <osSemaphoreRelease+0x4a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80092a0:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80092a4:	b913      	cbnz	r3, 80092ac <osSemaphoreRelease+0x2c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80092a6:	f3ef 8311 	mrs	r3, BASEPRI
 80092aa:	b11b      	cbz	r3, 80092b4 <osSemaphoreRelease+0x34>
 80092ac:	4b0e      	ldr	r3, [pc, #56]	; (80092e8 <osSemaphoreRelease+0x68>)
 80092ae:	681b      	ldr	r3, [r3, #0]
 80092b0:	2b02      	cmp	r3, #2
 80092b2:	d0ea      	beq.n	800928a <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80092b4:	2300      	movs	r3, #0
 80092b6:	461a      	mov	r2, r3
 80092b8:	4619      	mov	r1, r3
 80092ba:	f000 fd65 	bl	8009d88 <xQueueGenericSend>
 80092be:	2801      	cmp	r0, #1
 80092c0:	d002      	beq.n	80092c8 <osSemaphoreRelease+0x48>
 80092c2:	e7ea      	b.n	800929a <osSemaphoreRelease+0x1a>
      portYIELD_FROM_ISR (yield);
 80092c4:	9b01      	ldr	r3, [sp, #4]
 80092c6:	b913      	cbnz	r3, 80092ce <osSemaphoreRelease+0x4e>
  stat = osOK;
 80092c8:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 80092ca:	b002      	add	sp, #8
 80092cc:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 80092ce:	4b07      	ldr	r3, [pc, #28]	; (80092ec <osSemaphoreRelease+0x6c>)
 80092d0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80092d4:	601a      	str	r2, [r3, #0]
 80092d6:	f3bf 8f4f 	dsb	sy
 80092da:	f3bf 8f6f 	isb	sy
 80092de:	e7f3      	b.n	80092c8 <osSemaphoreRelease+0x48>
    stat = osErrorParameter;
 80092e0:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80092e4:	e7f1      	b.n	80092ca <osSemaphoreRelease+0x4a>
 80092e6:	bf00      	nop
 80092e8:	20001af8 	.word	0x20001af8
 80092ec:	e000ed04 	.word	0xe000ed04

080092f0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80092f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80092f2:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80092f4:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80092f8:	b11b      	cbz	r3, 8009302 <osMessageQueueNew+0x12>
  hQueue = NULL;
 80092fa:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80092fc:	4628      	mov	r0, r5
 80092fe:	b002      	add	sp, #8
 8009300:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8009302:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8009306:	b913      	cbnz	r3, 800930e <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8009308:	f3ef 8311 	mrs	r3, BASEPRI
 800930c:	b11b      	cbz	r3, 8009316 <osMessageQueueNew+0x26>
 800930e:	4b1a      	ldr	r3, [pc, #104]	; (8009378 <osMessageQueueNew+0x88>)
 8009310:	681b      	ldr	r3, [r3, #0]
 8009312:	2b02      	cmp	r3, #2
 8009314:	d0f1      	beq.n	80092fa <osMessageQueueNew+0xa>
 8009316:	2800      	cmp	r0, #0
 8009318:	d0ef      	beq.n	80092fa <osMessageQueueNew+0xa>
 800931a:	2900      	cmp	r1, #0
 800931c:	d0ed      	beq.n	80092fa <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800931e:	b304      	cbz	r4, 8009362 <osMessageQueueNew+0x72>
 8009320:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8009324:	b1ab      	cbz	r3, 8009352 <osMessageQueueNew+0x62>
 8009326:	2a4f      	cmp	r2, #79	; 0x4f
 8009328:	d9e7      	bls.n	80092fa <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800932a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800932c:	2a00      	cmp	r2, #0
 800932e:	d0e4      	beq.n	80092fa <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8009330:	fb01 f500 	mul.w	r5, r1, r0
 8009334:	6966      	ldr	r6, [r4, #20]
 8009336:	42ae      	cmp	r6, r5
 8009338:	d3df      	bcc.n	80092fa <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800933a:	2500      	movs	r5, #0
 800933c:	9500      	str	r5, [sp, #0]
 800933e:	f000 fc59 	bl	8009bf4 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8009342:	4605      	mov	r5, r0
 8009344:	2800      	cmp	r0, #0
 8009346:	d0d8      	beq.n	80092fa <osMessageQueueNew+0xa>
        name = attr->name;
 8009348:	6821      	ldr	r1, [r4, #0]
      vQueueAddToRegistry (hQueue, name);
 800934a:	4628      	mov	r0, r5
 800934c:	f001 f862 	bl	800a414 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8009350:	e7d4      	b.n	80092fc <osMessageQueueNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8009352:	2a00      	cmp	r2, #0
 8009354:	d1d1      	bne.n	80092fa <osMessageQueueNew+0xa>
 8009356:	6923      	ldr	r3, [r4, #16]
 8009358:	2b00      	cmp	r3, #0
 800935a:	d1ce      	bne.n	80092fa <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800935c:	6963      	ldr	r3, [r4, #20]
 800935e:	2b00      	cmp	r3, #0
 8009360:	d1cb      	bne.n	80092fa <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8009362:	2200      	movs	r2, #0
 8009364:	f000 fc9e 	bl	8009ca4 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8009368:	4605      	mov	r5, r0
 800936a:	2800      	cmp	r0, #0
 800936c:	d0c5      	beq.n	80092fa <osMessageQueueNew+0xa>
      if (attr != NULL) {
 800936e:	2c00      	cmp	r4, #0
 8009370:	d1ea      	bne.n	8009348 <osMessageQueueNew+0x58>
        name = NULL;
 8009372:	4621      	mov	r1, r4
 8009374:	e7e9      	b.n	800934a <osMessageQueueNew+0x5a>
 8009376:	bf00      	nop
 8009378:	20001af8 	.word	0x20001af8

0800937c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800937c:	b513      	push	{r0, r1, r4, lr}
 800937e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009380:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009384:	b123      	cbz	r3, 8009390 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009386:	b9d8      	cbnz	r0, 80093c0 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8009388:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800938c:	b002      	add	sp, #8
 800938e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8009390:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8009394:	b913      	cbnz	r3, 800939c <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8009396:	f3ef 8311 	mrs	r3, BASEPRI
 800939a:	b11b      	cbz	r3, 80093a4 <osMessageQueuePut+0x28>
 800939c:	4b16      	ldr	r3, [pc, #88]	; (80093f8 <osMessageQueuePut+0x7c>)
 800939e:	681b      	ldr	r3, [r3, #0]
 80093a0:	2b02      	cmp	r3, #2
 80093a2:	d0f0      	beq.n	8009386 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80093a4:	2800      	cmp	r0, #0
 80093a6:	d0ef      	beq.n	8009388 <osMessageQueuePut+0xc>
 80093a8:	2900      	cmp	r1, #0
 80093aa:	d0ed      	beq.n	8009388 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80093ac:	2300      	movs	r3, #0
 80093ae:	4622      	mov	r2, r4
 80093b0:	f000 fcea 	bl	8009d88 <xQueueGenericSend>
 80093b4:	2801      	cmp	r0, #1
 80093b6:	d011      	beq.n	80093dc <osMessageQueuePut+0x60>
        if (timeout != 0U) {
 80093b8:	b9dc      	cbnz	r4, 80093f2 <osMessageQueuePut+0x76>
          stat = osErrorResource;
 80093ba:	f06f 0002 	mvn.w	r0, #2
 80093be:	e7e5      	b.n	800938c <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80093c0:	2900      	cmp	r1, #0
 80093c2:	d0e1      	beq.n	8009388 <osMessageQueuePut+0xc>
 80093c4:	2c00      	cmp	r4, #0
 80093c6:	d1df      	bne.n	8009388 <osMessageQueuePut+0xc>
      yield = pdFALSE;
 80093c8:	aa02      	add	r2, sp, #8
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80093ca:	4623      	mov	r3, r4
      yield = pdFALSE;
 80093cc:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80093d0:	f000 fd94 	bl	8009efc <xQueueGenericSendFromISR>
 80093d4:	2801      	cmp	r0, #1
 80093d6:	d1f0      	bne.n	80093ba <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 80093d8:	9b01      	ldr	r3, [sp, #4]
 80093da:	b90b      	cbnz	r3, 80093e0 <osMessageQueuePut+0x64>
  stat = osOK;
 80093dc:	2000      	movs	r0, #0
 80093de:	e7d5      	b.n	800938c <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 80093e0:	4b06      	ldr	r3, [pc, #24]	; (80093fc <osMessageQueuePut+0x80>)
 80093e2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80093e6:	601a      	str	r2, [r3, #0]
 80093e8:	f3bf 8f4f 	dsb	sy
 80093ec:	f3bf 8f6f 	isb	sy
 80093f0:	e7f4      	b.n	80093dc <osMessageQueuePut+0x60>
          stat = osErrorTimeout;
 80093f2:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80093f6:	e7c9      	b.n	800938c <osMessageQueuePut+0x10>
 80093f8:	20001af8 	.word	0x20001af8
 80093fc:	e000ed04 	.word	0xe000ed04

08009400 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8009400:	b513      	push	{r0, r1, r4, lr}
 8009402:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009404:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009408:	b123      	cbz	r3, 8009414 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800940a:	b9d0      	cbnz	r0, 8009442 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 800940c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8009410:	b002      	add	sp, #8
 8009412:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8009414:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8009418:	b913      	cbnz	r3, 8009420 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800941a:	f3ef 8311 	mrs	r3, BASEPRI
 800941e:	b11b      	cbz	r3, 8009428 <osMessageQueueGet+0x28>
 8009420:	4b15      	ldr	r3, [pc, #84]	; (8009478 <osMessageQueueGet+0x78>)
 8009422:	681b      	ldr	r3, [r3, #0]
 8009424:	2b02      	cmp	r3, #2
 8009426:	d0f0      	beq.n	800940a <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8009428:	2800      	cmp	r0, #0
 800942a:	d0ef      	beq.n	800940c <osMessageQueueGet+0xc>
 800942c:	2900      	cmp	r1, #0
 800942e:	d0ed      	beq.n	800940c <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8009430:	4622      	mov	r2, r4
 8009432:	f000 fe29 	bl	800a088 <xQueueReceive>
 8009436:	2801      	cmp	r0, #1
 8009438:	d010      	beq.n	800945c <osMessageQueueGet+0x5c>
        if (timeout != 0U) {
 800943a:	b9d4      	cbnz	r4, 8009472 <osMessageQueueGet+0x72>
          stat = osErrorResource;
 800943c:	f06f 0002 	mvn.w	r0, #2
 8009440:	e7e6      	b.n	8009410 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009442:	2900      	cmp	r1, #0
 8009444:	d0e2      	beq.n	800940c <osMessageQueueGet+0xc>
 8009446:	2c00      	cmp	r4, #0
 8009448:	d1e0      	bne.n	800940c <osMessageQueueGet+0xc>
      yield = pdFALSE;
 800944a:	aa02      	add	r2, sp, #8
 800944c:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009450:	f000 ff8a 	bl	800a368 <xQueueReceiveFromISR>
 8009454:	2801      	cmp	r0, #1
 8009456:	d1f1      	bne.n	800943c <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8009458:	9b01      	ldr	r3, [sp, #4]
 800945a:	b90b      	cbnz	r3, 8009460 <osMessageQueueGet+0x60>
  stat = osOK;
 800945c:	2000      	movs	r0, #0
 800945e:	e7d7      	b.n	8009410 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8009460:	4b06      	ldr	r3, [pc, #24]	; (800947c <osMessageQueueGet+0x7c>)
 8009462:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009466:	601a      	str	r2, [r3, #0]
 8009468:	f3bf 8f4f 	dsb	sy
 800946c:	f3bf 8f6f 	isb	sy
 8009470:	e7f4      	b.n	800945c <osMessageQueueGet+0x5c>
          stat = osErrorTimeout;
 8009472:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009476:	e7cb      	b.n	8009410 <osMessageQueueGet+0x10>
 8009478:	20001af8 	.word	0x20001af8
 800947c:	e000ed04 	.word	0xe000ed04

08009480 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8009480:	4b03      	ldr	r3, [pc, #12]	; (8009490 <vApplicationGetIdleTaskMemory+0x10>)
 8009482:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8009484:	4b03      	ldr	r3, [pc, #12]	; (8009494 <vApplicationGetIdleTaskMemory+0x14>)
 8009486:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8009488:	2380      	movs	r3, #128	; 0x80
 800948a:	6013      	str	r3, [r2, #0]
}
 800948c:	4770      	bx	lr
 800948e:	bf00      	nop
 8009490:	20001a98 	.word	0x20001a98
 8009494:	20001898 	.word	0x20001898

08009498 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8009498:	4b03      	ldr	r3, [pc, #12]	; (80094a8 <vApplicationGetTimerTaskMemory+0x10>)
 800949a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800949c:	4b03      	ldr	r3, [pc, #12]	; (80094ac <vApplicationGetTimerTaskMemory+0x14>)
 800949e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80094a0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80094a4:	6013      	str	r3, [r2, #0]
}
 80094a6:	4770      	bx	lr
 80094a8:	20001efc 	.word	0x20001efc
 80094ac:	20001afc 	.word	0x20001afc

080094b0 <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80094b0:	4b0f      	ldr	r3, [pc, #60]	; (80094f0 <prvInsertBlockIntoFreeList+0x40>)
{
 80094b2:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80094b4:	681a      	ldr	r2, [r3, #0]
 80094b6:	4282      	cmp	r2, r0
 80094b8:	d318      	bcc.n	80094ec <prvInsertBlockIntoFreeList+0x3c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80094ba:	685c      	ldr	r4, [r3, #4]
 80094bc:	1919      	adds	r1, r3, r4
 80094be:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80094c0:	bf01      	itttt	eq
 80094c2:	6841      	ldreq	r1, [r0, #4]
 80094c4:	4618      	moveq	r0, r3
 80094c6:	1909      	addeq	r1, r1, r4
 80094c8:	6059      	streq	r1, [r3, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80094ca:	6844      	ldr	r4, [r0, #4]
 80094cc:	1901      	adds	r1, r0, r4
 80094ce:	428a      	cmp	r2, r1
 80094d0:	d107      	bne.n	80094e2 <prvInsertBlockIntoFreeList+0x32>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80094d2:	4908      	ldr	r1, [pc, #32]	; (80094f4 <prvInsertBlockIntoFreeList+0x44>)
 80094d4:	6809      	ldr	r1, [r1, #0]
 80094d6:	428a      	cmp	r2, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80094d8:	bf1f      	itttt	ne
 80094da:	6851      	ldrne	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80094dc:	6812      	ldrne	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80094de:	1909      	addne	r1, r1, r4
 80094e0:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80094e2:	4298      	cmp	r0, r3
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 80094e4:	6002      	str	r2, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80094e6:	bf18      	it	ne
 80094e8:	6018      	strne	r0, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80094ea:	bd10      	pop	{r4, pc}
 80094ec:	4613      	mov	r3, r2
 80094ee:	e7e1      	b.n	80094b4 <prvInsertBlockIntoFreeList+0x4>
 80094f0:	20011f6c 	.word	0x20011f6c
 80094f4:	20001f5c 	.word	0x20001f5c

080094f8 <pvPortMalloc>:
{
 80094f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80094fc:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80094fe:	f001 f9c1 	bl	800a884 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8009502:	493f      	ldr	r1, [pc, #252]	; (8009600 <pvPortMalloc+0x108>)
 8009504:	4d3f      	ldr	r5, [pc, #252]	; (8009604 <pvPortMalloc+0x10c>)
 8009506:	680b      	ldr	r3, [r1, #0]
 8009508:	bb03      	cbnz	r3, 800954c <pvPortMalloc+0x54>
	uxAddress = ( size_t ) ucHeap;
 800950a:	4a3f      	ldr	r2, [pc, #252]	; (8009608 <pvPortMalloc+0x110>)
	xStart.xBlockSize = ( size_t ) 0;
 800950c:	2000      	movs	r0, #0
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800950e:	0756      	lsls	r6, r2, #29
 8009510:	f502 3380 	add.w	r3, r2, #65536	; 0x10000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8009514:	4e3d      	ldr	r6, [pc, #244]	; (800960c <pvPortMalloc+0x114>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8009516:	bf14      	ite	ne
 8009518:	3207      	addne	r2, #7
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800951a:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
	xStart.xBlockSize = ( size_t ) 0;
 800951e:	6070      	str	r0, [r6, #4]
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009520:	bf1c      	itt	ne
 8009522:	f022 0207 	bicne.w	r2, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8009526:	1a9b      	subne	r3, r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8009528:	6032      	str	r2, [r6, #0]
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800952a:	4413      	add	r3, r2
	uxAddress -= xHeapStructSize;
 800952c:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800952e:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8009532:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8009536:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8009538:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800953a:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800953e:	4b34      	ldr	r3, [pc, #208]	; (8009610 <pvPortMalloc+0x118>)
 8009540:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8009542:	4b34      	ldr	r3, [pc, #208]	; (8009614 <pvPortMalloc+0x11c>)
 8009544:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8009546:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800954a:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800954c:	682f      	ldr	r7, [r5, #0]
 800954e:	4227      	tst	r7, r4
 8009550:	d151      	bne.n	80095f6 <pvPortMalloc+0xfe>
			if( xWantedSize > 0 )
 8009552:	2c00      	cmp	r4, #0
 8009554:	d040      	beq.n	80095d8 <pvPortMalloc+0xe0>
				xWantedSize += xHeapStructSize;
 8009556:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800955a:	0758      	lsls	r0, r3, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800955c:	bf1c      	itt	ne
 800955e:	f023 0307 	bicne.w	r3, r3, #7
 8009562:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8009564:	2b00      	cmp	r3, #0
 8009566:	d046      	beq.n	80095f6 <pvPortMalloc+0xfe>
 8009568:	4a2a      	ldr	r2, [pc, #168]	; (8009614 <pvPortMalloc+0x11c>)
 800956a:	6816      	ldr	r6, [r2, #0]
 800956c:	4690      	mov	r8, r2
 800956e:	429e      	cmp	r6, r3
 8009570:	d341      	bcc.n	80095f6 <pvPortMalloc+0xfe>
				pxBlock = xStart.pxNextFreeBlock;
 8009572:	4a26      	ldr	r2, [pc, #152]	; (800960c <pvPortMalloc+0x114>)
 8009574:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8009576:	6868      	ldr	r0, [r5, #4]
 8009578:	4298      	cmp	r0, r3
 800957a:	d201      	bcs.n	8009580 <pvPortMalloc+0x88>
 800957c:	682c      	ldr	r4, [r5, #0]
 800957e:	b9b4      	cbnz	r4, 80095ae <pvPortMalloc+0xb6>
				if( pxBlock != pxEnd )
 8009580:	6809      	ldr	r1, [r1, #0]
 8009582:	42a9      	cmp	r1, r5
 8009584:	d037      	beq.n	80095f6 <pvPortMalloc+0xfe>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009586:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009588:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800958a:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800958c:	1ac2      	subs	r2, r0, r3
 800958e:	2a10      	cmp	r2, #16
 8009590:	d914      	bls.n	80095bc <pvPortMalloc+0xc4>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8009592:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8009594:	0741      	lsls	r1, r0, #29
 8009596:	d00d      	beq.n	80095b4 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8009598:	f04f 0350 	mov.w	r3, #80	; 0x50
 800959c:	b672      	cpsid	i
 800959e:	f383 8811 	msr	BASEPRI, r3
 80095a2:	f3bf 8f6f 	isb	sy
 80095a6:	f3bf 8f4f 	dsb	sy
 80095aa:	b662      	cpsie	i
 80095ac:	e7fe      	b.n	80095ac <pvPortMalloc+0xb4>
 80095ae:	462a      	mov	r2, r5
 80095b0:	4625      	mov	r5, r4
 80095b2:	e7e0      	b.n	8009576 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80095b4:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80095b6:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80095b8:	f7ff ff7a 	bl	80094b0 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80095bc:	686b      	ldr	r3, [r5, #4]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80095be:	3408      	adds	r4, #8
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80095c0:	4913      	ldr	r1, [pc, #76]	; (8009610 <pvPortMalloc+0x118>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80095c2:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80095c4:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80095c6:	6808      	ldr	r0, [r1, #0]
					pxBlock->pxNextFreeBlock = NULL;
 80095c8:	2300      	movs	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80095ca:	f8c8 6000 	str.w	r6, [r8]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80095ce:	4286      	cmp	r6, r0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80095d0:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 80095d2:	602b      	str	r3, [r5, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80095d4:	bf38      	it	cc
 80095d6:	600e      	strcc	r6, [r1, #0]
	( void ) xTaskResumeAll();
 80095d8:	f001 f9f4 	bl	800a9c4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80095dc:	0763      	lsls	r3, r4, #29
 80095de:	d00c      	beq.n	80095fa <pvPortMalloc+0x102>
 80095e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095e4:	b672      	cpsid	i
 80095e6:	f383 8811 	msr	BASEPRI, r3
 80095ea:	f3bf 8f6f 	isb	sy
 80095ee:	f3bf 8f4f 	dsb	sy
 80095f2:	b662      	cpsie	i
 80095f4:	e7fe      	b.n	80095f4 <pvPortMalloc+0xfc>
void *pvReturn = NULL;
 80095f6:	2400      	movs	r4, #0
 80095f8:	e7ee      	b.n	80095d8 <pvPortMalloc+0xe0>
}
 80095fa:	4620      	mov	r0, r4
 80095fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009600:	20001f5c 	.word	0x20001f5c
 8009604:	20011f60 	.word	0x20011f60
 8009608:	20001f60 	.word	0x20001f60
 800960c:	20011f6c 	.word	0x20011f6c
 8009610:	20011f68 	.word	0x20011f68
 8009614:	20011f64 	.word	0x20011f64

08009618 <vPortFree>:
{
 8009618:	b510      	push	{r4, lr}
	if( pv != NULL )
 800961a:	4604      	mov	r4, r0
 800961c:	2800      	cmp	r0, #0
 800961e:	d032      	beq.n	8009686 <vPortFree+0x6e>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8009620:	4a19      	ldr	r2, [pc, #100]	; (8009688 <vPortFree+0x70>)
 8009622:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8009626:	6812      	ldr	r2, [r2, #0]
 8009628:	4213      	tst	r3, r2
 800962a:	d10a      	bne.n	8009642 <vPortFree+0x2a>
 800962c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009630:	b672      	cpsid	i
 8009632:	f383 8811 	msr	BASEPRI, r3
 8009636:	f3bf 8f6f 	isb	sy
 800963a:	f3bf 8f4f 	dsb	sy
 800963e:	b662      	cpsie	i
 8009640:	e7fe      	b.n	8009640 <vPortFree+0x28>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8009642:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8009646:	b151      	cbz	r1, 800965e <vPortFree+0x46>
 8009648:	f04f 0350 	mov.w	r3, #80	; 0x50
 800964c:	b672      	cpsid	i
 800964e:	f383 8811 	msr	BASEPRI, r3
 8009652:	f3bf 8f6f 	isb	sy
 8009656:	f3bf 8f4f 	dsb	sy
 800965a:	b662      	cpsie	i
 800965c:	e7fe      	b.n	800965c <vPortFree+0x44>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800965e:	ea23 0302 	bic.w	r3, r3, r2
 8009662:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8009666:	f001 f90d 	bl	800a884 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800966a:	4a08      	ldr	r2, [pc, #32]	; (800968c <vPortFree+0x74>)
 800966c:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8009670:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8009674:	6811      	ldr	r1, [r2, #0]
 8009676:	440b      	add	r3, r1
 8009678:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800967a:	f7ff ff19 	bl	80094b0 <prvInsertBlockIntoFreeList>
}
 800967e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8009682:	f001 b99f 	b.w	800a9c4 <xTaskResumeAll>
}
 8009686:	bd10      	pop	{r4, pc}
 8009688:	20011f60 	.word	0x20011f60
 800968c:	20011f64 	.word	0x20011f64

08009690 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009690:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8009694:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009698:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800969a:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800969c:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80096a0:	2300      	movs	r3, #0
 80096a2:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80096a4:	4770      	bx	lr

080096a6 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80096a6:	2300      	movs	r3, #0
 80096a8:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80096aa:	4770      	bx	lr

080096ac <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80096ac:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80096ae:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 80096b0:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80096b2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80096b4:	689a      	ldr	r2, [r3, #8]
 80096b6:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80096b8:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80096ba:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80096bc:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80096be:	3301      	adds	r3, #1
 80096c0:	6003      	str	r3, [r0, #0]
}
 80096c2:	4770      	bx	lr

080096c4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80096c4:	680a      	ldr	r2, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80096c6:	1c53      	adds	r3, r2, #1
{
 80096c8:	b530      	push	{r4, r5, lr}
	if( xValueOfInsertion == portMAX_DELAY )
 80096ca:	d10a      	bne.n	80096e2 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80096cc:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80096ce:	685a      	ldr	r2, [r3, #4]
 80096d0:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80096d2:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80096d4:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80096d6:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80096d8:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80096da:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80096dc:	3301      	adds	r3, #1
 80096de:	6003      	str	r3, [r0, #0]
}
 80096e0:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80096e2:	f100 0308 	add.w	r3, r0, #8
 80096e6:	685c      	ldr	r4, [r3, #4]
 80096e8:	6825      	ldr	r5, [r4, #0]
 80096ea:	4295      	cmp	r5, r2
 80096ec:	d8ef      	bhi.n	80096ce <vListInsert+0xa>
 80096ee:	4623      	mov	r3, r4
 80096f0:	e7f9      	b.n	80096e6 <vListInsert+0x22>

080096f2 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80096f2:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 80096f6:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80096f8:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80096fa:	6882      	ldr	r2, [r0, #8]
 80096fc:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80096fe:	6859      	ldr	r1, [r3, #4]
 8009700:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8009702:	bf08      	it	eq
 8009704:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8009706:	2200      	movs	r2, #0
 8009708:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800970a:	681a      	ldr	r2, [r3, #0]
 800970c:	3a01      	subs	r2, #1
 800970e:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8009710:	6818      	ldr	r0, [r3, #0]
}
 8009712:	4770      	bx	lr

08009714 <prvTaskExitError>:
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
volatile uint32_t ulDummy = 0;
 8009714:	2300      	movs	r3, #0
{
 8009716:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8009718:	9301      	str	r3, [sp, #4]
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
 800971a:	4b0f      	ldr	r3, [pc, #60]	; (8009758 <prvTaskExitError+0x44>)
 800971c:	681b      	ldr	r3, [r3, #0]
 800971e:	3301      	adds	r3, #1
 8009720:	d00a      	beq.n	8009738 <prvTaskExitError+0x24>
 8009722:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009726:	b672      	cpsid	i
 8009728:	f383 8811 	msr	BASEPRI, r3
 800972c:	f3bf 8f6f 	isb	sy
 8009730:	f3bf 8f4f 	dsb	sy
 8009734:	b662      	cpsie	i
 8009736:	e7fe      	b.n	8009736 <prvTaskExitError+0x22>
 8009738:	f04f 0350 	mov.w	r3, #80	; 0x50
 800973c:	b672      	cpsid	i
 800973e:	f383 8811 	msr	BASEPRI, r3
 8009742:	f3bf 8f6f 	isb	sy
 8009746:	f3bf 8f4f 	dsb	sy
 800974a:	b662      	cpsie	i
	portDISABLE_INTERRUPTS();
	while( ulDummy == 0 )
 800974c:	9b01      	ldr	r3, [sp, #4]
 800974e:	2b00      	cmp	r3, #0
 8009750:	d0fc      	beq.n	800974c <prvTaskExitError+0x38>
		about code appearing after this function is called - making ulDummy
		volatile makes the compiler think the function could return and
		therefore not output an 'unreachable code' warning for code that appears
		after it. */
	}
}
 8009752:	b002      	add	sp, #8
 8009754:	4770      	bx	lr
 8009756:	bf00      	nop
 8009758:	20000070 	.word	0x20000070

0800975c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800975c:	4808      	ldr	r0, [pc, #32]	; (8009780 <prvPortStartFirstTask+0x24>)
 800975e:	6800      	ldr	r0, [r0, #0]
 8009760:	6800      	ldr	r0, [r0, #0]
 8009762:	f380 8808 	msr	MSP, r0
 8009766:	f04f 0000 	mov.w	r0, #0
 800976a:	f380 8814 	msr	CONTROL, r0
 800976e:	b662      	cpsie	i
 8009770:	b661      	cpsie	f
 8009772:	f3bf 8f4f 	dsb	sy
 8009776:	f3bf 8f6f 	isb	sy
 800977a:	df00      	svc	0
 800977c:	bf00      	nop
 800977e:	0000      	.short	0x0000
 8009780:	e000ed08 	.word	0xe000ed08

08009784 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8009784:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8009794 <vPortEnableVFP+0x10>
 8009788:	6801      	ldr	r1, [r0, #0]
 800978a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800978e:	6001      	str	r1, [r0, #0]
 8009790:	4770      	bx	lr
 8009792:	0000      	.short	0x0000
 8009794:	e000ed88 	.word	0xe000ed88

08009798 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8009798:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800979c:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80097a0:	f840 2c20 	str.w	r2, [r0, #-32]
}
 80097a4:	3844      	subs	r0, #68	; 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80097a6:	6403      	str	r3, [r0, #64]	; 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80097a8:	4b03      	ldr	r3, [pc, #12]	; (80097b8 <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80097aa:	63c1      	str	r1, [r0, #60]	; 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80097ac:	6383      	str	r3, [r0, #56]	; 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80097ae:	f06f 0302 	mvn.w	r3, #2
 80097b2:	6203      	str	r3, [r0, #32]
}
 80097b4:	4770      	bx	lr
 80097b6:	bf00      	nop
 80097b8:	08009715 	.word	0x08009715
 80097bc:	00000000 	.word	0x00000000

080097c0 <SVC_Handler>:
	__asm volatile (
 80097c0:	4b07      	ldr	r3, [pc, #28]	; (80097e0 <pxCurrentTCBConst2>)
 80097c2:	6819      	ldr	r1, [r3, #0]
 80097c4:	6808      	ldr	r0, [r1, #0]
 80097c6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80097ca:	f380 8809 	msr	PSP, r0
 80097ce:	f3bf 8f6f 	isb	sy
 80097d2:	f04f 0000 	mov.w	r0, #0
 80097d6:	f380 8811 	msr	BASEPRI, r0
 80097da:	4770      	bx	lr
 80097dc:	f3af 8000 	nop.w

080097e0 <pxCurrentTCBConst2>:
 80097e0:	20011f7c 	.word	0x20011f7c

080097e4 <vPortEnterCritical>:
 80097e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097e8:	b672      	cpsid	i
 80097ea:	f383 8811 	msr	BASEPRI, r3
 80097ee:	f3bf 8f6f 	isb	sy
 80097f2:	f3bf 8f4f 	dsb	sy
 80097f6:	b662      	cpsie	i
	uxCriticalNesting++;
 80097f8:	4a0b      	ldr	r2, [pc, #44]	; (8009828 <vPortEnterCritical+0x44>)
 80097fa:	6813      	ldr	r3, [r2, #0]
 80097fc:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 80097fe:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8009800:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8009802:	d10f      	bne.n	8009824 <vPortEnterCritical+0x40>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8009804:	4b09      	ldr	r3, [pc, #36]	; (800982c <vPortEnterCritical+0x48>)
 8009806:	681b      	ldr	r3, [r3, #0]
 8009808:	f013 0fff 	tst.w	r3, #255	; 0xff
 800980c:	d00a      	beq.n	8009824 <vPortEnterCritical+0x40>
 800980e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009812:	b672      	cpsid	i
 8009814:	f383 8811 	msr	BASEPRI, r3
 8009818:	f3bf 8f6f 	isb	sy
 800981c:	f3bf 8f4f 	dsb	sy
 8009820:	b662      	cpsie	i
 8009822:	e7fe      	b.n	8009822 <vPortEnterCritical+0x3e>
}
 8009824:	4770      	bx	lr
 8009826:	bf00      	nop
 8009828:	20000070 	.word	0x20000070
 800982c:	e000ed04 	.word	0xe000ed04

08009830 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8009830:	4a09      	ldr	r2, [pc, #36]	; (8009858 <vPortExitCritical+0x28>)
 8009832:	6813      	ldr	r3, [r2, #0]
 8009834:	b953      	cbnz	r3, 800984c <vPortExitCritical+0x1c>
 8009836:	f04f 0350 	mov.w	r3, #80	; 0x50
 800983a:	b672      	cpsid	i
 800983c:	f383 8811 	msr	BASEPRI, r3
 8009840:	f3bf 8f6f 	isb	sy
 8009844:	f3bf 8f4f 	dsb	sy
 8009848:	b662      	cpsie	i
 800984a:	e7fe      	b.n	800984a <vPortExitCritical+0x1a>
	uxCriticalNesting--;
 800984c:	3b01      	subs	r3, #1
 800984e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8009850:	b90b      	cbnz	r3, 8009856 <vPortExitCritical+0x26>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8009852:	f383 8811 	msr	BASEPRI, r3
}
 8009856:	4770      	bx	lr
 8009858:	20000070 	.word	0x20000070
 800985c:	00000000 	.word	0x00000000

08009860 <PendSV_Handler>:
	__asm volatile
 8009860:	f3ef 8009 	mrs	r0, PSP
 8009864:	f3bf 8f6f 	isb	sy
 8009868:	4b15      	ldr	r3, [pc, #84]	; (80098c0 <pxCurrentTCBConst>)
 800986a:	681a      	ldr	r2, [r3, #0]
 800986c:	f01e 0f10 	tst.w	lr, #16
 8009870:	bf08      	it	eq
 8009872:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8009876:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800987a:	6010      	str	r0, [r2, #0]
 800987c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8009880:	f04f 0050 	mov.w	r0, #80	; 0x50
 8009884:	b672      	cpsid	i
 8009886:	f380 8811 	msr	BASEPRI, r0
 800988a:	f3bf 8f4f 	dsb	sy
 800988e:	f3bf 8f6f 	isb	sy
 8009892:	b662      	cpsie	i
 8009894:	f001 f99c 	bl	800abd0 <vTaskSwitchContext>
 8009898:	f04f 0000 	mov.w	r0, #0
 800989c:	f380 8811 	msr	BASEPRI, r0
 80098a0:	bc09      	pop	{r0, r3}
 80098a2:	6819      	ldr	r1, [r3, #0]
 80098a4:	6808      	ldr	r0, [r1, #0]
 80098a6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80098aa:	f01e 0f10 	tst.w	lr, #16
 80098ae:	bf08      	it	eq
 80098b0:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80098b4:	f380 8809 	msr	PSP, r0
 80098b8:	f3bf 8f6f 	isb	sy
 80098bc:	4770      	bx	lr
 80098be:	bf00      	nop

080098c0 <pxCurrentTCBConst>:
 80098c0:	20011f7c 	.word	0x20011f7c

080098c4 <SysTick_Handler>:
{
 80098c4:	b508      	push	{r3, lr}
	__asm volatile
 80098c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098ca:	b672      	cpsid	i
 80098cc:	f383 8811 	msr	BASEPRI, r3
 80098d0:	f3bf 8f6f 	isb	sy
 80098d4:	f3bf 8f4f 	dsb	sy
 80098d8:	b662      	cpsie	i
		if( xTaskIncrementTick() != pdFALSE )
 80098da:	f000 ffe1 	bl	800a8a0 <xTaskIncrementTick>
 80098de:	b118      	cbz	r0, 80098e8 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80098e0:	4b03      	ldr	r3, [pc, #12]	; (80098f0 <SysTick_Handler+0x2c>)
 80098e2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80098e6:	601a      	str	r2, [r3, #0]
	__asm volatile
 80098e8:	2300      	movs	r3, #0
 80098ea:	f383 8811 	msr	BASEPRI, r3
}
 80098ee:	bd08      	pop	{r3, pc}
 80098f0:	e000ed04 	.word	0xe000ed04

080098f4 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80098f4:	2300      	movs	r3, #0
 80098f6:	4a08      	ldr	r2, [pc, #32]	; (8009918 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80098f8:	4908      	ldr	r1, [pc, #32]	; (800991c <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80098fa:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80098fc:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80098fe:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8009902:	4b07      	ldr	r3, [pc, #28]	; (8009920 <vPortSetupTimerInterrupt+0x2c>)
 8009904:	681b      	ldr	r3, [r3, #0]
 8009906:	fbb3 f3f1 	udiv	r3, r3, r1
 800990a:	4906      	ldr	r1, [pc, #24]	; (8009924 <vPortSetupTimerInterrupt+0x30>)
 800990c:	3b01      	subs	r3, #1
 800990e:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8009910:	2307      	movs	r3, #7
 8009912:	6013      	str	r3, [r2, #0]
}
 8009914:	4770      	bx	lr
 8009916:	bf00      	nop
 8009918:	e000e010 	.word	0xe000e010
 800991c:	e000e018 	.word	0xe000e018
 8009920:	20000064 	.word	0x20000064
 8009924:	e000e014 	.word	0xe000e014

08009928 <xPortStartScheduler>:
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8009928:	4b2c      	ldr	r3, [pc, #176]	; (80099dc <xPortStartScheduler+0xb4>)
{
 800992a:	b513      	push	{r0, r1, r4, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800992c:	781a      	ldrb	r2, [r3, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800992e:	2100      	movs	r1, #0
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8009930:	b2d2      	uxtb	r2, r2
 8009932:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8009934:	22ff      	movs	r2, #255	; 0xff
 8009936:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8009938:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800993a:	4a29      	ldr	r2, [pc, #164]	; (80099e0 <xPortStartScheduler+0xb8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800993c:	b2db      	uxtb	r3, r3
 800993e:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8009942:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009946:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800994a:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800994c:	2207      	movs	r2, #7
 800994e:	4b25      	ldr	r3, [pc, #148]	; (80099e4 <xPortStartScheduler+0xbc>)
 8009950:	601a      	str	r2, [r3, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8009952:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8009956:	1e54      	subs	r4, r2, #1
 8009958:	0600      	lsls	r0, r0, #24
 800995a:	d40f      	bmi.n	800997c <xPortStartScheduler+0x54>
 800995c:	b101      	cbz	r1, 8009960 <xPortStartScheduler+0x38>
 800995e:	601a      	str	r2, [r3, #0]
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8009960:	681a      	ldr	r2, [r3, #0]
 8009962:	2a03      	cmp	r2, #3
 8009964:	d013      	beq.n	800998e <xPortStartScheduler+0x66>
	__asm volatile
 8009966:	f04f 0350 	mov.w	r3, #80	; 0x50
 800996a:	b672      	cpsid	i
 800996c:	f383 8811 	msr	BASEPRI, r3
 8009970:	f3bf 8f6f 	isb	sy
 8009974:	f3bf 8f4f 	dsb	sy
 8009978:	b662      	cpsie	i
 800997a:	e7fe      	b.n	800997a <xPortStartScheduler+0x52>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800997c:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8009980:	2101      	movs	r1, #1
 8009982:	0052      	lsls	r2, r2, #1
 8009984:	b2d2      	uxtb	r2, r2
 8009986:	f88d 2003 	strb.w	r2, [sp, #3]
 800998a:	4622      	mov	r2, r4
 800998c:	e7e1      	b.n	8009952 <xPortStartScheduler+0x2a>
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 800998e:	0212      	lsls	r2, r2, #8
	uxCriticalNesting = 0;
 8009990:	2400      	movs	r4, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8009992:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8009996:	601a      	str	r2, [r3, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8009998:	9b01      	ldr	r3, [sp, #4]
 800999a:	4a10      	ldr	r2, [pc, #64]	; (80099dc <xPortStartScheduler+0xb4>)
 800999c:	b2db      	uxtb	r3, r3
 800999e:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80099a0:	4b11      	ldr	r3, [pc, #68]	; (80099e8 <xPortStartScheduler+0xc0>)
 80099a2:	681a      	ldr	r2, [r3, #0]
 80099a4:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80099a8:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80099aa:	681a      	ldr	r2, [r3, #0]
 80099ac:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 80099b0:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 80099b2:	f7ff ff9f 	bl	80098f4 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80099b6:	4b0d      	ldr	r3, [pc, #52]	; (80099ec <xPortStartScheduler+0xc4>)
 80099b8:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 80099ba:	f7ff fee3 	bl	8009784 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80099be:	4a0c      	ldr	r2, [pc, #48]	; (80099f0 <xPortStartScheduler+0xc8>)
 80099c0:	6813      	ldr	r3, [r2, #0]
 80099c2:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80099c6:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 80099c8:	f7ff fec8 	bl	800975c <prvPortStartFirstTask>
	vTaskSwitchContext();
 80099cc:	f001 f900 	bl	800abd0 <vTaskSwitchContext>
	prvTaskExitError();
 80099d0:	f7ff fea0 	bl	8009714 <prvTaskExitError>
}
 80099d4:	4620      	mov	r0, r4
 80099d6:	b002      	add	sp, #8
 80099d8:	bd10      	pop	{r4, pc}
 80099da:	bf00      	nop
 80099dc:	e000e400 	.word	0xe000e400
 80099e0:	20011f74 	.word	0x20011f74
 80099e4:	20011f78 	.word	0x20011f78
 80099e8:	e000ed20 	.word	0xe000ed20
 80099ec:	20000070 	.word	0x20000070
 80099f0:	e000ef34 	.word	0xe000ef34

080099f4 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80099f4:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80099f8:	2b0f      	cmp	r3, #15
 80099fa:	d910      	bls.n	8009a1e <vPortValidateInterruptPriority+0x2a>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80099fc:	4a12      	ldr	r2, [pc, #72]	; (8009a48 <vPortValidateInterruptPriority+0x54>)
 80099fe:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8009a00:	4a12      	ldr	r2, [pc, #72]	; (8009a4c <vPortValidateInterruptPriority+0x58>)
 8009a02:	7812      	ldrb	r2, [r2, #0]
 8009a04:	429a      	cmp	r2, r3
 8009a06:	d90a      	bls.n	8009a1e <vPortValidateInterruptPriority+0x2a>
 8009a08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a0c:	b672      	cpsid	i
 8009a0e:	f383 8811 	msr	BASEPRI, r3
 8009a12:	f3bf 8f6f 	isb	sy
 8009a16:	f3bf 8f4f 	dsb	sy
 8009a1a:	b662      	cpsie	i
 8009a1c:	e7fe      	b.n	8009a1c <vPortValidateInterruptPriority+0x28>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8009a1e:	4b0c      	ldr	r3, [pc, #48]	; (8009a50 <vPortValidateInterruptPriority+0x5c>)
 8009a20:	4a0c      	ldr	r2, [pc, #48]	; (8009a54 <vPortValidateInterruptPriority+0x60>)
 8009a22:	681b      	ldr	r3, [r3, #0]
 8009a24:	6812      	ldr	r2, [r2, #0]
 8009a26:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8009a2a:	4293      	cmp	r3, r2
 8009a2c:	d90a      	bls.n	8009a44 <vPortValidateInterruptPriority+0x50>
 8009a2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a32:	b672      	cpsid	i
 8009a34:	f383 8811 	msr	BASEPRI, r3
 8009a38:	f3bf 8f6f 	isb	sy
 8009a3c:	f3bf 8f4f 	dsb	sy
 8009a40:	b662      	cpsie	i
 8009a42:	e7fe      	b.n	8009a42 <vPortValidateInterruptPriority+0x4e>
	}
 8009a44:	4770      	bx	lr
 8009a46:	bf00      	nop
 8009a48:	e000e3f0 	.word	0xe000e3f0
 8009a4c:	20011f74 	.word	0x20011f74
 8009a50:	e000ed0c 	.word	0xe000ed0c
 8009a54:	20011f78 	.word	0x20011f78

08009a58 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8009a58:	b510      	push	{r4, lr}
 8009a5a:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009a5c:	f7ff fec2 	bl	80097e4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8009a60:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8009a62:	f7ff fee5 	bl	8009830 <vPortExitCritical>

	return xReturn;
}
 8009a66:	fab4 f084 	clz	r0, r4
 8009a6a:	0940      	lsrs	r0, r0, #5
 8009a6c:	bd10      	pop	{r4, pc}

08009a6e <prvCopyDataToQueue>:
{
 8009a6e:	b570      	push	{r4, r5, r6, lr}
 8009a70:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8009a72:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
 8009a74:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009a76:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8009a78:	b942      	cbnz	r2, 8009a8c <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009a7a:	6805      	ldr	r5, [r0, #0]
 8009a7c:	b99d      	cbnz	r5, 8009aa6 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009a7e:	6880      	ldr	r0, [r0, #8]
 8009a80:	f001 fa10 	bl	800aea4 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8009a84:	60a5      	str	r5, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009a86:	3601      	adds	r6, #1
 8009a88:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8009a8a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8009a8c:	b96d      	cbnz	r5, 8009aaa <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009a8e:	6840      	ldr	r0, [r0, #4]
 8009a90:	f017 f9ec 	bl	8020e6c <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009a94:	6863      	ldr	r3, [r4, #4]
 8009a96:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009a98:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009a9a:	68a2      	ldr	r2, [r4, #8]
 8009a9c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009a9e:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009aa0:	d301      	bcc.n	8009aa6 <prvCopyDataToQueue+0x38>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8009aa2:	6823      	ldr	r3, [r4, #0]
 8009aa4:	6063      	str	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8009aa6:	2000      	movs	r0, #0
 8009aa8:	e7ed      	b.n	8009a86 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8009aaa:	68c0      	ldr	r0, [r0, #12]
 8009aac:	f017 f9de 	bl	8020e6c <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009ab0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009ab2:	68e2      	ldr	r2, [r4, #12]
 8009ab4:	425b      	negs	r3, r3
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009ab6:	6821      	ldr	r1, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009ab8:	441a      	add	r2, r3
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009aba:	428a      	cmp	r2, r1
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009abc:	60e2      	str	r2, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8009abe:	bf3e      	ittt	cc
 8009ac0:	68a2      	ldrcc	r2, [r4, #8]
 8009ac2:	189b      	addcc	r3, r3, r2
 8009ac4:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8009ac6:	2d02      	cmp	r5, #2
 8009ac8:	d1ed      	bne.n	8009aa6 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009aca:	b10e      	cbz	r6, 8009ad0 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8009acc:	3e01      	subs	r6, #1
 8009ace:	e7ea      	b.n	8009aa6 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8009ad0:	4630      	mov	r0, r6
 8009ad2:	e7d8      	b.n	8009a86 <prvCopyDataToQueue+0x18>

08009ad4 <prvCopyDataFromQueue>:
{
 8009ad4:	4603      	mov	r3, r0
 8009ad6:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009ad8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8009ada:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009adc:	b162      	cbz	r2, 8009af8 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009ade:	68d9      	ldr	r1, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009ae0:	689c      	ldr	r4, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009ae2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009ae4:	42a1      	cmp	r1, r4
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009ae6:	60d9      	str	r1, [r3, #12]
}
 8009ae8:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009aec:	bf24      	itt	cs
 8009aee:	6819      	ldrcs	r1, [r3, #0]
 8009af0:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009af2:	68d9      	ldr	r1, [r3, #12]
 8009af4:	f017 b9ba 	b.w	8020e6c <memcpy>
}
 8009af8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009afc:	4770      	bx	lr

08009afe <prvUnlockQueue>:
{
 8009afe:	b570      	push	{r4, r5, r6, lr}
 8009b00:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8009b02:	f7ff fe6f 	bl	80097e4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8009b06:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009b0a:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8009b0e:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8009b10:	2d00      	cmp	r5, #0
 8009b12:	dc14      	bgt.n	8009b3e <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8009b14:	23ff      	movs	r3, #255	; 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009b16:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 8009b1a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8009b1e:	f7ff fe87 	bl	8009830 <vPortExitCritical>
	taskENTER_CRITICAL();
 8009b22:	f7ff fe5f 	bl	80097e4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8009b26:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
 8009b2a:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8009b2c:	2d00      	cmp	r5, #0
 8009b2e:	dc12      	bgt.n	8009b56 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8009b30:	23ff      	movs	r3, #255	; 0xff
 8009b32:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8009b36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8009b3a:	f7ff be79 	b.w	8009830 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009b3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009b40:	2b00      	cmp	r3, #0
 8009b42:	d0e7      	beq.n	8009b14 <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009b44:	4630      	mov	r0, r6
 8009b46:	f001 f8c7 	bl	800acd8 <xTaskRemoveFromEventList>
 8009b4a:	b108      	cbz	r0, 8009b50 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8009b4c:	f001 f954 	bl	800adf8 <vTaskMissedYield>
 8009b50:	3d01      	subs	r5, #1
 8009b52:	b26d      	sxtb	r5, r5
 8009b54:	e7dc      	b.n	8009b10 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009b56:	6923      	ldr	r3, [r4, #16]
 8009b58:	2b00      	cmp	r3, #0
 8009b5a:	d0e9      	beq.n	8009b30 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009b5c:	4630      	mov	r0, r6
 8009b5e:	f001 f8bb 	bl	800acd8 <xTaskRemoveFromEventList>
 8009b62:	b108      	cbz	r0, 8009b68 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8009b64:	f001 f948 	bl	800adf8 <vTaskMissedYield>
 8009b68:	3d01      	subs	r5, #1
 8009b6a:	b26d      	sxtb	r5, r5
 8009b6c:	e7de      	b.n	8009b2c <prvUnlockQueue+0x2e>
	...

08009b70 <xQueueGenericReset>:
{
 8009b70:	b538      	push	{r3, r4, r5, lr}
 8009b72:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8009b74:	4604      	mov	r4, r0
 8009b76:	b950      	cbnz	r0, 8009b8e <xQueueGenericReset+0x1e>
 8009b78:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b7c:	b672      	cpsid	i
 8009b7e:	f383 8811 	msr	BASEPRI, r3
 8009b82:	f3bf 8f6f 	isb	sy
 8009b86:	f3bf 8f4f 	dsb	sy
 8009b8a:	b662      	cpsie	i
 8009b8c:	e7fe      	b.n	8009b8c <xQueueGenericReset+0x1c>
	taskENTER_CRITICAL();
 8009b8e:	f7ff fe29 	bl	80097e4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009b92:	6822      	ldr	r2, [r4, #0]
 8009b94:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8009b98:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009b9a:	4343      	muls	r3, r0
 8009b9c:	18d1      	adds	r1, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009b9e:	1a1b      	subs	r3, r3, r0
 8009ba0:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009ba2:	60a1      	str	r1, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8009ba4:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009ba6:	60e3      	str	r3, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8009ba8:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8009baa:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8009bac:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009bb0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009bb4:	b995      	cbnz	r5, 8009bdc <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009bb6:	6923      	ldr	r3, [r4, #16]
 8009bb8:	b163      	cbz	r3, 8009bd4 <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009bba:	f104 0010 	add.w	r0, r4, #16
 8009bbe:	f001 f88b 	bl	800acd8 <xTaskRemoveFromEventList>
 8009bc2:	b138      	cbz	r0, 8009bd4 <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009bc4:	4b0a      	ldr	r3, [pc, #40]	; (8009bf0 <xQueueGenericReset+0x80>)
 8009bc6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009bca:	601a      	str	r2, [r3, #0]
 8009bcc:	f3bf 8f4f 	dsb	sy
 8009bd0:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8009bd4:	f7ff fe2c 	bl	8009830 <vPortExitCritical>
}
 8009bd8:	2001      	movs	r0, #1
 8009bda:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009bdc:	f104 0010 	add.w	r0, r4, #16
 8009be0:	f7ff fd56 	bl	8009690 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8009be4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009be8:	f7ff fd52 	bl	8009690 <vListInitialise>
 8009bec:	e7f2      	b.n	8009bd4 <xQueueGenericReset+0x64>
 8009bee:	bf00      	nop
 8009bf0:	e000ed04 	.word	0xe000ed04

08009bf4 <xQueueGenericCreateStatic>:
	{
 8009bf4:	b513      	push	{r0, r1, r4, lr}
 8009bf6:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009bf8:	b950      	cbnz	r0, 8009c10 <xQueueGenericCreateStatic+0x1c>
 8009bfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bfe:	b672      	cpsid	i
 8009c00:	f383 8811 	msr	BASEPRI, r3
 8009c04:	f3bf 8f6f 	isb	sy
 8009c08:	f3bf 8f4f 	dsb	sy
 8009c0c:	b662      	cpsie	i
 8009c0e:	e7fe      	b.n	8009c0e <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 8009c10:	b953      	cbnz	r3, 8009c28 <xQueueGenericCreateStatic+0x34>
 8009c12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c16:	b672      	cpsid	i
 8009c18:	f383 8811 	msr	BASEPRI, r3
 8009c1c:	f3bf 8f6f 	isb	sy
 8009c20:	f3bf 8f4f 	dsb	sy
 8009c24:	b662      	cpsie	i
 8009c26:	e7fe      	b.n	8009c26 <xQueueGenericCreateStatic+0x32>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8009c28:	b15a      	cbz	r2, 8009c42 <xQueueGenericCreateStatic+0x4e>
 8009c2a:	b9b1      	cbnz	r1, 8009c5a <xQueueGenericCreateStatic+0x66>
 8009c2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c30:	b672      	cpsid	i
 8009c32:	f383 8811 	msr	BASEPRI, r3
 8009c36:	f3bf 8f6f 	isb	sy
 8009c3a:	f3bf 8f4f 	dsb	sy
 8009c3e:	b662      	cpsie	i
 8009c40:	e7fe      	b.n	8009c40 <xQueueGenericCreateStatic+0x4c>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8009c42:	b151      	cbz	r1, 8009c5a <xQueueGenericCreateStatic+0x66>
 8009c44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c48:	b672      	cpsid	i
 8009c4a:	f383 8811 	msr	BASEPRI, r3
 8009c4e:	f3bf 8f6f 	isb	sy
 8009c52:	f3bf 8f4f 	dsb	sy
 8009c56:	b662      	cpsie	i
 8009c58:	e7fe      	b.n	8009c58 <xQueueGenericCreateStatic+0x64>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8009c5a:	2350      	movs	r3, #80	; 0x50
 8009c5c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8009c5e:	9b01      	ldr	r3, [sp, #4]
 8009c60:	2b50      	cmp	r3, #80	; 0x50
 8009c62:	d00a      	beq.n	8009c7a <xQueueGenericCreateStatic+0x86>
 8009c64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c68:	b672      	cpsid	i
 8009c6a:	f383 8811 	msr	BASEPRI, r3
 8009c6e:	f3bf 8f6f 	isb	sy
 8009c72:	f3bf 8f4f 	dsb	sy
 8009c76:	b662      	cpsie	i
 8009c78:	e7fe      	b.n	8009c78 <xQueueGenericCreateStatic+0x84>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8009c7a:	2900      	cmp	r1, #0
 8009c7c:	bf08      	it	eq
 8009c7e:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8009c80:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009c82:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8009c84:	6022      	str	r2, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009c86:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
 8009c8a:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009c8e:	4619      	mov	r1, r3
 8009c90:	4620      	mov	r0, r4
 8009c92:	f7ff ff6d 	bl	8009b70 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009c96:	f89d 3010 	ldrb.w	r3, [sp, #16]
	}
 8009c9a:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8009c9c:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8009ca0:	b002      	add	sp, #8
 8009ca2:	bd10      	pop	{r4, pc}

08009ca4 <xQueueGenericCreate>:
	{
 8009ca4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009ca6:	460d      	mov	r5, r1
 8009ca8:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009caa:	4606      	mov	r6, r0
 8009cac:	b950      	cbnz	r0, 8009cc4 <xQueueGenericCreate+0x20>
 8009cae:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cb2:	b672      	cpsid	i
 8009cb4:	f383 8811 	msr	BASEPRI, r3
 8009cb8:	f3bf 8f6f 	isb	sy
 8009cbc:	f3bf 8f4f 	dsb	sy
 8009cc0:	b662      	cpsie	i
 8009cc2:	e7fe      	b.n	8009cc2 <xQueueGenericCreate+0x1e>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009cc4:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009cc6:	3050      	adds	r0, #80	; 0x50
 8009cc8:	f7ff fc16 	bl	80094f8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009ccc:	4604      	mov	r4, r0
 8009cce:	b160      	cbz	r0, 8009cea <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8009cd0:	2300      	movs	r3, #0
 8009cd2:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009cd6:	b955      	cbnz	r5, 8009cee <xQueueGenericCreate+0x4a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8009cd8:	6020      	str	r0, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009cda:	2101      	movs	r1, #1
 8009cdc:	4620      	mov	r0, r4
	pxNewQueue->uxItemSize = uxItemSize;
 8009cde:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009ce2:	f7ff ff45 	bl	8009b70 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009ce6:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009cea:	4620      	mov	r0, r4
 8009cec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009cee:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 8009cf2:	6003      	str	r3, [r0, #0]
 8009cf4:	e7f1      	b.n	8009cda <xQueueGenericCreate+0x36>

08009cf6 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009cf6:	b513      	push	{r0, r1, r4, lr}
 8009cf8:	4613      	mov	r3, r2
 8009cfa:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009cfc:	b950      	cbnz	r0, 8009d14 <xQueueCreateCountingSemaphoreStatic+0x1e>
 8009cfe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d02:	b672      	cpsid	i
 8009d04:	f383 8811 	msr	BASEPRI, r3
 8009d08:	f3bf 8f6f 	isb	sy
 8009d0c:	f3bf 8f4f 	dsb	sy
 8009d10:	b662      	cpsie	i
 8009d12:	e7fe      	b.n	8009d12 <xQueueCreateCountingSemaphoreStatic+0x1c>
		configASSERT( uxInitialCount <= uxMaxCount );
 8009d14:	4288      	cmp	r0, r1
 8009d16:	d20a      	bcs.n	8009d2e <xQueueCreateCountingSemaphoreStatic+0x38>
 8009d18:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d1c:	b672      	cpsid	i
 8009d1e:	f383 8811 	msr	BASEPRI, r3
 8009d22:	f3bf 8f6f 	isb	sy
 8009d26:	f3bf 8f4f 	dsb	sy
 8009d2a:	b662      	cpsie	i
 8009d2c:	e7fe      	b.n	8009d2c <xQueueCreateCountingSemaphoreStatic+0x36>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009d2e:	2202      	movs	r2, #2
 8009d30:	9200      	str	r2, [sp, #0]
 8009d32:	2200      	movs	r2, #0
 8009d34:	4611      	mov	r1, r2
 8009d36:	f7ff ff5d 	bl	8009bf4 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8009d3a:	b100      	cbz	r0, 8009d3e <xQueueCreateCountingSemaphoreStatic+0x48>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8009d3c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8009d3e:	b002      	add	sp, #8
 8009d40:	bd10      	pop	{r4, pc}

08009d42 <xQueueCreateCountingSemaphore>:
	{
 8009d42:	b510      	push	{r4, lr}
 8009d44:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009d46:	b950      	cbnz	r0, 8009d5e <xQueueCreateCountingSemaphore+0x1c>
 8009d48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d4c:	b672      	cpsid	i
 8009d4e:	f383 8811 	msr	BASEPRI, r3
 8009d52:	f3bf 8f6f 	isb	sy
 8009d56:	f3bf 8f4f 	dsb	sy
 8009d5a:	b662      	cpsie	i
 8009d5c:	e7fe      	b.n	8009d5c <xQueueCreateCountingSemaphore+0x1a>
		configASSERT( uxInitialCount <= uxMaxCount );
 8009d5e:	4288      	cmp	r0, r1
 8009d60:	d20a      	bcs.n	8009d78 <xQueueCreateCountingSemaphore+0x36>
 8009d62:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d66:	b672      	cpsid	i
 8009d68:	f383 8811 	msr	BASEPRI, r3
 8009d6c:	f3bf 8f6f 	isb	sy
 8009d70:	f3bf 8f4f 	dsb	sy
 8009d74:	b662      	cpsie	i
 8009d76:	e7fe      	b.n	8009d76 <xQueueCreateCountingSemaphore+0x34>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009d78:	2202      	movs	r2, #2
 8009d7a:	2100      	movs	r1, #0
 8009d7c:	f7ff ff92 	bl	8009ca4 <xQueueGenericCreate>
		if( xHandle != NULL )
 8009d80:	b100      	cbz	r0, 8009d84 <xQueueCreateCountingSemaphore+0x42>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8009d82:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8009d84:	bd10      	pop	{r4, pc}
	...

08009d88 <xQueueGenericSend>:
{
 8009d88:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009d8c:	4688      	mov	r8, r1
 8009d8e:	9201      	str	r2, [sp, #4]
 8009d90:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009d92:	4604      	mov	r4, r0
 8009d94:	b950      	cbnz	r0, 8009dac <xQueueGenericSend+0x24>
 8009d96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d9a:	b672      	cpsid	i
 8009d9c:	f383 8811 	msr	BASEPRI, r3
 8009da0:	f3bf 8f6f 	isb	sy
 8009da4:	f3bf 8f4f 	dsb	sy
 8009da8:	b662      	cpsie	i
 8009daa:	e7fe      	b.n	8009daa <xQueueGenericSend+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009dac:	b961      	cbnz	r1, 8009dc8 <xQueueGenericSend+0x40>
 8009dae:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009db0:	b153      	cbz	r3, 8009dc8 <xQueueGenericSend+0x40>
 8009db2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009db6:	b672      	cpsid	i
 8009db8:	f383 8811 	msr	BASEPRI, r3
 8009dbc:	f3bf 8f6f 	isb	sy
 8009dc0:	f3bf 8f4f 	dsb	sy
 8009dc4:	b662      	cpsie	i
 8009dc6:	e7fe      	b.n	8009dc6 <xQueueGenericSend+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8009dc8:	2f02      	cmp	r7, #2
 8009dca:	d10d      	bne.n	8009de8 <xQueueGenericSend+0x60>
 8009dcc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009dce:	2b01      	cmp	r3, #1
 8009dd0:	d00a      	beq.n	8009de8 <xQueueGenericSend+0x60>
 8009dd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dd6:	b672      	cpsid	i
 8009dd8:	f383 8811 	msr	BASEPRI, r3
 8009ddc:	f3bf 8f6f 	isb	sy
 8009de0:	f3bf 8f4f 	dsb	sy
 8009de4:	b662      	cpsie	i
 8009de6:	e7fe      	b.n	8009de6 <xQueueGenericSend+0x5e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009de8:	f001 f80c 	bl	800ae04 <xTaskGetSchedulerState>
 8009dec:	b960      	cbnz	r0, 8009e08 <xQueueGenericSend+0x80>
 8009dee:	9e01      	ldr	r6, [sp, #4]
 8009df0:	b15e      	cbz	r6, 8009e0a <xQueueGenericSend+0x82>
 8009df2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009df6:	b672      	cpsid	i
 8009df8:	f383 8811 	msr	BASEPRI, r3
 8009dfc:	f3bf 8f6f 	isb	sy
 8009e00:	f3bf 8f4f 	dsb	sy
 8009e04:	b662      	cpsie	i
 8009e06:	e7fe      	b.n	8009e06 <xQueueGenericSend+0x7e>
 8009e08:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009e0a:	f04f 0900 	mov.w	r9, #0
					portYIELD_WITHIN_API();
 8009e0e:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8009ef8 <xQueueGenericSend+0x170>
 8009e12:	e037      	b.n	8009e84 <xQueueGenericSend+0xfc>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009e14:	9d01      	ldr	r5, [sp, #4]
 8009e16:	b91d      	cbnz	r5, 8009e20 <xQueueGenericSend+0x98>
					taskEXIT_CRITICAL();
 8009e18:	f7ff fd0a 	bl	8009830 <vPortExitCritical>
			return errQUEUE_FULL;
 8009e1c:	2000      	movs	r0, #0
 8009e1e:	e050      	b.n	8009ec2 <xQueueGenericSend+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 8009e20:	b916      	cbnz	r6, 8009e28 <xQueueGenericSend+0xa0>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009e22:	a802      	add	r0, sp, #8
 8009e24:	f000 ff9c 	bl	800ad60 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009e28:	f7ff fd02 	bl	8009830 <vPortExitCritical>
		vTaskSuspendAll();
 8009e2c:	f000 fd2a 	bl	800a884 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009e30:	f7ff fcd8 	bl	80097e4 <vPortEnterCritical>
 8009e34:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009e38:	2bff      	cmp	r3, #255	; 0xff
 8009e3a:	d101      	bne.n	8009e40 <xQueueGenericSend+0xb8>
 8009e3c:	f884 9044 	strb.w	r9, [r4, #68]	; 0x44
 8009e40:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009e44:	2bff      	cmp	r3, #255	; 0xff
 8009e46:	d101      	bne.n	8009e4c <xQueueGenericSend+0xc4>
 8009e48:	f884 9045 	strb.w	r9, [r4, #69]	; 0x45
 8009e4c:	f7ff fcf0 	bl	8009830 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009e50:	a901      	add	r1, sp, #4
 8009e52:	a802      	add	r0, sp, #8
 8009e54:	f000 ff90 	bl	800ad78 <xTaskCheckForTimeOut>
 8009e58:	2800      	cmp	r0, #0
 8009e5a:	d146      	bne.n	8009eea <xQueueGenericSend+0x162>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009e5c:	f7ff fcc2 	bl	80097e4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8009e60:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009e62:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009e64:	429a      	cmp	r2, r3
 8009e66:	d12f      	bne.n	8009ec8 <xQueueGenericSend+0x140>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8009e68:	f7ff fce2 	bl	8009830 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8009e6c:	9901      	ldr	r1, [sp, #4]
 8009e6e:	f104 0010 	add.w	r0, r4, #16
 8009e72:	f000 fef5 	bl	800ac60 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009e76:	4620      	mov	r0, r4
 8009e78:	f7ff fe41 	bl	8009afe <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009e7c:	f000 fda2 	bl	800a9c4 <xTaskResumeAll>
 8009e80:	b350      	cbz	r0, 8009ed8 <xQueueGenericSend+0x150>
 8009e82:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009e84:	f7ff fcae 	bl	80097e4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009e88:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009e8a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009e8c:	429a      	cmp	r2, r3
 8009e8e:	d301      	bcc.n	8009e94 <xQueueGenericSend+0x10c>
 8009e90:	2f02      	cmp	r7, #2
 8009e92:	d1bf      	bne.n	8009e14 <xQueueGenericSend+0x8c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009e94:	463a      	mov	r2, r7
 8009e96:	4641      	mov	r1, r8
 8009e98:	4620      	mov	r0, r4
 8009e9a:	f7ff fde8 	bl	8009a6e <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009e9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009ea0:	b11b      	cbz	r3, 8009eaa <xQueueGenericSend+0x122>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009ea2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009ea6:	f000 ff17 	bl	800acd8 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009eaa:	b138      	cbz	r0, 8009ebc <xQueueGenericSend+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 8009eac:	4b12      	ldr	r3, [pc, #72]	; (8009ef8 <xQueueGenericSend+0x170>)
 8009eae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009eb2:	601a      	str	r2, [r3, #0]
 8009eb4:	f3bf 8f4f 	dsb	sy
 8009eb8:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009ebc:	f7ff fcb8 	bl	8009830 <vPortExitCritical>
				return pdPASS;
 8009ec0:	2001      	movs	r0, #1
}
 8009ec2:	b004      	add	sp, #16
 8009ec4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8009ec8:	f7ff fcb2 	bl	8009830 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009ecc:	4620      	mov	r0, r4
 8009ece:	f7ff fe16 	bl	8009afe <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009ed2:	f000 fd77 	bl	800a9c4 <xTaskResumeAll>
 8009ed6:	e7d4      	b.n	8009e82 <xQueueGenericSend+0xfa>
					portYIELD_WITHIN_API();
 8009ed8:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8009edc:	f8ca 3000 	str.w	r3, [sl]
 8009ee0:	f3bf 8f4f 	dsb	sy
 8009ee4:	f3bf 8f6f 	isb	sy
 8009ee8:	e7cb      	b.n	8009e82 <xQueueGenericSend+0xfa>
			prvUnlockQueue( pxQueue );
 8009eea:	4620      	mov	r0, r4
 8009eec:	f7ff fe07 	bl	8009afe <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009ef0:	f000 fd68 	bl	800a9c4 <xTaskResumeAll>
 8009ef4:	e792      	b.n	8009e1c <xQueueGenericSend+0x94>
 8009ef6:	bf00      	nop
 8009ef8:	e000ed04 	.word	0xe000ed04

08009efc <xQueueGenericSendFromISR>:
{
 8009efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009f00:	4689      	mov	r9, r1
 8009f02:	4690      	mov	r8, r2
 8009f04:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009f06:	4604      	mov	r4, r0
 8009f08:	b950      	cbnz	r0, 8009f20 <xQueueGenericSendFromISR+0x24>
 8009f0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f0e:	b672      	cpsid	i
 8009f10:	f383 8811 	msr	BASEPRI, r3
 8009f14:	f3bf 8f6f 	isb	sy
 8009f18:	f3bf 8f4f 	dsb	sy
 8009f1c:	b662      	cpsie	i
 8009f1e:	e7fe      	b.n	8009f1e <xQueueGenericSendFromISR+0x22>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009f20:	b961      	cbnz	r1, 8009f3c <xQueueGenericSendFromISR+0x40>
 8009f22:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009f24:	b153      	cbz	r3, 8009f3c <xQueueGenericSendFromISR+0x40>
 8009f26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f2a:	b672      	cpsid	i
 8009f2c:	f383 8811 	msr	BASEPRI, r3
 8009f30:	f3bf 8f6f 	isb	sy
 8009f34:	f3bf 8f4f 	dsb	sy
 8009f38:	b662      	cpsie	i
 8009f3a:	e7fe      	b.n	8009f3a <xQueueGenericSendFromISR+0x3e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8009f3c:	2f02      	cmp	r7, #2
 8009f3e:	d10d      	bne.n	8009f5c <xQueueGenericSendFromISR+0x60>
 8009f40:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009f42:	2b01      	cmp	r3, #1
 8009f44:	d00a      	beq.n	8009f5c <xQueueGenericSendFromISR+0x60>
 8009f46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f4a:	b672      	cpsid	i
 8009f4c:	f383 8811 	msr	BASEPRI, r3
 8009f50:	f3bf 8f6f 	isb	sy
 8009f54:	f3bf 8f4f 	dsb	sy
 8009f58:	b662      	cpsie	i
 8009f5a:	e7fe      	b.n	8009f5a <xQueueGenericSendFromISR+0x5e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009f5c:	f7ff fd4a 	bl	80099f4 <vPortValidateInterruptPriority>
	__asm volatile
 8009f60:	f3ef 8611 	mrs	r6, BASEPRI
 8009f64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f68:	b672      	cpsid	i
 8009f6a:	f383 8811 	msr	BASEPRI, r3
 8009f6e:	f3bf 8f6f 	isb	sy
 8009f72:	f3bf 8f4f 	dsb	sy
 8009f76:	b662      	cpsie	i
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009f78:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009f7a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009f7c:	429a      	cmp	r2, r3
 8009f7e:	d301      	bcc.n	8009f84 <xQueueGenericSendFromISR+0x88>
 8009f80:	2f02      	cmp	r7, #2
 8009f82:	d122      	bne.n	8009fca <xQueueGenericSendFromISR+0xce>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009f84:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009f88:	463a      	mov	r2, r7
 8009f8a:	4649      	mov	r1, r9
 8009f8c:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 8009f8e:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009f90:	f7ff fd6d 	bl	8009a6e <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8009f94:	1c6b      	adds	r3, r5, #1
 8009f96:	d113      	bne.n	8009fc0 <xQueueGenericSendFromISR+0xc4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009f98:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009f9a:	b90b      	cbnz	r3, 8009fa0 <xQueueGenericSendFromISR+0xa4>
			xReturn = pdPASS;
 8009f9c:	2001      	movs	r0, #1
 8009f9e:	e00b      	b.n	8009fb8 <xQueueGenericSendFromISR+0xbc>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009fa0:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009fa4:	f000 fe98 	bl	800acd8 <xTaskRemoveFromEventList>
 8009fa8:	2800      	cmp	r0, #0
 8009faa:	d0f7      	beq.n	8009f9c <xQueueGenericSendFromISR+0xa0>
							if( pxHigherPriorityTaskWoken != NULL )
 8009fac:	f1b8 0f00 	cmp.w	r8, #0
 8009fb0:	d0f4      	beq.n	8009f9c <xQueueGenericSendFromISR+0xa0>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009fb2:	2001      	movs	r0, #1
 8009fb4:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009fb8:	f386 8811 	msr	BASEPRI, r6
}
 8009fbc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009fc0:	3501      	adds	r5, #1
 8009fc2:	b26d      	sxtb	r5, r5
 8009fc4:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009fc8:	e7e8      	b.n	8009f9c <xQueueGenericSendFromISR+0xa0>
			xReturn = errQUEUE_FULL;
 8009fca:	2000      	movs	r0, #0
 8009fcc:	e7f4      	b.n	8009fb8 <xQueueGenericSendFromISR+0xbc>

08009fce <xQueueGiveFromISR>:
{
 8009fce:	b570      	push	{r4, r5, r6, lr}
 8009fd0:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8009fd2:	4604      	mov	r4, r0
 8009fd4:	b950      	cbnz	r0, 8009fec <xQueueGiveFromISR+0x1e>
	__asm volatile
 8009fd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fda:	b672      	cpsid	i
 8009fdc:	f383 8811 	msr	BASEPRI, r3
 8009fe0:	f3bf 8f6f 	isb	sy
 8009fe4:	f3bf 8f4f 	dsb	sy
 8009fe8:	b662      	cpsie	i
 8009fea:	e7fe      	b.n	8009fea <xQueueGiveFromISR+0x1c>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009fec:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009fee:	b153      	cbz	r3, 800a006 <xQueueGiveFromISR+0x38>
 8009ff0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ff4:	b672      	cpsid	i
 8009ff6:	f383 8811 	msr	BASEPRI, r3
 8009ffa:	f3bf 8f6f 	isb	sy
 8009ffe:	f3bf 8f4f 	dsb	sy
 800a002:	b662      	cpsie	i
 800a004:	e7fe      	b.n	800a004 <xQueueGiveFromISR+0x36>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800a006:	6803      	ldr	r3, [r0, #0]
 800a008:	b963      	cbnz	r3, 800a024 <xQueueGiveFromISR+0x56>
 800a00a:	6883      	ldr	r3, [r0, #8]
 800a00c:	b153      	cbz	r3, 800a024 <xQueueGiveFromISR+0x56>
 800a00e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a012:	b672      	cpsid	i
 800a014:	f383 8811 	msr	BASEPRI, r3
 800a018:	f3bf 8f6f 	isb	sy
 800a01c:	f3bf 8f4f 	dsb	sy
 800a020:	b662      	cpsie	i
 800a022:	e7fe      	b.n	800a022 <xQueueGiveFromISR+0x54>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a024:	f7ff fce6 	bl	80099f4 <vPortValidateInterruptPriority>
	__asm volatile
 800a028:	f3ef 8611 	mrs	r6, BASEPRI
 800a02c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a030:	b672      	cpsid	i
 800a032:	f383 8811 	msr	BASEPRI, r3
 800a036:	f3bf 8f6f 	isb	sy
 800a03a:	f3bf 8f4f 	dsb	sy
 800a03e:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a040:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800a042:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a044:	4293      	cmp	r3, r2
 800a046:	d91c      	bls.n	800a082 <xQueueGiveFromISR+0xb4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800a048:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a04c:	3201      	adds	r2, #1
			const int8_t cTxLock = pxQueue->cTxLock;
 800a04e:	b25b      	sxtb	r3, r3
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a050:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800a052:	1c5a      	adds	r2, r3, #1
 800a054:	d110      	bne.n	800a078 <xQueueGiveFromISR+0xaa>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a056:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a058:	b90b      	cbnz	r3, 800a05e <xQueueGiveFromISR+0x90>
			xReturn = pdPASS;
 800a05a:	2001      	movs	r0, #1
 800a05c:	e009      	b.n	800a072 <xQueueGiveFromISR+0xa4>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a05e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a062:	f000 fe39 	bl	800acd8 <xTaskRemoveFromEventList>
 800a066:	2800      	cmp	r0, #0
 800a068:	d0f7      	beq.n	800a05a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 800a06a:	2d00      	cmp	r5, #0
 800a06c:	d0f5      	beq.n	800a05a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800a06e:	2001      	movs	r0, #1
 800a070:	6028      	str	r0, [r5, #0]
	__asm volatile
 800a072:	f386 8811 	msr	BASEPRI, r6
}
 800a076:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800a078:	3301      	adds	r3, #1
 800a07a:	b25b      	sxtb	r3, r3
 800a07c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800a080:	e7eb      	b.n	800a05a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 800a082:	2000      	movs	r0, #0
 800a084:	e7f5      	b.n	800a072 <xQueueGiveFromISR+0xa4>
	...

0800a088 <xQueueReceive>:
{
 800a088:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a08c:	b085      	sub	sp, #20
 800a08e:	460f      	mov	r7, r1
	configASSERT( ( pxQueue ) );
 800a090:	4604      	mov	r4, r0
{
 800a092:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800a094:	b950      	cbnz	r0, 800a0ac <xQueueReceive+0x24>
	__asm volatile
 800a096:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a09a:	b672      	cpsid	i
 800a09c:	f383 8811 	msr	BASEPRI, r3
 800a0a0:	f3bf 8f6f 	isb	sy
 800a0a4:	f3bf 8f4f 	dsb	sy
 800a0a8:	b662      	cpsie	i
 800a0aa:	e7fe      	b.n	800a0aa <xQueueReceive+0x22>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a0ac:	b961      	cbnz	r1, 800a0c8 <xQueueReceive+0x40>
 800a0ae:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a0b0:	b153      	cbz	r3, 800a0c8 <xQueueReceive+0x40>
 800a0b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0b6:	b672      	cpsid	i
 800a0b8:	f383 8811 	msr	BASEPRI, r3
 800a0bc:	f3bf 8f6f 	isb	sy
 800a0c0:	f3bf 8f4f 	dsb	sy
 800a0c4:	b662      	cpsie	i
 800a0c6:	e7fe      	b.n	800a0c6 <xQueueReceive+0x3e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a0c8:	f000 fe9c 	bl	800ae04 <xTaskGetSchedulerState>
 800a0cc:	b960      	cbnz	r0, 800a0e8 <xQueueReceive+0x60>
 800a0ce:	9e01      	ldr	r6, [sp, #4]
 800a0d0:	b15e      	cbz	r6, 800a0ea <xQueueReceive+0x62>
 800a0d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0d6:	b672      	cpsid	i
 800a0d8:	f383 8811 	msr	BASEPRI, r3
 800a0dc:	f3bf 8f6f 	isb	sy
 800a0e0:	f3bf 8f4f 	dsb	sy
 800a0e4:	b662      	cpsie	i
 800a0e6:	e7fe      	b.n	800a0e6 <xQueueReceive+0x5e>
 800a0e8:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800a0ea:	f04f 0800 	mov.w	r8, #0
					portYIELD_WITHIN_API();
 800a0ee:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 800a1d0 <xQueueReceive+0x148>
 800a0f2:	e03b      	b.n	800a16c <xQueueReceive+0xe4>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a0f4:	9d01      	ldr	r5, [sp, #4]
 800a0f6:	b91d      	cbnz	r5, 800a100 <xQueueReceive+0x78>
					taskEXIT_CRITICAL();
 800a0f8:	f7ff fb9a 	bl	8009830 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800a0fc:	2000      	movs	r0, #0
 800a0fe:	e052      	b.n	800a1a6 <xQueueReceive+0x11e>
				else if( xEntryTimeSet == pdFALSE )
 800a100:	b916      	cbnz	r6, 800a108 <xQueueReceive+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a102:	a802      	add	r0, sp, #8
 800a104:	f000 fe2c 	bl	800ad60 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a108:	f7ff fb92 	bl	8009830 <vPortExitCritical>
		vTaskSuspendAll();
 800a10c:	f000 fbba 	bl	800a884 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a110:	f7ff fb68 	bl	80097e4 <vPortEnterCritical>
 800a114:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a118:	2bff      	cmp	r3, #255	; 0xff
 800a11a:	d101      	bne.n	800a120 <xQueueReceive+0x98>
 800a11c:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
 800a120:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a124:	2bff      	cmp	r3, #255	; 0xff
 800a126:	d101      	bne.n	800a12c <xQueueReceive+0xa4>
 800a128:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
 800a12c:	f7ff fb80 	bl	8009830 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a130:	a901      	add	r1, sp, #4
 800a132:	a802      	add	r0, sp, #8
 800a134:	f000 fe20 	bl	800ad78 <xTaskCheckForTimeOut>
 800a138:	2800      	cmp	r0, #0
 800a13a:	d13d      	bne.n	800a1b8 <xQueueReceive+0x130>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a13c:	4620      	mov	r0, r4
 800a13e:	f7ff fc8b 	bl	8009a58 <prvIsQueueEmpty>
 800a142:	b398      	cbz	r0, 800a1ac <xQueueReceive+0x124>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800a144:	9901      	ldr	r1, [sp, #4]
 800a146:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a14a:	f000 fd89 	bl	800ac60 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a14e:	4620      	mov	r0, r4
 800a150:	f7ff fcd5 	bl	8009afe <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a154:	f000 fc36 	bl	800a9c4 <xTaskResumeAll>
 800a158:	b938      	cbnz	r0, 800a16a <xQueueReceive+0xe2>
					portYIELD_WITHIN_API();
 800a15a:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800a15e:	f8c9 3000 	str.w	r3, [r9]
 800a162:	f3bf 8f4f 	dsb	sy
 800a166:	f3bf 8f6f 	isb	sy
 800a16a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800a16c:	f7ff fb3a 	bl	80097e4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a170:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a172:	2d00      	cmp	r5, #0
 800a174:	d0be      	beq.n	800a0f4 <xQueueReceive+0x6c>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a176:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a178:	4639      	mov	r1, r7
 800a17a:	4620      	mov	r0, r4
 800a17c:	f7ff fcaa 	bl	8009ad4 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a180:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a182:	6923      	ldr	r3, [r4, #16]
 800a184:	b163      	cbz	r3, 800a1a0 <xQueueReceive+0x118>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a186:	f104 0010 	add.w	r0, r4, #16
 800a18a:	f000 fda5 	bl	800acd8 <xTaskRemoveFromEventList>
 800a18e:	b138      	cbz	r0, 800a1a0 <xQueueReceive+0x118>
						queueYIELD_IF_USING_PREEMPTION();
 800a190:	4b0f      	ldr	r3, [pc, #60]	; (800a1d0 <xQueueReceive+0x148>)
 800a192:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a196:	601a      	str	r2, [r3, #0]
 800a198:	f3bf 8f4f 	dsb	sy
 800a19c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800a1a0:	f7ff fb46 	bl	8009830 <vPortExitCritical>
				return pdPASS;
 800a1a4:	2001      	movs	r0, #1
}
 800a1a6:	b005      	add	sp, #20
 800a1a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 800a1ac:	4620      	mov	r0, r4
 800a1ae:	f7ff fca6 	bl	8009afe <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800a1b2:	f000 fc07 	bl	800a9c4 <xTaskResumeAll>
 800a1b6:	e7d8      	b.n	800a16a <xQueueReceive+0xe2>
			prvUnlockQueue( pxQueue );
 800a1b8:	4620      	mov	r0, r4
 800a1ba:	f7ff fca0 	bl	8009afe <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800a1be:	f000 fc01 	bl	800a9c4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a1c2:	4620      	mov	r0, r4
 800a1c4:	f7ff fc48 	bl	8009a58 <prvIsQueueEmpty>
 800a1c8:	2800      	cmp	r0, #0
 800a1ca:	d0ce      	beq.n	800a16a <xQueueReceive+0xe2>
 800a1cc:	e796      	b.n	800a0fc <xQueueReceive+0x74>
 800a1ce:	bf00      	nop
 800a1d0:	e000ed04 	.word	0xe000ed04

0800a1d4 <xQueueSemaphoreTake>:
{
 800a1d4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 800a1d8:	4604      	mov	r4, r0
{
 800a1da:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800a1dc:	b950      	cbnz	r0, 800a1f4 <xQueueSemaphoreTake+0x20>
 800a1de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1e2:	b672      	cpsid	i
 800a1e4:	f383 8811 	msr	BASEPRI, r3
 800a1e8:	f3bf 8f6f 	isb	sy
 800a1ec:	f3bf 8f4f 	dsb	sy
 800a1f0:	b662      	cpsie	i
 800a1f2:	e7fe      	b.n	800a1f2 <xQueueSemaphoreTake+0x1e>
	configASSERT( pxQueue->uxItemSize == 0 );
 800a1f4:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800a1f6:	b155      	cbz	r5, 800a20e <xQueueSemaphoreTake+0x3a>
 800a1f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1fc:	b672      	cpsid	i
 800a1fe:	f383 8811 	msr	BASEPRI, r3
 800a202:	f3bf 8f6f 	isb	sy
 800a206:	f3bf 8f4f 	dsb	sy
 800a20a:	b662      	cpsie	i
 800a20c:	e7fe      	b.n	800a20c <xQueueSemaphoreTake+0x38>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a20e:	f000 fdf9 	bl	800ae04 <xTaskGetSchedulerState>
 800a212:	b960      	cbnz	r0, 800a22e <xQueueSemaphoreTake+0x5a>
 800a214:	9d01      	ldr	r5, [sp, #4]
 800a216:	b155      	cbz	r5, 800a22e <xQueueSemaphoreTake+0x5a>
 800a218:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a21c:	b672      	cpsid	i
 800a21e:	f383 8811 	msr	BASEPRI, r3
 800a222:	f3bf 8f6f 	isb	sy
 800a226:	f3bf 8f4f 	dsb	sy
 800a22a:	b662      	cpsie	i
 800a22c:	e7fe      	b.n	800a22c <xQueueSemaphoreTake+0x58>
 800a22e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800a230:	2700      	movs	r7, #0
					portYIELD_WITHIN_API();
 800a232:	f8df 8130 	ldr.w	r8, [pc, #304]	; 800a364 <xQueueSemaphoreTake+0x190>
 800a236:	e051      	b.n	800a2dc <xQueueSemaphoreTake+0x108>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a238:	9b01      	ldr	r3, [sp, #4]
 800a23a:	b973      	cbnz	r3, 800a25a <xQueueSemaphoreTake+0x86>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800a23c:	b155      	cbz	r5, 800a254 <xQueueSemaphoreTake+0x80>
 800a23e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a242:	b672      	cpsid	i
 800a244:	f383 8811 	msr	BASEPRI, r3
 800a248:	f3bf 8f6f 	isb	sy
 800a24c:	f3bf 8f4f 	dsb	sy
 800a250:	b662      	cpsie	i
 800a252:	e7fe      	b.n	800a252 <xQueueSemaphoreTake+0x7e>
					taskEXIT_CRITICAL();
 800a254:	f7ff faec 	bl	8009830 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800a258:	e05e      	b.n	800a318 <xQueueSemaphoreTake+0x144>
				else if( xEntryTimeSet == pdFALSE )
 800a25a:	b916      	cbnz	r6, 800a262 <xQueueSemaphoreTake+0x8e>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a25c:	a802      	add	r0, sp, #8
 800a25e:	f000 fd7f 	bl	800ad60 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a262:	f7ff fae5 	bl	8009830 <vPortExitCritical>
		vTaskSuspendAll();
 800a266:	f000 fb0d 	bl	800a884 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a26a:	f7ff fabb 	bl	80097e4 <vPortEnterCritical>
 800a26e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a272:	2bff      	cmp	r3, #255	; 0xff
 800a274:	d101      	bne.n	800a27a <xQueueSemaphoreTake+0xa6>
 800a276:	f884 7044 	strb.w	r7, [r4, #68]	; 0x44
 800a27a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a27e:	2bff      	cmp	r3, #255	; 0xff
 800a280:	d101      	bne.n	800a286 <xQueueSemaphoreTake+0xb2>
 800a282:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800a286:	f7ff fad3 	bl	8009830 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a28a:	a901      	add	r1, sp, #4
 800a28c:	a802      	add	r0, sp, #8
 800a28e:	f000 fd73 	bl	800ad78 <xTaskCheckForTimeOut>
 800a292:	2800      	cmp	r0, #0
 800a294:	d14a      	bne.n	800a32c <xQueueSemaphoreTake+0x158>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a296:	4620      	mov	r0, r4
 800a298:	f7ff fbde 	bl	8009a58 <prvIsQueueEmpty>
 800a29c:	2800      	cmp	r0, #0
 800a29e:	d03f      	beq.n	800a320 <xQueueSemaphoreTake+0x14c>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a2a0:	6823      	ldr	r3, [r4, #0]
 800a2a2:	b93b      	cbnz	r3, 800a2b4 <xQueueSemaphoreTake+0xe0>
						taskENTER_CRITICAL();
 800a2a4:	f7ff fa9e 	bl	80097e4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a2a8:	68a0      	ldr	r0, [r4, #8]
 800a2aa:	f000 fdbb 	bl	800ae24 <xTaskPriorityInherit>
 800a2ae:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800a2b0:	f7ff fabe 	bl	8009830 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800a2b4:	9901      	ldr	r1, [sp, #4]
 800a2b6:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a2ba:	f000 fcd1 	bl	800ac60 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a2be:	4620      	mov	r0, r4
 800a2c0:	f7ff fc1d 	bl	8009afe <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a2c4:	f000 fb7e 	bl	800a9c4 <xTaskResumeAll>
 800a2c8:	b938      	cbnz	r0, 800a2da <xQueueSemaphoreTake+0x106>
					portYIELD_WITHIN_API();
 800a2ca:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800a2ce:	f8c8 3000 	str.w	r3, [r8]
 800a2d2:	f3bf 8f4f 	dsb	sy
 800a2d6:	f3bf 8f6f 	isb	sy
 800a2da:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800a2dc:	f7ff fa82 	bl	80097e4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800a2e0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800a2e2:	2b00      	cmp	r3, #0
 800a2e4:	d0a8      	beq.n	800a238 <xQueueSemaphoreTake+0x64>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800a2e6:	3b01      	subs	r3, #1
 800a2e8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a2ea:	6823      	ldr	r3, [r4, #0]
 800a2ec:	b913      	cbnz	r3, 800a2f4 <xQueueSemaphoreTake+0x120>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800a2ee:	f000 fe71 	bl	800afd4 <pvTaskIncrementMutexHeldCount>
 800a2f2:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a2f4:	6923      	ldr	r3, [r4, #16]
 800a2f6:	b163      	cbz	r3, 800a312 <xQueueSemaphoreTake+0x13e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a2f8:	f104 0010 	add.w	r0, r4, #16
 800a2fc:	f000 fcec 	bl	800acd8 <xTaskRemoveFromEventList>
 800a300:	b138      	cbz	r0, 800a312 <xQueueSemaphoreTake+0x13e>
						queueYIELD_IF_USING_PREEMPTION();
 800a302:	4b18      	ldr	r3, [pc, #96]	; (800a364 <xQueueSemaphoreTake+0x190>)
 800a304:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a308:	601a      	str	r2, [r3, #0]
 800a30a:	f3bf 8f4f 	dsb	sy
 800a30e:	f3bf 8f6f 	isb	sy
				return pdPASS;
 800a312:	2501      	movs	r5, #1
				taskEXIT_CRITICAL();
 800a314:	f7ff fa8c 	bl	8009830 <vPortExitCritical>
}
 800a318:	4628      	mov	r0, r5
 800a31a:	b004      	add	sp, #16
 800a31c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800a320:	4620      	mov	r0, r4
 800a322:	f7ff fbec 	bl	8009afe <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800a326:	f000 fb4d 	bl	800a9c4 <xTaskResumeAll>
 800a32a:	e7d6      	b.n	800a2da <xQueueSemaphoreTake+0x106>
			prvUnlockQueue( pxQueue );
 800a32c:	4620      	mov	r0, r4
 800a32e:	f7ff fbe6 	bl	8009afe <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800a332:	f000 fb47 	bl	800a9c4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a336:	4620      	mov	r0, r4
 800a338:	f7ff fb8e 	bl	8009a58 <prvIsQueueEmpty>
 800a33c:	2800      	cmp	r0, #0
 800a33e:	d0cc      	beq.n	800a2da <xQueueSemaphoreTake+0x106>
					if( xInheritanceOccurred != pdFALSE )
 800a340:	2d00      	cmp	r5, #0
 800a342:	d0e9      	beq.n	800a318 <xQueueSemaphoreTake+0x144>
						taskENTER_CRITICAL();
 800a344:	f7ff fa4e 	bl	80097e4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800a348:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a34a:	b119      	cbz	r1, 800a354 <xQueueSemaphoreTake+0x180>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800a34c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a34e:	6819      	ldr	r1, [r3, #0]
 800a350:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800a354:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
 800a356:	2500      	movs	r5, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800a358:	f000 fdea 	bl	800af30 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800a35c:	f7ff fa68 	bl	8009830 <vPortExitCritical>
 800a360:	e7da      	b.n	800a318 <xQueueSemaphoreTake+0x144>
 800a362:	bf00      	nop
 800a364:	e000ed04 	.word	0xe000ed04

0800a368 <xQueueReceiveFromISR>:
{
 800a368:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a36c:	4689      	mov	r9, r1
 800a36e:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800a370:	4605      	mov	r5, r0
 800a372:	b950      	cbnz	r0, 800a38a <xQueueReceiveFromISR+0x22>
 800a374:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a378:	b672      	cpsid	i
 800a37a:	f383 8811 	msr	BASEPRI, r3
 800a37e:	f3bf 8f6f 	isb	sy
 800a382:	f3bf 8f4f 	dsb	sy
 800a386:	b662      	cpsie	i
 800a388:	e7fe      	b.n	800a388 <xQueueReceiveFromISR+0x20>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a38a:	b961      	cbnz	r1, 800a3a6 <xQueueReceiveFromISR+0x3e>
 800a38c:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a38e:	b153      	cbz	r3, 800a3a6 <xQueueReceiveFromISR+0x3e>
 800a390:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a394:	b672      	cpsid	i
 800a396:	f383 8811 	msr	BASEPRI, r3
 800a39a:	f3bf 8f6f 	isb	sy
 800a39e:	f3bf 8f4f 	dsb	sy
 800a3a2:	b662      	cpsie	i
 800a3a4:	e7fe      	b.n	800a3a4 <xQueueReceiveFromISR+0x3c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a3a6:	f7ff fb25 	bl	80099f4 <vPortValidateInterruptPriority>
	__asm volatile
 800a3aa:	f3ef 8711 	mrs	r7, BASEPRI
 800a3ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3b2:	b672      	cpsid	i
 800a3b4:	f383 8811 	msr	BASEPRI, r3
 800a3b8:	f3bf 8f6f 	isb	sy
 800a3bc:	f3bf 8f4f 	dsb	sy
 800a3c0:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a3c2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a3c4:	b31c      	cbz	r4, 800a40e <xQueueReceiveFromISR+0xa6>
			const int8_t cRxLock = pxQueue->cRxLock;
 800a3c6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a3ca:	4649      	mov	r1, r9
 800a3cc:	4628      	mov	r0, r5
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a3ce:	3c01      	subs	r4, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 800a3d0:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a3d2:	f7ff fb7f 	bl	8009ad4 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a3d6:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800a3d8:	1c73      	adds	r3, r6, #1
 800a3da:	d113      	bne.n	800a404 <xQueueReceiveFromISR+0x9c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a3dc:	692b      	ldr	r3, [r5, #16]
 800a3de:	b90b      	cbnz	r3, 800a3e4 <xQueueReceiveFromISR+0x7c>
			xReturn = pdPASS;
 800a3e0:	2001      	movs	r0, #1
 800a3e2:	e00b      	b.n	800a3fc <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a3e4:	f105 0010 	add.w	r0, r5, #16
 800a3e8:	f000 fc76 	bl	800acd8 <xTaskRemoveFromEventList>
 800a3ec:	2800      	cmp	r0, #0
 800a3ee:	d0f7      	beq.n	800a3e0 <xQueueReceiveFromISR+0x78>
						if( pxHigherPriorityTaskWoken != NULL )
 800a3f0:	f1b8 0f00 	cmp.w	r8, #0
 800a3f4:	d0f4      	beq.n	800a3e0 <xQueueReceiveFromISR+0x78>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800a3f6:	2001      	movs	r0, #1
 800a3f8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800a3fc:	f387 8811 	msr	BASEPRI, r7
}
 800a400:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800a404:	3601      	adds	r6, #1
 800a406:	b276      	sxtb	r6, r6
 800a408:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800a40c:	e7e8      	b.n	800a3e0 <xQueueReceiveFromISR+0x78>
			xReturn = pdFAIL;
 800a40e:	4620      	mov	r0, r4
 800a410:	e7f4      	b.n	800a3fc <xQueueReceiveFromISR+0x94>
	...

0800a414 <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800a414:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800a416:	4a07      	ldr	r2, [pc, #28]	; (800a434 <vQueueAddToRegistry+0x20>)
	{
 800a418:	b530      	push	{r4, r5, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800a41a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800a41e:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800a422:	b91d      	cbnz	r5, 800a42c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800a424:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800a428:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800a42a:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800a42c:	3301      	adds	r3, #1
 800a42e:	2b08      	cmp	r3, #8
 800a430:	d1f3      	bne.n	800a41a <vQueueAddToRegistry+0x6>
 800a432:	e7fa      	b.n	800a42a <vQueueAddToRegistry+0x16>
 800a434:	20016c90 	.word	0x20016c90

0800a438 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800a438:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800a43a:	4a08      	ldr	r2, [pc, #32]	; (800a45c <vQueueUnregisterQueue+0x24>)
	{
 800a43c:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800a43e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800a442:	684c      	ldr	r4, [r1, #4]
 800a444:	4284      	cmp	r4, r0
 800a446:	d104      	bne.n	800a452 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800a448:	2000      	movs	r0, #0
 800a44a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800a44e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800a450:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800a452:	3301      	adds	r3, #1
 800a454:	2b08      	cmp	r3, #8
 800a456:	d1f2      	bne.n	800a43e <vQueueUnregisterQueue+0x6>
 800a458:	e7fa      	b.n	800a450 <vQueueUnregisterQueue+0x18>
 800a45a:	bf00      	nop
 800a45c:	20016c90 	.word	0x20016c90

0800a460 <vQueueDelete>:
{
 800a460:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800a462:	4604      	mov	r4, r0
 800a464:	b950      	cbnz	r0, 800a47c <vQueueDelete+0x1c>
	__asm volatile
 800a466:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a46a:	b672      	cpsid	i
 800a46c:	f383 8811 	msr	BASEPRI, r3
 800a470:	f3bf 8f6f 	isb	sy
 800a474:	f3bf 8f4f 	dsb	sy
 800a478:	b662      	cpsie	i
 800a47a:	e7fe      	b.n	800a47a <vQueueDelete+0x1a>
		vQueueUnregisterQueue( pxQueue );
 800a47c:	f7ff ffdc 	bl	800a438 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800a480:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800a484:	b923      	cbnz	r3, 800a490 <vQueueDelete+0x30>
			vPortFree( pxQueue );
 800a486:	4620      	mov	r0, r4
}
 800a488:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800a48c:	f7ff b8c4 	b.w	8009618 <vPortFree>
}
 800a490:	bd10      	pop	{r4, pc}

0800a492 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800a492:	b570      	push	{r4, r5, r6, lr}
 800a494:	4604      	mov	r4, r0
 800a496:	460d      	mov	r5, r1
 800a498:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800a49a:	f7ff f9a3 	bl	80097e4 <vPortEnterCritical>
 800a49e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a4a2:	2bff      	cmp	r3, #255	; 0xff
 800a4a4:	d102      	bne.n	800a4ac <vQueueWaitForMessageRestricted+0x1a>
 800a4a6:	2300      	movs	r3, #0
 800a4a8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800a4ac:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a4b0:	2bff      	cmp	r3, #255	; 0xff
 800a4b2:	d102      	bne.n	800a4ba <vQueueWaitForMessageRestricted+0x28>
 800a4b4:	2300      	movs	r3, #0
 800a4b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800a4ba:	f7ff f9b9 	bl	8009830 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800a4be:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800a4c0:	b92b      	cbnz	r3, 800a4ce <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800a4c2:	4632      	mov	r2, r6
 800a4c4:	4629      	mov	r1, r5
 800a4c6:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a4ca:	f000 fbe5 	bl	800ac98 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800a4ce:	4620      	mov	r0, r4
	}
 800a4d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800a4d4:	f7ff bb13 	b.w	8009afe <prvUnlockQueue>

0800a4d8 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800a4d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a4dc:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800a4de:	f7ff f981 	bl	80097e4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800a4e2:	4b2e      	ldr	r3, [pc, #184]	; (800a59c <prvAddNewTaskToReadyList+0xc4>)
		if( pxCurrentTCB == NULL )
 800a4e4:	4d2e      	ldr	r5, [pc, #184]	; (800a5a0 <prvAddNewTaskToReadyList+0xc8>)
		uxCurrentNumberOfTasks++;
 800a4e6:	681a      	ldr	r2, [r3, #0]
 800a4e8:	4f2e      	ldr	r7, [pc, #184]	; (800a5a4 <prvAddNewTaskToReadyList+0xcc>)
 800a4ea:	3201      	adds	r2, #1
 800a4ec:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800a4ee:	682e      	ldr	r6, [r5, #0]
 800a4f0:	2e00      	cmp	r6, #0
 800a4f2:	d148      	bne.n	800a586 <prvAddNewTaskToReadyList+0xae>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800a4f4:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800a4f6:	681b      	ldr	r3, [r3, #0]
 800a4f8:	2b01      	cmp	r3, #1
 800a4fa:	d11f      	bne.n	800a53c <prvAddNewTaskToReadyList+0x64>
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800a4fc:	f04f 0814 	mov.w	r8, #20
 800a500:	fb08 7006 	mla	r0, r8, r6, r7
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800a504:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800a506:	f7ff f8c3 	bl	8009690 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800a50a:	2e38      	cmp	r6, #56	; 0x38
 800a50c:	d1f8      	bne.n	800a500 <prvAddNewTaskToReadyList+0x28>
	}

	vListInitialise( &xDelayedTaskList1 );
 800a50e:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800a5d0 <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 800a512:	4e25      	ldr	r6, [pc, #148]	; (800a5a8 <prvAddNewTaskToReadyList+0xd0>)
	vListInitialise( &xDelayedTaskList1 );
 800a514:	4640      	mov	r0, r8
 800a516:	f7ff f8bb 	bl	8009690 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800a51a:	4630      	mov	r0, r6
 800a51c:	f7ff f8b8 	bl	8009690 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800a520:	4822      	ldr	r0, [pc, #136]	; (800a5ac <prvAddNewTaskToReadyList+0xd4>)
 800a522:	f7ff f8b5 	bl	8009690 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800a526:	4822      	ldr	r0, [pc, #136]	; (800a5b0 <prvAddNewTaskToReadyList+0xd8>)
 800a528:	f7ff f8b2 	bl	8009690 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800a52c:	4821      	ldr	r0, [pc, #132]	; (800a5b4 <prvAddNewTaskToReadyList+0xdc>)
 800a52e:	f7ff f8af 	bl	8009690 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800a532:	4b21      	ldr	r3, [pc, #132]	; (800a5b8 <prvAddNewTaskToReadyList+0xe0>)
 800a534:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800a538:	4b20      	ldr	r3, [pc, #128]	; (800a5bc <prvAddNewTaskToReadyList+0xe4>)
 800a53a:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 800a53c:	4a20      	ldr	r2, [pc, #128]	; (800a5c0 <prvAddNewTaskToReadyList+0xe8>)
 800a53e:	6813      	ldr	r3, [r2, #0]
 800a540:	3301      	adds	r3, #1
 800a542:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800a544:	4a1f      	ldr	r2, [pc, #124]	; (800a5c4 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800a546:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800a548:	6811      	ldr	r1, [r2, #0]
 800a54a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a54c:	428b      	cmp	r3, r1
 800a54e:	d900      	bls.n	800a552 <prvAddNewTaskToReadyList+0x7a>
 800a550:	6013      	str	r3, [r2, #0]
 800a552:	2014      	movs	r0, #20
 800a554:	1d21      	adds	r1, r4, #4
 800a556:	fb00 7003 	mla	r0, r0, r3, r7
 800a55a:	f7ff f8a7 	bl	80096ac <vListInsertEnd>
	taskEXIT_CRITICAL();
 800a55e:	f7ff f967 	bl	8009830 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800a562:	4b19      	ldr	r3, [pc, #100]	; (800a5c8 <prvAddNewTaskToReadyList+0xf0>)
 800a564:	681b      	ldr	r3, [r3, #0]
 800a566:	b163      	cbz	r3, 800a582 <prvAddNewTaskToReadyList+0xaa>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800a568:	682b      	ldr	r3, [r5, #0]
 800a56a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a56c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a56e:	429a      	cmp	r2, r3
 800a570:	d207      	bcs.n	800a582 <prvAddNewTaskToReadyList+0xaa>
			taskYIELD_IF_USING_PREEMPTION();
 800a572:	4b16      	ldr	r3, [pc, #88]	; (800a5cc <prvAddNewTaskToReadyList+0xf4>)
 800a574:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a578:	601a      	str	r2, [r3, #0]
 800a57a:	f3bf 8f4f 	dsb	sy
 800a57e:	f3bf 8f6f 	isb	sy
}
 800a582:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800a586:	4b10      	ldr	r3, [pc, #64]	; (800a5c8 <prvAddNewTaskToReadyList+0xf0>)
 800a588:	681b      	ldr	r3, [r3, #0]
 800a58a:	2b00      	cmp	r3, #0
 800a58c:	d1d6      	bne.n	800a53c <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800a58e:	682b      	ldr	r3, [r5, #0]
 800a590:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a592:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a594:	429a      	cmp	r2, r3
 800a596:	d8d1      	bhi.n	800a53c <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 800a598:	602c      	str	r4, [r5, #0]
 800a59a:	e7cf      	b.n	800a53c <prvAddNewTaskToReadyList+0x64>
 800a59c:	200123e8 	.word	0x200123e8
 800a5a0:	20011f7c 	.word	0x20011f7c
 800a5a4:	20011f88 	.word	0x20011f88
 800a5a8:	20012414 	.word	0x20012414
 800a5ac:	20012430 	.word	0x20012430
 800a5b0:	2001245c 	.word	0x2001245c
 800a5b4:	20012448 	.word	0x20012448
 800a5b8:	20011f80 	.word	0x20011f80
 800a5bc:	20011f84 	.word	0x20011f84
 800a5c0:	200123f8 	.word	0x200123f8
 800a5c4:	200123fc 	.word	0x200123fc
 800a5c8:	20012444 	.word	0x20012444
 800a5cc:	e000ed04 	.word	0xe000ed04
 800a5d0:	20012400 	.word	0x20012400

0800a5d4 <prvDeleteTCB>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( TCB_t *pxTCB )
	{
 800a5d4:	b510      	push	{r4, lr}
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800a5d6:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800a5da:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800a5dc:	b93b      	cbnz	r3, 800a5ee <prvDeleteTCB+0x1a>
			{
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
 800a5de:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800a5e0:	f7ff f81a 	bl	8009618 <vPortFree>
				vPortFree( pxTCB );
 800a5e4:	4620      	mov	r0, r4
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
	}
 800a5e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800a5ea:	f7ff b815 	b.w	8009618 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800a5ee:	2b01      	cmp	r3, #1
 800a5f0:	d0f9      	beq.n	800a5e6 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800a5f2:	2b02      	cmp	r3, #2
 800a5f4:	d00a      	beq.n	800a60c <prvDeleteTCB+0x38>
 800a5f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5fa:	b672      	cpsid	i
 800a5fc:	f383 8811 	msr	BASEPRI, r3
 800a600:	f3bf 8f6f 	isb	sy
 800a604:	f3bf 8f4f 	dsb	sy
 800a608:	b662      	cpsie	i
 800a60a:	e7fe      	b.n	800a60a <prvDeleteTCB+0x36>
	}
 800a60c:	bd10      	pop	{r4, pc}
	...

0800a610 <prvIdleTask>:
{
 800a610:	b580      	push	{r7, lr}
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a612:	4e14      	ldr	r6, [pc, #80]	; (800a664 <prvIdleTask+0x54>)
				taskYIELD();
 800a614:	4f14      	ldr	r7, [pc, #80]	; (800a668 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800a616:	4c15      	ldr	r4, [pc, #84]	; (800a66c <prvIdleTask+0x5c>)
				--uxCurrentNumberOfTasks;
 800a618:	4d15      	ldr	r5, [pc, #84]	; (800a670 <prvIdleTask+0x60>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800a61a:	6823      	ldr	r3, [r4, #0]
 800a61c:	b96b      	cbnz	r3, 800a63a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800a61e:	4b15      	ldr	r3, [pc, #84]	; (800a674 <prvIdleTask+0x64>)
 800a620:	681b      	ldr	r3, [r3, #0]
 800a622:	2b01      	cmp	r3, #1
 800a624:	d906      	bls.n	800a634 <prvIdleTask+0x24>
				taskYIELD();
 800a626:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800a62a:	603b      	str	r3, [r7, #0]
 800a62c:	f3bf 8f4f 	dsb	sy
 800a630:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800a634:	f7f6 f9d6 	bl	80009e4 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800a638:	e7ed      	b.n	800a616 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800a63a:	f7ff f8d3 	bl	80097e4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a63e:	68f3      	ldr	r3, [r6, #12]
 800a640:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a644:	f108 0004 	add.w	r0, r8, #4
 800a648:	f7ff f853 	bl	80096f2 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800a64c:	682b      	ldr	r3, [r5, #0]
 800a64e:	3b01      	subs	r3, #1
 800a650:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800a652:	6823      	ldr	r3, [r4, #0]
 800a654:	3b01      	subs	r3, #1
 800a656:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800a658:	f7ff f8ea 	bl	8009830 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800a65c:	4640      	mov	r0, r8
 800a65e:	f7ff ffb9 	bl	800a5d4 <prvDeleteTCB>
 800a662:	e7da      	b.n	800a61a <prvIdleTask+0xa>
 800a664:	2001245c 	.word	0x2001245c
 800a668:	e000ed04 	.word	0xe000ed04
 800a66c:	200123ec 	.word	0x200123ec
 800a670:	200123e8 	.word	0x200123e8
 800a674:	20011f88 	.word	0x20011f88

0800a678 <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a678:	4a06      	ldr	r2, [pc, #24]	; (800a694 <prvResetNextTaskUnblockTime+0x1c>)
 800a67a:	6813      	ldr	r3, [r2, #0]
 800a67c:	6819      	ldr	r1, [r3, #0]
 800a67e:	4b06      	ldr	r3, [pc, #24]	; (800a698 <prvResetNextTaskUnblockTime+0x20>)
 800a680:	b919      	cbnz	r1, 800a68a <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800a682:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800a686:	601a      	str	r2, [r3, #0]
	}
}
 800a688:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a68a:	6812      	ldr	r2, [r2, #0]
 800a68c:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800a68e:	68d2      	ldr	r2, [r2, #12]
 800a690:	6852      	ldr	r2, [r2, #4]
 800a692:	e7f8      	b.n	800a686 <prvResetNextTaskUnblockTime+0xe>
 800a694:	20011f80 	.word	0x20011f80
 800a698:	20012428 	.word	0x20012428

0800a69c <prvInitialiseNewTask.isra.2>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a69c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a6a0:	ea4f 0982 	mov.w	r9, r2, lsl #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a6a4:	4607      	mov	r7, r0
 800a6a6:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a6a8:	21a5      	movs	r1, #165	; 0xa5
 800a6aa:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a6ac:	4698      	mov	r8, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800a6ae:	f1a9 0904 	sub.w	r9, r9, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a6b2:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a6b6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800a6b8:	f016 fbfc 	bl	8020eb4 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800a6bc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a6be:	4499      	add	r9, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800a6c0:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800a6c4:	b3a5      	cbz	r5, 800a730 <prvInitialiseNewTask.isra.2+0x94>
 800a6c6:	1e6b      	subs	r3, r5, #1
 800a6c8:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800a6cc:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800a6ce:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800a6d2:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800a6d6:	7819      	ldrb	r1, [r3, #0]
 800a6d8:	b109      	cbz	r1, 800a6de <prvInitialiseNewTask.isra.2+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800a6da:	42ab      	cmp	r3, r5
 800a6dc:	d1f7      	bne.n	800a6ce <prvInitialiseNewTask.isra.2+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800a6de:	2300      	movs	r3, #0
 800a6e0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800a6e4:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 800a6e6:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800a6ea:	1d20      	adds	r0, r4, #4
 800a6ec:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800a6ee:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
 800a6f2:	bf28      	it	cs
 800a6f4:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
 800a6f6:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800a6f8:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a6fa:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800a6fe:	f7fe ffd2 	bl	80096a6 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800a702:	f104 0018 	add.w	r0, r4, #24
 800a706:	f7fe ffce 	bl	80096a6 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800a70a:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800a70e:	6124      	str	r4, [r4, #16]
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800a710:	4642      	mov	r2, r8
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a712:	61a5      	str	r5, [r4, #24]
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800a714:	4639      	mov	r1, r7
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800a716:	6264      	str	r4, [r4, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800a718:	4648      	mov	r0, r9
		pxNewTCB->pxTaskTag = NULL;
 800a71a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800a71e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800a722:	f7ff f839 	bl	8009798 <pxPortInitialiseStack>
 800a726:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800a728:	b106      	cbz	r6, 800a72c <prvInitialiseNewTask.isra.2+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800a72a:	6034      	str	r4, [r6, #0]
}
 800a72c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800a730:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800a734:	e7d6      	b.n	800a6e4 <prvInitialiseNewTask.isra.2+0x48>
	...

0800a738 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800a738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800a73a:	4b16      	ldr	r3, [pc, #88]	; (800a794 <prvAddCurrentTaskToDelayedList+0x5c>)
{
 800a73c:	4605      	mov	r5, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a73e:	4e16      	ldr	r6, [pc, #88]	; (800a798 <prvAddCurrentTaskToDelayedList+0x60>)
{
 800a740:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 800a742:	681c      	ldr	r4, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a744:	6830      	ldr	r0, [r6, #0]
 800a746:	3004      	adds	r0, #4
 800a748:	f7fe ffd3 	bl	80096f2 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800a74c:	1c6b      	adds	r3, r5, #1
 800a74e:	4633      	mov	r3, r6
 800a750:	d107      	bne.n	800a762 <prvAddCurrentTaskToDelayedList+0x2a>
 800a752:	b137      	cbz	r7, 800a762 <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a754:	6831      	ldr	r1, [r6, #0]
 800a756:	4811      	ldr	r0, [pc, #68]	; (800a79c <prvAddCurrentTaskToDelayedList+0x64>)
 800a758:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800a75a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a75e:	f7fe bfa5 	b.w	80096ac <vListInsertEnd>
 800a762:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800a764:	681a      	ldr	r2, [r3, #0]
 800a766:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 800a768:	d307      	bcc.n	800a77a <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a76a:	4a0d      	ldr	r2, [pc, #52]	; (800a7a0 <prvAddCurrentTaskToDelayedList+0x68>)
 800a76c:	6810      	ldr	r0, [r2, #0]
 800a76e:	6819      	ldr	r1, [r3, #0]
}
 800a770:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a774:	3104      	adds	r1, #4
 800a776:	f7fe bfa5 	b.w	80096c4 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a77a:	4a0a      	ldr	r2, [pc, #40]	; (800a7a4 <prvAddCurrentTaskToDelayedList+0x6c>)
 800a77c:	6810      	ldr	r0, [r2, #0]
 800a77e:	6819      	ldr	r1, [r3, #0]
 800a780:	3104      	adds	r1, #4
 800a782:	f7fe ff9f 	bl	80096c4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800a786:	4b08      	ldr	r3, [pc, #32]	; (800a7a8 <prvAddCurrentTaskToDelayedList+0x70>)
 800a788:	681a      	ldr	r2, [r3, #0]
 800a78a:	42a2      	cmp	r2, r4
 800a78c:	d900      	bls.n	800a790 <prvAddCurrentTaskToDelayedList+0x58>
					xNextTaskUnblockTime = xTimeToWake;
 800a78e:	601c      	str	r4, [r3, #0]
}
 800a790:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a792:	bf00      	nop
 800a794:	20012470 	.word	0x20012470
 800a798:	20011f7c 	.word	0x20011f7c
 800a79c:	20012448 	.word	0x20012448
 800a7a0:	20011f84 	.word	0x20011f84
 800a7a4:	20011f80 	.word	0x20011f80
 800a7a8:	20012428 	.word	0x20012428

0800a7ac <xTaskCreateStatic>:
	{
 800a7ac:	b570      	push	{r4, r5, r6, lr}
 800a7ae:	b086      	sub	sp, #24
 800a7b0:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800a7b4:	b955      	cbnz	r5, 800a7cc <xTaskCreateStatic+0x20>
 800a7b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7ba:	b672      	cpsid	i
 800a7bc:	f383 8811 	msr	BASEPRI, r3
 800a7c0:	f3bf 8f6f 	isb	sy
 800a7c4:	f3bf 8f4f 	dsb	sy
 800a7c8:	b662      	cpsie	i
 800a7ca:	e7fe      	b.n	800a7ca <xTaskCreateStatic+0x1e>
		configASSERT( pxTaskBuffer != NULL );
 800a7cc:	b954      	cbnz	r4, 800a7e4 <xTaskCreateStatic+0x38>
 800a7ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7d2:	b672      	cpsid	i
 800a7d4:	f383 8811 	msr	BASEPRI, r3
 800a7d8:	f3bf 8f6f 	isb	sy
 800a7dc:	f3bf 8f4f 	dsb	sy
 800a7e0:	b662      	cpsie	i
 800a7e2:	e7fe      	b.n	800a7e2 <xTaskCreateStatic+0x36>
			volatile size_t xSize = sizeof( StaticTask_t );
 800a7e4:	2660      	movs	r6, #96	; 0x60
 800a7e6:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800a7e8:	9e05      	ldr	r6, [sp, #20]
 800a7ea:	2e60      	cmp	r6, #96	; 0x60
 800a7ec:	d00a      	beq.n	800a804 <xTaskCreateStatic+0x58>
 800a7ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7f2:	b672      	cpsid	i
 800a7f4:	f383 8811 	msr	BASEPRI, r3
 800a7f8:	f3bf 8f6f 	isb	sy
 800a7fc:	f3bf 8f4f 	dsb	sy
 800a800:	b662      	cpsie	i
 800a802:	e7fe      	b.n	800a802 <xTaskCreateStatic+0x56>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800a804:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800a806:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800a808:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800a80a:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800a80e:	ad04      	add	r5, sp, #16
 800a810:	9402      	str	r4, [sp, #8]
 800a812:	9501      	str	r5, [sp, #4]
 800a814:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800a816:	9500      	str	r5, [sp, #0]
 800a818:	f7ff ff40 	bl	800a69c <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a81c:	4620      	mov	r0, r4
 800a81e:	f7ff fe5b 	bl	800a4d8 <prvAddNewTaskToReadyList>
	}
 800a822:	9804      	ldr	r0, [sp, #16]
 800a824:	b006      	add	sp, #24
 800a826:	bd70      	pop	{r4, r5, r6, pc}

0800a828 <xTaskCreate>:
	{
 800a828:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a82c:	4607      	mov	r7, r0
 800a82e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800a830:	0090      	lsls	r0, r2, #2
	{
 800a832:	4688      	mov	r8, r1
 800a834:	4616      	mov	r6, r2
 800a836:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800a838:	f7fe fe5e 	bl	80094f8 <pvPortMalloc>
			if( pxStack != NULL )
 800a83c:	4605      	mov	r5, r0
 800a83e:	b1e8      	cbz	r0, 800a87c <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800a840:	2060      	movs	r0, #96	; 0x60
 800a842:	f7fe fe59 	bl	80094f8 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800a846:	4604      	mov	r4, r0
 800a848:	b1a8      	cbz	r0, 800a876 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800a84a:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 800a84c:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800a84e:	4632      	mov	r2, r6
 800a850:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800a852:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800a856:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a858:	9002      	str	r0, [sp, #8]
 800a85a:	4638      	mov	r0, r7
 800a85c:	9301      	str	r3, [sp, #4]
 800a85e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a860:	9300      	str	r3, [sp, #0]
 800a862:	464b      	mov	r3, r9
 800a864:	f7ff ff1a 	bl	800a69c <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a868:	4620      	mov	r0, r4
 800a86a:	f7ff fe35 	bl	800a4d8 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800a86e:	2001      	movs	r0, #1
	}
 800a870:	b005      	add	sp, #20
 800a872:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800a876:	4628      	mov	r0, r5
 800a878:	f7fe fece 	bl	8009618 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800a87c:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800a880:	e7f6      	b.n	800a870 <xTaskCreate+0x48>
	...

0800a884 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800a884:	4a02      	ldr	r2, [pc, #8]	; (800a890 <vTaskSuspendAll+0xc>)
 800a886:	6813      	ldr	r3, [r2, #0]
 800a888:	3301      	adds	r3, #1
 800a88a:	6013      	str	r3, [r2, #0]
}
 800a88c:	4770      	bx	lr
 800a88e:	bf00      	nop
 800a890:	200123f4 	.word	0x200123f4

0800a894 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800a894:	4b01      	ldr	r3, [pc, #4]	; (800a89c <xTaskGetTickCount+0x8>)
 800a896:	6818      	ldr	r0, [r3, #0]
}
 800a898:	4770      	bx	lr
 800a89a:	bf00      	nop
 800a89c:	20012470 	.word	0x20012470

0800a8a0 <xTaskIncrementTick>:
{
 800a8a0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a8a4:	4b3c      	ldr	r3, [pc, #240]	; (800a998 <xTaskIncrementTick+0xf8>)
 800a8a6:	681b      	ldr	r3, [r3, #0]
 800a8a8:	2b00      	cmp	r3, #0
 800a8aa:	d16d      	bne.n	800a988 <xTaskIncrementTick+0xe8>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800a8ac:	4b3b      	ldr	r3, [pc, #236]	; (800a99c <xTaskIncrementTick+0xfc>)
 800a8ae:	681c      	ldr	r4, [r3, #0]
 800a8b0:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 800a8b2:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800a8b4:	b9cc      	cbnz	r4, 800a8ea <xTaskIncrementTick+0x4a>
			taskSWITCH_DELAYED_LISTS();
 800a8b6:	4b3a      	ldr	r3, [pc, #232]	; (800a9a0 <xTaskIncrementTick+0x100>)
 800a8b8:	681a      	ldr	r2, [r3, #0]
 800a8ba:	6812      	ldr	r2, [r2, #0]
 800a8bc:	b152      	cbz	r2, 800a8d4 <xTaskIncrementTick+0x34>
 800a8be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a8c2:	b672      	cpsid	i
 800a8c4:	f383 8811 	msr	BASEPRI, r3
 800a8c8:	f3bf 8f6f 	isb	sy
 800a8cc:	f3bf 8f4f 	dsb	sy
 800a8d0:	b662      	cpsie	i
 800a8d2:	e7fe      	b.n	800a8d2 <xTaskIncrementTick+0x32>
 800a8d4:	4a33      	ldr	r2, [pc, #204]	; (800a9a4 <xTaskIncrementTick+0x104>)
 800a8d6:	6819      	ldr	r1, [r3, #0]
 800a8d8:	6810      	ldr	r0, [r2, #0]
 800a8da:	6018      	str	r0, [r3, #0]
 800a8dc:	6011      	str	r1, [r2, #0]
 800a8de:	4a32      	ldr	r2, [pc, #200]	; (800a9a8 <xTaskIncrementTick+0x108>)
 800a8e0:	6813      	ldr	r3, [r2, #0]
 800a8e2:	3301      	adds	r3, #1
 800a8e4:	6013      	str	r3, [r2, #0]
 800a8e6:	f7ff fec7 	bl	800a678 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800a8ea:	4d30      	ldr	r5, [pc, #192]	; (800a9ac <xTaskIncrementTick+0x10c>)
BaseType_t xSwitchRequired = pdFALSE;
 800a8ec:	f04f 0b00 	mov.w	fp, #0
 800a8f0:	4f2f      	ldr	r7, [pc, #188]	; (800a9b0 <xTaskIncrementTick+0x110>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 800a8f2:	682b      	ldr	r3, [r5, #0]
 800a8f4:	42a3      	cmp	r3, r4
 800a8f6:	d911      	bls.n	800a91c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800a8f8:	683a      	ldr	r2, [r7, #0]
 800a8fa:	4b2e      	ldr	r3, [pc, #184]	; (800a9b4 <xTaskIncrementTick+0x114>)
 800a8fc:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800a8fe:	2214      	movs	r2, #20
 800a900:	434a      	muls	r2, r1
 800a902:	589a      	ldr	r2, [r3, r2]
				xSwitchRequired = pdTRUE;
 800a904:	2a02      	cmp	r2, #2
 800a906:	bf28      	it	cs
 800a908:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 800a90c:	4a2a      	ldr	r2, [pc, #168]	; (800a9b8 <xTaskIncrementTick+0x118>)
 800a90e:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 800a910:	2a00      	cmp	r2, #0
}
 800a912:	bf0c      	ite	eq
 800a914:	4658      	moveq	r0, fp
 800a916:	2001      	movne	r0, #1
 800a918:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a91c:	f8df 9080 	ldr.w	r9, [pc, #128]	; 800a9a0 <xTaskIncrementTick+0x100>
					prvAddTaskToReadyList( pxTCB );
 800a920:	f8df a09c 	ldr.w	sl, [pc, #156]	; 800a9c0 <xTaskIncrementTick+0x120>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a924:	f8d9 2000 	ldr.w	r2, [r9]
 800a928:	6812      	ldr	r2, [r2, #0]
 800a92a:	b91a      	cbnz	r2, 800a934 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a92c:	f04f 32ff 	mov.w	r2, #4294967295
 800a930:	602a      	str	r2, [r5, #0]
					break;
 800a932:	e7e1      	b.n	800a8f8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a934:	f8d9 2000 	ldr.w	r2, [r9]
 800a938:	68d2      	ldr	r2, [r2, #12]
 800a93a:	68d6      	ldr	r6, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800a93c:	6871      	ldr	r1, [r6, #4]
					if( xConstTickCount < xItemValue )
 800a93e:	428c      	cmp	r4, r1
 800a940:	d201      	bcs.n	800a946 <xTaskIncrementTick+0xa6>
						xNextTaskUnblockTime = xItemValue;
 800a942:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800a944:	e7d8      	b.n	800a8f8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a946:	f106 0804 	add.w	r8, r6, #4
 800a94a:	4640      	mov	r0, r8
 800a94c:	f7fe fed1 	bl	80096f2 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800a950:	6ab1      	ldr	r1, [r6, #40]	; 0x28
 800a952:	b119      	cbz	r1, 800a95c <xTaskIncrementTick+0xbc>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a954:	f106 0018 	add.w	r0, r6, #24
 800a958:	f7fe fecb 	bl	80096f2 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800a95c:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 800a95e:	f8da 1000 	ldr.w	r1, [sl]
 800a962:	4288      	cmp	r0, r1
 800a964:	d901      	bls.n	800a96a <xTaskIncrementTick+0xca>
 800a966:	f8ca 0000 	str.w	r0, [sl]
 800a96a:	2214      	movs	r2, #20
 800a96c:	4b11      	ldr	r3, [pc, #68]	; (800a9b4 <xTaskIncrementTick+0x114>)
 800a96e:	4641      	mov	r1, r8
 800a970:	fb02 3000 	mla	r0, r2, r0, r3
 800a974:	f7fe fe9a 	bl	80096ac <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a978:	6838      	ldr	r0, [r7, #0]
 800a97a:	6af1      	ldr	r1, [r6, #44]	; 0x2c
 800a97c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800a97e:	4291      	cmp	r1, r2
 800a980:	bf28      	it	cs
 800a982:	f04f 0b01 	movcs.w	fp, #1
 800a986:	e7cd      	b.n	800a924 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 800a988:	4a0c      	ldr	r2, [pc, #48]	; (800a9bc <xTaskIncrementTick+0x11c>)
BaseType_t xSwitchRequired = pdFALSE;
 800a98a:	f04f 0b00 	mov.w	fp, #0
		++uxPendedTicks;
 800a98e:	6813      	ldr	r3, [r2, #0]
 800a990:	3301      	adds	r3, #1
 800a992:	6013      	str	r3, [r2, #0]
 800a994:	e7ba      	b.n	800a90c <xTaskIncrementTick+0x6c>
 800a996:	bf00      	nop
 800a998:	200123f4 	.word	0x200123f4
 800a99c:	20012470 	.word	0x20012470
 800a9a0:	20011f80 	.word	0x20011f80
 800a9a4:	20011f84 	.word	0x20011f84
 800a9a8:	2001242c 	.word	0x2001242c
 800a9ac:	20012428 	.word	0x20012428
 800a9b0:	20011f7c 	.word	0x20011f7c
 800a9b4:	20011f88 	.word	0x20011f88
 800a9b8:	20012474 	.word	0x20012474
 800a9bc:	200123f0 	.word	0x200123f0
 800a9c0:	200123fc 	.word	0x200123fc

0800a9c4 <xTaskResumeAll>:
{
 800a9c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800a9c8:	4c30      	ldr	r4, [pc, #192]	; (800aa8c <xTaskResumeAll+0xc8>)
 800a9ca:	6823      	ldr	r3, [r4, #0]
 800a9cc:	b953      	cbnz	r3, 800a9e4 <xTaskResumeAll+0x20>
 800a9ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a9d2:	b672      	cpsid	i
 800a9d4:	f383 8811 	msr	BASEPRI, r3
 800a9d8:	f3bf 8f6f 	isb	sy
 800a9dc:	f3bf 8f4f 	dsb	sy
 800a9e0:	b662      	cpsie	i
 800a9e2:	e7fe      	b.n	800a9e2 <xTaskResumeAll+0x1e>
	taskENTER_CRITICAL();
 800a9e4:	f7fe fefe 	bl	80097e4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800a9e8:	6823      	ldr	r3, [r4, #0]
 800a9ea:	3b01      	subs	r3, #1
 800a9ec:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a9ee:	6824      	ldr	r4, [r4, #0]
 800a9f0:	b12c      	cbz	r4, 800a9fe <xTaskResumeAll+0x3a>
BaseType_t xAlreadyYielded = pdFALSE;
 800a9f2:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a9f4:	f7fe ff1c 	bl	8009830 <vPortExitCritical>
}
 800a9f8:	4620      	mov	r0, r4
 800a9fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800a9fe:	4b24      	ldr	r3, [pc, #144]	; (800aa90 <xTaskResumeAll+0xcc>)
 800aa00:	681b      	ldr	r3, [r3, #0]
 800aa02:	2b00      	cmp	r3, #0
 800aa04:	d0f5      	beq.n	800a9f2 <xTaskResumeAll+0x2e>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800aa06:	4d23      	ldr	r5, [pc, #140]	; (800aa94 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800aa08:	4e23      	ldr	r6, [pc, #140]	; (800aa98 <xTaskResumeAll+0xd4>)
 800aa0a:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800aaac <xTaskResumeAll+0xe8>
 800aa0e:	e01d      	b.n	800aa4c <xTaskResumeAll+0x88>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800aa10:	68eb      	ldr	r3, [r5, #12]
 800aa12:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800aa14:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800aa16:	f104 0018 	add.w	r0, r4, #24
 800aa1a:	f7fe fe6a 	bl	80096f2 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800aa1e:	4638      	mov	r0, r7
 800aa20:	f7fe fe67 	bl	80096f2 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800aa24:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800aa26:	6832      	ldr	r2, [r6, #0]
 800aa28:	4293      	cmp	r3, r2
 800aa2a:	d900      	bls.n	800aa2e <xTaskResumeAll+0x6a>
 800aa2c:	6033      	str	r3, [r6, #0]
 800aa2e:	2014      	movs	r0, #20
 800aa30:	4639      	mov	r1, r7
 800aa32:	fb00 8003 	mla	r0, r0, r3, r8
 800aa36:	f7fe fe39 	bl	80096ac <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800aa3a:	4b18      	ldr	r3, [pc, #96]	; (800aa9c <xTaskResumeAll+0xd8>)
 800aa3c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800aa3e:	681b      	ldr	r3, [r3, #0]
 800aa40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa42:	429a      	cmp	r2, r3
 800aa44:	d302      	bcc.n	800aa4c <xTaskResumeAll+0x88>
						xYieldPending = pdTRUE;
 800aa46:	4b16      	ldr	r3, [pc, #88]	; (800aaa0 <xTaskResumeAll+0xdc>)
 800aa48:	2201      	movs	r2, #1
 800aa4a:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800aa4c:	682b      	ldr	r3, [r5, #0]
 800aa4e:	2b00      	cmp	r3, #0
 800aa50:	d1de      	bne.n	800aa10 <xTaskResumeAll+0x4c>
				if( pxTCB != NULL )
 800aa52:	b10c      	cbz	r4, 800aa58 <xTaskResumeAll+0x94>
					prvResetNextTaskUnblockTime();
 800aa54:	f7ff fe10 	bl	800a678 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 800aa58:	4d12      	ldr	r5, [pc, #72]	; (800aaa4 <xTaskResumeAll+0xe0>)
 800aa5a:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800aa5c:	b144      	cbz	r4, 800aa70 <xTaskResumeAll+0xac>
								xYieldPending = pdTRUE;
 800aa5e:	4e10      	ldr	r6, [pc, #64]	; (800aaa0 <xTaskResumeAll+0xdc>)
 800aa60:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800aa62:	f7ff ff1d 	bl	800a8a0 <xTaskIncrementTick>
 800aa66:	b100      	cbz	r0, 800aa6a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800aa68:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800aa6a:	3c01      	subs	r4, #1
 800aa6c:	d1f9      	bne.n	800aa62 <xTaskResumeAll+0x9e>
						uxPendedTicks = 0;
 800aa6e:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800aa70:	4b0b      	ldr	r3, [pc, #44]	; (800aaa0 <xTaskResumeAll+0xdc>)
 800aa72:	681b      	ldr	r3, [r3, #0]
 800aa74:	2b00      	cmp	r3, #0
 800aa76:	d0bc      	beq.n	800a9f2 <xTaskResumeAll+0x2e>
					taskYIELD_IF_USING_PREEMPTION();
 800aa78:	4b0b      	ldr	r3, [pc, #44]	; (800aaa8 <xTaskResumeAll+0xe4>)
 800aa7a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800aa7e:	601a      	str	r2, [r3, #0]
 800aa80:	f3bf 8f4f 	dsb	sy
 800aa84:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800aa88:	2401      	movs	r4, #1
 800aa8a:	e7b3      	b.n	800a9f4 <xTaskResumeAll+0x30>
 800aa8c:	200123f4 	.word	0x200123f4
 800aa90:	200123e8 	.word	0x200123e8
 800aa94:	20012430 	.word	0x20012430
 800aa98:	200123fc 	.word	0x200123fc
 800aa9c:	20011f7c 	.word	0x20011f7c
 800aaa0:	20012474 	.word	0x20012474
 800aaa4:	200123f0 	.word	0x200123f0
 800aaa8:	e000ed04 	.word	0xe000ed04
 800aaac:	20011f88 	.word	0x20011f88

0800aab0 <vTaskDelay>:
	{
 800aab0:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800aab2:	b940      	cbnz	r0, 800aac6 <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 800aab4:	4b0f      	ldr	r3, [pc, #60]	; (800aaf4 <vTaskDelay+0x44>)
 800aab6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800aaba:	601a      	str	r2, [r3, #0]
 800aabc:	f3bf 8f4f 	dsb	sy
 800aac0:	f3bf 8f6f 	isb	sy
	}
 800aac4:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800aac6:	4b0c      	ldr	r3, [pc, #48]	; (800aaf8 <vTaskDelay+0x48>)
 800aac8:	6819      	ldr	r1, [r3, #0]
 800aaca:	b151      	cbz	r1, 800aae2 <vTaskDelay+0x32>
 800aacc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aad0:	b672      	cpsid	i
 800aad2:	f383 8811 	msr	BASEPRI, r3
 800aad6:	f3bf 8f6f 	isb	sy
 800aada:	f3bf 8f4f 	dsb	sy
 800aade:	b662      	cpsie	i
 800aae0:	e7fe      	b.n	800aae0 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800aae2:	f7ff fecf 	bl	800a884 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800aae6:	f7ff fe27 	bl	800a738 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800aaea:	f7ff ff6b 	bl	800a9c4 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800aaee:	2800      	cmp	r0, #0
 800aaf0:	d0e0      	beq.n	800aab4 <vTaskDelay+0x4>
 800aaf2:	e7e7      	b.n	800aac4 <vTaskDelay+0x14>
 800aaf4:	e000ed04 	.word	0xe000ed04
 800aaf8:	200123f4 	.word	0x200123f4

0800aafc <vTaskSetApplicationTaskTag>:
	{
 800aafc:	b538      	push	{r3, r4, r5, lr}
 800aafe:	460d      	mov	r5, r1
		if( xTask == NULL )
 800ab00:	4604      	mov	r4, r0
 800ab02:	b908      	cbnz	r0, 800ab08 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800ab04:	4b04      	ldr	r3, [pc, #16]	; (800ab18 <vTaskSetApplicationTaskTag+0x1c>)
 800ab06:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800ab08:	f7fe fe6c 	bl	80097e4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800ab0c:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800ab0e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800ab12:	f7fe be8d 	b.w	8009830 <vPortExitCritical>
 800ab16:	bf00      	nop
 800ab18:	20011f7c 	.word	0x20011f7c

0800ab1c <xTaskCallApplicationTaskHook>:
		if( xTask == NULL )
 800ab1c:	b908      	cbnz	r0, 800ab22 <xTaskCallApplicationTaskHook+0x6>
			xTCB = pxCurrentTCB;
 800ab1e:	4b04      	ldr	r3, [pc, #16]	; (800ab30 <xTaskCallApplicationTaskHook+0x14>)
 800ab20:	6818      	ldr	r0, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800ab22:	6d43      	ldr	r3, [r0, #84]	; 0x54
 800ab24:	b10b      	cbz	r3, 800ab2a <xTaskCallApplicationTaskHook+0xe>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800ab26:	4608      	mov	r0, r1
 800ab28:	4718      	bx	r3
	}
 800ab2a:	4618      	mov	r0, r3
 800ab2c:	4770      	bx	lr
 800ab2e:	bf00      	nop
 800ab30:	20011f7c 	.word	0x20011f7c

0800ab34 <vTaskStartScheduler>:
{
 800ab34:	b510      	push	{r4, lr}
 800ab36:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800ab38:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ab3a:	aa07      	add	r2, sp, #28
 800ab3c:	a906      	add	r1, sp, #24
 800ab3e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800ab40:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ab44:	f7fe fc9c 	bl	8009480 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800ab48:	9b05      	ldr	r3, [sp, #20]
 800ab4a:	9a07      	ldr	r2, [sp, #28]
 800ab4c:	9302      	str	r3, [sp, #8]
 800ab4e:	9b06      	ldr	r3, [sp, #24]
 800ab50:	4919      	ldr	r1, [pc, #100]	; (800abb8 <vTaskStartScheduler+0x84>)
 800ab52:	481a      	ldr	r0, [pc, #104]	; (800abbc <vTaskStartScheduler+0x88>)
 800ab54:	e9cd 4300 	strd	r4, r3, [sp]
 800ab58:	4623      	mov	r3, r4
 800ab5a:	f7ff fe27 	bl	800a7ac <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800ab5e:	b1e0      	cbz	r0, 800ab9a <vTaskStartScheduler+0x66>
			xReturn = xTimerCreateTimerTask();
 800ab60:	f000 fa96 	bl	800b090 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800ab64:	2801      	cmp	r0, #1
 800ab66:	d11a      	bne.n	800ab9e <vTaskStartScheduler+0x6a>
 800ab68:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab6c:	b672      	cpsid	i
 800ab6e:	f383 8811 	msr	BASEPRI, r3
 800ab72:	f3bf 8f6f 	isb	sy
 800ab76:	f3bf 8f4f 	dsb	sy
 800ab7a:	b662      	cpsie	i
		xNextTaskUnblockTime = portMAX_DELAY;
 800ab7c:	4b10      	ldr	r3, [pc, #64]	; (800abc0 <vTaskStartScheduler+0x8c>)
 800ab7e:	f04f 32ff 	mov.w	r2, #4294967295
		traceTASK_SWITCHED_IN();
 800ab82:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
 800ab84:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800ab86:	4b0f      	ldr	r3, [pc, #60]	; (800abc4 <vTaskStartScheduler+0x90>)
 800ab88:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ab8a:	4b0f      	ldr	r3, [pc, #60]	; (800abc8 <vTaskStartScheduler+0x94>)
 800ab8c:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800ab8e:	4b0f      	ldr	r3, [pc, #60]	; (800abcc <vTaskStartScheduler+0x98>)
 800ab90:	6818      	ldr	r0, [r3, #0]
 800ab92:	f7ff ffc3 	bl	800ab1c <xTaskCallApplicationTaskHook>
		if( xPortStartScheduler() != pdFALSE )
 800ab96:	f7fe fec7 	bl	8009928 <xPortStartScheduler>
}
 800ab9a:	b008      	add	sp, #32
 800ab9c:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800ab9e:	3001      	adds	r0, #1
 800aba0:	d1fb      	bne.n	800ab9a <vTaskStartScheduler+0x66>
 800aba2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aba6:	b672      	cpsid	i
 800aba8:	f383 8811 	msr	BASEPRI, r3
 800abac:	f3bf 8f6f 	isb	sy
 800abb0:	f3bf 8f4f 	dsb	sy
 800abb4:	b662      	cpsie	i
 800abb6:	e7fe      	b.n	800abb6 <vTaskStartScheduler+0x82>
 800abb8:	080230b2 	.word	0x080230b2
 800abbc:	0800a611 	.word	0x0800a611
 800abc0:	20012428 	.word	0x20012428
 800abc4:	20012444 	.word	0x20012444
 800abc8:	20012470 	.word	0x20012470
 800abcc:	20011f7c 	.word	0x20011f7c

0800abd0 <vTaskSwitchContext>:
{
 800abd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800abd2:	4b1e      	ldr	r3, [pc, #120]	; (800ac4c <vTaskSwitchContext+0x7c>)
 800abd4:	681a      	ldr	r2, [r3, #0]
 800abd6:	4b1e      	ldr	r3, [pc, #120]	; (800ac50 <vTaskSwitchContext+0x80>)
 800abd8:	b112      	cbz	r2, 800abe0 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800abda:	2201      	movs	r2, #1
 800abdc:	601a      	str	r2, [r3, #0]
}
 800abde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800abe0:	4e1c      	ldr	r6, [pc, #112]	; (800ac54 <vTaskSwitchContext+0x84>)
 800abe2:	2101      	movs	r1, #1
		xYieldPending = pdFALSE;
 800abe4:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 800abe6:	6830      	ldr	r0, [r6, #0]
 800abe8:	f7ff ff98 	bl	800ab1c <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800abec:	4d1a      	ldr	r5, [pc, #104]	; (800ac58 <vTaskSwitchContext+0x88>)
 800abee:	4a1b      	ldr	r2, [pc, #108]	; (800ac5c <vTaskSwitchContext+0x8c>)
 800abf0:	f04f 0c14 	mov.w	ip, #20
 800abf4:	682b      	ldr	r3, [r5, #0]
 800abf6:	4617      	mov	r7, r2
 800abf8:	fb0c f103 	mul.w	r1, ip, r3
 800abfc:	5854      	ldr	r4, [r2, r1]
 800abfe:	1850      	adds	r0, r2, r1
 800ac00:	b1ac      	cbz	r4, 800ac2e <vTaskSwitchContext+0x5e>
 800ac02:	6844      	ldr	r4, [r0, #4]
 800ac04:	3108      	adds	r1, #8
 800ac06:	6864      	ldr	r4, [r4, #4]
 800ac08:	440a      	add	r2, r1
		traceTASK_SWITCHED_IN();
 800ac0a:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ac0c:	4294      	cmp	r4, r2
 800ac0e:	6044      	str	r4, [r0, #4]
 800ac10:	bf04      	itt	eq
 800ac12:	6862      	ldreq	r2, [r4, #4]
 800ac14:	6042      	streq	r2, [r0, #4]
 800ac16:	2214      	movs	r2, #20
 800ac18:	fb02 7203 	mla	r2, r2, r3, r7
 800ac1c:	6852      	ldr	r2, [r2, #4]
 800ac1e:	68d2      	ldr	r2, [r2, #12]
 800ac20:	6032      	str	r2, [r6, #0]
 800ac22:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
 800ac24:	6830      	ldr	r0, [r6, #0]
}
 800ac26:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800ac2a:	f7ff bf77 	b.w	800ab1c <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ac2e:	b953      	cbnz	r3, 800ac46 <vTaskSwitchContext+0x76>
 800ac30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac34:	b672      	cpsid	i
 800ac36:	f383 8811 	msr	BASEPRI, r3
 800ac3a:	f3bf 8f6f 	isb	sy
 800ac3e:	f3bf 8f4f 	dsb	sy
 800ac42:	b662      	cpsie	i
 800ac44:	e7fe      	b.n	800ac44 <vTaskSwitchContext+0x74>
 800ac46:	3b01      	subs	r3, #1
 800ac48:	e7d6      	b.n	800abf8 <vTaskSwitchContext+0x28>
 800ac4a:	bf00      	nop
 800ac4c:	200123f4 	.word	0x200123f4
 800ac50:	20012474 	.word	0x20012474
 800ac54:	20011f7c 	.word	0x20011f7c
 800ac58:	200123fc 	.word	0x200123fc
 800ac5c:	20011f88 	.word	0x20011f88

0800ac60 <vTaskPlaceOnEventList>:
{
 800ac60:	b510      	push	{r4, lr}
 800ac62:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800ac64:	b950      	cbnz	r0, 800ac7c <vTaskPlaceOnEventList+0x1c>
 800ac66:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac6a:	b672      	cpsid	i
 800ac6c:	f383 8811 	msr	BASEPRI, r3
 800ac70:	f3bf 8f6f 	isb	sy
 800ac74:	f3bf 8f4f 	dsb	sy
 800ac78:	b662      	cpsie	i
 800ac7a:	e7fe      	b.n	800ac7a <vTaskPlaceOnEventList+0x1a>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ac7c:	4b05      	ldr	r3, [pc, #20]	; (800ac94 <vTaskPlaceOnEventList+0x34>)
 800ac7e:	6819      	ldr	r1, [r3, #0]
 800ac80:	3118      	adds	r1, #24
 800ac82:	f7fe fd1f 	bl	80096c4 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800ac86:	4620      	mov	r0, r4
 800ac88:	2101      	movs	r1, #1
}
 800ac8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800ac8e:	f7ff bd53 	b.w	800a738 <prvAddCurrentTaskToDelayedList>
 800ac92:	bf00      	nop
 800ac94:	20011f7c 	.word	0x20011f7c

0800ac98 <vTaskPlaceOnEventListRestricted>:
	{
 800ac98:	b538      	push	{r3, r4, r5, lr}
 800ac9a:	460d      	mov	r5, r1
 800ac9c:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800ac9e:	b950      	cbnz	r0, 800acb6 <vTaskPlaceOnEventListRestricted+0x1e>
 800aca0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aca4:	b672      	cpsid	i
 800aca6:	f383 8811 	msr	BASEPRI, r3
 800acaa:	f3bf 8f6f 	isb	sy
 800acae:	f3bf 8f4f 	dsb	sy
 800acb2:	b662      	cpsie	i
 800acb4:	e7fe      	b.n	800acb4 <vTaskPlaceOnEventListRestricted+0x1c>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800acb6:	4b07      	ldr	r3, [pc, #28]	; (800acd4 <vTaskPlaceOnEventListRestricted+0x3c>)
 800acb8:	6819      	ldr	r1, [r3, #0]
 800acba:	3118      	adds	r1, #24
 800acbc:	f7fe fcf6 	bl	80096ac <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800acc0:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800acc2:	4621      	mov	r1, r4
 800acc4:	bf0c      	ite	eq
 800acc6:	4628      	moveq	r0, r5
 800acc8:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800accc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800acd0:	f7ff bd32 	b.w	800a738 <prvAddCurrentTaskToDelayedList>
 800acd4:	20011f7c 	.word	0x20011f7c

0800acd8 <xTaskRemoveFromEventList>:
{
 800acd8:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800acda:	68c3      	ldr	r3, [r0, #12]
 800acdc:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800acde:	b954      	cbnz	r4, 800acf6 <xTaskRemoveFromEventList+0x1e>
 800ace0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ace4:	b672      	cpsid	i
 800ace6:	f383 8811 	msr	BASEPRI, r3
 800acea:	f3bf 8f6f 	isb	sy
 800acee:	f3bf 8f4f 	dsb	sy
 800acf2:	b662      	cpsie	i
 800acf4:	e7fe      	b.n	800acf4 <xTaskRemoveFromEventList+0x1c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800acf6:	f104 0518 	add.w	r5, r4, #24
 800acfa:	4628      	mov	r0, r5
 800acfc:	f7fe fcf9 	bl	80096f2 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ad00:	4b11      	ldr	r3, [pc, #68]	; (800ad48 <xTaskRemoveFromEventList+0x70>)
 800ad02:	681b      	ldr	r3, [r3, #0]
 800ad04:	b9d3      	cbnz	r3, 800ad3c <xTaskRemoveFromEventList+0x64>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800ad06:	1d25      	adds	r5, r4, #4
 800ad08:	4628      	mov	r0, r5
 800ad0a:	f7fe fcf2 	bl	80096f2 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800ad0e:	4a0f      	ldr	r2, [pc, #60]	; (800ad4c <xTaskRemoveFromEventList+0x74>)
 800ad10:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ad12:	6811      	ldr	r1, [r2, #0]
 800ad14:	428b      	cmp	r3, r1
 800ad16:	d900      	bls.n	800ad1a <xTaskRemoveFromEventList+0x42>
 800ad18:	6013      	str	r3, [r2, #0]
 800ad1a:	4a0d      	ldr	r2, [pc, #52]	; (800ad50 <xTaskRemoveFromEventList+0x78>)
 800ad1c:	2014      	movs	r0, #20
 800ad1e:	4629      	mov	r1, r5
 800ad20:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ad24:	f7fe fcc2 	bl	80096ac <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800ad28:	4b0a      	ldr	r3, [pc, #40]	; (800ad54 <xTaskRemoveFromEventList+0x7c>)
 800ad2a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ad2c:	681b      	ldr	r3, [r3, #0]
 800ad2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad30:	429a      	cmp	r2, r3
 800ad32:	d906      	bls.n	800ad42 <xTaskRemoveFromEventList+0x6a>
		xYieldPending = pdTRUE;
 800ad34:	2001      	movs	r0, #1
 800ad36:	4b08      	ldr	r3, [pc, #32]	; (800ad58 <xTaskRemoveFromEventList+0x80>)
 800ad38:	6018      	str	r0, [r3, #0]
}
 800ad3a:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ad3c:	4629      	mov	r1, r5
 800ad3e:	4807      	ldr	r0, [pc, #28]	; (800ad5c <xTaskRemoveFromEventList+0x84>)
 800ad40:	e7f0      	b.n	800ad24 <xTaskRemoveFromEventList+0x4c>
		xReturn = pdFALSE;
 800ad42:	2000      	movs	r0, #0
	return xReturn;
 800ad44:	e7f9      	b.n	800ad3a <xTaskRemoveFromEventList+0x62>
 800ad46:	bf00      	nop
 800ad48:	200123f4 	.word	0x200123f4
 800ad4c:	200123fc 	.word	0x200123fc
 800ad50:	20011f88 	.word	0x20011f88
 800ad54:	20011f7c 	.word	0x20011f7c
 800ad58:	20012474 	.word	0x20012474
 800ad5c:	20012430 	.word	0x20012430

0800ad60 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ad60:	4b03      	ldr	r3, [pc, #12]	; (800ad70 <vTaskInternalSetTimeOutState+0x10>)
 800ad62:	681b      	ldr	r3, [r3, #0]
 800ad64:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ad66:	4b03      	ldr	r3, [pc, #12]	; (800ad74 <vTaskInternalSetTimeOutState+0x14>)
 800ad68:	681b      	ldr	r3, [r3, #0]
 800ad6a:	6043      	str	r3, [r0, #4]
}
 800ad6c:	4770      	bx	lr
 800ad6e:	bf00      	nop
 800ad70:	2001242c 	.word	0x2001242c
 800ad74:	20012470 	.word	0x20012470

0800ad78 <xTaskCheckForTimeOut>:
{
 800ad78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ad7a:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800ad7c:	4605      	mov	r5, r0
 800ad7e:	b950      	cbnz	r0, 800ad96 <xTaskCheckForTimeOut+0x1e>
 800ad80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad84:	b672      	cpsid	i
 800ad86:	f383 8811 	msr	BASEPRI, r3
 800ad8a:	f3bf 8f6f 	isb	sy
 800ad8e:	f3bf 8f4f 	dsb	sy
 800ad92:	b662      	cpsie	i
 800ad94:	e7fe      	b.n	800ad94 <xTaskCheckForTimeOut+0x1c>
	configASSERT( pxTicksToWait );
 800ad96:	b951      	cbnz	r1, 800adae <xTaskCheckForTimeOut+0x36>
 800ad98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad9c:	b672      	cpsid	i
 800ad9e:	f383 8811 	msr	BASEPRI, r3
 800ada2:	f3bf 8f6f 	isb	sy
 800ada6:	f3bf 8f4f 	dsb	sy
 800adaa:	b662      	cpsie	i
 800adac:	e7fe      	b.n	800adac <xTaskCheckForTimeOut+0x34>
	taskENTER_CRITICAL();
 800adae:	f7fe fd19 	bl	80097e4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800adb2:	4b0f      	ldr	r3, [pc, #60]	; (800adf0 <xTaskCheckForTimeOut+0x78>)
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800adb4:	6868      	ldr	r0, [r5, #4]
		const TickType_t xConstTickCount = xTickCount;
 800adb6:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800adb8:	6823      	ldr	r3, [r4, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800adba:	1a0a      	subs	r2, r1, r0
			if( *pxTicksToWait == portMAX_DELAY )
 800adbc:	1c5e      	adds	r6, r3, #1
 800adbe:	d00d      	beq.n	800addc <xTaskCheckForTimeOut+0x64>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800adc0:	4e0c      	ldr	r6, [pc, #48]	; (800adf4 <xTaskCheckForTimeOut+0x7c>)
 800adc2:	682f      	ldr	r7, [r5, #0]
 800adc4:	6836      	ldr	r6, [r6, #0]
 800adc6:	42b7      	cmp	r7, r6
 800adc8:	d001      	beq.n	800adce <xTaskCheckForTimeOut+0x56>
 800adca:	4288      	cmp	r0, r1
 800adcc:	d90d      	bls.n	800adea <xTaskCheckForTimeOut+0x72>
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800adce:	4293      	cmp	r3, r2
 800add0:	d909      	bls.n	800ade6 <xTaskCheckForTimeOut+0x6e>
			*pxTicksToWait -= xElapsedTime;
 800add2:	1a9b      	subs	r3, r3, r2
			vTaskInternalSetTimeOutState( pxTimeOut );
 800add4:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 800add6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800add8:	f7ff ffc2 	bl	800ad60 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800addc:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800adde:	f7fe fd27 	bl	8009830 <vPortExitCritical>
}
 800ade2:	4620      	mov	r0, r4
 800ade4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			*pxTicksToWait = 0;
 800ade6:	2300      	movs	r3, #0
 800ade8:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800adea:	2401      	movs	r4, #1
 800adec:	e7f7      	b.n	800adde <xTaskCheckForTimeOut+0x66>
 800adee:	bf00      	nop
 800adf0:	20012470 	.word	0x20012470
 800adf4:	2001242c 	.word	0x2001242c

0800adf8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800adf8:	4b01      	ldr	r3, [pc, #4]	; (800ae00 <vTaskMissedYield+0x8>)
 800adfa:	2201      	movs	r2, #1
 800adfc:	601a      	str	r2, [r3, #0]
}
 800adfe:	4770      	bx	lr
 800ae00:	20012474 	.word	0x20012474

0800ae04 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800ae04:	4b05      	ldr	r3, [pc, #20]	; (800ae1c <xTaskGetSchedulerState+0x18>)
 800ae06:	681b      	ldr	r3, [r3, #0]
 800ae08:	b133      	cbz	r3, 800ae18 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ae0a:	4b05      	ldr	r3, [pc, #20]	; (800ae20 <xTaskGetSchedulerState+0x1c>)
 800ae0c:	681b      	ldr	r3, [r3, #0]
 800ae0e:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 800ae10:	bf0c      	ite	eq
 800ae12:	2002      	moveq	r0, #2
 800ae14:	2000      	movne	r0, #0
 800ae16:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800ae18:	2001      	movs	r0, #1
	}
 800ae1a:	4770      	bx	lr
 800ae1c:	20012444 	.word	0x20012444
 800ae20:	200123f4 	.word	0x200123f4

0800ae24 <xTaskPriorityInherit>:
	{
 800ae24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 800ae26:	4604      	mov	r4, r0
 800ae28:	b340      	cbz	r0, 800ae7c <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800ae2a:	4a1b      	ldr	r2, [pc, #108]	; (800ae98 <xTaskPriorityInherit+0x74>)
 800ae2c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ae2e:	6811      	ldr	r1, [r2, #0]
 800ae30:	4616      	mov	r6, r2
 800ae32:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 800ae34:	428b      	cmp	r3, r1
 800ae36:	d226      	bcs.n	800ae86 <xTaskPriorityInherit+0x62>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ae38:	6982      	ldr	r2, [r0, #24]
 800ae3a:	2a00      	cmp	r2, #0
 800ae3c:	db04      	blt.n	800ae48 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ae3e:	6832      	ldr	r2, [r6, #0]
 800ae40:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ae42:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800ae46:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800ae48:	2214      	movs	r2, #20
 800ae4a:	4d14      	ldr	r5, [pc, #80]	; (800ae9c <xTaskPriorityInherit+0x78>)
 800ae4c:	fb02 5303 	mla	r3, r2, r3, r5
 800ae50:	6962      	ldr	r2, [r4, #20]
 800ae52:	429a      	cmp	r2, r3
 800ae54:	d113      	bne.n	800ae7e <xTaskPriorityInherit+0x5a>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ae56:	1d27      	adds	r7, r4, #4
 800ae58:	4638      	mov	r0, r7
 800ae5a:	f7fe fc4a 	bl	80096f2 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ae5e:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ae60:	4a0f      	ldr	r2, [pc, #60]	; (800aea0 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ae62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ae64:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ae66:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ae68:	428b      	cmp	r3, r1
 800ae6a:	d900      	bls.n	800ae6e <xTaskPriorityInherit+0x4a>
 800ae6c:	6013      	str	r3, [r2, #0]
 800ae6e:	2014      	movs	r0, #20
 800ae70:	4639      	mov	r1, r7
 800ae72:	fb00 5003 	mla	r0, r0, r3, r5
 800ae76:	f7fe fc19 	bl	80096ac <vListInsertEnd>
				xReturn = pdTRUE;
 800ae7a:	2001      	movs	r0, #1
	}
 800ae7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ae7e:	6833      	ldr	r3, [r6, #0]
 800ae80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ae82:	62e3      	str	r3, [r4, #44]	; 0x2c
 800ae84:	e7f9      	b.n	800ae7a <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800ae86:	6813      	ldr	r3, [r2, #0]
 800ae88:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800ae8a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800ae8c:	42a0      	cmp	r0, r4
 800ae8e:	bf2c      	ite	cs
 800ae90:	2000      	movcs	r0, #0
 800ae92:	2001      	movcc	r0, #1
 800ae94:	e7f2      	b.n	800ae7c <xTaskPriorityInherit+0x58>
 800ae96:	bf00      	nop
 800ae98:	20011f7c 	.word	0x20011f7c
 800ae9c:	20011f88 	.word	0x20011f88
 800aea0:	200123fc 	.word	0x200123fc

0800aea4 <xTaskPriorityDisinherit>:
	{
 800aea4:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800aea6:	b908      	cbnz	r0, 800aeac <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 800aea8:	2000      	movs	r0, #0
	}
 800aeaa:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800aeac:	4b1d      	ldr	r3, [pc, #116]	; (800af24 <xTaskPriorityDisinherit+0x80>)
 800aeae:	681c      	ldr	r4, [r3, #0]
 800aeb0:	4284      	cmp	r4, r0
 800aeb2:	d00a      	beq.n	800aeca <xTaskPriorityDisinherit+0x26>
 800aeb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aeb8:	b672      	cpsid	i
 800aeba:	f383 8811 	msr	BASEPRI, r3
 800aebe:	f3bf 8f6f 	isb	sy
 800aec2:	f3bf 8f4f 	dsb	sy
 800aec6:	b662      	cpsie	i
 800aec8:	e7fe      	b.n	800aec8 <xTaskPriorityDisinherit+0x24>
			configASSERT( pxTCB->uxMutexesHeld );
 800aeca:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800aecc:	b953      	cbnz	r3, 800aee4 <xTaskPriorityDisinherit+0x40>
 800aece:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aed2:	b672      	cpsid	i
 800aed4:	f383 8811 	msr	BASEPRI, r3
 800aed8:	f3bf 8f6f 	isb	sy
 800aedc:	f3bf 8f4f 	dsb	sy
 800aee0:	b662      	cpsie	i
 800aee2:	e7fe      	b.n	800aee2 <xTaskPriorityDisinherit+0x3e>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800aee4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
 800aee6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800aee8:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800aeea:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800aeec:	4291      	cmp	r1, r2
 800aeee:	d0db      	beq.n	800aea8 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800aef0:	2b00      	cmp	r3, #0
 800aef2:	d1d9      	bne.n	800aea8 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800aef4:	1d25      	adds	r5, r4, #4
 800aef6:	4628      	mov	r0, r5
 800aef8:	f7fe fbfb 	bl	80096f2 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800aefc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800aefe:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800af02:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800af04:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800af06:	4a08      	ldr	r2, [pc, #32]	; (800af28 <xTaskPriorityDisinherit+0x84>)
 800af08:	6811      	ldr	r1, [r2, #0]
 800af0a:	428b      	cmp	r3, r1
 800af0c:	d900      	bls.n	800af10 <xTaskPriorityDisinherit+0x6c>
 800af0e:	6013      	str	r3, [r2, #0]
 800af10:	4a06      	ldr	r2, [pc, #24]	; (800af2c <xTaskPriorityDisinherit+0x88>)
 800af12:	2014      	movs	r0, #20
 800af14:	4629      	mov	r1, r5
 800af16:	fb00 2003 	mla	r0, r0, r3, r2
 800af1a:	f7fe fbc7 	bl	80096ac <vListInsertEnd>
					xReturn = pdTRUE;
 800af1e:	2001      	movs	r0, #1
		return xReturn;
 800af20:	e7c3      	b.n	800aeaa <xTaskPriorityDisinherit+0x6>
 800af22:	bf00      	nop
 800af24:	20011f7c 	.word	0x20011f7c
 800af28:	200123fc 	.word	0x200123fc
 800af2c:	20011f88 	.word	0x20011f88

0800af30 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800af30:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800af32:	4604      	mov	r4, r0
 800af34:	2800      	cmp	r0, #0
 800af36:	d046      	beq.n	800afc6 <vTaskPriorityDisinheritAfterTimeout+0x96>
			configASSERT( pxTCB->uxMutexesHeld );
 800af38:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800af3a:	b952      	cbnz	r2, 800af52 <vTaskPriorityDisinheritAfterTimeout+0x22>
 800af3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800af40:	b672      	cpsid	i
 800af42:	f383 8811 	msr	BASEPRI, r3
 800af46:	f3bf 8f6f 	isb	sy
 800af4a:	f3bf 8f4f 	dsb	sy
 800af4e:	b662      	cpsie	i
 800af50:	e7fe      	b.n	800af50 <vTaskPriorityDisinheritAfterTimeout+0x20>
 800af52:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800af54:	4299      	cmp	r1, r3
 800af56:	bf38      	it	cc
 800af58:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800af5a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800af5c:	428b      	cmp	r3, r1
 800af5e:	d032      	beq.n	800afc6 <vTaskPriorityDisinheritAfterTimeout+0x96>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800af60:	2a01      	cmp	r2, #1
 800af62:	d130      	bne.n	800afc6 <vTaskPriorityDisinheritAfterTimeout+0x96>
					configASSERT( pxTCB != pxCurrentTCB );
 800af64:	4a18      	ldr	r2, [pc, #96]	; (800afc8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800af66:	6812      	ldr	r2, [r2, #0]
 800af68:	4282      	cmp	r2, r0
 800af6a:	d10a      	bne.n	800af82 <vTaskPriorityDisinheritAfterTimeout+0x52>
 800af6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800af70:	b672      	cpsid	i
 800af72:	f383 8811 	msr	BASEPRI, r3
 800af76:	f3bf 8f6f 	isb	sy
 800af7a:	f3bf 8f4f 	dsb	sy
 800af7e:	b662      	cpsie	i
 800af80:	e7fe      	b.n	800af80 <vTaskPriorityDisinheritAfterTimeout+0x50>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800af82:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800af84:	4d11      	ldr	r5, [pc, #68]	; (800afcc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800af86:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800af88:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 800af8c:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800af8e:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800af92:	bfa8      	it	ge
 800af94:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800af98:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800af9a:	bfa8      	it	ge
 800af9c:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800af9e:	429a      	cmp	r2, r3
 800afa0:	d111      	bne.n	800afc6 <vTaskPriorityDisinheritAfterTimeout+0x96>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800afa2:	1d06      	adds	r6, r0, #4
 800afa4:	4630      	mov	r0, r6
 800afa6:	f7fe fba4 	bl	80096f2 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800afaa:	4a09      	ldr	r2, [pc, #36]	; (800afd0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800afac:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800afae:	6811      	ldr	r1, [r2, #0]
 800afb0:	428b      	cmp	r3, r1
 800afb2:	d900      	bls.n	800afb6 <vTaskPriorityDisinheritAfterTimeout+0x86>
 800afb4:	6013      	str	r3, [r2, #0]
 800afb6:	2014      	movs	r0, #20
 800afb8:	4631      	mov	r1, r6
 800afba:	fb00 5003 	mla	r0, r0, r3, r5
	}
 800afbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 800afc2:	f7fe bb73 	b.w	80096ac <vListInsertEnd>
	}
 800afc6:	bd70      	pop	{r4, r5, r6, pc}
 800afc8:	20011f7c 	.word	0x20011f7c
 800afcc:	20011f88 	.word	0x20011f88
 800afd0:	200123fc 	.word	0x200123fc

0800afd4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800afd4:	4b04      	ldr	r3, [pc, #16]	; (800afe8 <pvTaskIncrementMutexHeldCount+0x14>)
 800afd6:	681a      	ldr	r2, [r3, #0]
 800afd8:	b11a      	cbz	r2, 800afe2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800afda:	6819      	ldr	r1, [r3, #0]
 800afdc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800afde:	3201      	adds	r2, #1
 800afe0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800afe2:	6818      	ldr	r0, [r3, #0]
	}
 800afe4:	4770      	bx	lr
 800afe6:	bf00      	nop
 800afe8:	20011f7c 	.word	0x20011f7c

0800afec <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800afec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800afee:	4c11      	ldr	r4, [pc, #68]	; (800b034 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800aff0:	f7fe fbf8 	bl	80097e4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800aff4:	6825      	ldr	r5, [r4, #0]
 800aff6:	b9bd      	cbnz	r5, 800b028 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800aff8:	4f0f      	ldr	r7, [pc, #60]	; (800b038 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800affa:	4e10      	ldr	r6, [pc, #64]	; (800b03c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800affc:	4638      	mov	r0, r7
 800affe:	f7fe fb47 	bl	8009690 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800b002:	4630      	mov	r0, r6
 800b004:	f7fe fb44 	bl	8009690 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800b008:	4b0d      	ldr	r3, [pc, #52]	; (800b040 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b00a:	4a0e      	ldr	r2, [pc, #56]	; (800b044 <prvCheckForValidListAndQueue+0x58>)
 800b00c:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 800b00e:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b010:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 800b012:	4b0d      	ldr	r3, [pc, #52]	; (800b048 <prvCheckForValidListAndQueue+0x5c>)
 800b014:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b016:	9500      	str	r5, [sp, #0]
 800b018:	4b0c      	ldr	r3, [pc, #48]	; (800b04c <prvCheckForValidListAndQueue+0x60>)
 800b01a:	f7fe fdeb 	bl	8009bf4 <xQueueGenericCreateStatic>
 800b01e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800b020:	b110      	cbz	r0, 800b028 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800b022:	490b      	ldr	r1, [pc, #44]	; (800b050 <prvCheckForValidListAndQueue+0x64>)
 800b024:	f7ff f9f6 	bl	800a414 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800b028:	b003      	add	sp, #12
 800b02a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800b02e:	f7fe bbff 	b.w	8009830 <vPortExitCritical>
 800b032:	bf00      	nop
 800b034:	2001259c 	.word	0x2001259c
 800b038:	20012520 	.word	0x20012520
 800b03c:	20012534 	.word	0x20012534
 800b040:	20012478 	.word	0x20012478
 800b044:	20012480 	.word	0x20012480
 800b048:	2001247c 	.word	0x2001247c
 800b04c:	2001254c 	.word	0x2001254c
 800b050:	080230b7 	.word	0x080230b7

0800b054 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800b054:	4291      	cmp	r1, r2
{
 800b056:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800b058:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800b05a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800b05c:	d80a      	bhi.n	800b074 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b05e:	1ad2      	subs	r2, r2, r3
 800b060:	6983      	ldr	r3, [r0, #24]
 800b062:	429a      	cmp	r2, r3
 800b064:	d20d      	bcs.n	800b082 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800b066:	1d01      	adds	r1, r0, #4
 800b068:	4b07      	ldr	r3, [pc, #28]	; (800b088 <prvInsertTimerInActiveList+0x34>)
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b06a:	6818      	ldr	r0, [r3, #0]
 800b06c:	f7fe fb2a 	bl	80096c4 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800b070:	2000      	movs	r0, #0
}
 800b072:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800b074:	429a      	cmp	r2, r3
 800b076:	d201      	bcs.n	800b07c <prvInsertTimerInActiveList+0x28>
 800b078:	4299      	cmp	r1, r3
 800b07a:	d202      	bcs.n	800b082 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b07c:	1d01      	adds	r1, r0, #4
 800b07e:	4b03      	ldr	r3, [pc, #12]	; (800b08c <prvInsertTimerInActiveList+0x38>)
 800b080:	e7f3      	b.n	800b06a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800b082:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800b084:	e7f5      	b.n	800b072 <prvInsertTimerInActiveList+0x1e>
 800b086:	bf00      	nop
 800b088:	2001247c 	.word	0x2001247c
 800b08c:	20012478 	.word	0x20012478

0800b090 <xTimerCreateTimerTask>:
{
 800b090:	b510      	push	{r4, lr}
 800b092:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800b094:	f7ff ffaa 	bl	800afec <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800b098:	4b13      	ldr	r3, [pc, #76]	; (800b0e8 <xTimerCreateTimerTask+0x58>)
 800b09a:	681b      	ldr	r3, [r3, #0]
 800b09c:	b1b3      	cbz	r3, 800b0cc <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800b09e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800b0a0:	aa07      	add	r2, sp, #28
 800b0a2:	a906      	add	r1, sp, #24
 800b0a4:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800b0a6:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800b0aa:	f7fe f9f5 	bl	8009498 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800b0ae:	9b05      	ldr	r3, [sp, #20]
 800b0b0:	9a07      	ldr	r2, [sp, #28]
 800b0b2:	9302      	str	r3, [sp, #8]
 800b0b4:	9b06      	ldr	r3, [sp, #24]
 800b0b6:	490d      	ldr	r1, [pc, #52]	; (800b0ec <xTimerCreateTimerTask+0x5c>)
 800b0b8:	9301      	str	r3, [sp, #4]
 800b0ba:	2302      	movs	r3, #2
 800b0bc:	480c      	ldr	r0, [pc, #48]	; (800b0f0 <xTimerCreateTimerTask+0x60>)
 800b0be:	9300      	str	r3, [sp, #0]
 800b0c0:	4623      	mov	r3, r4
 800b0c2:	f7ff fb73 	bl	800a7ac <xTaskCreateStatic>
 800b0c6:	4b0b      	ldr	r3, [pc, #44]	; (800b0f4 <xTimerCreateTimerTask+0x64>)
 800b0c8:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800b0ca:	b950      	cbnz	r0, 800b0e2 <xTimerCreateTimerTask+0x52>
 800b0cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b0d0:	b672      	cpsid	i
 800b0d2:	f383 8811 	msr	BASEPRI, r3
 800b0d6:	f3bf 8f6f 	isb	sy
 800b0da:	f3bf 8f4f 	dsb	sy
 800b0de:	b662      	cpsie	i
 800b0e0:	e7fe      	b.n	800b0e0 <xTimerCreateTimerTask+0x50>
}
 800b0e2:	2001      	movs	r0, #1
 800b0e4:	b008      	add	sp, #32
 800b0e6:	bd10      	pop	{r4, pc}
 800b0e8:	2001259c 	.word	0x2001259c
 800b0ec:	080230bc 	.word	0x080230bc
 800b0f0:	0800b1d9 	.word	0x0800b1d9
 800b0f4:	200125a0 	.word	0x200125a0

0800b0f8 <xTimerGenericCommand>:
{
 800b0f8:	b530      	push	{r4, r5, lr}
 800b0fa:	4615      	mov	r5, r2
 800b0fc:	b085      	sub	sp, #20
 800b0fe:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800b100:	4603      	mov	r3, r0
 800b102:	b950      	cbnz	r0, 800b11a <xTimerGenericCommand+0x22>
 800b104:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b108:	b672      	cpsid	i
 800b10a:	f383 8811 	msr	BASEPRI, r3
 800b10e:	f3bf 8f6f 	isb	sy
 800b112:	f3bf 8f4f 	dsb	sy
 800b116:	b662      	cpsie	i
 800b118:	e7fe      	b.n	800b118 <xTimerGenericCommand+0x20>
	if( xTimerQueue != NULL )
 800b11a:	4c0d      	ldr	r4, [pc, #52]	; (800b150 <xTimerGenericCommand+0x58>)
 800b11c:	6820      	ldr	r0, [r4, #0]
 800b11e:	b178      	cbz	r0, 800b140 <xTimerGenericCommand+0x48>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800b120:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800b122:	9302      	str	r3, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800b124:	e9cd 1500 	strd	r1, r5, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800b128:	dc0c      	bgt.n	800b144 <xTimerGenericCommand+0x4c>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800b12a:	f7ff fe6b 	bl	800ae04 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800b12e:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800b130:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800b132:	4669      	mov	r1, sp
 800b134:	6820      	ldr	r0, [r4, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800b136:	bf0c      	ite	eq
 800b138:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800b13a:	461a      	movne	r2, r3
 800b13c:	f7fe fe24 	bl	8009d88 <xQueueGenericSend>
}
 800b140:	b005      	add	sp, #20
 800b142:	bd30      	pop	{r4, r5, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800b144:	2300      	movs	r3, #0
 800b146:	4669      	mov	r1, sp
 800b148:	f7fe fed8 	bl	8009efc <xQueueGenericSendFromISR>
 800b14c:	e7f8      	b.n	800b140 <xTimerGenericCommand+0x48>
 800b14e:	bf00      	nop
 800b150:	2001259c 	.word	0x2001259c

0800b154 <prvSwitchTimerLists>:
{
 800b154:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800b158:	4d1d      	ldr	r5, [pc, #116]	; (800b1d0 <prvSwitchTimerLists+0x7c>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b15a:	f04f 0800 	mov.w	r8, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800b15e:	682b      	ldr	r3, [r5, #0]
 800b160:	681a      	ldr	r2, [r3, #0]
 800b162:	b932      	cbnz	r2, 800b172 <prvSwitchTimerLists+0x1e>
	pxCurrentTimerList = pxOverflowTimerList;
 800b164:	4a1b      	ldr	r2, [pc, #108]	; (800b1d4 <prvSwitchTimerLists+0x80>)
 800b166:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 800b168:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
 800b16a:	6029      	str	r1, [r5, #0]
}
 800b16c:	b002      	add	sp, #8
 800b16e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b172:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b174:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b176:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b178:	1d27      	adds	r7, r4, #4
 800b17a:	4638      	mov	r0, r7
 800b17c:	f7fe fab9 	bl	80096f2 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b180:	6a23      	ldr	r3, [r4, #32]
 800b182:	4620      	mov	r0, r4
 800b184:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b186:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b18a:	075b      	lsls	r3, r3, #29
 800b18c:	d5e7      	bpl.n	800b15e <prvSwitchTimerLists+0xa>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800b18e:	69a3      	ldr	r3, [r4, #24]
 800b190:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 800b192:	429e      	cmp	r6, r3
 800b194:	d206      	bcs.n	800b1a4 <prvSwitchTimerLists+0x50>
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800b196:	6063      	str	r3, [r4, #4]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b198:	4639      	mov	r1, r7
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800b19a:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b19c:	6828      	ldr	r0, [r5, #0]
 800b19e:	f7fe fa91 	bl	80096c4 <vListInsert>
 800b1a2:	e7dc      	b.n	800b15e <prvSwitchTimerLists+0xa>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b1a4:	2300      	movs	r3, #0
 800b1a6:	f8cd 8000 	str.w	r8, [sp]
 800b1aa:	4632      	mov	r2, r6
 800b1ac:	4620      	mov	r0, r4
 800b1ae:	4619      	mov	r1, r3
 800b1b0:	f7ff ffa2 	bl	800b0f8 <xTimerGenericCommand>
				configASSERT( xResult );
 800b1b4:	2800      	cmp	r0, #0
 800b1b6:	d1d2      	bne.n	800b15e <prvSwitchTimerLists+0xa>
 800b1b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b1bc:	b672      	cpsid	i
 800b1be:	f383 8811 	msr	BASEPRI, r3
 800b1c2:	f3bf 8f6f 	isb	sy
 800b1c6:	f3bf 8f4f 	dsb	sy
 800b1ca:	b662      	cpsie	i
 800b1cc:	e7fe      	b.n	800b1cc <prvSwitchTimerLists+0x78>
 800b1ce:	bf00      	nop
 800b1d0:	20012478 	.word	0x20012478
 800b1d4:	2001247c 	.word	0x2001247c

0800b1d8 <prvTimerTask>:
{
 800b1d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b1dc:	4d84      	ldr	r5, [pc, #528]	; (800b3f0 <prvTimerTask+0x218>)
{
 800b1de:	b087      	sub	sp, #28
					portYIELD_WITHIN_API();
 800b1e0:	f8df 8218 	ldr.w	r8, [pc, #536]	; 800b3fc <prvTimerTask+0x224>
 800b1e4:	462f      	mov	r7, r5
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b1e6:	682a      	ldr	r2, [r5, #0]
 800b1e8:	6813      	ldr	r3, [r2, #0]
 800b1ea:	b353      	cbz	r3, 800b242 <prvTimerTask+0x6a>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b1ec:	68d3      	ldr	r3, [r2, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b1ee:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b1f0:	f8d3 9000 	ldr.w	r9, [r3]
	if( xTimeNow < xLastTime )
 800b1f4:	f8df b208 	ldr.w	fp, [pc, #520]	; 800b400 <prvTimerTask+0x228>
	vTaskSuspendAll();
 800b1f8:	f7ff fb44 	bl	800a884 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800b1fc:	f7ff fb4a 	bl	800a894 <xTaskGetTickCount>
 800b200:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800b202:	f8db 3000 	ldr.w	r3, [fp]
 800b206:	465e      	mov	r6, fp
 800b208:	4298      	cmp	r0, r3
 800b20a:	d31d      	bcc.n	800b248 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 800b20c:	f8cb 0000 	str.w	r0, [fp]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800b210:	b32c      	cbz	r4, 800b25e <prvTimerTask+0x86>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800b212:	4b78      	ldr	r3, [pc, #480]	; (800b3f4 <prvTimerTask+0x21c>)
 800b214:	681b      	ldr	r3, [r3, #0]
 800b216:	681a      	ldr	r2, [r3, #0]
 800b218:	fab2 f282 	clz	r2, r2
 800b21c:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800b21e:	4b76      	ldr	r3, [pc, #472]	; (800b3f8 <prvTimerTask+0x220>)
 800b220:	eba9 010a 	sub.w	r1, r9, sl
 800b224:	6818      	ldr	r0, [r3, #0]
 800b226:	f7ff f934 	bl	800a492 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800b22a:	f7ff fbcb 	bl	800a9c4 <xTaskResumeAll>
 800b22e:	b988      	cbnz	r0, 800b254 <prvTimerTask+0x7c>
					portYIELD_WITHIN_API();
 800b230:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800b234:	f8c8 3000 	str.w	r3, [r8]
 800b238:	f3bf 8f4f 	dsb	sy
 800b23c:	f3bf 8f6f 	isb	sy
 800b240:	e008      	b.n	800b254 <prvTimerTask+0x7c>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b242:	2401      	movs	r4, #1
		xNextExpireTime = ( TickType_t ) 0U;
 800b244:	4699      	mov	r9, r3
 800b246:	e7d5      	b.n	800b1f4 <prvTimerTask+0x1c>
		prvSwitchTimerLists();
 800b248:	f7ff ff84 	bl	800b154 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800b24c:	f8cb a000 	str.w	sl, [fp]
			( void ) xTaskResumeAll();
 800b250:	f7ff fbb8 	bl	800a9c4 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800b254:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 800b3f8 <prvTimerTask+0x220>
 800b258:	f04f 0a00 	mov.w	sl, #0
 800b25c:	e083      	b.n	800b366 <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800b25e:	4581      	cmp	r9, r0
 800b260:	d832      	bhi.n	800b2c8 <prvTimerTask+0xf0>
				( void ) xTaskResumeAll();
 800b262:	f7ff fbaf 	bl	800a9c4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b266:	683b      	ldr	r3, [r7, #0]
 800b268:	68db      	ldr	r3, [r3, #12]
 800b26a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b26e:	f10b 0004 	add.w	r0, fp, #4
 800b272:	f7fe fa3e 	bl	80096f2 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b276:	f89b 3028 	ldrb.w	r3, [fp, #40]	; 0x28
 800b27a:	0758      	lsls	r0, r3, #29
 800b27c:	d51b      	bpl.n	800b2b6 <prvTimerTask+0xde>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800b27e:	f8db 1018 	ldr.w	r1, [fp, #24]
 800b282:	464b      	mov	r3, r9
 800b284:	4652      	mov	r2, sl
 800b286:	4658      	mov	r0, fp
 800b288:	4449      	add	r1, r9
 800b28a:	f7ff fee3 	bl	800b054 <prvInsertTimerInActiveList>
 800b28e:	b1b0      	cbz	r0, 800b2be <prvTimerTask+0xe6>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b290:	9400      	str	r4, [sp, #0]
 800b292:	4623      	mov	r3, r4
 800b294:	464a      	mov	r2, r9
 800b296:	4621      	mov	r1, r4
 800b298:	4658      	mov	r0, fp
 800b29a:	f7ff ff2d 	bl	800b0f8 <xTimerGenericCommand>
			configASSERT( xResult );
 800b29e:	b970      	cbnz	r0, 800b2be <prvTimerTask+0xe6>
 800b2a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b2a4:	b672      	cpsid	i
 800b2a6:	f383 8811 	msr	BASEPRI, r3
 800b2aa:	f3bf 8f6f 	isb	sy
 800b2ae:	f3bf 8f4f 	dsb	sy
 800b2b2:	b662      	cpsie	i
 800b2b4:	e7fe      	b.n	800b2b4 <prvTimerTask+0xdc>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b2b6:	f023 0301 	bic.w	r3, r3, #1
 800b2ba:	f88b 3028 	strb.w	r3, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b2be:	f8db 3020 	ldr.w	r3, [fp, #32]
 800b2c2:	4658      	mov	r0, fp
 800b2c4:	4798      	blx	r3
 800b2c6:	e7c5      	b.n	800b254 <prvTimerTask+0x7c>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800b2c8:	4622      	mov	r2, r4
 800b2ca:	e7a8      	b.n	800b21e <prvTimerTask+0x46>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b2cc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800b2d0:	465a      	mov	r2, fp
 800b2d2:	69a1      	ldr	r1, [r4, #24]
 800b2d4:	4620      	mov	r0, r4
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b2d6:	f043 0301 	orr.w	r3, r3, #1
 800b2da:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800b2de:	9b03      	ldr	r3, [sp, #12]
 800b2e0:	4419      	add	r1, r3
 800b2e2:	f7ff feb7 	bl	800b054 <prvInsertTimerInActiveList>
 800b2e6:	2800      	cmp	r0, #0
 800b2e8:	d03d      	beq.n	800b366 <prvTimerTask+0x18e>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b2ea:	6a23      	ldr	r3, [r4, #32]
 800b2ec:	4620      	mov	r0, r4
 800b2ee:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b2f0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b2f4:	0759      	lsls	r1, r3, #29
 800b2f6:	d536      	bpl.n	800b366 <prvTimerTask+0x18e>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800b2f8:	69a2      	ldr	r2, [r4, #24]
 800b2fa:	2300      	movs	r3, #0
 800b2fc:	9903      	ldr	r1, [sp, #12]
 800b2fe:	4620      	mov	r0, r4
 800b300:	f8cd a000 	str.w	sl, [sp]
 800b304:	440a      	add	r2, r1
 800b306:	4619      	mov	r1, r3
 800b308:	f7ff fef6 	bl	800b0f8 <xTimerGenericCommand>
							configASSERT( xResult );
 800b30c:	bb58      	cbnz	r0, 800b366 <prvTimerTask+0x18e>
 800b30e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b312:	b672      	cpsid	i
 800b314:	f383 8811 	msr	BASEPRI, r3
 800b318:	f3bf 8f6f 	isb	sy
 800b31c:	f3bf 8f4f 	dsb	sy
 800b320:	b662      	cpsie	i
 800b322:	e7fe      	b.n	800b322 <prvTimerTask+0x14a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b324:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b328:	f023 0301 	bic.w	r3, r3, #1
 800b32c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800b330:	e019      	b.n	800b366 <prvTimerTask+0x18e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b332:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800b336:	9903      	ldr	r1, [sp, #12]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b338:	f043 0301 	orr.w	r3, r3, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800b33c:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b33e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800b342:	b951      	cbnz	r1, 800b35a <prvTimerTask+0x182>
 800b344:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b348:	b672      	cpsid	i
 800b34a:	f383 8811 	msr	BASEPRI, r3
 800b34e:	f3bf 8f6f 	isb	sy
 800b352:	f3bf 8f4f 	dsb	sy
 800b356:	b662      	cpsie	i
 800b358:	e7fe      	b.n	800b358 <prvTimerTask+0x180>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800b35a:	465b      	mov	r3, fp
 800b35c:	465a      	mov	r2, fp
 800b35e:	4459      	add	r1, fp
 800b360:	4620      	mov	r0, r4
 800b362:	f7ff fe77 	bl	800b054 <prvInsertTimerInActiveList>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800b366:	2200      	movs	r2, #0
 800b368:	a902      	add	r1, sp, #8
 800b36a:	f8d9 0000 	ldr.w	r0, [r9]
 800b36e:	f7fe fe8b 	bl	800a088 <xQueueReceive>
 800b372:	2800      	cmp	r0, #0
 800b374:	f43f af37 	beq.w	800b1e6 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800b378:	9b02      	ldr	r3, [sp, #8]
 800b37a:	2b00      	cmp	r3, #0
 800b37c:	da03      	bge.n	800b386 <prvTimerTask+0x1ae>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800b37e:	9b03      	ldr	r3, [sp, #12]
 800b380:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800b384:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800b386:	9b02      	ldr	r3, [sp, #8]
 800b388:	2b00      	cmp	r3, #0
 800b38a:	dbec      	blt.n	800b366 <prvTimerTask+0x18e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800b38c:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800b38e:	6963      	ldr	r3, [r4, #20]
 800b390:	b113      	cbz	r3, 800b398 <prvTimerTask+0x1c0>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b392:	1d20      	adds	r0, r4, #4
 800b394:	f7fe f9ad 	bl	80096f2 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800b398:	f7ff fa7c 	bl	800a894 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800b39c:	6833      	ldr	r3, [r6, #0]
	xTimeNow = xTaskGetTickCount();
 800b39e:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
 800b3a0:	4298      	cmp	r0, r3
 800b3a2:	d201      	bcs.n	800b3a8 <prvTimerTask+0x1d0>
		prvSwitchTimerLists();
 800b3a4:	f7ff fed6 	bl	800b154 <prvSwitchTimerLists>
			switch( xMessage.xMessageID )
 800b3a8:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800b3aa:	f8c6 b000 	str.w	fp, [r6]
			switch( xMessage.xMessageID )
 800b3ae:	2b09      	cmp	r3, #9
 800b3b0:	d8d9      	bhi.n	800b366 <prvTimerTask+0x18e>
 800b3b2:	a201      	add	r2, pc, #4	; (adr r2, 800b3b8 <prvTimerTask+0x1e0>)
 800b3b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b3b8:	0800b2cd 	.word	0x0800b2cd
 800b3bc:	0800b2cd 	.word	0x0800b2cd
 800b3c0:	0800b2cd 	.word	0x0800b2cd
 800b3c4:	0800b325 	.word	0x0800b325
 800b3c8:	0800b333 	.word	0x0800b333
 800b3cc:	0800b3e1 	.word	0x0800b3e1
 800b3d0:	0800b2cd 	.word	0x0800b2cd
 800b3d4:	0800b2cd 	.word	0x0800b2cd
 800b3d8:	0800b325 	.word	0x0800b325
 800b3dc:	0800b333 	.word	0x0800b333
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800b3e0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b3e4:	079a      	lsls	r2, r3, #30
 800b3e6:	d49f      	bmi.n	800b328 <prvTimerTask+0x150>
							vPortFree( pxTimer );
 800b3e8:	4620      	mov	r0, r4
 800b3ea:	f7fe f915 	bl	8009618 <vPortFree>
 800b3ee:	e7ba      	b.n	800b366 <prvTimerTask+0x18e>
 800b3f0:	20012478 	.word	0x20012478
 800b3f4:	2001247c 	.word	0x2001247c
 800b3f8:	2001259c 	.word	0x2001259c
 800b3fc:	e000ed04 	.word	0xe000ed04
 800b400:	20012548 	.word	0x20012548

0800b404 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800b404:	8880      	ldrh	r0, [r0, #4]
 800b406:	4770      	bx	lr

0800b408 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800b408:	2300      	movs	r3, #0
 800b40a:	8083      	strh	r3, [r0, #4]
 800b40c:	4770      	bx	lr
	...

0800b410 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800b410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b412:	6803      	ldr	r3, [r0, #0]
 800b414:	460e      	mov	r6, r1
 800b416:	2100      	movs	r1, #0
 800b418:	4605      	mov	r5, r0
 800b41a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b41c:	4798      	blx	r3
 800b41e:	4604      	mov	r4, r0
 800b420:	682b      	ldr	r3, [r5, #0]
 800b422:	4628      	mov	r0, r5
 800b424:	1b34      	subs	r4, r6, r4
 800b426:	6a1b      	ldr	r3, [r3, #32]
 800b428:	b2a4      	uxth	r4, r4
 800b42a:	4798      	blx	r3
 800b42c:	88ab      	ldrh	r3, [r5, #4]
 800b42e:	fbb4 f4f0 	udiv	r4, r4, r0
 800b432:	42a3      	cmp	r3, r4
 800b434:	d805      	bhi.n	800b442 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800b436:	4b0e      	ldr	r3, [pc, #56]	; (800b470 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800b438:	2120      	movs	r1, #32
 800b43a:	4a0e      	ldr	r2, [pc, #56]	; (800b474 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800b43c:	480e      	ldr	r0, [pc, #56]	; (800b478 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800b43e:	f015 fc97 	bl	8020d70 <__assert_func>
 800b442:	682b      	ldr	r3, [r5, #0]
 800b444:	2100      	movs	r1, #0
 800b446:	4628      	mov	r0, r5
 800b448:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b44a:	4798      	blx	r3
 800b44c:	682b      	ldr	r3, [r5, #0]
 800b44e:	4607      	mov	r7, r0
 800b450:	4628      	mov	r0, r5
 800b452:	6a1b      	ldr	r3, [r3, #32]
 800b454:	4798      	blx	r3
 800b456:	1bf3      	subs	r3, r6, r7
 800b458:	b29b      	uxth	r3, r3
 800b45a:	fbb3 f2f0 	udiv	r2, r3, r0
 800b45e:	fb02 3010 	mls	r0, r2, r0, r3
 800b462:	b118      	cbz	r0, 800b46c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800b464:	4b05      	ldr	r3, [pc, #20]	; (800b47c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800b466:	2121      	movs	r1, #33	; 0x21
 800b468:	4a02      	ldr	r2, [pc, #8]	; (800b474 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800b46a:	e7e7      	b.n	800b43c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800b46c:	4620      	mov	r0, r4
 800b46e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b470:	080230c4 	.word	0x080230c4
 800b474:	08023232 	.word	0x08023232
 800b478:	080230d9 	.word	0x080230d9
 800b47c:	08023107 	.word	0x08023107

0800b480 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800b480:	b538      	push	{r3, r4, r5, lr}
 800b482:	6803      	ldr	r3, [r0, #0]
 800b484:	460d      	mov	r5, r1
 800b486:	4604      	mov	r4, r0
 800b488:	6a1b      	ldr	r3, [r3, #32]
 800b48a:	4798      	blx	r3
 800b48c:	4285      	cmp	r5, r0
 800b48e:	d905      	bls.n	800b49c <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800b490:	4b0c      	ldr	r3, [pc, #48]	; (800b4c4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800b492:	2132      	movs	r1, #50	; 0x32
 800b494:	4a0c      	ldr	r2, [pc, #48]	; (800b4c8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800b496:	480d      	ldr	r0, [pc, #52]	; (800b4cc <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800b498:	f015 fc6a 	bl	8020d70 <__assert_func>
 800b49c:	6823      	ldr	r3, [r4, #0]
 800b49e:	4620      	mov	r0, r4
 800b4a0:	88a5      	ldrh	r5, [r4, #4]
 800b4a2:	69db      	ldr	r3, [r3, #28]
 800b4a4:	4798      	blx	r3
 800b4a6:	4285      	cmp	r5, r0
 800b4a8:	d303      	bcc.n	800b4b2 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800b4aa:	4b09      	ldr	r3, [pc, #36]	; (800b4d0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800b4ac:	2133      	movs	r1, #51	; 0x33
 800b4ae:	4a06      	ldr	r2, [pc, #24]	; (800b4c8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800b4b0:	e7f1      	b.n	800b496 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800b4b2:	6823      	ldr	r3, [r4, #0]
 800b4b4:	4620      	mov	r0, r4
 800b4b6:	88a1      	ldrh	r1, [r4, #4]
 800b4b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b4ba:	4798      	blx	r3
 800b4bc:	88a3      	ldrh	r3, [r4, #4]
 800b4be:	3301      	adds	r3, #1
 800b4c0:	80a3      	strh	r3, [r4, #4]
 800b4c2:	bd38      	pop	{r3, r4, r5, pc}
 800b4c4:	08023181 	.word	0x08023181
 800b4c8:	08023275 	.word	0x08023275
 800b4cc:	080230d9 	.word	0x080230d9
 800b4d0:	08023198 	.word	0x08023198

0800b4d4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800b4d4:	b570      	push	{r4, r5, r6, lr}
 800b4d6:	6803      	ldr	r3, [r0, #0]
 800b4d8:	4616      	mov	r6, r2
 800b4da:	4604      	mov	r4, r0
 800b4dc:	460d      	mov	r5, r1
 800b4de:	6a1b      	ldr	r3, [r3, #32]
 800b4e0:	4798      	blx	r3
 800b4e2:	4286      	cmp	r6, r0
 800b4e4:	d905      	bls.n	800b4f2 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800b4e6:	4b06      	ldr	r3, [pc, #24]	; (800b500 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800b4e8:	213c      	movs	r1, #60	; 0x3c
 800b4ea:	4a06      	ldr	r2, [pc, #24]	; (800b504 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800b4ec:	4806      	ldr	r0, [pc, #24]	; (800b508 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800b4ee:	f015 fc3f 	bl	8020d70 <__assert_func>
 800b4f2:	6823      	ldr	r3, [r4, #0]
 800b4f4:	4629      	mov	r1, r5
 800b4f6:	4620      	mov	r0, r4
 800b4f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b4fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b4fe:	4718      	bx	r3
 800b500:	08023181 	.word	0x08023181
 800b504:	080231e8 	.word	0x080231e8
 800b508:	080230d9 	.word	0x080230d9

0800b50c <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800b50c:	4770      	bx	lr
	...

0800b510 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800b510:	4a02      	ldr	r2, [pc, #8]	; (800b51c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800b512:	6002      	str	r2, [r0, #0]
 800b514:	2200      	movs	r2, #0
 800b516:	8082      	strh	r2, [r0, #4]
 800b518:	4770      	bx	lr
 800b51a:	bf00      	nop
 800b51c:	080231bc 	.word	0x080231bc

0800b520 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800b520:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b522:	2000      	movs	r0, #0
 800b524:	b12b      	cbz	r3, 800b532 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800b526:	b920      	cbnz	r0, 800b532 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800b528:	1a5a      	subs	r2, r3, r1
 800b52a:	699b      	ldr	r3, [r3, #24]
 800b52c:	4250      	negs	r0, r2
 800b52e:	4150      	adcs	r0, r2
 800b530:	e7f8      	b.n	800b524 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800b532:	4770      	bx	lr

0800b534 <_ZN8touchgfx9Container9removeAllEv>:
 800b534:	2200      	movs	r2, #0
 800b536:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b538:	b123      	cbz	r3, 800b544 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800b53a:	6999      	ldr	r1, [r3, #24]
 800b53c:	6281      	str	r1, [r0, #40]	; 0x28
 800b53e:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800b542:	e7f8      	b.n	800b536 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800b544:	4770      	bx	lr

0800b546 <_ZN8touchgfx9Container6unlinkEv>:
 800b546:	2300      	movs	r3, #0
 800b548:	6283      	str	r3, [r0, #40]	; 0x28
 800b54a:	4770      	bx	lr

0800b54c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800b54c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b550:	461f      	mov	r7, r3
 800b552:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800b556:	460d      	mov	r5, r1
 800b558:	4616      	mov	r6, r2
 800b55a:	b103      	cbz	r3, 800b55e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800b55c:	6038      	str	r0, [r7, #0]
 800b55e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b560:	b314      	cbz	r4, 800b5a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800b562:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b566:	b1eb      	cbz	r3, 800b5a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b568:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800b56c:	428d      	cmp	r5, r1
 800b56e:	db19      	blt.n	800b5a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b570:	b289      	uxth	r1, r1
 800b572:	8923      	ldrh	r3, [r4, #8]
 800b574:	440b      	add	r3, r1
 800b576:	b21b      	sxth	r3, r3
 800b578:	429d      	cmp	r5, r3
 800b57a:	da13      	bge.n	800b5a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b57c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800b580:	4296      	cmp	r6, r2
 800b582:	db0f      	blt.n	800b5a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b584:	b292      	uxth	r2, r2
 800b586:	8963      	ldrh	r3, [r4, #10]
 800b588:	4413      	add	r3, r2
 800b58a:	b21b      	sxth	r3, r3
 800b58c:	429e      	cmp	r6, r3
 800b58e:	da09      	bge.n	800b5a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b590:	6823      	ldr	r3, [r4, #0]
 800b592:	1ab2      	subs	r2, r6, r2
 800b594:	1a69      	subs	r1, r5, r1
 800b596:	4620      	mov	r0, r4
 800b598:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800b59c:	b212      	sxth	r2, r2
 800b59e:	463b      	mov	r3, r7
 800b5a0:	b209      	sxth	r1, r1
 800b5a2:	47c0      	blx	r8
 800b5a4:	69a4      	ldr	r4, [r4, #24]
 800b5a6:	e7db      	b.n	800b560 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800b5a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b5ac <_ZNK8touchgfx9Container12getSolidRectEv>:
 800b5ac:	2200      	movs	r2, #0
 800b5ae:	8002      	strh	r2, [r0, #0]
 800b5b0:	8042      	strh	r2, [r0, #2]
 800b5b2:	8082      	strh	r2, [r0, #4]
 800b5b4:	80c2      	strh	r2, [r0, #6]
 800b5b6:	4770      	bx	lr

0800b5b8 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800b5b8:	b570      	push	{r4, r5, r6, lr}
 800b5ba:	460d      	mov	r5, r1
 800b5bc:	4616      	mov	r6, r2
 800b5be:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b5c0:	b13c      	cbz	r4, 800b5d2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800b5c2:	6823      	ldr	r3, [r4, #0]
 800b5c4:	4620      	mov	r0, r4
 800b5c6:	4632      	mov	r2, r6
 800b5c8:	4629      	mov	r1, r5
 800b5ca:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b5cc:	4798      	blx	r3
 800b5ce:	69a4      	ldr	r4, [r4, #24]
 800b5d0:	e7f6      	b.n	800b5c0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800b5d2:	bd70      	pop	{r4, r5, r6, pc}

0800b5d4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800b5d4:	b538      	push	{r3, r4, r5, lr}
 800b5d6:	460d      	mov	r5, r1
 800b5d8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b5da:	b134      	cbz	r4, 800b5ea <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800b5dc:	682b      	ldr	r3, [r5, #0]
 800b5de:	4621      	mov	r1, r4
 800b5e0:	4628      	mov	r0, r5
 800b5e2:	689b      	ldr	r3, [r3, #8]
 800b5e4:	4798      	blx	r3
 800b5e6:	69a4      	ldr	r4, [r4, #24]
 800b5e8:	e7f7      	b.n	800b5da <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800b5ea:	bd38      	pop	{r3, r4, r5, pc}

0800b5ec <_ZN8touchgfx9ContainerD1Ev>:
 800b5ec:	4770      	bx	lr

0800b5ee <_ZN8touchgfx9ContainerD0Ev>:
 800b5ee:	b510      	push	{r4, lr}
 800b5f0:	4604      	mov	r4, r0
 800b5f2:	212c      	movs	r1, #44	; 0x2c
 800b5f4:	f014 f830 	bl	801f658 <_ZdlPvj>
 800b5f8:	4620      	mov	r0, r4
 800b5fa:	bd10      	pop	{r4, pc}

0800b5fc <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800b5fc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b5fe:	b19b      	cbz	r3, 800b628 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800b600:	428b      	cmp	r3, r1
 800b602:	d109      	bne.n	800b618 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800b604:	699a      	ldr	r2, [r3, #24]
 800b606:	2100      	movs	r1, #0
 800b608:	6159      	str	r1, [r3, #20]
 800b60a:	6282      	str	r2, [r0, #40]	; 0x28
 800b60c:	b902      	cbnz	r2, 800b610 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800b60e:	4770      	bx	lr
 800b610:	6199      	str	r1, [r3, #24]
 800b612:	4770      	bx	lr
 800b614:	4613      	mov	r3, r2
 800b616:	b13a      	cbz	r2, 800b628 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800b618:	699a      	ldr	r2, [r3, #24]
 800b61a:	428a      	cmp	r2, r1
 800b61c:	d1fa      	bne.n	800b614 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800b61e:	698a      	ldr	r2, [r1, #24]
 800b620:	619a      	str	r2, [r3, #24]
 800b622:	2300      	movs	r3, #0
 800b624:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800b628:	4770      	bx	lr

0800b62a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800b62a:	b410      	push	{r4}
 800b62c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b62e:	4604      	mov	r4, r0
 800b630:	b92b      	cbnz	r3, 800b63e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800b632:	6803      	ldr	r3, [r0, #0]
 800b634:	4611      	mov	r1, r2
 800b636:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b63a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b63c:	4718      	bx	r3
 800b63e:	b941      	cbnz	r1, 800b652 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800b640:	6193      	str	r3, [r2, #24]
 800b642:	6282      	str	r2, [r0, #40]	; 0x28
 800b644:	6154      	str	r4, [r2, #20]
 800b646:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b64a:	4770      	bx	lr
 800b64c:	4603      	mov	r3, r0
 800b64e:	2800      	cmp	r0, #0
 800b650:	d0f9      	beq.n	800b646 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800b652:	4299      	cmp	r1, r3
 800b654:	6998      	ldr	r0, [r3, #24]
 800b656:	d1f9      	bne.n	800b64c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800b658:	6190      	str	r0, [r2, #24]
 800b65a:	618a      	str	r2, [r1, #24]
 800b65c:	e7f2      	b.n	800b644 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800b660:	4288      	cmp	r0, r1
 800b662:	b508      	push	{r3, lr}
 800b664:	d105      	bne.n	800b672 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800b666:	4b11      	ldr	r3, [pc, #68]	; (800b6ac <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800b668:	2123      	movs	r1, #35	; 0x23
 800b66a:	4a11      	ldr	r2, [pc, #68]	; (800b6b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b66c:	4811      	ldr	r0, [pc, #68]	; (800b6b4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800b66e:	f015 fb7f 	bl	8020d70 <__assert_func>
 800b672:	694b      	ldr	r3, [r1, #20]
 800b674:	b11b      	cbz	r3, 800b67e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800b676:	4b10      	ldr	r3, [pc, #64]	; (800b6b8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800b678:	2124      	movs	r1, #36	; 0x24
 800b67a:	4a0d      	ldr	r2, [pc, #52]	; (800b6b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b67c:	e7f6      	b.n	800b66c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800b67e:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800b682:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b684:	b913      	cbnz	r3, 800b68c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800b686:	6281      	str	r1, [r0, #40]	; 0x28
 800b688:	bd08      	pop	{r3, pc}
 800b68a:	4613      	mov	r3, r2
 800b68c:	699a      	ldr	r2, [r3, #24]
 800b68e:	b12a      	cbz	r2, 800b69c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800b690:	428b      	cmp	r3, r1
 800b692:	d1fa      	bne.n	800b68a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800b694:	4b09      	ldr	r3, [pc, #36]	; (800b6bc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800b696:	2135      	movs	r1, #53	; 0x35
 800b698:	4a05      	ldr	r2, [pc, #20]	; (800b6b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b69a:	e7e7      	b.n	800b66c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800b69c:	428b      	cmp	r3, r1
 800b69e:	d103      	bne.n	800b6a8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800b6a0:	4b06      	ldr	r3, [pc, #24]	; (800b6bc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800b6a2:	2138      	movs	r1, #56	; 0x38
 800b6a4:	4a02      	ldr	r2, [pc, #8]	; (800b6b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b6a6:	e7e1      	b.n	800b66c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800b6a8:	6199      	str	r1, [r3, #24]
 800b6aa:	e7ed      	b.n	800b688 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800b6ac:	080232b3 	.word	0x080232b3
 800b6b0:	08023404 	.word	0x08023404
 800b6b4:	080232df 	.word	0x080232df
 800b6b8:	08023312 	.word	0x08023312
 800b6bc:	08023348 	.word	0x08023348

0800b6c0 <_ZN8touchgfx4RectaNERKS0_>:
 800b6c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b6c4:	f9b1 7000 	ldrsh.w	r7, [r1]
 800b6c8:	888c      	ldrh	r4, [r1, #4]
 800b6ca:	f9b0 9000 	ldrsh.w	r9, [r0]
 800b6ce:	443c      	add	r4, r7
 800b6d0:	b2a4      	uxth	r4, r4
 800b6d2:	fa0f f884 	sxth.w	r8, r4
 800b6d6:	45c1      	cmp	r9, r8
 800b6d8:	da2f      	bge.n	800b73a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b6da:	8882      	ldrh	r2, [r0, #4]
 800b6dc:	444a      	add	r2, r9
 800b6de:	b292      	uxth	r2, r2
 800b6e0:	fa0f fe82 	sxth.w	lr, r2
 800b6e4:	4577      	cmp	r7, lr
 800b6e6:	da28      	bge.n	800b73a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b6e8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800b6ec:	88cb      	ldrh	r3, [r1, #6]
 800b6ee:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800b6f2:	442b      	add	r3, r5
 800b6f4:	b21b      	sxth	r3, r3
 800b6f6:	429e      	cmp	r6, r3
 800b6f8:	da1f      	bge.n	800b73a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b6fa:	88c3      	ldrh	r3, [r0, #6]
 800b6fc:	4433      	add	r3, r6
 800b6fe:	b29b      	uxth	r3, r3
 800b700:	fa0f fc83 	sxth.w	ip, r3
 800b704:	4565      	cmp	r5, ip
 800b706:	da18      	bge.n	800b73a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b708:	454f      	cmp	r7, r9
 800b70a:	bfb8      	it	lt
 800b70c:	464f      	movlt	r7, r9
 800b70e:	42b5      	cmp	r5, r6
 800b710:	bfb8      	it	lt
 800b712:	4635      	movlt	r5, r6
 800b714:	45f0      	cmp	r8, lr
 800b716:	bfd8      	it	le
 800b718:	4622      	movle	r2, r4
 800b71a:	1bd2      	subs	r2, r2, r7
 800b71c:	8082      	strh	r2, [r0, #4]
 800b71e:	884a      	ldrh	r2, [r1, #2]
 800b720:	88c9      	ldrh	r1, [r1, #6]
 800b722:	8007      	strh	r7, [r0, #0]
 800b724:	440a      	add	r2, r1
 800b726:	8045      	strh	r5, [r0, #2]
 800b728:	b292      	uxth	r2, r2
 800b72a:	b211      	sxth	r1, r2
 800b72c:	458c      	cmp	ip, r1
 800b72e:	bfa8      	it	ge
 800b730:	4613      	movge	r3, r2
 800b732:	1b5b      	subs	r3, r3, r5
 800b734:	80c3      	strh	r3, [r0, #6]
 800b736:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b73a:	2300      	movs	r3, #0
 800b73c:	8003      	strh	r3, [r0, #0]
 800b73e:	8043      	strh	r3, [r0, #2]
 800b740:	8083      	strh	r3, [r0, #4]
 800b742:	80c3      	strh	r3, [r0, #6]
 800b744:	e7f7      	b.n	800b736 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800b746 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800b746:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b74a:	2b00      	cmp	r3, #0
 800b74c:	dd06      	ble.n	800b75c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800b74e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800b752:	2800      	cmp	r0, #0
 800b754:	bfcc      	ite	gt
 800b756:	2000      	movgt	r0, #0
 800b758:	2001      	movle	r0, #1
 800b75a:	4770      	bx	lr
 800b75c:	2001      	movs	r0, #1
 800b75e:	4770      	bx	lr

0800b760 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800b760:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b764:	2300      	movs	r3, #0
 800b766:	4604      	mov	r4, r0
 800b768:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800b76a:	8003      	strh	r3, [r0, #0]
 800b76c:	8043      	strh	r3, [r0, #2]
 800b76e:	8083      	strh	r3, [r0, #4]
 800b770:	80c3      	strh	r3, [r0, #6]
 800b772:	2d00      	cmp	r5, #0
 800b774:	d040      	beq.n	800b7f8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800b776:	1d28      	adds	r0, r5, #4
 800b778:	f7ff ffe5 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b77c:	b988      	cbnz	r0, 800b7a2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b77e:	4620      	mov	r0, r4
 800b780:	f7ff ffe1 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b784:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800b788:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b78c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800b790:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800b794:	b138      	cbz	r0, 800b7a6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800b796:	8022      	strh	r2, [r4, #0]
 800b798:	8063      	strh	r3, [r4, #2]
 800b79a:	f8a4 e004 	strh.w	lr, [r4, #4]
 800b79e:	f8a4 c006 	strh.w	ip, [r4, #6]
 800b7a2:	69ad      	ldr	r5, [r5, #24]
 800b7a4:	e7e5      	b.n	800b772 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800b7a6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800b7aa:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800b7ae:	4290      	cmp	r0, r2
 800b7b0:	4607      	mov	r7, r0
 800b7b2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800b7b6:	460e      	mov	r6, r1
 800b7b8:	bfa8      	it	ge
 800b7ba:	4617      	movge	r7, r2
 800b7bc:	4299      	cmp	r1, r3
 800b7be:	4472      	add	r2, lr
 800b7c0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800b7c4:	bfa8      	it	ge
 800b7c6:	461e      	movge	r6, r3
 800b7c8:	4440      	add	r0, r8
 800b7ca:	4471      	add	r1, lr
 800b7cc:	4463      	add	r3, ip
 800b7ce:	b200      	sxth	r0, r0
 800b7d0:	8027      	strh	r7, [r4, #0]
 800b7d2:	b212      	sxth	r2, r2
 800b7d4:	8066      	strh	r6, [r4, #2]
 800b7d6:	b209      	sxth	r1, r1
 800b7d8:	b21b      	sxth	r3, r3
 800b7da:	4290      	cmp	r0, r2
 800b7dc:	bfac      	ite	ge
 800b7de:	ebc7 0200 	rsbge	r2, r7, r0
 800b7e2:	ebc7 0202 	rsblt	r2, r7, r2
 800b7e6:	4299      	cmp	r1, r3
 800b7e8:	bfac      	ite	ge
 800b7ea:	ebc6 0301 	rsbge	r3, r6, r1
 800b7ee:	ebc6 0303 	rsblt	r3, r6, r3
 800b7f2:	80a2      	strh	r2, [r4, #4]
 800b7f4:	80e3      	strh	r3, [r4, #6]
 800b7f6:	e7d4      	b.n	800b7a2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b7f8:	4620      	mov	r0, r4
 800b7fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b7fe <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800b7fe:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b802:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b806:	b383      	cbz	r3, 800b86a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b808:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b80a:	b374      	cbz	r4, 800b86a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b80c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800b810:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800b814:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800b818:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800b81c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b820:	b303      	cbz	r3, 800b864 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b822:	4668      	mov	r0, sp
 800b824:	1d21      	adds	r1, r4, #4
 800b826:	f8ad 5000 	strh.w	r5, [sp]
 800b82a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800b82e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b832:	f8ad 8006 	strh.w	r8, [sp, #6]
 800b836:	f7ff ff43 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 800b83a:	4668      	mov	r0, sp
 800b83c:	f7ff ff83 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b840:	b980      	cbnz	r0, 800b864 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b842:	f8bd 3000 	ldrh.w	r3, [sp]
 800b846:	4669      	mov	r1, sp
 800b848:	88a2      	ldrh	r2, [r4, #4]
 800b84a:	4620      	mov	r0, r4
 800b84c:	1a9b      	subs	r3, r3, r2
 800b84e:	88e2      	ldrh	r2, [r4, #6]
 800b850:	f8ad 3000 	strh.w	r3, [sp]
 800b854:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b858:	1a9b      	subs	r3, r3, r2
 800b85a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b85e:	6823      	ldr	r3, [r4, #0]
 800b860:	689b      	ldr	r3, [r3, #8]
 800b862:	4798      	blx	r3
 800b864:	69a4      	ldr	r4, [r4, #24]
 800b866:	2c00      	cmp	r4, #0
 800b868:	d1d8      	bne.n	800b81c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800b86a:	b002      	add	sp, #8
 800b86c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b870 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800b870:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b872:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b876:	460d      	mov	r5, r1
 800b878:	4616      	mov	r6, r2
 800b87a:	b323      	cbz	r3, 800b8c6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b87c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b87e:	b314      	cbz	r4, 800b8c6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b880:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b884:	b1eb      	cbz	r3, 800b8c2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b886:	6828      	ldr	r0, [r5, #0]
 800b888:	466b      	mov	r3, sp
 800b88a:	6869      	ldr	r1, [r5, #4]
 800b88c:	c303      	stmia	r3!, {r0, r1}
 800b88e:	4668      	mov	r0, sp
 800b890:	1d21      	adds	r1, r4, #4
 800b892:	f7ff ff15 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 800b896:	4668      	mov	r0, sp
 800b898:	f7ff ff55 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b89c:	b988      	cbnz	r0, 800b8c2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b89e:	f8bd 3000 	ldrh.w	r3, [sp]
 800b8a2:	4669      	mov	r1, sp
 800b8a4:	88a2      	ldrh	r2, [r4, #4]
 800b8a6:	4620      	mov	r0, r4
 800b8a8:	1a9b      	subs	r3, r3, r2
 800b8aa:	88e2      	ldrh	r2, [r4, #6]
 800b8ac:	f8ad 3000 	strh.w	r3, [sp]
 800b8b0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b8b4:	1a9b      	subs	r3, r3, r2
 800b8b6:	4632      	mov	r2, r6
 800b8b8:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b8bc:	6823      	ldr	r3, [r4, #0]
 800b8be:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800b8c0:	4798      	blx	r3
 800b8c2:	69a4      	ldr	r4, [r4, #24]
 800b8c4:	e7db      	b.n	800b87e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800b8c6:	b002      	add	sp, #8
 800b8c8:	bd70      	pop	{r4, r5, r6, pc}

0800b8ca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b8ca:	6803      	ldr	r3, [r0, #0]
 800b8cc:	b513      	push	{r0, r1, r4, lr}
 800b8ce:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800b8d2:	2300      	movs	r3, #0
 800b8d4:	e9cd 3300 	strd	r3, r3, [sp]
 800b8d8:	466b      	mov	r3, sp
 800b8da:	47a0      	blx	r4
 800b8dc:	b002      	add	sp, #8
 800b8de:	bd10      	pop	{r4, pc}

0800b8e0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b8e0:	2301      	movs	r3, #1
 800b8e2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b8e6:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b8ea:	4770      	bx	lr

0800b8ec <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b8ec:	2301      	movs	r3, #1
 800b8ee:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b8f2:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b8f6:	4770      	bx	lr

0800b8f8 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b8f8:	6843      	ldr	r3, [r0, #4]
 800b8fa:	2201      	movs	r2, #1
 800b8fc:	725a      	strb	r2, [r3, #9]
 800b8fe:	6840      	ldr	r0, [r0, #4]
 800b900:	6803      	ldr	r3, [r0, #0]
 800b902:	691b      	ldr	r3, [r3, #16]
 800b904:	4718      	bx	r3

0800b906 <_ZN8touchgfx3HAL8flushDMAEv>:
 800b906:	6840      	ldr	r0, [r0, #4]
 800b908:	6803      	ldr	r3, [r0, #0]
 800b90a:	689b      	ldr	r3, [r3, #8]
 800b90c:	4718      	bx	r3
	...

0800b910 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b910:	4b04      	ldr	r3, [pc, #16]	; (800b924 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b912:	781b      	ldrb	r3, [r3, #0]
 800b914:	b123      	cbz	r3, 800b920 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b916:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800b91a:	f080 0001 	eor.w	r0, r0, #1
 800b91e:	4770      	bx	lr
 800b920:	2001      	movs	r0, #1
 800b922:	4770      	bx	lr
 800b924:	200125ae 	.word	0x200125ae

0800b928 <_ZN8touchgfx3HAL8endFrameEv>:
 800b928:	b510      	push	{r4, lr}
 800b92a:	4604      	mov	r4, r0
 800b92c:	6840      	ldr	r0, [r0, #4]
 800b92e:	6803      	ldr	r3, [r0, #0]
 800b930:	689b      	ldr	r3, [r3, #8]
 800b932:	4798      	blx	r3
 800b934:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800b938:	b113      	cbz	r3, 800b940 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b93a:	2301      	movs	r3, #1
 800b93c:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b940:	bd10      	pop	{r4, pc}
	...

0800b944 <_ZN8touchgfx3HAL4tickEv>:
 800b944:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b946:	6803      	ldr	r3, [r0, #0]
 800b948:	4604      	mov	r4, r0
 800b94a:	4d5c      	ldr	r5, [pc, #368]	; (800babc <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b94c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800b950:	4798      	blx	r3
 800b952:	2800      	cmp	r0, #0
 800b954:	f000 8097 	beq.w	800ba86 <_ZN8touchgfx3HAL4tickEv+0x142>
 800b958:	2001      	movs	r0, #1
 800b95a:	2600      	movs	r6, #0
 800b95c:	f7f6 fbf5 	bl	800214a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b960:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b964:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b968:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b96c:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b970:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b974:	b133      	cbz	r3, 800b984 <_ZN8touchgfx3HAL4tickEv+0x40>
 800b976:	6823      	ldr	r3, [r4, #0]
 800b978:	4620      	mov	r0, r4
 800b97a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800b97e:	4798      	blx	r3
 800b980:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b984:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b988:	2601      	movs	r6, #1
 800b98a:	6862      	ldr	r2, [r4, #4]
 800b98c:	f083 0301 	eor.w	r3, r3, #1
 800b990:	702e      	strb	r6, [r5, #0]
 800b992:	7253      	strb	r3, [r2, #9]
 800b994:	f004 febe 	bl	8010714 <_ZN8touchgfx11Application11getInstanceEv>
 800b998:	6803      	ldr	r3, [r0, #0]
 800b99a:	4631      	mov	r1, r6
 800b99c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b99e:	4798      	blx	r3
 800b9a0:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b9a4:	b90b      	cbnz	r3, 800b9aa <_ZN8touchgfx3HAL4tickEv+0x66>
 800b9a6:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b9aa:	f004 feb3 	bl	8010714 <_ZN8touchgfx11Application11getInstanceEv>
 800b9ae:	6803      	ldr	r3, [r0, #0]
 800b9b0:	695b      	ldr	r3, [r3, #20]
 800b9b2:	4798      	blx	r3
 800b9b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b9b6:	6803      	ldr	r3, [r0, #0]
 800b9b8:	691b      	ldr	r3, [r3, #16]
 800b9ba:	4798      	blx	r3
 800b9bc:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b9c0:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b9c4:	3b01      	subs	r3, #1
 800b9c6:	b2db      	uxtb	r3, r3
 800b9c8:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b9cc:	b10a      	cbz	r2, 800b9d2 <_ZN8touchgfx3HAL4tickEv+0x8e>
 800b9ce:	2b00      	cmp	r3, #0
 800b9d0:	d1eb      	bne.n	800b9aa <_ZN8touchgfx3HAL4tickEv+0x66>
 800b9d2:	4a3b      	ldr	r2, [pc, #236]	; (800bac0 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b9d4:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b9d8:	7813      	ldrb	r3, [r2, #0]
 800b9da:	3301      	adds	r3, #1
 800b9dc:	b25b      	sxtb	r3, r3
 800b9de:	4299      	cmp	r1, r3
 800b9e0:	7013      	strb	r3, [r2, #0]
 800b9e2:	dc10      	bgt.n	800ba06 <_ZN8touchgfx3HAL4tickEv+0xc2>
 800b9e4:	2300      	movs	r3, #0
 800b9e6:	68e0      	ldr	r0, [r4, #12]
 800b9e8:	a902      	add	r1, sp, #8
 800b9ea:	7013      	strb	r3, [r2, #0]
 800b9ec:	aa03      	add	r2, sp, #12
 800b9ee:	6803      	ldr	r3, [r0, #0]
 800b9f0:	68db      	ldr	r3, [r3, #12]
 800b9f2:	4798      	blx	r3
 800b9f4:	6823      	ldr	r3, [r4, #0]
 800b9f6:	2800      	cmp	r0, #0
 800b9f8:	d051      	beq.n	800ba9e <_ZN8touchgfx3HAL4tickEv+0x15a>
 800b9fa:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800b9fe:	4620      	mov	r0, r4
 800ba00:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ba04:	4798      	blx	r3
 800ba06:	2300      	movs	r3, #0
 800ba08:	6960      	ldr	r0, [r4, #20]
 800ba0a:	f88d 3007 	strb.w	r3, [sp, #7]
 800ba0e:	b158      	cbz	r0, 800ba28 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800ba10:	6803      	ldr	r3, [r0, #0]
 800ba12:	f10d 0107 	add.w	r1, sp, #7
 800ba16:	68db      	ldr	r3, [r3, #12]
 800ba18:	4798      	blx	r3
 800ba1a:	b128      	cbz	r0, 800ba28 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800ba1c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ba1e:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800ba22:	6803      	ldr	r3, [r0, #0]
 800ba24:	68db      	ldr	r3, [r3, #12]
 800ba26:	4798      	blx	r3
 800ba28:	f104 001c 	add.w	r0, r4, #28
 800ba2c:	f013 fc7a 	bl	801f324 <_ZN8touchgfx8Gestures4tickEv>
 800ba30:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800ba34:	b30b      	cbz	r3, 800ba7a <_ZN8touchgfx3HAL4tickEv+0x136>
 800ba36:	6920      	ldr	r0, [r4, #16]
 800ba38:	6803      	ldr	r3, [r0, #0]
 800ba3a:	691b      	ldr	r3, [r3, #16]
 800ba3c:	4798      	blx	r3
 800ba3e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ba40:	4606      	mov	r6, r0
 800ba42:	b903      	cbnz	r3, 800ba46 <_ZN8touchgfx3HAL4tickEv+0x102>
 800ba44:	6720      	str	r0, [r4, #112]	; 0x70
 800ba46:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ba48:	4a1e      	ldr	r2, [pc, #120]	; (800bac4 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800ba4a:	1af3      	subs	r3, r6, r3
 800ba4c:	4293      	cmp	r3, r2
 800ba4e:	d914      	bls.n	800ba7a <_ZN8touchgfx3HAL4tickEv+0x136>
 800ba50:	6920      	ldr	r0, [r4, #16]
 800ba52:	6803      	ldr	r3, [r0, #0]
 800ba54:	699b      	ldr	r3, [r3, #24]
 800ba56:	4798      	blx	r3
 800ba58:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ba5a:	2264      	movs	r2, #100	; 0x64
 800ba5c:	1af3      	subs	r3, r6, r3
 800ba5e:	fbb3 f3f2 	udiv	r3, r3, r2
 800ba62:	fbb0 f0f3 	udiv	r0, r0, r3
 800ba66:	2800      	cmp	r0, #0
 800ba68:	dc1e      	bgt.n	800baa8 <_ZN8touchgfx3HAL4tickEv+0x164>
 800ba6a:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800ba6e:	6920      	ldr	r0, [r4, #16]
 800ba70:	2100      	movs	r1, #0
 800ba72:	6803      	ldr	r3, [r0, #0]
 800ba74:	69db      	ldr	r3, [r3, #28]
 800ba76:	4798      	blx	r3
 800ba78:	6726      	str	r6, [r4, #112]	; 0x70
 800ba7a:	f004 fe4b 	bl	8010714 <_ZN8touchgfx11Application11getInstanceEv>
 800ba7e:	6803      	ldr	r3, [r0, #0]
 800ba80:	2100      	movs	r1, #0
 800ba82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ba84:	4798      	blx	r3
 800ba86:	6823      	ldr	r3, [r4, #0]
 800ba88:	4620      	mov	r0, r4
 800ba8a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800ba8e:	4798      	blx	r3
 800ba90:	2001      	movs	r0, #1
 800ba92:	f7f6 fb5b 	bl	800214c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ba96:	2300      	movs	r3, #0
 800ba98:	702b      	strb	r3, [r5, #0]
 800ba9a:	b004      	add	sp, #16
 800ba9c:	bd70      	pop	{r4, r5, r6, pc}
 800ba9e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800baa2:	4620      	mov	r0, r4
 800baa4:	4798      	blx	r3
 800baa6:	e7ae      	b.n	800ba06 <_ZN8touchgfx3HAL4tickEv+0xc2>
 800baa8:	2863      	cmp	r0, #99	; 0x63
 800baaa:	bfcb      	itete	gt
 800baac:	2300      	movgt	r3, #0
 800baae:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800bab2:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800bab6:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800baba:	e7d8      	b.n	800ba6e <_ZN8touchgfx3HAL4tickEv+0x12a>
 800babc:	200125b4 	.word	0x200125b4
 800bac0:	200125b5 	.word	0x200125b5
 800bac4:	05f5e100 	.word	0x05f5e100

0800bac8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800bac8:	f7f6 be54 	b.w	8002774 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bacc <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800bacc:	6581      	str	r1, [r0, #88]	; 0x58
 800bace:	301c      	adds	r0, #28
 800bad0:	f013 bc26 	b.w	801f320 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800bad4 <_ZN8touchgfx3HAL5touchEll>:
 800bad4:	b530      	push	{r4, r5, lr}
 800bad6:	b087      	sub	sp, #28
 800bad8:	4604      	mov	r4, r0
 800bada:	a804      	add	r0, sp, #16
 800badc:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800bae0:	f004 fc1e 	bl	8010320 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800bae4:	9b04      	ldr	r3, [sp, #16]
 800bae6:	a906      	add	r1, sp, #24
 800bae8:	a803      	add	r0, sp, #12
 800baea:	f8ad 300c 	strh.w	r3, [sp, #12]
 800baee:	9b05      	ldr	r3, [sp, #20]
 800baf0:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800baf4:	f004 fc52 	bl	801039c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800baf8:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800bafc:	f104 001c 	add.w	r0, r4, #28
 800bb00:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800bb04:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800bb08:	b189      	cbz	r1, 800bb2e <_ZN8touchgfx3HAL5touchEll+0x5a>
 800bb0a:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800bb0e:	9300      	str	r3, [sp, #0]
 800bb10:	4613      	mov	r3, r2
 800bb12:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800bb16:	462a      	mov	r2, r5
 800bb18:	f013 fc12 	bl	801f340 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800bb1c:	b128      	cbz	r0, 800bb2a <_ZN8touchgfx3HAL5touchEll+0x56>
 800bb1e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800bb22:	65e3      	str	r3, [r4, #92]	; 0x5c
 800bb24:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800bb28:	6623      	str	r3, [r4, #96]	; 0x60
 800bb2a:	b007      	add	sp, #28
 800bb2c:	bd30      	pop	{r4, r5, pc}
 800bb2e:	f013 fc4b 	bl	801f3c8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800bb32:	2301      	movs	r3, #1
 800bb34:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800bb38:	e7f1      	b.n	800bb1e <_ZN8touchgfx3HAL5touchEll+0x4a>

0800bb3a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800bb3a:	b570      	push	{r4, r5, r6, lr}
 800bb3c:	2b00      	cmp	r3, #0
 800bb3e:	d050      	beq.n	800bbe2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800bb40:	ea81 0002 	eor.w	r0, r1, r2
 800bb44:	07c6      	lsls	r6, r0, #31
 800bb46:	d508      	bpl.n	800bb5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800bb48:	3a01      	subs	r2, #1
 800bb4a:	18cc      	adds	r4, r1, r3
 800bb4c:	42a1      	cmp	r1, r4
 800bb4e:	d048      	beq.n	800bbe2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800bb50:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800bb54:	f801 0b01 	strb.w	r0, [r1], #1
 800bb58:	e7f8      	b.n	800bb4c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800bb5a:	07d5      	lsls	r5, r2, #31
 800bb5c:	bf42      	ittt	mi
 800bb5e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800bb62:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800bb66:	f801 0b01 	strbmi.w	r0, [r1], #1
 800bb6a:	2b01      	cmp	r3, #1
 800bb6c:	d915      	bls.n	800bb9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800bb6e:	ea82 0001 	eor.w	r0, r2, r1
 800bb72:	0784      	lsls	r4, r0, #30
 800bb74:	d02d      	beq.n	800bbd2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800bb76:	1e94      	subs	r4, r2, #2
 800bb78:	4608      	mov	r0, r1
 800bb7a:	18ce      	adds	r6, r1, r3
 800bb7c:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800bb80:	f820 5b02 	strh.w	r5, [r0], #2
 800bb84:	1a35      	subs	r5, r6, r0
 800bb86:	2d01      	cmp	r5, #1
 800bb88:	d8f8      	bhi.n	800bb7c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800bb8a:	1e98      	subs	r0, r3, #2
 800bb8c:	f003 0301 	and.w	r3, r3, #1
 800bb90:	f020 0001 	bic.w	r0, r0, #1
 800bb94:	3002      	adds	r0, #2
 800bb96:	4401      	add	r1, r0
 800bb98:	4402      	add	r2, r0
 800bb9a:	1f14      	subs	r4, r2, #4
 800bb9c:	4608      	mov	r0, r1
 800bb9e:	18ce      	adds	r6, r1, r3
 800bba0:	1a35      	subs	r5, r6, r0
 800bba2:	2d03      	cmp	r5, #3
 800bba4:	d810      	bhi.n	800bbc8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800bba6:	089c      	lsrs	r4, r3, #2
 800bba8:	00a0      	lsls	r0, r4, #2
 800bbaa:	4401      	add	r1, r0
 800bbac:	3801      	subs	r0, #1
 800bbae:	4402      	add	r2, r0
 800bbb0:	f06f 0003 	mvn.w	r0, #3
 800bbb4:	fb00 3404 	mla	r4, r0, r4, r3
 800bbb8:	440c      	add	r4, r1
 800bbba:	42a1      	cmp	r1, r4
 800bbbc:	d011      	beq.n	800bbe2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800bbbe:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800bbc2:	f801 3b01 	strb.w	r3, [r1], #1
 800bbc6:	e7f8      	b.n	800bbba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800bbc8:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800bbcc:	f840 5b04 	str.w	r5, [r0], #4
 800bbd0:	e7e6      	b.n	800bba0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800bbd2:	0790      	lsls	r0, r2, #30
 800bbd4:	d0e1      	beq.n	800bb9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800bbd6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800bbda:	3b02      	subs	r3, #2
 800bbdc:	f821 0b02 	strh.w	r0, [r1], #2
 800bbe0:	e7db      	b.n	800bb9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800bbe2:	2001      	movs	r0, #1
 800bbe4:	bd70      	pop	{r4, r5, r6, pc}

0800bbe6 <_ZN8touchgfx3HAL7noTouchEv>:
 800bbe6:	b510      	push	{r4, lr}
 800bbe8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800bbec:	4604      	mov	r4, r0
 800bbee:	b153      	cbz	r3, 800bc06 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800bbf0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800bbf4:	2101      	movs	r1, #1
 800bbf6:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800bbfa:	301c      	adds	r0, #28
 800bbfc:	f013 fbe4 	bl	801f3c8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800bc00:	2300      	movs	r3, #0
 800bc02:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800bc06:	bd10      	pop	{r4, pc}

0800bc08 <_ZN8touchgfx8Drawable5setXYEss>:
 800bc08:	b570      	push	{r4, r5, r6, lr}
 800bc0a:	6803      	ldr	r3, [r0, #0]
 800bc0c:	4604      	mov	r4, r0
 800bc0e:	4615      	mov	r5, r2
 800bc10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bc12:	4798      	blx	r3
 800bc14:	6823      	ldr	r3, [r4, #0]
 800bc16:	4629      	mov	r1, r5
 800bc18:	4620      	mov	r0, r4
 800bc1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bc1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc20:	4718      	bx	r3
	...

0800bc24 <_ZN8touchgfx3HAL3lcdEv>:
 800bc24:	4b04      	ldr	r3, [pc, #16]	; (800bc38 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800bc26:	681b      	ldr	r3, [r3, #0]
 800bc28:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800bc2c:	b10a      	cbz	r2, 800bc32 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800bc2e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800bc30:	b900      	cbnz	r0, 800bc34 <_ZN8touchgfx3HAL3lcdEv+0x10>
 800bc32:	6898      	ldr	r0, [r3, #8]
 800bc34:	4770      	bx	lr
 800bc36:	bf00      	nop
 800bc38:	200125b0 	.word	0x200125b0

0800bc3c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800bc3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc40:	4604      	mov	r4, r0
 800bc42:	6980      	ldr	r0, [r0, #24]
 800bc44:	b085      	sub	sp, #20
 800bc46:	460f      	mov	r7, r1
 800bc48:	4690      	mov	r8, r2
 800bc4a:	4699      	mov	r9, r3
 800bc4c:	b930      	cbnz	r0, 800bc5c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800bc4e:	4b1c      	ldr	r3, [pc, #112]	; (800bcc0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 800bc50:	f44f 71a1 	mov.w	r1, #322	; 0x142
 800bc54:	4a1b      	ldr	r2, [pc, #108]	; (800bcc4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800bc56:	481c      	ldr	r0, [pc, #112]	; (800bcc8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800bc58:	f015 f88a 	bl	8020d70 <__assert_func>
 800bc5c:	ad04      	add	r5, sp, #16
 800bc5e:	2600      	movs	r6, #0
 800bc60:	f845 6d04 	str.w	r6, [r5, #-4]!
 800bc64:	6806      	ldr	r6, [r0, #0]
 800bc66:	9501      	str	r5, [sp, #4]
 800bc68:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800bc6c:	9500      	str	r5, [sp, #0]
 800bc6e:	6835      	ldr	r5, [r6, #0]
 800bc70:	47a8      	blx	r5
 800bc72:	4d16      	ldr	r5, [pc, #88]	; (800bccc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800bc74:	4606      	mov	r6, r0
 800bc76:	f8a5 9000 	strh.w	r9, [r5]
 800bc7a:	f7ff ffd3 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800bc7e:	6803      	ldr	r3, [r0, #0]
 800bc80:	6a1b      	ldr	r3, [r3, #32]
 800bc82:	4798      	blx	r3
 800bc84:	2801      	cmp	r0, #1
 800bc86:	d012      	beq.n	800bcae <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800bc88:	d306      	bcc.n	800bc98 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800bc8a:	280d      	cmp	r0, #13
 800bc8c:	d80b      	bhi.n	800bca6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800bc8e:	4b10      	ldr	r3, [pc, #64]	; (800bcd0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800bc90:	f44f 71b0 	mov.w	r1, #352	; 0x160
 800bc94:	4a0b      	ldr	r2, [pc, #44]	; (800bcc4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800bc96:	e7de      	b.n	800bc56 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800bc98:	882b      	ldrh	r3, [r5, #0]
 800bc9a:	fb08 7203 	mla	r2, r8, r3, r7
 800bc9e:	9b03      	ldr	r3, [sp, #12]
 800bca0:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800bca4:	63e3      	str	r3, [r4, #60]	; 0x3c
 800bca6:	4630      	mov	r0, r6
 800bca8:	b005      	add	sp, #20
 800bcaa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bcae:	882a      	ldrh	r2, [r5, #0]
 800bcb0:	9b03      	ldr	r3, [sp, #12]
 800bcb2:	fb08 7202 	mla	r2, r8, r2, r7
 800bcb6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800bcba:	1a9a      	subs	r2, r3, r2
 800bcbc:	63e2      	str	r2, [r4, #60]	; 0x3c
 800bcbe:	e7f2      	b.n	800bca6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800bcc0:	080234ad 	.word	0x080234ad
 800bcc4:	08023707 	.word	0x08023707
 800bcc8:	080234f2 	.word	0x080234f2
 800bccc:	200125aa 	.word	0x200125aa
 800bcd0:	08023518 	.word	0x08023518

0800bcd4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800bcd4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bcd8:	4698      	mov	r8, r3
 800bcda:	6803      	ldr	r3, [r0, #0]
 800bcdc:	b087      	sub	sp, #28
 800bcde:	460e      	mov	r6, r1
 800bce0:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800bce2:	4617      	mov	r7, r2
 800bce4:	4b0d      	ldr	r3, [pc, #52]	; (800bd1c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800bce6:	4604      	mov	r4, r0
 800bce8:	f8b3 9000 	ldrh.w	r9, [r3]
 800bcec:	f7ff ff9a 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800bcf0:	6803      	ldr	r3, [r0, #0]
 800bcf2:	6a1b      	ldr	r3, [r3, #32]
 800bcf4:	4798      	blx	r3
 800bcf6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800bcfa:	463a      	mov	r2, r7
 800bcfc:	4631      	mov	r1, r6
 800bcfe:	9302      	str	r3, [sp, #8]
 800bd00:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800bd04:	9301      	str	r3, [sp, #4]
 800bd06:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800bd0a:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800bd0e:	9300      	str	r3, [sp, #0]
 800bd10:	4620      	mov	r0, r4
 800bd12:	4643      	mov	r3, r8
 800bd14:	47a8      	blx	r5
 800bd16:	b007      	add	sp, #28
 800bd18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bd1c:	200125aa 	.word	0x200125aa

0800bd20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800bd20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd24:	4604      	mov	r4, r0
 800bd26:	b08b      	sub	sp, #44	; 0x2c
 800bd28:	4610      	mov	r0, r2
 800bd2a:	460d      	mov	r5, r1
 800bd2c:	4691      	mov	r9, r2
 800bd2e:	461e      	mov	r6, r3
 800bd30:	f007 fcf2 	bl	8013718 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800bd34:	2800      	cmp	r0, #0
 800bd36:	f000 80a0 	beq.w	800be7a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800bd3a:	6823      	ldr	r3, [r4, #0]
 800bd3c:	4620      	mov	r0, r4
 800bd3e:	f8df b170 	ldr.w	fp, [pc, #368]	; 800beb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>
 800bd42:	af0a      	add	r7, sp, #40	; 0x28
 800bd44:	6a1b      	ldr	r3, [r3, #32]
 800bd46:	4798      	blx	r3
 800bd48:	6823      	ldr	r3, [r4, #0]
 800bd4a:	4620      	mov	r0, r4
 800bd4c:	f8df a164 	ldr.w	sl, [pc, #356]	; 800beb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>
 800bd50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd52:	4798      	blx	r3
 800bd54:	f8bb 3000 	ldrh.w	r3, [fp]
 800bd58:	f827 9d0c 	strh.w	r9, [r7, #-12]!
 800bd5c:	4638      	mov	r0, r7
 800bd5e:	9301      	str	r3, [sp, #4]
 800bd60:	f8ba 3000 	ldrh.w	r3, [sl]
 800bd64:	9302      	str	r3, [sp, #8]
 800bd66:	4b4f      	ldr	r3, [pc, #316]	; (800bea4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 800bd68:	881a      	ldrh	r2, [r3, #0]
 800bd6a:	4698      	mov	r8, r3
 800bd6c:	9203      	str	r2, [sp, #12]
 800bd6e:	4a4e      	ldr	r2, [pc, #312]	; (800bea8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800bd70:	8812      	ldrh	r2, [r2, #0]
 800bd72:	9204      	str	r2, [sp, #16]
 800bd74:	4a4d      	ldr	r2, [pc, #308]	; (800beac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x18c>)
 800bd76:	7812      	ldrb	r2, [r2, #0]
 800bd78:	2a00      	cmp	r2, #0
 800bd7a:	f040 8081 	bne.w	800be80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x160>
 800bd7e:	f007 fd85 	bl	801388c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bd82:	f8ab 0000 	strh.w	r0, [fp]
 800bd86:	4638      	mov	r0, r7
 800bd88:	f007 fdba 	bl	8013900 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bd8c:	f8aa 0000 	strh.w	r0, [sl]
 800bd90:	4638      	mov	r0, r7
 800bd92:	f007 fd7b 	bl	801388c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bd96:	f8a8 0000 	strh.w	r0, [r8]
 800bd9a:	4638      	mov	r0, r7
 800bd9c:	f007 fdb0 	bl	8013900 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bda0:	4b41      	ldr	r3, [pc, #260]	; (800bea8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800bda2:	8018      	strh	r0, [r3, #0]
 800bda4:	4648      	mov	r0, r9
 800bda6:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800bdaa:	f007 fcb5 	bl	8013718 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800bdae:	2200      	movs	r2, #0
 800bdb0:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800bdb4:	4611      	mov	r1, r2
 800bdb6:	4628      	mov	r0, r5
 800bdb8:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800bdbc:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800bdc0:	f7ff ff22 	bl	800bc08 <_ZN8touchgfx8Drawable5setXYEss>
 800bdc4:	2301      	movs	r3, #1
 800bdc6:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800bdca:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800bdce:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800bdd2:	2b00      	cmp	r3, #0
 800bdd4:	dd5c      	ble.n	800be90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 800bdd6:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800bdda:	2b00      	cmp	r3, #0
 800bddc:	dd58      	ble.n	800be90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 800bdde:	462a      	mov	r2, r5
 800bde0:	ab08      	add	r3, sp, #32
 800bde2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800bde6:	6851      	ldr	r1, [r2, #4]
 800bde8:	c303      	stmia	r3!, {r0, r1}
 800bdea:	4631      	mov	r1, r6
 800bdec:	a808      	add	r0, sp, #32
 800bdee:	f7ff fc67 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 800bdf2:	a807      	add	r0, sp, #28
 800bdf4:	f007 fedc 	bl	8013bb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800bdf8:	4606      	mov	r6, r0
 800bdfa:	f7ff ff13 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800bdfe:	6803      	ldr	r3, [r0, #0]
 800be00:	6a1b      	ldr	r3, [r3, #32]
 800be02:	4798      	blx	r3
 800be04:	4286      	cmp	r6, r0
 800be06:	d04a      	beq.n	800be9e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x17e>
 800be08:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800be0a:	b150      	cbz	r0, 800be22 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 800be0c:	a807      	add	r0, sp, #28
 800be0e:	f007 fecf 	bl	8013bb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800be12:	4606      	mov	r6, r0
 800be14:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800be16:	6803      	ldr	r3, [r0, #0]
 800be18:	6a1b      	ldr	r3, [r3, #32]
 800be1a:	4798      	blx	r3
 800be1c:	1a33      	subs	r3, r6, r0
 800be1e:	4258      	negs	r0, r3
 800be20:	4158      	adcs	r0, r3
 800be22:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800be26:	2600      	movs	r6, #0
 800be28:	696b      	ldr	r3, [r5, #20]
 800be2a:	a908      	add	r1, sp, #32
 800be2c:	682a      	ldr	r2, [r5, #0]
 800be2e:	4628      	mov	r0, r5
 800be30:	9305      	str	r3, [sp, #20]
 800be32:	616e      	str	r6, [r5, #20]
 800be34:	6892      	ldr	r2, [r2, #8]
 800be36:	4790      	blx	r2
 800be38:	9b05      	ldr	r3, [sp, #20]
 800be3a:	4652      	mov	r2, sl
 800be3c:	4649      	mov	r1, r9
 800be3e:	616b      	str	r3, [r5, #20]
 800be40:	4628      	mov	r0, r5
 800be42:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800be46:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800be4a:	f7ff fedd 	bl	800bc08 <_ZN8touchgfx8Drawable5setXYEss>
 800be4e:	9a01      	ldr	r2, [sp, #4]
 800be50:	4b17      	ldr	r3, [pc, #92]	; (800beb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>)
 800be52:	4620      	mov	r0, r4
 800be54:	801a      	strh	r2, [r3, #0]
 800be56:	9a02      	ldr	r2, [sp, #8]
 800be58:	4b16      	ldr	r3, [pc, #88]	; (800beb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>)
 800be5a:	801a      	strh	r2, [r3, #0]
 800be5c:	9a03      	ldr	r2, [sp, #12]
 800be5e:	4b11      	ldr	r3, [pc, #68]	; (800bea4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 800be60:	801a      	strh	r2, [r3, #0]
 800be62:	4b11      	ldr	r3, [pc, #68]	; (800bea8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800be64:	9a04      	ldr	r2, [sp, #16]
 800be66:	801a      	strh	r2, [r3, #0]
 800be68:	6823      	ldr	r3, [r4, #0]
 800be6a:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800be6e:	6a1b      	ldr	r3, [r3, #32]
 800be70:	4798      	blx	r3
 800be72:	6823      	ldr	r3, [r4, #0]
 800be74:	4620      	mov	r0, r4
 800be76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be78:	4798      	blx	r3
 800be7a:	b00b      	add	sp, #44	; 0x2c
 800be7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be80:	f007 fd3e 	bl	8013900 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800be84:	f8ab 0000 	strh.w	r0, [fp]
 800be88:	4638      	mov	r0, r7
 800be8a:	f007 fcff 	bl	801388c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800be8e:	e77d      	b.n	800bd8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x6c>
 800be90:	462a      	mov	r2, r5
 800be92:	ab08      	add	r3, sp, #32
 800be94:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800be98:	6851      	ldr	r1, [r2, #4]
 800be9a:	c303      	stmia	r3!, {r0, r1}
 800be9c:	e7a9      	b.n	800bdf2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xd2>
 800be9e:	2000      	movs	r0, #0
 800bea0:	e7bf      	b.n	800be22 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 800bea2:	bf00      	nop
 800bea4:	200125a4 	.word	0x200125a4
 800bea8:	200125a6 	.word	0x200125a6
 800beac:	200125a8 	.word	0x200125a8
 800beb0:	200125aa 	.word	0x200125aa
 800beb4:	200125ac 	.word	0x200125ac

0800beb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800beb8:	4b07      	ldr	r3, [pc, #28]	; (800bed8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800beba:	b510      	push	{r4, lr}
 800bebc:	781b      	ldrb	r3, [r3, #0]
 800bebe:	4604      	mov	r4, r0
 800bec0:	b13b      	cbz	r3, 800bed2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800bec2:	6803      	ldr	r3, [r0, #0]
 800bec4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bec6:	4798      	blx	r3
 800bec8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800beca:	4283      	cmp	r3, r0
 800becc:	d101      	bne.n	800bed2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800bece:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800bed0:	bd10      	pop	{r4, pc}
 800bed2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800bed4:	e7fc      	b.n	800bed0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800bed6:	bf00      	nop
 800bed8:	200125ae 	.word	0x200125ae

0800bedc <_ZN8touchgfx3HAL10initializeEv>:
 800bedc:	b510      	push	{r4, lr}
 800bede:	4604      	mov	r4, r0
 800bee0:	f7f6 fc18 	bl	8002714 <_ZN8touchgfx10OSWrappers10initializeEv>
 800bee4:	6860      	ldr	r0, [r4, #4]
 800bee6:	6803      	ldr	r3, [r0, #0]
 800bee8:	68db      	ldr	r3, [r3, #12]
 800beea:	4798      	blx	r3
 800beec:	68e0      	ldr	r0, [r4, #12]
 800beee:	6803      	ldr	r3, [r0, #0]
 800bef0:	689b      	ldr	r3, [r3, #8]
 800bef2:	4798      	blx	r3
 800bef4:	6823      	ldr	r3, [r4, #0]
 800bef6:	4620      	mov	r0, r4
 800bef8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800befa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800befe:	4718      	bx	r3

0800bf00 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800bf00:	b508      	push	{r3, lr}
 800bf02:	290d      	cmp	r1, #13
 800bf04:	d817      	bhi.n	800bf36 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800bf06:	e8df f001 	tbb	[pc, r1]
 800bf0a:	090b      	.short	0x090b
 800bf0c:	0d0d0d07 	.word	0x0d0d0d07
 800bf10:	1414140d 	.word	0x1414140d
 800bf14:	0d0d1414 	.word	0x0d0d1414
 800bf18:	2020      	movs	r0, #32
 800bf1a:	bd08      	pop	{r3, pc}
 800bf1c:	2018      	movs	r0, #24
 800bf1e:	e7fc      	b.n	800bf1a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800bf20:	2010      	movs	r0, #16
 800bf22:	e7fa      	b.n	800bf1a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800bf24:	4b05      	ldr	r3, [pc, #20]	; (800bf3c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800bf26:	f44f 7111 	mov.w	r1, #580	; 0x244
 800bf2a:	4a05      	ldr	r2, [pc, #20]	; (800bf40 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800bf2c:	4805      	ldr	r0, [pc, #20]	; (800bf44 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800bf2e:	f014 ff1f 	bl	8020d70 <__assert_func>
 800bf32:	2008      	movs	r0, #8
 800bf34:	e7f1      	b.n	800bf1a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800bf36:	2000      	movs	r0, #0
 800bf38:	e7ef      	b.n	800bf1a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800bf3a:	bf00      	nop
 800bf3c:	080235eb 	.word	0x080235eb
 800bf40:	080238c9 	.word	0x080238c9
 800bf44:	080234f2 	.word	0x080234f2

0800bf48 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800bf48:	b570      	push	{r4, r5, r6, lr}
 800bf4a:	460d      	mov	r5, r1
 800bf4c:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800bf50:	4616      	mov	r6, r2
 800bf52:	461c      	mov	r4, r3
 800bf54:	f7ff ffd4 	bl	800bf00 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800bf58:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800bf5c:	10c0      	asrs	r0, r0, #3
 800bf5e:	fb06 5101 	mla	r1, r6, r1, r5
 800bf62:	fb00 4001 	mla	r0, r0, r1, r4
 800bf66:	bd70      	pop	{r4, r5, r6, pc}

0800bf68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800bf68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bf6c:	b08a      	sub	sp, #40	; 0x28
 800bf6e:	f04f 0c00 	mov.w	ip, #0
 800bf72:	4604      	mov	r4, r0
 800bf74:	469a      	mov	sl, r3
 800bf76:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800bf7a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800bf7e:	f1b8 0f02 	cmp.w	r8, #2
 800bf82:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800bf86:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800bf8a:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800bf8e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800bf92:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800bf96:	f8cd c020 	str.w	ip, [sp, #32]
 800bf9a:	d030      	beq.n	800bffe <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800bf9c:	2bff      	cmp	r3, #255	; 0xff
 800bf9e:	d12c      	bne.n	800bffa <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800bfa0:	4560      	cmp	r0, ip
 800bfa2:	bf14      	ite	ne
 800bfa4:	2004      	movne	r0, #4
 800bfa6:	2001      	moveq	r0, #1
 800bfa8:	9204      	str	r2, [sp, #16]
 800bfaa:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800bfae:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800bfb2:	f8ad 201c 	strh.w	r2, [sp, #28]
 800bfb6:	f8ad 6018 	strh.w	r6, [sp, #24]
 800bfba:	f8ad 501a 	strh.w	r5, [sp, #26]
 800bfbe:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800bfc2:	4620      	mov	r0, r4
 800bfc4:	f7ff ff78 	bl	800beb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bfc8:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800bfcc:	4603      	mov	r3, r0
 800bfce:	4651      	mov	r1, sl
 800bfd0:	4620      	mov	r0, r4
 800bfd2:	e9cd 9700 	strd	r9, r7, [sp]
 800bfd6:	f7ff ffb7 	bl	800bf48 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800bfda:	f8ad 901e 	strh.w	r9, [sp, #30]
 800bfde:	9005      	str	r0, [sp, #20]
 800bfe0:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800bfe4:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800bfe8:	b106      	cbz	r6, 800bfec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800bfea:	b98d      	cbnz	r5, 800c010 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800bfec:	4b12      	ldr	r3, [pc, #72]	; (800c038 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800bfee:	f240 11c3 	movw	r1, #451	; 0x1c3
 800bff2:	4a12      	ldr	r2, [pc, #72]	; (800c03c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800bff4:	4812      	ldr	r0, [pc, #72]	; (800c040 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800bff6:	f014 febb 	bl	8020d70 <__assert_func>
 800bffa:	2004      	movs	r0, #4
 800bffc:	e7d4      	b.n	800bfa8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800bffe:	2bff      	cmp	r3, #255	; 0xff
 800c000:	d104      	bne.n	800c00c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800c002:	2800      	cmp	r0, #0
 800c004:	bf14      	ite	ne
 800c006:	2040      	movne	r0, #64	; 0x40
 800c008:	2020      	moveq	r0, #32
 800c00a:	e7cd      	b.n	800bfa8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c00c:	2040      	movs	r0, #64	; 0x40
 800c00e:	e7cb      	b.n	800bfa8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c010:	6823      	ldr	r3, [r4, #0]
 800c012:	4620      	mov	r0, r4
 800c014:	9d02      	ldr	r5, [sp, #8]
 800c016:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c018:	4798      	blx	r3
 800c01a:	4228      	tst	r0, r5
 800c01c:	d104      	bne.n	800c028 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800c01e:	4b09      	ldr	r3, [pc, #36]	; (800c044 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800c020:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
 800c024:	4a05      	ldr	r2, [pc, #20]	; (800c03c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800c026:	e7e5      	b.n	800bff4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800c028:	6860      	ldr	r0, [r4, #4]
 800c02a:	a902      	add	r1, sp, #8
 800c02c:	6803      	ldr	r3, [r0, #0]
 800c02e:	685b      	ldr	r3, [r3, #4]
 800c030:	4798      	blx	r3
 800c032:	b00a      	add	sp, #40	; 0x28
 800c034:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c038:	0802356e 	.word	0x0802356e
 800c03c:	0802376b 	.word	0x0802376b
 800c040:	080234f2 	.word	0x080234f2
 800c044:	080235a6 	.word	0x080235a6

0800c048 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800c048:	b510      	push	{r4, lr}
 800c04a:	b08a      	sub	sp, #40	; 0x28
 800c04c:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800c050:	9408      	str	r4, [sp, #32]
 800c052:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800c056:	9407      	str	r4, [sp, #28]
 800c058:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800c05c:	9406      	str	r4, [sp, #24]
 800c05e:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800c062:	9405      	str	r4, [sp, #20]
 800c064:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800c068:	9404      	str	r4, [sp, #16]
 800c06a:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800c06e:	9403      	str	r4, [sp, #12]
 800c070:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800c074:	9402      	str	r4, [sp, #8]
 800c076:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800c07a:	e9cd 3400 	strd	r3, r4, [sp]
 800c07e:	4613      	mov	r3, r2
 800c080:	2200      	movs	r2, #0
 800c082:	f7ff ff71 	bl	800bf68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800c086:	b00a      	add	sp, #40	; 0x28
 800c088:	bd10      	pop	{r4, pc}
	...

0800c08c <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800c08c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c08e:	b08b      	sub	sp, #44	; 0x2c
 800c090:	4616      	mov	r6, r2
 800c092:	460d      	mov	r5, r1
 800c094:	461f      	mov	r7, r3
 800c096:	4604      	mov	r4, r0
 800c098:	f7ff fdc4 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800c09c:	6803      	ldr	r3, [r0, #0]
 800c09e:	6a1b      	ldr	r3, [r3, #32]
 800c0a0:	4798      	blx	r3
 800c0a2:	4b0e      	ldr	r3, [pc, #56]	; (800c0dc <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800c0a4:	2200      	movs	r2, #0
 800c0a6:	4629      	mov	r1, r5
 800c0a8:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800c0ac:	881b      	ldrh	r3, [r3, #0]
 800c0ae:	4620      	mov	r0, r4
 800c0b0:	9306      	str	r3, [sp, #24]
 800c0b2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800c0b6:	9305      	str	r3, [sp, #20]
 800c0b8:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c0bc:	9304      	str	r3, [sp, #16]
 800c0be:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c0c2:	9303      	str	r3, [sp, #12]
 800c0c4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c0c8:	9302      	str	r3, [sp, #8]
 800c0ca:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c0ce:	e9cd 7300 	strd	r7, r3, [sp]
 800c0d2:	4633      	mov	r3, r6
 800c0d4:	f7ff ff48 	bl	800bf68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800c0d8:	b00b      	add	sp, #44	; 0x2c
 800c0da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c0dc:	200125aa 	.word	0x200125aa

0800c0e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800c0e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c0e4:	461f      	mov	r7, r3
 800c0e6:	4b14      	ldr	r3, [pc, #80]	; (800c138 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800c0e8:	b08a      	sub	sp, #40	; 0x28
 800c0ea:	4616      	mov	r6, r2
 800c0ec:	f8b3 8000 	ldrh.w	r8, [r3]
 800c0f0:	460d      	mov	r5, r1
 800c0f2:	4604      	mov	r4, r0
 800c0f4:	f7ff fd96 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800c0f8:	6803      	ldr	r3, [r0, #0]
 800c0fa:	6a1b      	ldr	r3, [r3, #32]
 800c0fc:	4798      	blx	r3
 800c0fe:	2302      	movs	r3, #2
 800c100:	9008      	str	r0, [sp, #32]
 800c102:	2200      	movs	r2, #0
 800c104:	4629      	mov	r1, r5
 800c106:	4620      	mov	r0, r4
 800c108:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800c10c:	2301      	movs	r3, #1
 800c10e:	9305      	str	r3, [sp, #20]
 800c110:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c114:	9304      	str	r3, [sp, #16]
 800c116:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c11a:	9303      	str	r3, [sp, #12]
 800c11c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c120:	9302      	str	r3, [sp, #8]
 800c122:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c126:	e9cd 7300 	strd	r7, r3, [sp]
 800c12a:	4633      	mov	r3, r6
 800c12c:	f7ff ff1c 	bl	800bf68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800c130:	b00a      	add	sp, #40	; 0x28
 800c132:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c136:	bf00      	nop
 800c138:	200125aa 	.word	0x200125aa

0800c13c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800c13c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c140:	b08b      	sub	sp, #44	; 0x2c
 800c142:	469b      	mov	fp, r3
 800c144:	4604      	mov	r4, r0
 800c146:	4692      	mov	sl, r2
 800c148:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800c14c:	2600      	movs	r6, #0
 800c14e:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800c152:	4689      	mov	r9, r1
 800c154:	2fff      	cmp	r7, #255	; 0xff
 800c156:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800c15a:	9608      	str	r6, [sp, #32]
 800c15c:	bf14      	ite	ne
 800c15e:	2308      	movne	r3, #8
 800c160:	2302      	moveq	r3, #2
 800c162:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800c166:	f7ff fea7 	bl	800beb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c16a:	465a      	mov	r2, fp
 800c16c:	4603      	mov	r3, r0
 800c16e:	4651      	mov	r1, sl
 800c170:	4620      	mov	r0, r4
 800c172:	e9cd 8500 	strd	r8, r5, [sp]
 800c176:	f7ff fee7 	bl	800bf48 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800c17a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800c17e:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800c182:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c186:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800c18a:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800c18e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c192:	6823      	ldr	r3, [r4, #0]
 800c194:	9d02      	ldr	r5, [sp, #8]
 800c196:	9005      	str	r0, [sp, #20]
 800c198:	4620      	mov	r0, r4
 800c19a:	f8ad 601c 	strh.w	r6, [sp, #28]
 800c19e:	f8ad 801e 	strh.w	r8, [sp, #30]
 800c1a2:	f8cd 9020 	str.w	r9, [sp, #32]
 800c1a6:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800c1aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c1ac:	4798      	blx	r3
 800c1ae:	4228      	tst	r0, r5
 800c1b0:	d106      	bne.n	800c1c0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800c1b2:	4b07      	ldr	r3, [pc, #28]	; (800c1d0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800c1b4:	f240 11fb 	movw	r1, #507	; 0x1fb
 800c1b8:	4a06      	ldr	r2, [pc, #24]	; (800c1d4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800c1ba:	4807      	ldr	r0, [pc, #28]	; (800c1d8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800c1bc:	f014 fdd8 	bl	8020d70 <__assert_func>
 800c1c0:	6860      	ldr	r0, [r4, #4]
 800c1c2:	a902      	add	r1, sp, #8
 800c1c4:	6803      	ldr	r3, [r0, #0]
 800c1c6:	685b      	ldr	r3, [r3, #4]
 800c1c8:	4798      	blx	r3
 800c1ca:	b00b      	add	sp, #44	; 0x2c
 800c1cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c1d0:	080235a6 	.word	0x080235a6
 800c1d4:	08023834 	.word	0x08023834
 800c1d8:	080234f2 	.word	0x080234f2

0800c1dc <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800c1dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c1e0:	461f      	mov	r7, r3
 800c1e2:	4b0b      	ldr	r3, [pc, #44]	; (800c210 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800c1e4:	460d      	mov	r5, r1
 800c1e6:	4616      	mov	r6, r2
 800c1e8:	f8b3 8000 	ldrh.w	r8, [r3]
 800c1ec:	4604      	mov	r4, r0
 800c1ee:	f7ff fd19 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800c1f2:	6803      	ldr	r3, [r0, #0]
 800c1f4:	6a1b      	ldr	r3, [r3, #32]
 800c1f6:	4798      	blx	r3
 800c1f8:	463b      	mov	r3, r7
 800c1fa:	4632      	mov	r2, r6
 800c1fc:	4629      	mov	r1, r5
 800c1fe:	e9cd 8000 	strd	r8, r0, [sp]
 800c202:	4620      	mov	r0, r4
 800c204:	f7ff fea0 	bl	800bf48 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800c208:	b002      	add	sp, #8
 800c20a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c20e:	bf00      	nop
 800c210:	200125aa 	.word	0x200125aa

0800c214 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800c214:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c218:	4698      	mov	r8, r3
 800c21a:	b088      	sub	sp, #32
 800c21c:	2300      	movs	r3, #0
 800c21e:	4617      	mov	r7, r2
 800c220:	4604      	mov	r4, r0
 800c222:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800c226:	9306      	str	r3, [sp, #24]
 800c228:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800c22c:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800c230:	f8ad 6010 	strh.w	r6, [sp, #16]
 800c234:	f8ad 5012 	strh.w	r5, [sp, #18]
 800c238:	e9cd 3100 	strd	r3, r1, [sp]
 800c23c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c240:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c244:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800c248:	f88d 301c 	strb.w	r3, [sp, #28]
 800c24c:	f7ff fe34 	bl	800beb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c250:	4642      	mov	r2, r8
 800c252:	4603      	mov	r3, r0
 800c254:	4639      	mov	r1, r7
 800c256:	4620      	mov	r0, r4
 800c258:	f7ff ffc0 	bl	800c1dc <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c25c:	4b16      	ldr	r3, [pc, #88]	; (800c2b8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800c25e:	9003      	str	r0, [sp, #12]
 800c260:	881b      	ldrh	r3, [r3, #0]
 800c262:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c266:	f7ff fcdd 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800c26a:	6803      	ldr	r3, [r0, #0]
 800c26c:	6a1b      	ldr	r3, [r3, #32]
 800c26e:	4798      	blx	r3
 800c270:	f88d 001e 	strb.w	r0, [sp, #30]
 800c274:	f88d 001d 	strb.w	r0, [sp, #29]
 800c278:	b106      	cbz	r6, 800c27c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800c27a:	b935      	cbnz	r5, 800c28a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800c27c:	4b0f      	ldr	r3, [pc, #60]	; (800c2bc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800c27e:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 800c282:	4a0f      	ldr	r2, [pc, #60]	; (800c2c0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800c284:	480f      	ldr	r0, [pc, #60]	; (800c2c4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800c286:	f014 fd73 	bl	8020d70 <__assert_func>
 800c28a:	6823      	ldr	r3, [r4, #0]
 800c28c:	4620      	mov	r0, r4
 800c28e:	9d00      	ldr	r5, [sp, #0]
 800c290:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c292:	4798      	blx	r3
 800c294:	4228      	tst	r0, r5
 800c296:	d104      	bne.n	800c2a2 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800c298:	4b0b      	ldr	r3, [pc, #44]	; (800c2c8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800c29a:	f240 11e1 	movw	r1, #481	; 0x1e1
 800c29e:	4a08      	ldr	r2, [pc, #32]	; (800c2c0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800c2a0:	e7f0      	b.n	800c284 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800c2a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c2a4:	4669      	mov	r1, sp
 800c2a6:	6860      	ldr	r0, [r4, #4]
 800c2a8:	9306      	str	r3, [sp, #24]
 800c2aa:	6803      	ldr	r3, [r0, #0]
 800c2ac:	685b      	ldr	r3, [r3, #4]
 800c2ae:	4798      	blx	r3
 800c2b0:	b008      	add	sp, #32
 800c2b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c2b6:	bf00      	nop
 800c2b8:	200125aa 	.word	0x200125aa
 800c2bc:	0802356e 	.word	0x0802356e
 800c2c0:	0802361d 	.word	0x0802361d
 800c2c4:	080234f2 	.word	0x080234f2
 800c2c8:	080235a6 	.word	0x080235a6

0800c2cc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800c2cc:	b570      	push	{r4, r5, r6, lr}
 800c2ce:	b08a      	sub	sp, #40	; 0x28
 800c2d0:	4604      	mov	r4, r0
 800c2d2:	466b      	mov	r3, sp
 800c2d4:	e883 0006 	stmia.w	r3, {r1, r2}
 800c2d8:	4b1f      	ldr	r3, [pc, #124]	; (800c358 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800c2da:	781b      	ldrb	r3, [r3, #0]
 800c2dc:	b933      	cbnz	r3, 800c2ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800c2de:	4b1f      	ldr	r3, [pc, #124]	; (800c35c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800c2e0:	f44f 7103 	mov.w	r1, #524	; 0x20c
 800c2e4:	4a1e      	ldr	r2, [pc, #120]	; (800c360 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800c2e6:	481f      	ldr	r0, [pc, #124]	; (800c364 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800c2e8:	f014 fd42 	bl	8020d70 <__assert_func>
 800c2ec:	2300      	movs	r3, #0
 800c2ee:	f8bd 5000 	ldrh.w	r5, [sp]
 800c2f2:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800c2f6:	9308      	str	r3, [sp, #32]
 800c2f8:	2301      	movs	r3, #1
 800c2fa:	9302      	str	r3, [sp, #8]
 800c2fc:	6803      	ldr	r3, [r0, #0]
 800c2fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c300:	4798      	blx	r3
 800c302:	4632      	mov	r2, r6
 800c304:	4629      	mov	r1, r5
 800c306:	4603      	mov	r3, r0
 800c308:	4620      	mov	r0, r4
 800c30a:	f7ff ff67 	bl	800c1dc <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c30e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c310:	9003      	str	r0, [sp, #12]
 800c312:	9305      	str	r3, [sp, #20]
 800c314:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c318:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c31c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c320:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c324:	4b10      	ldr	r3, [pc, #64]	; (800c368 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800c326:	881b      	ldrh	r3, [r3, #0]
 800c328:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c32c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c330:	f7ff fc78 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800c334:	6803      	ldr	r3, [r0, #0]
 800c336:	6a1b      	ldr	r3, [r3, #32]
 800c338:	4798      	blx	r3
 800c33a:	23ff      	movs	r3, #255	; 0xff
 800c33c:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800c340:	a902      	add	r1, sp, #8
 800c342:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800c346:	6860      	ldr	r0, [r4, #4]
 800c348:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c34c:	6803      	ldr	r3, [r0, #0]
 800c34e:	685b      	ldr	r3, [r3, #4]
 800c350:	4798      	blx	r3
 800c352:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800c354:	b00a      	add	sp, #40	; 0x28
 800c356:	bd70      	pop	{r4, r5, r6, pc}
 800c358:	200125af 	.word	0x200125af
 800c35c:	0802343f 	.word	0x0802343f
 800c360:	080236c1 	.word	0x080236c1
 800c364:	080234f2 	.word	0x080234f2
 800c368:	200125aa 	.word	0x200125aa

0800c36c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800c36c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c36e:	b08b      	sub	sp, #44	; 0x2c
 800c370:	4604      	mov	r4, r0
 800c372:	466d      	mov	r5, sp
 800c374:	e885 0006 	stmia.w	r5, {r1, r2}
 800c378:	461d      	mov	r5, r3
 800c37a:	2300      	movs	r3, #0
 800c37c:	f8bd 6000 	ldrh.w	r6, [sp]
 800c380:	9308      	str	r3, [sp, #32]
 800c382:	2301      	movs	r3, #1
 800c384:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800c388:	9302      	str	r3, [sp, #8]
 800c38a:	6803      	ldr	r3, [r0, #0]
 800c38c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c38e:	4798      	blx	r3
 800c390:	463a      	mov	r2, r7
 800c392:	4631      	mov	r1, r6
 800c394:	4603      	mov	r3, r0
 800c396:	4620      	mov	r0, r4
 800c398:	f7ff ff20 	bl	800c1dc <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c39c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c3a0:	9003      	str	r0, [sp, #12]
 800c3a2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c3a6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c3aa:	9505      	str	r5, [sp, #20]
 800c3ac:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c3b0:	4b0d      	ldr	r3, [pc, #52]	; (800c3e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800c3b2:	881b      	ldrh	r3, [r3, #0]
 800c3b4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c3b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c3ba:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c3be:	f7ff fc31 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800c3c2:	6803      	ldr	r3, [r0, #0]
 800c3c4:	6a1b      	ldr	r3, [r3, #32]
 800c3c6:	4798      	blx	r3
 800c3c8:	23ff      	movs	r3, #255	; 0xff
 800c3ca:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800c3ce:	a902      	add	r1, sp, #8
 800c3d0:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800c3d4:	6860      	ldr	r0, [r4, #4]
 800c3d6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c3da:	6803      	ldr	r3, [r0, #0]
 800c3dc:	685b      	ldr	r3, [r3, #4]
 800c3de:	4798      	blx	r3
 800c3e0:	4628      	mov	r0, r5
 800c3e2:	b00b      	add	sp, #44	; 0x2c
 800c3e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c3e6:	bf00      	nop
 800c3e8:	200125aa 	.word	0x200125aa

0800c3ec <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800c3ec:	b570      	push	{r4, r5, r6, lr}
 800c3ee:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800c3f2:	4604      	mov	r4, r0
 800c3f4:	b19b      	cbz	r3, 800c41e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800c3f6:	2002      	movs	r0, #2
 800c3f8:	f7f5 fea9 	bl	800214e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800c3fc:	2300      	movs	r3, #0
 800c3fe:	4620      	mov	r0, r4
 800c400:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800c404:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800c408:	6823      	ldr	r3, [r4, #0]
 800c40a:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 800c40e:	f7ff fd53 	bl	800beb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c412:	4601      	mov	r1, r0
 800c414:	4620      	mov	r0, r4
 800c416:	462b      	mov	r3, r5
 800c418:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c41c:	4718      	bx	r3
 800c41e:	bd70      	pop	{r4, r5, r6, pc}

0800c420 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800c420:	b570      	push	{r4, r5, r6, lr}
 800c422:	4605      	mov	r5, r0
 800c424:	460c      	mov	r4, r1
 800c426:	2003      	movs	r0, #3
 800c428:	b149      	cbz	r1, 800c43e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800c42a:	f7f5 fe8e 	bl	800214a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c42e:	6928      	ldr	r0, [r5, #16]
 800c430:	b168      	cbz	r0, 800c44e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800c432:	6803      	ldr	r3, [r0, #0]
 800c434:	2101      	movs	r1, #1
 800c436:	695b      	ldr	r3, [r3, #20]
 800c438:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c43c:	4718      	bx	r3
 800c43e:	f7f5 fe85 	bl	800214c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c442:	6928      	ldr	r0, [r5, #16]
 800c444:	b118      	cbz	r0, 800c44e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800c446:	6803      	ldr	r3, [r0, #0]
 800c448:	4621      	mov	r1, r4
 800c44a:	695b      	ldr	r3, [r3, #20]
 800c44c:	e7f4      	b.n	800c438 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800c44e:	bd70      	pop	{r4, r5, r6, pc}

0800c450 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>:
 800c450:	b538      	push	{r3, r4, r5, lr}
 800c452:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
 800c456:	4604      	mov	r4, r0
 800c458:	460d      	mov	r5, r1
 800c45a:	428a      	cmp	r2, r1
 800c45c:	d008      	beq.n	800c470 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE+0x20>
 800c45e:	2a01      	cmp	r2, #1
 800c460:	6803      	ldr	r3, [r0, #0]
 800c462:	d106      	bne.n	800c472 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE+0x22>
 800c464:	b929      	cbnz	r1, 800c472 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE+0x22>
 800c466:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c46a:	4798      	blx	r3
 800c46c:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800c470:	bd38      	pop	{r3, r4, r5, pc}
 800c472:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c476:	4620      	mov	r0, r4
 800c478:	e7f7      	b.n	800c46a <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE+0x1a>
	...

0800c47c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800c47c:	4b0d      	ldr	r3, [pc, #52]	; (800c4b4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800c47e:	b510      	push	{r4, lr}
 800c480:	781b      	ldrb	r3, [r3, #0]
 800c482:	4604      	mov	r4, r0
 800c484:	b95b      	cbnz	r3, 800c49e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c486:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800c48a:	2b02      	cmp	r3, #2
 800c48c:	d007      	beq.n	800c49e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c48e:	6840      	ldr	r0, [r0, #4]
 800c490:	f000 f934 	bl	800c6fc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800c494:	b118      	cbz	r0, 800c49e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c496:	6862      	ldr	r2, [r4, #4]
 800c498:	7a53      	ldrb	r3, [r2, #9]
 800c49a:	2b00      	cmp	r3, #0
 800c49c:	d0fc      	beq.n	800c498 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800c49e:	f7f6 f961 	bl	8002764 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c4a2:	4620      	mov	r0, r4
 800c4a4:	2100      	movs	r1, #0
 800c4a6:	f7ff ffd3 	bl	800c450 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>
 800c4aa:	4620      	mov	r0, r4
 800c4ac:	f7ff fd04 	bl	800beb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c4b0:	bd10      	pop	{r4, pc}
 800c4b2:	bf00      	nop
 800c4b4:	200125ae 	.word	0x200125ae

0800c4b8 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800c4b8:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800c4bc:	1a13      	subs	r3, r2, r0
 800c4be:	4258      	negs	r0, r3
 800c4c0:	4158      	adcs	r0, r3
 800c4c2:	4770      	bx	lr

0800c4c4 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800c4c4:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800c4c8:	1a9b      	subs	r3, r3, r2
 800c4ca:	2b00      	cmp	r3, #0
 800c4cc:	bfdc      	itt	le
 800c4ce:	6882      	ldrle	r2, [r0, #8]
 800c4d0:	189b      	addle	r3, r3, r2
 800c4d2:	2b01      	cmp	r3, #1
 800c4d4:	bfcc      	ite	gt
 800c4d6:	2000      	movgt	r0, #0
 800c4d8:	2001      	movle	r0, #1
 800c4da:	4770      	bx	lr

0800c4dc <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800c4dc:	6902      	ldr	r2, [r0, #16]
 800c4de:	6840      	ldr	r0, [r0, #4]
 800c4e0:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800c4e4:	4770      	bx	lr

0800c4e6 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800c4e6:	6803      	ldr	r3, [r0, #0]
 800c4e8:	691b      	ldr	r3, [r3, #16]
 800c4ea:	4718      	bx	r3

0800c4ec <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800c4ec:	4770      	bx	lr

0800c4ee <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800c4ee:	4770      	bx	lr

0800c4f0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800c4f0:	4770      	bx	lr
	...

0800c4f4 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800c4f4:	2301      	movs	r3, #1
 800c4f6:	b570      	push	{r4, r5, r6, lr}
 800c4f8:	7203      	strb	r3, [r0, #8]
 800c4fa:	4604      	mov	r4, r0
 800c4fc:	6840      	ldr	r0, [r0, #4]
 800c4fe:	6803      	ldr	r3, [r0, #0]
 800c500:	699b      	ldr	r3, [r3, #24]
 800c502:	4798      	blx	r3
 800c504:	6803      	ldr	r3, [r0, #0]
 800c506:	4605      	mov	r5, r0
 800c508:	2b08      	cmp	r3, #8
 800c50a:	d01e      	beq.n	800c54a <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800c50c:	d80b      	bhi.n	800c526 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c50e:	2b02      	cmp	r3, #2
 800c510:	d027      	beq.n	800c562 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800c512:	2b04      	cmp	r3, #4
 800c514:	d011      	beq.n	800c53a <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800c516:	2b01      	cmp	r3, #1
 800c518:	d028      	beq.n	800c56c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800c51a:	4b17      	ldr	r3, [pc, #92]	; (800c578 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800c51c:	218c      	movs	r1, #140	; 0x8c
 800c51e:	4a17      	ldr	r2, [pc, #92]	; (800c57c <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800c520:	4817      	ldr	r0, [pc, #92]	; (800c580 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800c522:	f014 fc25 	bl	8020d70 <__assert_func>
 800c526:	2b40      	cmp	r3, #64	; 0x40
 800c528:	d020      	beq.n	800c56c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800c52a:	d801      	bhi.n	800c530 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800c52c:	2b20      	cmp	r3, #32
 800c52e:	e7f3      	b.n	800c518 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800c530:	2b80      	cmp	r3, #128	; 0x80
 800c532:	d01b      	beq.n	800c56c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800c534:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c538:	e7ee      	b.n	800c518 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800c53a:	6823      	ldr	r3, [r4, #0]
 800c53c:	7f01      	ldrb	r1, [r0, #28]
 800c53e:	4620      	mov	r0, r4
 800c540:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c542:	4798      	blx	r3
 800c544:	6823      	ldr	r3, [r4, #0]
 800c546:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c548:	e006      	b.n	800c558 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800c54a:	6823      	ldr	r3, [r4, #0]
 800c54c:	7f01      	ldrb	r1, [r0, #28]
 800c54e:	4620      	mov	r0, r4
 800c550:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c552:	4798      	blx	r3
 800c554:	6823      	ldr	r3, [r4, #0]
 800c556:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c558:	4629      	mov	r1, r5
 800c55a:	4620      	mov	r0, r4
 800c55c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c560:	4718      	bx	r3
 800c562:	6823      	ldr	r3, [r4, #0]
 800c564:	4620      	mov	r0, r4
 800c566:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c568:	4798      	blx	r3
 800c56a:	e7f3      	b.n	800c554 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800c56c:	6823      	ldr	r3, [r4, #0]
 800c56e:	4620      	mov	r0, r4
 800c570:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c572:	4798      	blx	r3
 800c574:	e7e6      	b.n	800c544 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800c576:	bf00      	nop
 800c578:	08023912 	.word	0x08023912
 800c57c:	080239d4 	.word	0x080239d4
 800c580:	08023937 	.word	0x08023937

0800c584 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800c584:	b570      	push	{r4, r5, r6, lr}
 800c586:	4604      	mov	r4, r0
 800c588:	460e      	mov	r6, r1
 800c58a:	6860      	ldr	r0, [r4, #4]
 800c58c:	6803      	ldr	r3, [r0, #0]
 800c58e:	685b      	ldr	r3, [r3, #4]
 800c590:	4798      	blx	r3
 800c592:	2800      	cmp	r0, #0
 800c594:	d1f9      	bne.n	800c58a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800c596:	4d0d      	ldr	r5, [pc, #52]	; (800c5cc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800c598:	6828      	ldr	r0, [r5, #0]
 800c59a:	6803      	ldr	r3, [r0, #0]
 800c59c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c59e:	4798      	blx	r3
 800c5a0:	f7f6 f8ee 	bl	8002780 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800c5a4:	6828      	ldr	r0, [r5, #0]
 800c5a6:	2101      	movs	r1, #1
 800c5a8:	f7ff ff52 	bl	800c450 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>
 800c5ac:	6860      	ldr	r0, [r4, #4]
 800c5ae:	4631      	mov	r1, r6
 800c5b0:	6803      	ldr	r3, [r0, #0]
 800c5b2:	689b      	ldr	r3, [r3, #8]
 800c5b4:	4798      	blx	r3
 800c5b6:	6823      	ldr	r3, [r4, #0]
 800c5b8:	4620      	mov	r0, r4
 800c5ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c5bc:	4798      	blx	r3
 800c5be:	6828      	ldr	r0, [r5, #0]
 800c5c0:	6803      	ldr	r3, [r0, #0]
 800c5c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c5c6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c5c8:	4718      	bx	r3
 800c5ca:	bf00      	nop
 800c5cc:	200125b0 	.word	0x200125b0

0800c5d0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800c5d0:	b508      	push	{r3, lr}
 800c5d2:	f7f6 f8c7 	bl	8002764 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c5d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c5da:	f7f6 b8cb 	b.w	8002774 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c5de <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800c5de:	b510      	push	{r4, lr}
 800c5e0:	4604      	mov	r4, r0
 800c5e2:	2114      	movs	r1, #20
 800c5e4:	f013 f838 	bl	801f658 <_ZdlPvj>
 800c5e8:	4620      	mov	r0, r4
 800c5ea:	bd10      	pop	{r4, pc}

0800c5ec <_ZN8touchgfx13DMA_Interface5startEv>:
 800c5ec:	b510      	push	{r4, lr}
 800c5ee:	4604      	mov	r4, r0
 800c5f0:	6840      	ldr	r0, [r0, #4]
 800c5f2:	6803      	ldr	r3, [r0, #0]
 800c5f4:	681b      	ldr	r3, [r3, #0]
 800c5f6:	4798      	blx	r3
 800c5f8:	b948      	cbnz	r0, 800c60e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c5fa:	7a63      	ldrb	r3, [r4, #9]
 800c5fc:	b13b      	cbz	r3, 800c60e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c5fe:	7a23      	ldrb	r3, [r4, #8]
 800c600:	b92b      	cbnz	r3, 800c60e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c602:	6823      	ldr	r3, [r4, #0]
 800c604:	4620      	mov	r0, r4
 800c606:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c608:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c60c:	4718      	bx	r3
 800c60e:	bd10      	pop	{r4, pc}

0800c610 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800c610:	b510      	push	{r4, lr}
 800c612:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800c616:	1b12      	subs	r2, r2, r4
 800c618:	2a00      	cmp	r2, #0
 800c61a:	bfdc      	itt	le
 800c61c:	6883      	ldrle	r3, [r0, #8]
 800c61e:	18d2      	addle	r2, r2, r3
 800c620:	2a01      	cmp	r2, #1
 800c622:	dd18      	ble.n	800c656 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800c624:	6843      	ldr	r3, [r0, #4]
 800c626:	f101 021c 	add.w	r2, r1, #28
 800c62a:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800c62e:	f851 4b04 	ldr.w	r4, [r1], #4
 800c632:	4291      	cmp	r1, r2
 800c634:	f843 4b04 	str.w	r4, [r3], #4
 800c638:	d1f9      	bne.n	800c62e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800c63a:	880a      	ldrh	r2, [r1, #0]
 800c63c:	801a      	strh	r2, [r3, #0]
 800c63e:	788a      	ldrb	r2, [r1, #2]
 800c640:	709a      	strb	r2, [r3, #2]
 800c642:	68c3      	ldr	r3, [r0, #12]
 800c644:	6882      	ldr	r2, [r0, #8]
 800c646:	f3bf 8f5b 	dmb	ish
 800c64a:	3301      	adds	r3, #1
 800c64c:	429a      	cmp	r2, r3
 800c64e:	bfd8      	it	le
 800c650:	1a9b      	suble	r3, r3, r2
 800c652:	60c3      	str	r3, [r0, #12]
 800c654:	bd10      	pop	{r4, pc}
 800c656:	4b03      	ldr	r3, [pc, #12]	; (800c664 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800c658:	2139      	movs	r1, #57	; 0x39
 800c65a:	4a03      	ldr	r2, [pc, #12]	; (800c668 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800c65c:	4803      	ldr	r0, [pc, #12]	; (800c66c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800c65e:	f014 fb87 	bl	8020d70 <__assert_func>
 800c662:	bf00      	nop
 800c664:	0802395d 	.word	0x0802395d
 800c668:	08023a04 	.word	0x08023a04
 800c66c:	08023937 	.word	0x08023937

0800c670 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800c670:	b510      	push	{r4, lr}
 800c672:	6803      	ldr	r3, [r0, #0]
 800c674:	4604      	mov	r4, r0
 800c676:	681b      	ldr	r3, [r3, #0]
 800c678:	4798      	blx	r3
 800c67a:	b128      	cbz	r0, 800c688 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800c67c:	4b07      	ldr	r3, [pc, #28]	; (800c69c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800c67e:	213f      	movs	r1, #63	; 0x3f
 800c680:	4a07      	ldr	r2, [pc, #28]	; (800c6a0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800c682:	4808      	ldr	r0, [pc, #32]	; (800c6a4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800c684:	f014 fb74 	bl	8020d70 <__assert_func>
 800c688:	6923      	ldr	r3, [r4, #16]
 800c68a:	68a2      	ldr	r2, [r4, #8]
 800c68c:	f3bf 8f5b 	dmb	ish
 800c690:	3301      	adds	r3, #1
 800c692:	429a      	cmp	r2, r3
 800c694:	bfd8      	it	le
 800c696:	1a9b      	suble	r3, r3, r2
 800c698:	6123      	str	r3, [r4, #16]
 800c69a:	bd10      	pop	{r4, pc}
 800c69c:	08023980 	.word	0x08023980
 800c6a0:	08023a52 	.word	0x08023a52
 800c6a4:	08023937 	.word	0x08023937

0800c6a8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800c6a8:	b570      	push	{r4, r5, r6, lr}
 800c6aa:	4604      	mov	r4, r0
 800c6ac:	6840      	ldr	r0, [r0, #4]
 800c6ae:	6803      	ldr	r3, [r0, #0]
 800c6b0:	681b      	ldr	r3, [r3, #0]
 800c6b2:	4798      	blx	r3
 800c6b4:	4605      	mov	r5, r0
 800c6b6:	b930      	cbnz	r0, 800c6c6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c6b8:	7a23      	ldrb	r3, [r4, #8]
 800c6ba:	b123      	cbz	r3, 800c6c6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c6bc:	6860      	ldr	r0, [r4, #4]
 800c6be:	6803      	ldr	r3, [r0, #0]
 800c6c0:	695b      	ldr	r3, [r3, #20]
 800c6c2:	4798      	blx	r3
 800c6c4:	7225      	strb	r5, [r4, #8]
 800c6c6:	6860      	ldr	r0, [r4, #4]
 800c6c8:	6803      	ldr	r3, [r0, #0]
 800c6ca:	681b      	ldr	r3, [r3, #0]
 800c6cc:	4798      	blx	r3
 800c6ce:	b928      	cbnz	r0, 800c6dc <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800c6d0:	6823      	ldr	r3, [r4, #0]
 800c6d2:	4620      	mov	r0, r4
 800c6d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c6d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c6da:	4718      	bx	r3
 800c6dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c6e0:	f7f6 b856 	b.w	8002790 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800c6e4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800c6e4:	b510      	push	{r4, lr}
 800c6e6:	6082      	str	r2, [r0, #8]
 800c6e8:	2200      	movs	r2, #0
 800c6ea:	4c03      	ldr	r4, [pc, #12]	; (800c6f8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800c6ec:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800c6f0:	e9c0 4100 	strd	r4, r1, [r0]
 800c6f4:	bd10      	pop	{r4, pc}
 800c6f6:	bf00      	nop
 800c6f8:	080239b8 	.word	0x080239b8

0800c6fc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800c6fc:	6840      	ldr	r0, [r0, #4]
 800c6fe:	6803      	ldr	r3, [r0, #0]
 800c700:	681b      	ldr	r3, [r3, #0]
 800c702:	4718      	bx	r3

0800c704 <_ZN8touchgfx17AbstractDataGraph8setScaleEi>:
 800c704:	62c1      	str	r1, [r0, #44]	; 0x2c
 800c706:	4770      	bx	lr

0800c708 <_ZNK8touchgfx17AbstractDataGraph19getXAxisScaleScaledEv>:
 800c708:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800c70a:	4770      	bx	lr

0800c70c <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800c70c:	2300      	movs	r3, #0
 800c70e:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800c712:	4770      	bx	lr

0800c714 <_ZNK8touchgfx17AbstractDataGraph18indexToGlobalIndexEs>:
 800c714:	4608      	mov	r0, r1
 800c716:	4770      	bx	lr

0800c718 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800c718:	b530      	push	{r4, r5, lr}
 800c71a:	460d      	mov	r5, r1
 800c71c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800c71e:	8949      	ldrh	r1, [r1, #10]
 800c720:	b085      	sub	sp, #20
 800c722:	4604      	mov	r4, r0
 800c724:	1ac9      	subs	r1, r1, r3
 800c726:	6803      	ldr	r3, [r0, #0]
 800c728:	f10d 0206 	add.w	r2, sp, #6
 800c72c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c730:	b209      	sxth	r1, r1
 800c732:	4798      	blx	r3
 800c734:	b1a0      	cbz	r0, 800c760 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c736:	792b      	ldrb	r3, [r5, #4]
 800c738:	b993      	cbnz	r3, 800c760 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c73a:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c73e:	b178      	cbz	r0, 800c760 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c740:	6803      	ldr	r3, [r0, #0]
 800c742:	68db      	ldr	r3, [r3, #12]
 800c744:	4798      	blx	r3
 800c746:	b158      	cbz	r0, 800c760 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c748:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c74c:	aa02      	add	r2, sp, #8
 800c74e:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c752:	4621      	mov	r1, r4
 800c754:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c758:	9503      	str	r5, [sp, #12]
 800c75a:	6803      	ldr	r3, [r0, #0]
 800c75c:	689b      	ldr	r3, [r3, #8]
 800c75e:	4798      	blx	r3
 800c760:	b005      	add	sp, #20
 800c762:	bd30      	pop	{r4, r5, pc}

0800c764 <_ZNK8touchgfx17AbstractDataGraph20getXAxisOffsetScaledEv>:
 800c764:	2000      	movs	r0, #0
 800c766:	4770      	bx	lr

0800c768 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEii>:
 800c768:	b410      	push	{r4}
 800c76a:	6804      	ldr	r4, [r0, #0]
 800c76c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800c76e:	f8d4 40b8 	ldr.w	r4, [r4, #184]	; 0xb8
 800c772:	435a      	muls	r2, r3
 800c774:	4359      	muls	r1, r3
 800c776:	4623      	mov	r3, r4
 800c778:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c77c:	4718      	bx	r3

0800c77e <_ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMinEv>:
 800c77e:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 800c782:	4770      	bx	lr

0800c784 <_ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMaxEv>:
 800c784:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 800c788:	4770      	bx	lr

0800c78a <_ZNK8touchgfx22AbstractDataGraphWithY24getGraphRangeYMinAsFloatEv>:
 800c78a:	edd0 7a50 	vldr	s15, [r0, #320]	; 0x140
 800c78e:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 800c792:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c796:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800c79a:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800c79e:	4770      	bx	lr

0800c7a0 <_ZNK8touchgfx22AbstractDataGraphWithY24getGraphRangeYMaxAsFloatEv>:
 800c7a0:	edd0 7a51 	vldr	s15, [r0, #324]	; 0x144
 800c7a4:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 800c7a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c7ac:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800c7b0:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800c7b4:	4770      	bx	lr

0800c7b6 <_ZN8touchgfx22AbstractDataGraphWithY13setXAxisScaleEi>:
 800c7b6:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800c7b8:	6803      	ldr	r3, [r0, #0]
 800c7ba:	4351      	muls	r1, r2
 800c7bc:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800c7c0:	4718      	bx	r3

0800c7c2 <_ZNK8touchgfx22AbstractDataGraphWithY20getXAxisScaleAsFloatEv>:
 800c7c2:	b510      	push	{r4, lr}
 800c7c4:	6803      	ldr	r3, [r0, #0]
 800c7c6:	4604      	mov	r4, r0
 800c7c8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800c7cc:	4798      	blx	r3
 800c7ce:	ed94 0a0b 	vldr	s0, [r4, #44]	; 0x2c
 800c7d2:	ee07 0a90 	vmov	s15, r0
 800c7d6:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800c7da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c7de:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800c7e2:	bd10      	pop	{r4, pc}

0800c7e4 <_ZN8touchgfx22AbstractDataGraphWithY14setXAxisOffsetEi>:
 800c7e4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800c7e6:	6803      	ldr	r3, [r0, #0]
 800c7e8:	4351      	muls	r1, r2
 800c7ea:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800c7ee:	4718      	bx	r3

0800c7f0 <_ZNK8touchgfx22AbstractDataGraphWithY21getXAxisOffsetAsFloatEv>:
 800c7f0:	b510      	push	{r4, lr}
 800c7f2:	6803      	ldr	r3, [r0, #0]
 800c7f4:	4604      	mov	r4, r0
 800c7f6:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 800c7fa:	4798      	blx	r3
 800c7fc:	ed94 0a0b 	vldr	s0, [r4, #44]	; 0x2c
 800c800:	ee07 0a90 	vmov	s15, r0
 800c804:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800c808:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c80c:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800c810:	bd10      	pop	{r4, pc}

0800c812 <_ZN8touchgfx22AbstractDataGraphWithY14beforeAddValueEv>:
 800c812:	4770      	bx	lr

0800c814 <_ZNK8touchgfx22AbstractDataGraphWithY9realIndexEs>:
 800c814:	4608      	mov	r0, r1
 800c816:	4770      	bx	lr

0800c818 <_ZNK8touchgfx22AbstractDataGraphWithY23indexToDataPointXScaledEs>:
 800c818:	b538      	push	{r3, r4, r5, lr}
 800c81a:	6803      	ldr	r3, [r0, #0]
 800c81c:	4604      	mov	r4, r0
 800c81e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800c822:	4798      	blx	r3
 800c824:	6823      	ldr	r3, [r4, #0]
 800c826:	4605      	mov	r5, r0
 800c828:	4620      	mov	r0, r4
 800c82a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800c82e:	4798      	blx	r3
 800c830:	6823      	ldr	r3, [r4, #0]
 800c832:	4345      	muls	r5, r0
 800c834:	4620      	mov	r0, r4
 800c836:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 800c83a:	4798      	blx	r3
 800c83c:	4428      	add	r0, r5
 800c83e:	bd38      	pop	{r3, r4, r5, pc}

0800c840 <_ZNK8touchgfx22AbstractDataGraphWithY23indexToDataPointYScaledEs>:
 800c840:	b510      	push	{r4, lr}
 800c842:	6803      	ldr	r3, [r0, #0]
 800c844:	f8d0 4128 	ldr.w	r4, [r0, #296]	; 0x128
 800c848:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800c84c:	4798      	blx	r3
 800c84e:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 800c852:	bd10      	pop	{r4, pc}

0800c854 <_ZN8touchgfx22AbstractDataGraphWithY19setXAxisScaleScaledEi>:
 800c854:	f8c0 1134 	str.w	r1, [r0, #308]	; 0x134
 800c858:	4770      	bx	lr

0800c85a <_ZNK8touchgfx22AbstractDataGraphWithY19getXAxisScaleScaledEv>:
 800c85a:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 800c85e:	4770      	bx	lr

0800c860 <_ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMinScaledEv>:
 800c860:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800c864:	4770      	bx	lr

0800c866 <_ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMaxScaledEv>:
 800c866:	f8d0 0144 	ldr.w	r0, [r0, #324]	; 0x144
 800c86a:	4770      	bx	lr

0800c86c <_ZN8touchgfx22AbstractDataGraphWithY20setXAxisOffsetScaledEi>:
 800c86c:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 800c870:	4770      	bx	lr

0800c872 <_ZNK8touchgfx22AbstractDataGraphWithY20getXAxisOffsetScaledEv>:
 800c872:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 800c876:	4770      	bx	lr

0800c878 <_ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenXQ5Es>:
 800c878:	6803      	ldr	r3, [r0, #0]
 800c87a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800c87e:	4718      	bx	r3

0800c880 <_ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenYQ5Es>:
 800c880:	b570      	push	{r4, r5, r6, lr}
 800c882:	6803      	ldr	r3, [r0, #0]
 800c884:	4604      	mov	r4, r0
 800c886:	f8d0 6128 	ldr.w	r6, [r0, #296]	; 0x128
 800c88a:	f8d3 50d0 	ldr.w	r5, [r3, #208]	; 0xd0
 800c88e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800c892:	4798      	blx	r3
 800c894:	462b      	mov	r3, r5
 800c896:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 800c89a:	4620      	mov	r0, r4
 800c89c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c8a0:	4718      	bx	r3
	...

0800c8a4 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii>:
 800c8a4:	4291      	cmp	r1, r2
 800c8a6:	b510      	push	{r4, lr}
 800c8a8:	4604      	mov	r4, r0
 800c8aa:	d106      	bne.n	800c8ba <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii+0x16>
 800c8ac:	4b12      	ldr	r3, [pc, #72]	; (800c8f8 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii+0x54>)
 800c8ae:	f44f 71ed 	mov.w	r1, #474	; 0x1da
 800c8b2:	4a12      	ldr	r2, [pc, #72]	; (800c8fc <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii+0x58>)
 800c8b4:	4812      	ldr	r0, [pc, #72]	; (800c900 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii+0x5c>)
 800c8b6:	f014 fa5b 	bl	8020d70 <__assert_func>
 800c8ba:	bfc2      	ittt	gt
 800c8bc:	460b      	movgt	r3, r1
 800c8be:	4611      	movgt	r1, r2
 800c8c0:	461a      	movgt	r2, r3
 800c8c2:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800c8c6:	428b      	cmp	r3, r1
 800c8c8:	d103      	bne.n	800c8d2 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii+0x2e>
 800c8ca:	f8d0 313c 	ldr.w	r3, [r0, #316]	; 0x13c
 800c8ce:	4293      	cmp	r3, r2
 800c8d0:	d011      	beq.n	800c8f6 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii+0x52>
 800c8d2:	f8c4 1138 	str.w	r1, [r4, #312]	; 0x138
 800c8d6:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800c8da:	f8c4 213c 	str.w	r2, [r4, #316]	; 0x13c
 800c8de:	f004 fe77 	bl	80115d0 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c8e2:	f104 0034 	add.w	r0, r4, #52	; 0x34
 800c8e6:	f004 fe73 	bl	80115d0 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c8ea:	f104 00e4 	add.w	r0, r4, #228	; 0xe4
 800c8ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c8f2:	f004 be6d 	b.w	80115d0 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c8f6:	bd10      	pop	{r4, pc}
 800c8f8:	08023a82 	.word	0x08023a82
 800c8fc:	08023cec 	.word	0x08023cec
 800c900:	08023a8d 	.word	0x08023a8d

0800c904 <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii>:
 800c904:	4291      	cmp	r1, r2
 800c906:	b510      	push	{r4, lr}
 800c908:	4604      	mov	r4, r0
 800c90a:	d106      	bne.n	800c91a <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii+0x16>
 800c90c:	4b12      	ldr	r3, [pc, #72]	; (800c958 <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii+0x54>)
 800c90e:	f240 21b9 	movw	r1, #697	; 0x2b9
 800c912:	4a12      	ldr	r2, [pc, #72]	; (800c95c <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii+0x58>)
 800c914:	4812      	ldr	r0, [pc, #72]	; (800c960 <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii+0x5c>)
 800c916:	f014 fa2b 	bl	8020d70 <__assert_func>
 800c91a:	bfc2      	ittt	gt
 800c91c:	460b      	movgt	r3, r1
 800c91e:	4611      	movgt	r1, r2
 800c920:	461a      	movgt	r2, r3
 800c922:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
 800c926:	428b      	cmp	r3, r1
 800c928:	d103      	bne.n	800c932 <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii+0x2e>
 800c92a:	f8d0 3144 	ldr.w	r3, [r0, #324]	; 0x144
 800c92e:	4293      	cmp	r3, r2
 800c930:	d011      	beq.n	800c956 <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii+0x52>
 800c932:	f8c4 1140 	str.w	r1, [r4, #320]	; 0x140
 800c936:	f104 0060 	add.w	r0, r4, #96	; 0x60
 800c93a:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
 800c93e:	f004 fe47 	bl	80115d0 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c942:	f104 0034 	add.w	r0, r4, #52	; 0x34
 800c946:	f004 fe43 	bl	80115d0 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c94a:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800c94e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c952:	f004 be3d 	b.w	80115d0 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c956:	bd10      	pop	{r4, pc}
 800c958:	08023a82 	.word	0x08023a82
 800c95c:	08023d34 	.word	0x08023d34
 800c960:	08023a8d 	.word	0x08023a8d

0800c964 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800c964:	b530      	push	{r4, r5, lr}
 800c966:	790b      	ldrb	r3, [r1, #4]
 800c968:	b085      	sub	sp, #20
 800c96a:	4604      	mov	r4, r0
 800c96c:	460d      	mov	r5, r1
 800c96e:	2b02      	cmp	r3, #2
 800c970:	d020      	beq.n	800c9b4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c972:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800c974:	f10d 0206 	add.w	r2, sp, #6
 800c978:	88c9      	ldrh	r1, [r1, #6]
 800c97a:	1ac9      	subs	r1, r1, r3
 800c97c:	6803      	ldr	r3, [r0, #0]
 800c97e:	b209      	sxth	r1, r1
 800c980:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c984:	4798      	blx	r3
 800c986:	b1a8      	cbz	r0, 800c9b4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c988:	792b      	ldrb	r3, [r5, #4]
 800c98a:	2b01      	cmp	r3, #1
 800c98c:	d812      	bhi.n	800c9b4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c98e:	f8d4 0120 	ldr.w	r0, [r4, #288]	; 0x120
 800c992:	b178      	cbz	r0, 800c9b4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c994:	6803      	ldr	r3, [r0, #0]
 800c996:	68db      	ldr	r3, [r3, #12]
 800c998:	4798      	blx	r3
 800c99a:	b158      	cbz	r0, 800c9b4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c99c:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c9a0:	aa02      	add	r2, sp, #8
 800c9a2:	f8d4 0120 	ldr.w	r0, [r4, #288]	; 0x120
 800c9a6:	4621      	mov	r1, r4
 800c9a8:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c9ac:	9503      	str	r5, [sp, #12]
 800c9ae:	6803      	ldr	r3, [r0, #0]
 800c9b0:	689b      	ldr	r3, [r3, #8]
 800c9b2:	4798      	blx	r3
 800c9b4:	b005      	add	sp, #20
 800c9b6:	bd30      	pop	{r4, r5, pc}

0800c9b8 <_ZN8touchgfx9ContainerC1Ev>:
 800c9b8:	2101      	movs	r1, #1
 800c9ba:	2200      	movs	r2, #0
 800c9bc:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c9c0:	4908      	ldr	r1, [pc, #32]	; (800c9e4 <_ZN8touchgfx9ContainerC1Ev+0x2c>)
 800c9c2:	8082      	strh	r2, [r0, #4]
 800c9c4:	80c2      	strh	r2, [r0, #6]
 800c9c6:	8102      	strh	r2, [r0, #8]
 800c9c8:	8142      	strh	r2, [r0, #10]
 800c9ca:	8182      	strh	r2, [r0, #12]
 800c9cc:	81c2      	strh	r2, [r0, #14]
 800c9ce:	8202      	strh	r2, [r0, #16]
 800c9d0:	8242      	strh	r2, [r0, #18]
 800c9d2:	61c2      	str	r2, [r0, #28]
 800c9d4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c9d8:	6001      	str	r1, [r0, #0]
 800c9da:	6282      	str	r2, [r0, #40]	; 0x28
 800c9dc:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c9e0:	4770      	bx	lr
 800c9e2:	bf00      	nop
 800c9e4:	08023384 	.word	0x08023384

0800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800c9e8:	6800      	ldr	r0, [r0, #0]
 800c9ea:	2800      	cmp	r0, #0
 800c9ec:	bfbd      	ittte	lt
 800c9ee:	380f      	sublt	r0, #15
 800c9f0:	2320      	movlt	r3, #32
 800c9f2:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c9f6:	3010      	addge	r0, #16
 800c9f8:	bfa8      	it	ge
 800c9fa:	1140      	asrge	r0, r0, #5
 800c9fc:	4770      	bx	lr

0800c9fe <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
 800c9fe:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ca00:	ab01      	add	r3, sp, #4
 800ca02:	4615      	mov	r5, r2
 800ca04:	f004 ffa0 	bl	8011948 <_ZN8touchgfx6muldivElllRl>
 800ca08:	2800      	cmp	r0, #0
 800ca0a:	462a      	mov	r2, r5
 800ca0c:	9901      	ldr	r1, [sp, #4]
 800ca0e:	ea4f 1440 	mov.w	r4, r0, lsl #5
 800ca12:	f04f 0020 	mov.w	r0, #32
 800ca16:	db04      	blt.n	800ca22 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
 800ca18:	f004 ffb5 	bl	8011986 <_ZN8touchgfx6muldivElll>
 800ca1c:	4420      	add	r0, r4
 800ca1e:	b003      	add	sp, #12
 800ca20:	bd30      	pop	{r4, r5, pc}
 800ca22:	f004 ffb0 	bl	8011986 <_ZN8touchgfx6muldivElll>
 800ca26:	1a20      	subs	r0, r4, r0
 800ca28:	e7f9      	b.n	800ca1e <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

0800ca2a <_ZN8touchgfx17AbstractDataGraph12float2scaledEfi>:
 800ca2a:	ee07 0a90 	vmov	s15, r0
 800ca2e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ca32:	ee27 0a80 	vmul.f32	s0, s15, s0
 800ca36:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800ca3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ca3e:	db08      	blt.n	800ca52 <_ZN8touchgfx17AbstractDataGraph12float2scaledEfi+0x28>
 800ca40:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800ca44:	ee30 0a27 	vadd.f32	s0, s0, s15
 800ca48:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800ca4c:	ee17 0a90 	vmov	r0, s15
 800ca50:	4770      	bx	lr
 800ca52:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800ca56:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800ca5a:	ee17 3a90 	vmov	r3, s15
 800ca5e:	1e58      	subs	r0, r3, #1
 800ca60:	ee30 0a47 	vsub.f32	s0, s0, s14
 800ca64:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800ca68:	ee30 0a07 	vadd.f32	s0, s0, s14
 800ca6c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800ca70:	ee10 3a10 	vmov	r3, s0
 800ca74:	4403      	add	r3, r0
 800ca76:	4618      	mov	r0, r3
 800ca78:	4770      	bx	lr

0800ca7a <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEff>:
 800ca7a:	b570      	push	{r4, r5, r6, lr}
 800ca7c:	ed2d 8b02 	vpush	{d8}
 800ca80:	eeb0 8a60 	vmov.f32	s16, s1
 800ca84:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
 800ca86:	4604      	mov	r4, r0
 800ca88:	4628      	mov	r0, r5
 800ca8a:	f7ff ffce 	bl	800ca2a <_ZN8touchgfx17AbstractDataGraph12float2scaledEfi>
 800ca8e:	eeb0 0a48 	vmov.f32	s0, s16
 800ca92:	4606      	mov	r6, r0
 800ca94:	4628      	mov	r0, r5
 800ca96:	f7ff ffc8 	bl	800ca2a <_ZN8touchgfx17AbstractDataGraph12float2scaledEfi>
 800ca9a:	6823      	ldr	r3, [r4, #0]
 800ca9c:	4602      	mov	r2, r0
 800ca9e:	4631      	mov	r1, r6
 800caa0:	4620      	mov	r0, r4
 800caa2:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800caa6:	ecbd 8b02 	vpop	{d8}
 800caaa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800caae:	4718      	bx	r3

0800cab0 <_ZN8touchgfx22AbstractDataGraphWithY13setXAxisScaleEf>:
 800cab0:	b510      	push	{r4, lr}
 800cab2:	4604      	mov	r4, r0
 800cab4:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800cab6:	f7ff ffb8 	bl	800ca2a <_ZN8touchgfx17AbstractDataGraph12float2scaledEfi>
 800caba:	4601      	mov	r1, r0
 800cabc:	6823      	ldr	r3, [r4, #0]
 800cabe:	4620      	mov	r0, r4
 800cac0:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800cac4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cac8:	4718      	bx	r3

0800caca <_ZN8touchgfx22AbstractDataGraphWithY14setXAxisOffsetEf>:
 800caca:	b510      	push	{r4, lr}
 800cacc:	4604      	mov	r4, r0
 800cace:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800cad0:	f7ff ffab 	bl	800ca2a <_ZN8touchgfx17AbstractDataGraph12float2scaledEfi>
 800cad4:	4601      	mov	r1, r0
 800cad6:	6823      	ldr	r3, [r4, #0]
 800cad8:	4620      	mov	r0, r4
 800cada:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800cade:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cae2:	4718      	bx	r3

0800cae4 <_ZN8touchgfx17AbstractDataGraph10scaled2intEii>:
 800cae4:	2800      	cmp	r0, #0
 800cae6:	db07      	blt.n	800caf8 <_ZN8touchgfx17AbstractDataGraph10scaled2intEii+0x14>
 800cae8:	eb01 0040 	add.w	r0, r1, r0, lsl #1
 800caec:	fb90 f0f1 	sdiv	r0, r0, r1
 800caf0:	2102      	movs	r1, #2
 800caf2:	fb90 f0f1 	sdiv	r0, r0, r1
 800caf6:	4770      	bx	lr
 800caf8:	f06f 0301 	mvn.w	r3, #1
 800cafc:	fb03 1000 	mla	r0, r3, r0, r1
 800cb00:	3801      	subs	r0, #1
 800cb02:	fb90 f0f1 	sdiv	r0, r0, r1
 800cb06:	2102      	movs	r1, #2
 800cb08:	fb90 f0f1 	sdiv	r0, r0, r1
 800cb0c:	4240      	negs	r0, r0
 800cb0e:	4770      	bx	lr

0800cb10 <_ZNK8touchgfx22AbstractDataGraphWithY22getGraphRangeYMinAsIntEv>:
 800cb10:	b508      	push	{r3, lr}
 800cb12:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800cb14:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800cb18:	f7ff ffe4 	bl	800cae4 <_ZN8touchgfx17AbstractDataGraph10scaled2intEii>
 800cb1c:	bd08      	pop	{r3, pc}

0800cb1e <_ZNK8touchgfx22AbstractDataGraphWithY22getGraphRangeYMaxAsIntEv>:
 800cb1e:	b508      	push	{r3, lr}
 800cb20:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800cb22:	f8d0 0144 	ldr.w	r0, [r0, #324]	; 0x144
 800cb26:	f7ff ffdd 	bl	800cae4 <_ZN8touchgfx17AbstractDataGraph10scaled2intEii>
 800cb2a:	bd08      	pop	{r3, pc}

0800cb2c <_ZNK8touchgfx22AbstractDataGraphWithY18getXAxisScaleAsIntEv>:
 800cb2c:	b510      	push	{r4, lr}
 800cb2e:	6803      	ldr	r3, [r0, #0]
 800cb30:	4604      	mov	r4, r0
 800cb32:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800cb36:	4798      	blx	r3
 800cb38:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800cb3a:	f7ff ffd3 	bl	800cae4 <_ZN8touchgfx17AbstractDataGraph10scaled2intEii>
 800cb3e:	bd10      	pop	{r4, pc}

0800cb40 <_ZNK8touchgfx22AbstractDataGraphWithY19getXAxisOffsetAsIntEv>:
 800cb40:	b510      	push	{r4, lr}
 800cb42:	6803      	ldr	r3, [r0, #0]
 800cb44:	4604      	mov	r4, r0
 800cb46:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 800cb4a:	4798      	blx	r3
 800cb4c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800cb4e:	f7ff ffc9 	bl	800cae4 <_ZN8touchgfx17AbstractDataGraph10scaled2intEii>
 800cb52:	bd10      	pop	{r4, pc}

0800cb54 <_ZNK8touchgfx17AbstractDataGraph8getAlphaEv>:
 800cb54:	f890 0030 	ldrb.w	r0, [r0, #48]	; 0x30
 800cb58:	4770      	bx	lr

0800cb5a <_ZNK8touchgfx17AbstractDataGraph21getGraphAreaMarginTopEv>:
 800cb5a:	f9b0 00c2 	ldrsh.w	r0, [r0, #194]	; 0xc2
 800cb5e:	4770      	bx	lr

0800cb60 <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaMarginLeftEv>:
 800cb60:	f9b0 0068 	ldrsh.w	r0, [r0, #104]	; 0x68
 800cb64:	4770      	bx	lr

0800cb66 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800cb66:	f8a0 3114 	strh.w	r3, [r0, #276]	; 0x114
 800cb6a:	f9bd 3000 	ldrsh.w	r3, [sp]
 800cb6e:	f8a0 1110 	strh.w	r1, [r0, #272]	; 0x110
 800cb72:	f8a0 2112 	strh.w	r2, [r0, #274]	; 0x112
 800cb76:	f8a0 3116 	strh.w	r3, [r0, #278]	; 0x116
 800cb7a:	4770      	bx	lr

0800cb7c <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>:
 800cb7c:	f9b0 0110 	ldrsh.w	r0, [r0, #272]	; 0x110
 800cb80:	4770      	bx	lr

0800cb82 <_ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv>:
 800cb82:	f9b0 0112 	ldrsh.w	r0, [r0, #274]	; 0x112
 800cb86:	4770      	bx	lr

0800cb88 <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>:
 800cb88:	f8b0 3112 	ldrh.w	r3, [r0, #274]	; 0x112
 800cb8c:	f8b0 2114 	ldrh.w	r2, [r0, #276]	; 0x114
 800cb90:	8f80      	ldrh	r0, [r0, #60]	; 0x3c
 800cb92:	4413      	add	r3, r2
 800cb94:	1ac0      	subs	r0, r0, r3
 800cb96:	b200      	sxth	r0, r0
 800cb98:	4770      	bx	lr

0800cb9a <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_>:
 800cb9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cb9e:	4690      	mov	r8, r2
 800cba0:	f9b0 211a 	ldrsh.w	r2, [r0, #282]	; 0x11a
 800cba4:	4604      	mov	r4, r0
 800cba6:	461e      	mov	r6, r3
 800cba8:	9d06      	ldr	r5, [sp, #24]
 800cbaa:	b92a      	cbnz	r2, 800cbb8 <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800cbac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800cbb0:	802b      	strh	r3, [r5, #0]
 800cbb2:	8033      	strh	r3, [r6, #0]
 800cbb4:	2000      	movs	r0, #0
 800cbb6:	e009      	b.n	800cbcc <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0x32>
 800cbb8:	f7ff ffe6 	bl	800cb88 <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 800cbbc:	2801      	cmp	r0, #1
 800cbbe:	d107      	bne.n	800cbd0 <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0x36>
 800cbc0:	2300      	movs	r3, #0
 800cbc2:	8033      	strh	r3, [r6, #0]
 800cbc4:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800cbc8:	3b01      	subs	r3, #1
 800cbca:	802b      	strh	r3, [r5, #0]
 800cbcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cbd0:	f9b4 c112 	ldrsh.w	ip, [r4, #274]	; 0x112
 800cbd4:	1e42      	subs	r2, r0, #1
 800cbd6:	f8d4 713c 	ldr.w	r7, [r4, #316]	; 0x13c
 800cbda:	eba1 0c0c 	sub.w	ip, r1, ip
 800cbde:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800cbe2:	ea4f 104c 	mov.w	r0, ip, lsl #5
 800cbe6:	1af9      	subs	r1, r7, r3
 800cbe8:	f004 fecd 	bl	8011986 <_ZN8touchgfx6muldivElll>
 800cbec:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800cbf0:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
 800cbf4:	eb00 1743 	add.w	r7, r0, r3, lsl #5
 800cbf8:	4620      	mov	r0, r4
 800cbfa:	1ac9      	subs	r1, r1, r3
 800cbfc:	f7ff ffc4 	bl	800cb88 <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 800cc00:	f9b4 3112 	ldrsh.w	r3, [r4, #274]	; 0x112
 800cc04:	1e42      	subs	r2, r0, #1
 800cc06:	eba8 0803 	sub.w	r8, r8, r3
 800cc0a:	ea4f 1048 	mov.w	r0, r8, lsl #5
 800cc0e:	f004 feba 	bl	8011986 <_ZN8touchgfx6muldivElll>
 800cc12:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800cc16:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800cc1a:	4287      	cmp	r7, r0
 800cc1c:	bfc2      	ittt	gt
 800cc1e:	463b      	movgt	r3, r7
 800cc20:	4607      	movgt	r7, r0
 800cc22:	4618      	movgt	r0, r3
 800cc24:	2800      	cmp	r0, #0
 800cc26:	bfb5      	itete	lt
 800cc28:	2320      	movlt	r3, #32
 800cc2a:	301f      	addge	r0, #31
 800cc2c:	fb90 f0f3 	sdivlt	r0, r0, r3
 800cc30:	1140      	asrge	r0, r0, #5
 800cc32:	2800      	cmp	r0, #0
 800cc34:	da03      	bge.n	800cc3e <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0xa4>
 800cc36:	2000      	movs	r0, #0
 800cc38:	8028      	strh	r0, [r5, #0]
 800cc3a:	8030      	strh	r0, [r6, #0]
 800cc3c:	e7c6      	b.n	800cbcc <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0x32>
 800cc3e:	2320      	movs	r3, #32
 800cc40:	fb97 f7f3 	sdiv	r7, r7, r3
 800cc44:	f9b4 311a 	ldrsh.w	r3, [r4, #282]	; 0x11a
 800cc48:	3b01      	subs	r3, #1
 800cc4a:	429f      	cmp	r7, r3
 800cc4c:	dd03      	ble.n	800cc56 <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0xbc>
 800cc4e:	b218      	sxth	r0, r3
 800cc50:	8028      	strh	r0, [r5, #0]
 800cc52:	8030      	strh	r0, [r6, #0]
 800cc54:	e7ae      	b.n	800cbb4 <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800cc56:	4283      	cmp	r3, r0
 800cc58:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
 800cc5c:	bfb8      	it	lt
 800cc5e:	b218      	sxthlt	r0, r3
 800cc60:	8037      	strh	r7, [r6, #0]
 800cc62:	bfa8      	it	ge
 800cc64:	b200      	sxthge	r0, r0
 800cc66:	8028      	strh	r0, [r5, #0]
 800cc68:	2001      	movs	r0, #1
 800cc6a:	e7af      	b.n	800cbcc <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0x32>

0800cc6c <_ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenXQ5Ei>:
 800cc6c:	b570      	push	{r4, r5, r6, lr}
 800cc6e:	4604      	mov	r4, r0
 800cc70:	f8d0 5138 	ldr.w	r5, [r0, #312]	; 0x138
 800cc74:	1b4e      	subs	r6, r1, r5
 800cc76:	f7ff ff87 	bl	800cb88 <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 800cc7a:	f8d4 213c 	ldr.w	r2, [r4, #316]	; 0x13c
 800cc7e:	1e41      	subs	r1, r0, #1
 800cc80:	4630      	mov	r0, r6
 800cc82:	1b52      	subs	r2, r2, r5
 800cc84:	f7ff febb 	bl	800c9fe <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 800cc88:	f9b4 3112 	ldrsh.w	r3, [r4, #274]	; 0x112
 800cc8c:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 800cc90:	bd70      	pop	{r4, r5, r6, pc}

0800cc92 <_ZNK8touchgfx17AbstractDataGraph33getGraphAreaWidthIncludingPaddingEv>:
 800cc92:	f9b0 003c 	ldrsh.w	r0, [r0, #60]	; 0x3c
 800cc96:	4770      	bx	lr

0800cc98 <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>:
 800cc98:	f8b0 3110 	ldrh.w	r3, [r0, #272]	; 0x110
 800cc9c:	f8b0 2116 	ldrh.w	r2, [r0, #278]	; 0x116
 800cca0:	8fc0      	ldrh	r0, [r0, #62]	; 0x3e
 800cca2:	4413      	add	r3, r2
 800cca4:	1ac0      	subs	r0, r0, r3
 800cca6:	b200      	sxth	r0, r0
 800cca8:	4770      	bx	lr

0800ccaa <_ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenYQ5Ei>:
 800ccaa:	b570      	push	{r4, r5, r6, lr}
 800ccac:	4605      	mov	r5, r0
 800ccae:	460e      	mov	r6, r1
 800ccb0:	f7ff fff2 	bl	800cc98 <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>
 800ccb4:	1e41      	subs	r1, r0, #1
 800ccb6:	f9b5 4110 	ldrsh.w	r4, [r5, #272]	; 0x110
 800ccba:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
 800ccbe:	4404      	add	r4, r0
 800ccc0:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800ccc4:	1af0      	subs	r0, r6, r3
 800ccc6:	3c01      	subs	r4, #1
 800ccc8:	1ad2      	subs	r2, r2, r3
 800ccca:	f7ff fe98 	bl	800c9fe <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 800ccce:	0164      	lsls	r4, r4, #5
 800ccd0:	1a20      	subs	r0, r4, r0
 800ccd2:	bd70      	pop	{r4, r5, r6, pc}

0800ccd4 <_ZNK8touchgfx17AbstractDataGraph34getGraphAreaHeightIncludingPaddingEv>:
 800ccd4:	f9b0 003e 	ldrsh.w	r0, [r0, #62]	; 0x3e
 800ccd8:	4770      	bx	lr

0800ccda <_ZNK8touchgfx17AbstractDataGraph17getGapBeforeIndexEv>:
 800ccda:	f9b0 011c 	ldrsh.w	r0, [r0, #284]	; 0x11c
 800ccde:	4770      	bx	lr

0800cce0 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800cce0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cce2:	4604      	mov	r4, r0
 800cce4:	3034      	adds	r0, #52	; 0x34
 800cce6:	460d      	mov	r5, r1
 800cce8:	f7fe fcba 	bl	800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ccec:	f9b4 203e 	ldrsh.w	r2, [r4, #62]	; 0x3e
 800ccf0:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 800ccf4:	4628      	mov	r0, r5
 800ccf6:	9200      	str	r2, [sp, #0]
 800ccf8:	2200      	movs	r2, #0
 800ccfa:	4611      	mov	r1, r2
 800ccfc:	f7f6 fc12 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cd00:	b003      	add	sp, #12
 800cd02:	bd30      	pop	{r4, r5, pc}

0800cd04 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800cd04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cd06:	4604      	mov	r4, r0
 800cd08:	3060      	adds	r0, #96	; 0x60
 800cd0a:	460d      	mov	r5, r1
 800cd0c:	f7fe fca8 	bl	800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cd10:	f9b4 206a 	ldrsh.w	r2, [r4, #106]	; 0x6a
 800cd14:	f9b4 3068 	ldrsh.w	r3, [r4, #104]	; 0x68
 800cd18:	4628      	mov	r0, r5
 800cd1a:	9200      	str	r2, [sp, #0]
 800cd1c:	2200      	movs	r2, #0
 800cd1e:	4611      	mov	r1, r2
 800cd20:	f7f6 fc00 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cd24:	b003      	add	sp, #12
 800cd26:	bd30      	pop	{r4, r5, pc}

0800cd28 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800cd28:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cd2a:	4604      	mov	r4, r0
 800cd2c:	30e4      	adds	r0, #228	; 0xe4
 800cd2e:	460d      	mov	r5, r1
 800cd30:	f7fe fc96 	bl	800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cd34:	f9b4 20ee 	ldrsh.w	r2, [r4, #238]	; 0xee
 800cd38:	f9b4 30ec 	ldrsh.w	r3, [r4, #236]	; 0xec
 800cd3c:	4628      	mov	r0, r5
 800cd3e:	9200      	str	r2, [sp, #0]
 800cd40:	2200      	movs	r2, #0
 800cd42:	4611      	mov	r1, r2
 800cd44:	f7f6 fbee 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cd48:	b003      	add	sp, #12
 800cd4a:	bd30      	pop	{r4, r5, pc}

0800cd4c <_ZNK8touchgfx17AbstractDataGraph15getUsedCapacityEv>:
 800cd4c:	f9b0 011a 	ldrsh.w	r0, [r0, #282]	; 0x11a
 800cd50:	4770      	bx	lr

0800cd52 <_ZNK8touchgfx17AbstractDataGraph14indexToScreenXEs>:
 800cd52:	b507      	push	{r0, r1, r2, lr}
 800cd54:	6803      	ldr	r3, [r0, #0]
 800cd56:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800cd5a:	4798      	blx	r3
 800cd5c:	ab02      	add	r3, sp, #8
 800cd5e:	f843 0d04 	str.w	r0, [r3, #-4]!
 800cd62:	4618      	mov	r0, r3
 800cd64:	f7ff fe40 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cd68:	b200      	sxth	r0, r0
 800cd6a:	b003      	add	sp, #12
 800cd6c:	f85d fb04 	ldr.w	pc, [sp], #4

0800cd70 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800cd70:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cd72:	f9b0 311a 	ldrsh.w	r3, [r0, #282]	; 0x11a
 800cd76:	b085      	sub	sp, #20
 800cd78:	4605      	mov	r5, r0
 800cd7a:	460f      	mov	r7, r1
 800cd7c:	4616      	mov	r6, r2
 800cd7e:	b333      	cbz	r3, 800cdce <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x5e>
 800cd80:	6803      	ldr	r3, [r0, #0]
 800cd82:	f10d 020e 	add.w	r2, sp, #14
 800cd86:	9200      	str	r2, [sp, #0]
 800cd88:	460a      	mov	r2, r1
 800cd8a:	f8d3 40dc 	ldr.w	r4, [r3, #220]	; 0xdc
 800cd8e:	ab03      	add	r3, sp, #12
 800cd90:	47a0      	blx	r4
 800cd92:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 800cd96:	4628      	mov	r0, r5
 800cd98:	f7ff ffdb 	bl	800cd52 <_ZNK8touchgfx17AbstractDataGraph14indexToScreenXEs>
 800cd9c:	f9bd 100e 	ldrsh.w	r1, [sp, #14]
 800cda0:	4604      	mov	r4, r0
 800cda2:	4628      	mov	r0, r5
 800cda4:	f7ff ffd5 	bl	800cd52 <_ZNK8touchgfx17AbstractDataGraph14indexToScreenXEs>
 800cda8:	1bc0      	subs	r0, r0, r7
 800cdaa:	1be4      	subs	r4, r4, r7
 800cdac:	2800      	cmp	r0, #0
 800cdae:	bfb8      	it	lt
 800cdb0:	4240      	neglt	r0, r0
 800cdb2:	2c00      	cmp	r4, #0
 800cdb4:	bfb8      	it	lt
 800cdb6:	4264      	neglt	r4, r4
 800cdb8:	42a0      	cmp	r0, r4
 800cdba:	f04f 0001 	mov.w	r0, #1
 800cdbe:	bfac      	ite	ge
 800cdc0:	f9bd 300c 	ldrshge.w	r3, [sp, #12]
 800cdc4:	f9bd 300e 	ldrshlt.w	r3, [sp, #14]
 800cdc8:	8033      	strh	r3, [r6, #0]
 800cdca:	b005      	add	sp, #20
 800cdcc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cdce:	4618      	mov	r0, r3
 800cdd0:	e7fb      	b.n	800cdca <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x5a>

0800cdd2 <_ZNK8touchgfx17AbstractDataGraph14indexToScreenYEs>:
 800cdd2:	b507      	push	{r0, r1, r2, lr}
 800cdd4:	6803      	ldr	r3, [r0, #0]
 800cdd6:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 800cdda:	4798      	blx	r3
 800cddc:	ab02      	add	r3, sp, #8
 800cdde:	f843 0d04 	str.w	r0, [r3, #-4]!
 800cde2:	4618      	mov	r0, r3
 800cde4:	f7ff fe00 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cde8:	b200      	sxth	r0, r0
 800cdea:	b003      	add	sp, #12
 800cdec:	f85d fb04 	ldr.w	pc, [sp], #4

0800cdf0 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800cdf0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cdf4:	4605      	mov	r5, r0
 800cdf6:	f9b0 011a 	ldrsh.w	r0, [r0, #282]	; 0x11a
 800cdfa:	4689      	mov	r9, r1
 800cdfc:	4692      	mov	sl, r2
 800cdfe:	469b      	mov	fp, r3
 800ce00:	b338      	cbz	r0, 800ce52 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x62>
 800ce02:	2700      	movs	r7, #0
 800ce04:	f06f 4800 	mvn.w	r8, #2147483648	; 0x80000000
 800ce08:	b23e      	sxth	r6, r7
 800ce0a:	f9b5 311a 	ldrsh.w	r3, [r5, #282]	; 0x11a
 800ce0e:	42b3      	cmp	r3, r6
 800ce10:	dd1e      	ble.n	800ce50 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x60>
 800ce12:	4631      	mov	r1, r6
 800ce14:	4628      	mov	r0, r5
 800ce16:	f7ff ff9c 	bl	800cd52 <_ZNK8touchgfx17AbstractDataGraph14indexToScreenXEs>
 800ce1a:	eba0 0409 	sub.w	r4, r0, r9
 800ce1e:	4631      	mov	r1, r6
 800ce20:	4628      	mov	r0, r5
 800ce22:	2c00      	cmp	r4, #0
 800ce24:	f107 0701 	add.w	r7, r7, #1
 800ce28:	bfb8      	it	lt
 800ce2a:	4264      	neglt	r4, r4
 800ce2c:	f7ff ffd1 	bl	800cdd2 <_ZNK8touchgfx17AbstractDataGraph14indexToScreenYEs>
 800ce30:	eba0 000a 	sub.w	r0, r0, sl
 800ce34:	b224      	sxth	r4, r4
 800ce36:	2800      	cmp	r0, #0
 800ce38:	bfb8      	it	lt
 800ce3a:	4240      	neglt	r0, r0
 800ce3c:	fb10 f000 	smulbb	r0, r0, r0
 800ce40:	fb04 0004 	mla	r0, r4, r4, r0
 800ce44:	4540      	cmp	r0, r8
 800ce46:	bfbc      	itt	lt
 800ce48:	f8ab 6000 	strhlt.w	r6, [fp]
 800ce4c:	4680      	movlt	r8, r0
 800ce4e:	e7db      	b.n	800ce08 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800ce50:	2001      	movs	r0, #1
 800ce52:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ce56 <_ZN8touchgfx17AbstractDataGraph14setClickActionERNS_15GenericCallbackIRKS0_RKNS0_15GraphClickEventEvEE>:
 800ce56:	f8c0 1120 	str.w	r1, [r0, #288]	; 0x120
 800ce5a:	4770      	bx	lr

0800ce5c <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800ce5c:	b538      	push	{r3, r4, r5, lr}
 800ce5e:	f9b0 311a 	ldrsh.w	r3, [r0, #282]	; 0x11a
 800ce62:	460d      	mov	r5, r1
 800ce64:	428b      	cmp	r3, r1
 800ce66:	dd08      	ble.n	800ce7a <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800ce68:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 800ce6a:	b134      	cbz	r4, 800ce7a <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800ce6c:	6823      	ldr	r3, [r4, #0]
 800ce6e:	4620      	mov	r0, r4
 800ce70:	4629      	mov	r1, r5
 800ce72:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ce74:	4798      	blx	r3
 800ce76:	69a4      	ldr	r4, [r4, #24]
 800ce78:	e7f7      	b.n	800ce6a <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800ce7a:	bd38      	pop	{r3, r4, r5, pc}

0800ce7c <_ZN8touchgfx17AbstractDataGraph19invalidateGraphAreaEv>:
 800ce7c:	3034      	adds	r0, #52	; 0x34
 800ce7e:	f004 bba7 	b.w	80115d0 <_ZNK8touchgfx8Drawable10invalidateEv>

0800ce82 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800ce82:	b570      	push	{r4, r5, r6, lr}
 800ce84:	4606      	mov	r6, r0
 800ce86:	460d      	mov	r5, r1
 800ce88:	f8d0 40e0 	ldr.w	r4, [r0, #224]	; 0xe0
 800ce8c:	b134      	cbz	r4, 800ce9c <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800ce8e:	6823      	ldr	r3, [r4, #0]
 800ce90:	4620      	mov	r0, r4
 800ce92:	4629      	mov	r1, r5
 800ce94:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ce96:	4798      	blx	r3
 800ce98:	69a4      	ldr	r4, [r4, #24]
 800ce9a:	e7f7      	b.n	800ce8c <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800ce9c:	f8d6 410c 	ldr.w	r4, [r6, #268]	; 0x10c
 800cea0:	b134      	cbz	r4, 800ceb0 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800cea2:	6823      	ldr	r3, [r4, #0]
 800cea4:	4620      	mov	r0, r4
 800cea6:	4629      	mov	r1, r5
 800cea8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ceaa:	4798      	blx	r3
 800ceac:	69a4      	ldr	r4, [r4, #24]
 800ceae:	e7f7      	b.n	800cea0 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800ceb0:	bd70      	pop	{r4, r5, r6, pc}

0800ceb2 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800ceb2:	b570      	push	{r4, r5, r6, lr}
 800ceb4:	6803      	ldr	r3, [r0, #0]
 800ceb6:	4605      	mov	r5, r0
 800ceb8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800cebc:	4798      	blx	r3
 800cebe:	682b      	ldr	r3, [r5, #0]
 800cec0:	4604      	mov	r4, r0
 800cec2:	4628      	mov	r0, r5
 800cec4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800cec8:	4798      	blx	r3
 800ceca:	4284      	cmp	r4, r0
 800cecc:	4606      	mov	r6, r0
 800cece:	bfc2      	ittt	gt
 800ced0:	b223      	sxthgt	r3, r4
 800ced2:	4604      	movgt	r4, r0
 800ced4:	461e      	movgt	r6, r3
 800ced6:	42a6      	cmp	r6, r4
 800ced8:	db05      	blt.n	800cee6 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x34>
 800ceda:	b221      	sxth	r1, r4
 800cedc:	4628      	mov	r0, r5
 800cede:	f7ff ffd0 	bl	800ce82 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800cee2:	3401      	adds	r4, #1
 800cee4:	e7f7      	b.n	800ced6 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x24>
 800cee6:	bd70      	pop	{r4, r5, r6, pc}

0800cee8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800cee8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ceea:	4604      	mov	r4, r0
 800ceec:	6dc5      	ldr	r5, [r0, #92]	; 0x5c
 800ceee:	b15d      	cbz	r5, 800cf08 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800cef0:	f9b4 203e 	ldrsh.w	r2, [r4, #62]	; 0x3e
 800cef4:	4628      	mov	r0, r5
 800cef6:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 800cefa:	9200      	str	r2, [sp, #0]
 800cefc:	2200      	movs	r2, #0
 800cefe:	4611      	mov	r1, r2
 800cf00:	f7f6 fb10 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cf04:	69ad      	ldr	r5, [r5, #24]
 800cf06:	e7f2      	b.n	800ceee <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800cf08:	f8d4 50e0 	ldr.w	r5, [r4, #224]	; 0xe0
 800cf0c:	b15d      	cbz	r5, 800cf26 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800cf0e:	f9b4 20c2 	ldrsh.w	r2, [r4, #194]	; 0xc2
 800cf12:	4628      	mov	r0, r5
 800cf14:	f9b4 30c0 	ldrsh.w	r3, [r4, #192]	; 0xc0
 800cf18:	9200      	str	r2, [sp, #0]
 800cf1a:	2200      	movs	r2, #0
 800cf1c:	4611      	mov	r1, r2
 800cf1e:	f7f6 fb01 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cf22:	69ad      	ldr	r5, [r5, #24]
 800cf24:	e7f2      	b.n	800cf0c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800cf26:	f8d4 5088 	ldr.w	r5, [r4, #136]	; 0x88
 800cf2a:	b15d      	cbz	r5, 800cf44 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800cf2c:	f9b4 206a 	ldrsh.w	r2, [r4, #106]	; 0x6a
 800cf30:	4628      	mov	r0, r5
 800cf32:	f9b4 3068 	ldrsh.w	r3, [r4, #104]	; 0x68
 800cf36:	9200      	str	r2, [sp, #0]
 800cf38:	2200      	movs	r2, #0
 800cf3a:	4611      	mov	r1, r2
 800cf3c:	f7f6 faf2 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cf40:	69ad      	ldr	r5, [r5, #24]
 800cf42:	e7f2      	b.n	800cf2a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800cf44:	f8d4 50b4 	ldr.w	r5, [r4, #180]	; 0xb4
 800cf48:	b15d      	cbz	r5, 800cf62 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800cf4a:	f9b4 2096 	ldrsh.w	r2, [r4, #150]	; 0x96
 800cf4e:	4628      	mov	r0, r5
 800cf50:	f9b4 3094 	ldrsh.w	r3, [r4, #148]	; 0x94
 800cf54:	9200      	str	r2, [sp, #0]
 800cf56:	2200      	movs	r2, #0
 800cf58:	4611      	mov	r1, r2
 800cf5a:	f7f6 fae3 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cf5e:	69ad      	ldr	r5, [r5, #24]
 800cf60:	e7f2      	b.n	800cf48 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800cf62:	f8d4 510c 	ldr.w	r5, [r4, #268]	; 0x10c
 800cf66:	b15d      	cbz	r5, 800cf80 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800cf68:	f9b4 20ee 	ldrsh.w	r2, [r4, #238]	; 0xee
 800cf6c:	4628      	mov	r0, r5
 800cf6e:	f9b4 30ec 	ldrsh.w	r3, [r4, #236]	; 0xec
 800cf72:	9200      	str	r2, [sp, #0]
 800cf74:	2200      	movs	r2, #0
 800cf76:	4611      	mov	r1, r2
 800cf78:	f7f6 fad4 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
 800cf7c:	69ad      	ldr	r5, [r5, #24]
 800cf7e:	e7f2      	b.n	800cf66 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800cf80:	6823      	ldr	r3, [r4, #0]
 800cf82:	4620      	mov	r0, r4
 800cf84:	695b      	ldr	r3, [r3, #20]
 800cf86:	b003      	add	sp, #12
 800cf88:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800cf8c:	4718      	bx	r3

0800cf8e <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800cf8e:	b430      	push	{r4, r5}
 800cf90:	b28a      	uxth	r2, r1
 800cf92:	f8b0 4094 	ldrh.w	r4, [r0, #148]	; 0x94
 800cf96:	f8a0 10c0 	strh.w	r1, [r0, #192]	; 0xc0
 800cf9a:	1b15      	subs	r5, r2, r4
 800cf9c:	f8a0 10ec 	strh.w	r1, [r0, #236]	; 0xec
 800cfa0:	8101      	strh	r1, [r0, #8]
 800cfa2:	f8a0 5090 	strh.w	r5, [r0, #144]	; 0x90
 800cfa6:	f8b0 5068 	ldrh.w	r5, [r0, #104]	; 0x68
 800cfaa:	442c      	add	r4, r5
 800cfac:	1b12      	subs	r2, r2, r4
 800cfae:	bc30      	pop	{r4, r5}
 800cfb0:	8782      	strh	r2, [r0, #60]	; 0x3c
 800cfb2:	f7ff bf99 	b.w	800cee8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800cfb6 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800cfb6:	b430      	push	{r4, r5}
 800cfb8:	b28a      	uxth	r2, r1
 800cfba:	f8b0 40ee 	ldrh.w	r4, [r0, #238]	; 0xee
 800cfbe:	f8a0 106a 	strh.w	r1, [r0, #106]	; 0x6a
 800cfc2:	1b15      	subs	r5, r2, r4
 800cfc4:	f8a0 1096 	strh.w	r1, [r0, #150]	; 0x96
 800cfc8:	8141      	strh	r1, [r0, #10]
 800cfca:	f8a0 50ea 	strh.w	r5, [r0, #234]	; 0xea
 800cfce:	f8b0 50c2 	ldrh.w	r5, [r0, #194]	; 0xc2
 800cfd2:	442c      	add	r4, r5
 800cfd4:	1b12      	subs	r2, r2, r4
 800cfd6:	bc30      	pop	{r4, r5}
 800cfd8:	87c2      	strh	r2, [r0, #62]	; 0x3e
 800cfda:	f7ff bf85 	b.w	800cee8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800cfde <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800cfde:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800cfe2:	fa1f fa83 	uxth.w	sl, r3
 800cfe6:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800cfea:	4615      	mov	r5, r2
 800cfec:	4699      	mov	r9, r3
 800cfee:	fa1f f887 	uxth.w	r8, r7
 800cff2:	8903      	ldrh	r3, [r0, #8]
 800cff4:	4452      	add	r2, sl
 800cff6:	4604      	mov	r4, r0
 800cff8:	8940      	ldrh	r0, [r0, #10]
 800cffa:	460e      	mov	r6, r1
 800cffc:	1a9b      	subs	r3, r3, r2
 800cffe:	eb08 0201 	add.w	r2, r8, r1
 800d002:	1a80      	subs	r0, r0, r2
 800d004:	b21b      	sxth	r3, r3
 800d006:	460a      	mov	r2, r1
 800d008:	4629      	mov	r1, r5
 800d00a:	b200      	sxth	r0, r0
 800d00c:	9000      	str	r0, [sp, #0]
 800d00e:	f104 0034 	add.w	r0, r4, #52	; 0x34
 800d012:	f7f6 fa87 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
 800d016:	2200      	movs	r2, #0
 800d018:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d01c:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800d020:	4611      	mov	r1, r2
 800d022:	9600      	str	r6, [sp, #0]
 800d024:	f7f6 fa7e 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
 800d028:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d02c:	2200      	movs	r2, #0
 800d02e:	f104 0060 	add.w	r0, r4, #96	; 0x60
 800d032:	9300      	str	r3, [sp, #0]
 800d034:	462b      	mov	r3, r5
 800d036:	4611      	mov	r1, r2
 800d038:	f7f6 fa74 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
 800d03c:	8921      	ldrh	r1, [r4, #8]
 800d03e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d042:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800d046:	eba1 010a 	sub.w	r1, r1, sl
 800d04a:	2200      	movs	r2, #0
 800d04c:	9300      	str	r3, [sp, #0]
 800d04e:	464b      	mov	r3, r9
 800d050:	b209      	sxth	r1, r1
 800d052:	f7f6 fa67 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
 800d056:	8962      	ldrh	r2, [r4, #10]
 800d058:	f104 00e4 	add.w	r0, r4, #228	; 0xe4
 800d05c:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d060:	eba2 0208 	sub.w	r2, r2, r8
 800d064:	9700      	str	r7, [sp, #0]
 800d066:	2100      	movs	r1, #0
 800d068:	b212      	sxth	r2, r2
 800d06a:	f7f6 fa5b 	bl	8003524 <_ZN8touchgfx8Drawable11setPositionEssss>
 800d06e:	4620      	mov	r0, r4
 800d070:	b002      	add	sp, #8
 800d072:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d076:	f7ff bf37 	b.w	800cee8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>
	...

0800d07c <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800d07c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d080:	b085      	sub	sp, #20
 800d082:	4604      	mov	r4, r0
 800d084:	2601      	movs	r6, #1
 800d086:	2500      	movs	r5, #0
 800d088:	9103      	str	r1, [sp, #12]
 800d08a:	f7ff fc95 	bl	800c9b8 <_ZN8touchgfx9ContainerC1Ev>
 800d08e:	4b26      	ldr	r3, [pc, #152]	; (800d128 <_ZN8touchgfx17AbstractDataGraphC1Es+0xac>)
 800d090:	f104 0b34 	add.w	fp, r4, #52	; 0x34
 800d094:	f104 0960 	add.w	r9, r4, #96	; 0x60
 800d098:	f104 088c 	add.w	r8, r4, #140	; 0x8c
 800d09c:	6023      	str	r3, [r4, #0]
 800d09e:	23ff      	movs	r3, #255	; 0xff
 800d0a0:	62e6      	str	r6, [r4, #44]	; 0x2c
 800d0a2:	4658      	mov	r0, fp
 800d0a4:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
 800d0a8:	f104 0ab8 	add.w	sl, r4, #184	; 0xb8
 800d0ac:	f7ff fc84 	bl	800c9b8 <_ZN8touchgfx9ContainerC1Ev>
 800d0b0:	4648      	mov	r0, r9
 800d0b2:	f7ff fc81 	bl	800c9b8 <_ZN8touchgfx9ContainerC1Ev>
 800d0b6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
 800d0ba:	4640      	mov	r0, r8
 800d0bc:	f7ff fc7c 	bl	800c9b8 <_ZN8touchgfx9ContainerC1Ev>
 800d0c0:	4650      	mov	r0, sl
 800d0c2:	f7ff fc79 	bl	800c9b8 <_ZN8touchgfx9ContainerC1Ev>
 800d0c6:	4638      	mov	r0, r7
 800d0c8:	f7ff fc76 	bl	800c9b8 <_ZN8touchgfx9ContainerC1Ev>
 800d0cc:	9903      	ldr	r1, [sp, #12]
 800d0ce:	4620      	mov	r0, r4
 800d0d0:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
 800d0d4:	f8a4 1118 	strh.w	r1, [r4, #280]	; 0x118
 800d0d8:	4659      	mov	r1, fp
 800d0da:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800d0de:	f8a4 511a 	strh.w	r5, [r4, #282]	; 0x11a
 800d0e2:	f8a4 511c 	strh.w	r5, [r4, #284]	; 0x11c
 800d0e6:	f8c4 5120 	str.w	r5, [r4, #288]	; 0x120
 800d0ea:	f7fe fab9 	bl	800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800d0ee:	4651      	mov	r1, sl
 800d0f0:	4620      	mov	r0, r4
 800d0f2:	f7fe fab5 	bl	800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800d0f6:	4649      	mov	r1, r9
 800d0f8:	4620      	mov	r0, r4
 800d0fa:	f7fe fab1 	bl	800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800d0fe:	4641      	mov	r1, r8
 800d100:	4620      	mov	r0, r4
 800d102:	f7fe faad 	bl	800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800d106:	4639      	mov	r1, r7
 800d108:	4620      	mov	r0, r4
 800d10a:	f7fe faa9 	bl	800b660 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800d10e:	4620      	mov	r0, r4
 800d110:	9500      	str	r5, [sp, #0]
 800d112:	462b      	mov	r3, r5
 800d114:	462a      	mov	r2, r5
 800d116:	4629      	mov	r1, r5
 800d118:	f7ff ff61 	bl	800cfde <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800d11c:	4620      	mov	r0, r4
 800d11e:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800d122:	b005      	add	sp, #20
 800d124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d128:	08023ae0 	.word	0x08023ae0

0800d12c <_ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii>:
 800d12c:	460b      	mov	r3, r1
 800d12e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800d130:	4291      	cmp	r1, r2
 800d132:	4618      	mov	r0, r3
 800d134:	d001      	beq.n	800d13a <_ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii+0xe>
 800d136:	f004 bc26 	b.w	8011986 <_ZN8touchgfx6muldivElll>
 800d13a:	4770      	bx	lr

0800d13c <_ZN8touchgfx22AbstractDataGraphWithY8setScaleEi>:
 800d13c:	b538      	push	{r3, r4, r5, lr}
 800d13e:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
 800d140:	4604      	mov	r4, r0
 800d142:	62c1      	str	r1, [r0, #44]	; 0x2c
 800d144:	462a      	mov	r2, r5
 800d146:	f8d0 1134 	ldr.w	r1, [r0, #308]	; 0x134
 800d14a:	f7ff ffef 	bl	800d12c <_ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii>
 800d14e:	462a      	mov	r2, r5
 800d150:	f8c4 0134 	str.w	r0, [r4, #308]	; 0x134
 800d154:	4620      	mov	r0, r4
 800d156:	f8d4 1130 	ldr.w	r1, [r4, #304]	; 0x130
 800d15a:	f7ff ffe7 	bl	800d12c <_ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii>
 800d15e:	f8c4 0130 	str.w	r0, [r4, #304]	; 0x130
 800d162:	bd38      	pop	{r3, r4, r5, pc}

0800d164 <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi>:
 800d164:	b570      	push	{r4, r5, r6, lr}
 800d166:	4604      	mov	r4, r0
 800d168:	460d      	mov	r5, r1
 800d16a:	4616      	mov	r6, r2
 800d16c:	f7ff ff86 	bl	800d07c <_ZN8touchgfx17AbstractDataGraphC1Es>
 800d170:	2100      	movs	r1, #0
 800d172:	4b0d      	ldr	r3, [pc, #52]	; (800d1a8 <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi+0x44>)
 800d174:	f8c4 6128 	str.w	r6, [r4, #296]	; 0x128
 800d178:	6023      	str	r3, [r4, #0]
 800d17a:	428d      	cmp	r5, r1
 800d17c:	f04f 0301 	mov.w	r3, #1
 800d180:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800d184:	f8c4 1130 	str.w	r1, [r4, #304]	; 0x130
 800d188:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
 800d18c:	dc06      	bgt.n	800d19c <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi+0x38>
 800d18e:	4b07      	ldr	r3, [pc, #28]	; (800d1ac <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi+0x48>)
 800d190:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800d194:	4a06      	ldr	r2, [pc, #24]	; (800d1b0 <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi+0x4c>)
 800d196:	4807      	ldr	r0, [pc, #28]	; (800d1b4 <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi+0x50>)
 800d198:	f013 fdea 	bl	8020d70 <__assert_func>
 800d19c:	4620      	mov	r0, r4
 800d19e:	1e6a      	subs	r2, r5, #1
 800d1a0:	f7ff fb80 	bl	800c8a4 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii>
 800d1a4:	4620      	mov	r0, r4
 800d1a6:	bd70      	pop	{r4, r5, r6, pc}
 800d1a8:	08023bd0 	.word	0x08023bd0
 800d1ac:	08023acb 	.word	0x08023acb
 800d1b0:	08023d82 	.word	0x08023d82
 800d1b4:	08023a8d 	.word	0x08023a8d

0800d1b8 <_ZN8touchgfx22AbstractDataGraphWithY18addDataPointScaledEi>:
 800d1b8:	b570      	push	{r4, r5, r6, lr}
 800d1ba:	6803      	ldr	r3, [r0, #0]
 800d1bc:	4604      	mov	r4, r0
 800d1be:	460d      	mov	r5, r1
 800d1c0:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 800d1c4:	4798      	blx	r3
 800d1c6:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800d1ca:	4629      	mov	r1, r5
 800d1cc:	4620      	mov	r0, r4
 800d1ce:	3301      	adds	r3, #1
 800d1d0:	f8c4 312c 	str.w	r3, [r4, #300]	; 0x12c
 800d1d4:	6823      	ldr	r3, [r4, #0]
 800d1d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d1da:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
 800d1de:	4718      	bx	r3

0800d1e0 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEi>:
 800d1e0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800d1e2:	4359      	muls	r1, r3
 800d1e4:	f7ff bfe8 	b.w	800d1b8 <_ZN8touchgfx22AbstractDataGraphWithY18addDataPointScaledEi>

0800d1e8 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
 800d1e8:	f880 102e 	strb.w	r1, [r0, #46]	; 0x2e
 800d1ec:	4770      	bx	lr

0800d1ee <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:
 800d1ee:	f890 002e 	ldrb.w	r0, [r0, #46]	; 0x2e
 800d1f2:	4770      	bx	lr

0800d1f4 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
 800d1f4:	4770      	bx	lr

0800d1f6 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
 800d1f6:	6341      	str	r1, [r0, #52]	; 0x34
 800d1f8:	4770      	bx	lr

0800d1fa <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
 800d1fa:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800d1fc:	4770      	bx	lr

0800d1fe <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:
 800d1fe:	2001      	movs	r0, #1
 800d200:	4770      	bx	lr

0800d202 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
 800d202:	4770      	bx	lr

0800d204 <_ZN8touchgfx17GraphElementBoxesD1Ev>:
 800d204:	4770      	bx	lr

0800d206 <_ZN8touchgfx21GraphElementHistogramD1Ev>:
 800d206:	4770      	bx	lr

0800d208 <_ZN8touchgfx20GraphElementGridBaseD1Ev>:
 800d208:	4770      	bx	lr

0800d20a <_ZN8touchgfx17GraphElementGridYD1Ev>:
 800d20a:	4770      	bx	lr

0800d20c <_ZN8touchgfx17GraphElementBoxesD0Ev>:
 800d20c:	b510      	push	{r4, lr}
 800d20e:	4604      	mov	r4, r0
 800d210:	213c      	movs	r1, #60	; 0x3c
 800d212:	f012 fa21 	bl	801f658 <_ZdlPvj>
 800d216:	4620      	mov	r0, r4
 800d218:	bd10      	pop	{r4, pc}

0800d21a <_ZN8touchgfx21GraphElementHistogramD0Ev>:
 800d21a:	b510      	push	{r4, lr}
 800d21c:	4604      	mov	r4, r0
 800d21e:	2140      	movs	r1, #64	; 0x40
 800d220:	f012 fa1a 	bl	801f658 <_ZdlPvj>
 800d224:	4620      	mov	r0, r4
 800d226:	bd10      	pop	{r4, pc}

0800d228 <_ZN8touchgfx20GraphElementGridBaseD0Ev>:
 800d228:	b510      	push	{r4, lr}
 800d22a:	4604      	mov	r4, r0
 800d22c:	2144      	movs	r1, #68	; 0x44
 800d22e:	f012 fa13 	bl	801f658 <_ZdlPvj>
 800d232:	4620      	mov	r0, r4
 800d234:	bd10      	pop	{r4, pc}

0800d236 <_ZN8touchgfx17GraphElementGridYD0Ev>:
 800d236:	b510      	push	{r4, lr}
 800d238:	4604      	mov	r4, r0
 800d23a:	2144      	movs	r1, #68	; 0x44
 800d23c:	f012 fa0c 	bl	801f658 <_ZdlPvj>
 800d240:	4620      	mov	r0, r4
 800d242:	bd10      	pop	{r4, pc}

0800d244 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi.constprop.7>:
 800d244:	6803      	ldr	r3, [r0, #0]
 800d246:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
 800d24a:	4718      	bx	r3

0800d24c <_ZNK8touchgfx20AbstractGraphElement16indexToScreenYQ5EPKNS_17AbstractDataGraphEs.constprop.8>:
 800d24c:	6803      	ldr	r3, [r0, #0]
 800d24e:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 800d252:	4718      	bx	r3

0800d254 <_ZNK8touchgfx20AbstractGraphElement16indexToScreenXQ5EPKNS_17AbstractDataGraphEs.constprop.10>:
 800d254:	6803      	ldr	r3, [r0, #0]
 800d256:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800d25a:	4718      	bx	r3

0800d25c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800d25c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d25e:	4604      	mov	r4, r0
 800d260:	4608      	mov	r0, r1
 800d262:	460d      	mov	r5, r1
 800d264:	f7fe fa6f 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d268:	b978      	cbnz	r0, 800d28a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800d26a:	4620      	mov	r0, r4
 800d26c:	f7fe fa6b 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d270:	f9b5 6000 	ldrsh.w	r6, [r5]
 800d274:	b150      	cbz	r0, 800d28c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800d276:	8026      	strh	r6, [r4, #0]
 800d278:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800d27c:	8063      	strh	r3, [r4, #2]
 800d27e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800d282:	80a3      	strh	r3, [r4, #4]
 800d284:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800d288:	80e3      	strh	r3, [r4, #6]
 800d28a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d28c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800d290:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d294:	42b1      	cmp	r1, r6
 800d296:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800d29a:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800d29e:	460f      	mov	r7, r1
 800d2a0:	88ed      	ldrh	r5, [r5, #6]
 800d2a2:	bfa8      	it	ge
 800d2a4:	4637      	movge	r7, r6
 800d2a6:	4293      	cmp	r3, r2
 800d2a8:	4618      	mov	r0, r3
 800d2aa:	4466      	add	r6, ip
 800d2ac:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d2b0:	bfa8      	it	ge
 800d2b2:	4610      	movge	r0, r2
 800d2b4:	442a      	add	r2, r5
 800d2b6:	88e5      	ldrh	r5, [r4, #6]
 800d2b8:	4461      	add	r1, ip
 800d2ba:	b236      	sxth	r6, r6
 800d2bc:	8027      	strh	r7, [r4, #0]
 800d2be:	442b      	add	r3, r5
 800d2c0:	b209      	sxth	r1, r1
 800d2c2:	b212      	sxth	r2, r2
 800d2c4:	8060      	strh	r0, [r4, #2]
 800d2c6:	b21b      	sxth	r3, r3
 800d2c8:	428e      	cmp	r6, r1
 800d2ca:	bfac      	ite	ge
 800d2cc:	ebc7 0106 	rsbge	r1, r7, r6
 800d2d0:	ebc7 0101 	rsblt	r1, r7, r1
 800d2d4:	429a      	cmp	r2, r3
 800d2d6:	bfac      	ite	ge
 800d2d8:	ebc0 0202 	rsbge	r2, r0, r2
 800d2dc:	ebc0 0203 	rsblt	r2, r0, r3
 800d2e0:	80a1      	strh	r1, [r4, #4]
 800d2e2:	80e2      	strh	r2, [r4, #6]
 800d2e4:	e7d1      	b.n	800d28a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800d2e6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800d2e6:	6800      	ldr	r0, [r0, #0]
 800d2e8:	2800      	cmp	r0, #0
 800d2ea:	bfb9      	ittee	lt
 800d2ec:	2320      	movlt	r3, #32
 800d2ee:	fb90 f0f3 	sdivlt	r0, r0, r3
 800d2f2:	301f      	addge	r0, #31
 800d2f4:	1140      	asrge	r0, r0, #5
 800d2f6:	4770      	bx	lr

0800d2f8 <_ZN8touchgfx20AbstractGraphElementC1Ev>:
 800d2f8:	b510      	push	{r4, lr}
 800d2fa:	4604      	mov	r4, r0
 800d2fc:	f012 f986 	bl	801f60c <_ZN8touchgfx12CanvasWidgetC1Ev>
 800d300:	4b02      	ldr	r3, [pc, #8]	; (800d30c <_ZN8touchgfx20AbstractGraphElementC1Ev+0x14>)
 800d302:	4620      	mov	r0, r4
 800d304:	6023      	str	r3, [r4, #0]
 800d306:	2301      	movs	r3, #1
 800d308:	6323      	str	r3, [r4, #48]	; 0x30
 800d30a:	bd10      	pop	{r4, pc}
 800d30c:	08023dd4 	.word	0x08023dd4

0800d310 <_ZN8touchgfx20AbstractGraphElement8setScaleEi>:
 800d310:	6301      	str	r1, [r0, #48]	; 0x30
 800d312:	4770      	bx	lr

0800d314 <_ZNK8touchgfx20AbstractGraphElement8getScaleEv>:
 800d314:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800d316:	4770      	bx	lr

0800d318 <_ZNK8touchgfx20AbstractGraphElement8getGraphEv>:
 800d318:	6943      	ldr	r3, [r0, #20]
 800d31a:	6958      	ldr	r0, [r3, #20]
 800d31c:	4770      	bx	lr

0800d31e <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>:
 800d31e:	680b      	ldr	r3, [r1, #0]
 800d320:	4608      	mov	r0, r1
 800d322:	4611      	mov	r1, r2
 800d324:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800d328:	4718      	bx	r3

0800d32a <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi>:
 800d32a:	680b      	ldr	r3, [r1, #0]
 800d32c:	4608      	mov	r0, r1
 800d32e:	4611      	mov	r1, r2
 800d330:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
 800d334:	4718      	bx	r3

0800d336 <_ZNK8touchgfx20AbstractGraphElement24xScreenRangeToIndexRangeEssRsS1_>:
 800d336:	b410      	push	{r4}
 800d338:	6940      	ldr	r0, [r0, #20]
 800d33a:	6940      	ldr	r0, [r0, #20]
 800d33c:	6804      	ldr	r4, [r0, #0]
 800d33e:	f8d4 40dc 	ldr.w	r4, [r4, #220]	; 0xdc
 800d342:	46a4      	mov	ip, r4
 800d344:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d348:	4760      	bx	ip

0800d34a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800d34a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d34c:	9906      	ldr	r1, [sp, #24]
 800d34e:	4606      	mov	r6, r0
 800d350:	461c      	mov	r4, r3
 800d352:	2020      	movs	r0, #32
 800d354:	4291      	cmp	r1, r2
 800d356:	bfbc      	itt	lt
 800d358:	9206      	strlt	r2, [sp, #24]
 800d35a:	460a      	movlt	r2, r1
 800d35c:	9907      	ldr	r1, [sp, #28]
 800d35e:	428b      	cmp	r3, r1
 800d360:	bfc4      	itt	gt
 800d362:	460c      	movgt	r4, r1
 800d364:	9307      	strgt	r3, [sp, #28]
 800d366:	fb92 f5f0 	sdiv	r5, r2, r0
 800d36a:	fb94 f4f0 	sdiv	r4, r4, r0
 800d36e:	a806      	add	r0, sp, #24
 800d370:	f7ff ffb9 	bl	800d2e6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d374:	4607      	mov	r7, r0
 800d376:	a807      	add	r0, sp, #28
 800d378:	f7ff ffb5 	bl	800d2e6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d37c:	1b7a      	subs	r2, r7, r5
 800d37e:	1b00      	subs	r0, r0, r4
 800d380:	8035      	strh	r5, [r6, #0]
 800d382:	8074      	strh	r4, [r6, #2]
 800d384:	80f0      	strh	r0, [r6, #6]
 800d386:	4630      	mov	r0, r6
 800d388:	80b2      	strh	r2, [r6, #4]
 800d38a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d38c <_ZN8touchgfx21GraphElementHistogram22invalidateGraphPointAtEs>:
 800d38c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d390:	6943      	ldr	r3, [r0, #20]
 800d392:	4604      	mov	r4, r0
 800d394:	b088      	sub	sp, #32
 800d396:	4689      	mov	r9, r1
 800d398:	695d      	ldr	r5, [r3, #20]
 800d39a:	4628      	mov	r0, r5
 800d39c:	f7ff ff5a 	bl	800d254 <_ZNK8touchgfx20AbstractGraphElement16indexToScreenXQ5EPKNS_17AbstractDataGraphEs.constprop.10>
 800d3a0:	f9b4 803e 	ldrsh.w	r8, [r4, #62]	; 0x3e
 800d3a4:	8fa6      	ldrh	r6, [r4, #60]	; 0x3c
 800d3a6:	4607      	mov	r7, r0
 800d3a8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d3aa:	4628      	mov	r0, r5
 800d3ac:	0136      	lsls	r6, r6, #4
 800d3ae:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800d3b0:	eb07 1748 	add.w	r7, r7, r8, lsl #5
 800d3b4:	f7ff feba 	bl	800d12c <_ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii>
 800d3b8:	4649      	mov	r1, r9
 800d3ba:	4682      	mov	sl, r0
 800d3bc:	4628      	mov	r0, r5
 800d3be:	f7ff ff45 	bl	800d24c <_ZNK8touchgfx20AbstractGraphElement16indexToScreenYQ5EPKNS_17AbstractDataGraphEs.constprop.8>
 800d3c2:	eba7 0806 	sub.w	r8, r7, r6
 800d3c6:	4681      	mov	r9, r0
 800d3c8:	4437      	add	r7, r6
 800d3ca:	ae02      	add	r6, sp, #8
 800d3cc:	4651      	mov	r1, sl
 800d3ce:	4628      	mov	r0, r5
 800d3d0:	f7ff ff38 	bl	800d244 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi.constprop.7>
 800d3d4:	4642      	mov	r2, r8
 800d3d6:	464b      	mov	r3, r9
 800d3d8:	4621      	mov	r1, r4
 800d3da:	e9cd 7000 	strd	r7, r0, [sp]
 800d3de:	4630      	mov	r0, r6
 800d3e0:	f7ff ffb3 	bl	800d34a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800d3e4:	4628      	mov	r0, r5
 800d3e6:	f7ff fbc9 	bl	800cb7c <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>
 800d3ea:	4680      	mov	r8, r0
 800d3ec:	4628      	mov	r0, r5
 800d3ee:	f7ff fc50 	bl	800cc92 <_ZNK8touchgfx17AbstractDataGraph33getGraphAreaWidthIncludingPaddingEv>
 800d3f2:	4607      	mov	r7, r0
 800d3f4:	4628      	mov	r0, r5
 800d3f6:	ad06      	add	r5, sp, #24
 800d3f8:	f7ff fc4e 	bl	800cc98 <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>
 800d3fc:	f8ad 0016 	strh.w	r0, [sp, #22]
 800d400:	2300      	movs	r3, #0
 800d402:	f8ad 8012 	strh.w	r8, [sp, #18]
 800d406:	f8ad 7014 	strh.w	r7, [sp, #20]
 800d40a:	f8ad 3010 	strh.w	r3, [sp, #16]
 800d40e:	e896 0003 	ldmia.w	r6, {r0, r1}
 800d412:	e885 0003 	stmia.w	r5, {r0, r1}
 800d416:	a904      	add	r1, sp, #16
 800d418:	4628      	mov	r0, r5
 800d41a:	f7fe f951 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 800d41e:	6823      	ldr	r3, [r4, #0]
 800d420:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d424:	691b      	ldr	r3, [r3, #16]
 800d426:	e886 0003 	stmia.w	r6, {r0, r1}
 800d42a:	4631      	mov	r1, r6
 800d42c:	4620      	mov	r0, r4
 800d42e:	4798      	blx	r3
 800d430:	b008      	add	sp, #32
 800d432:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800d436 <_ZNK8touchgfx20AbstractGraphElement19convertToGraphScaleEPKNS_17AbstractDataGraphEii>:
 800d436:	4608      	mov	r0, r1
 800d438:	4611      	mov	r1, r2
 800d43a:	461a      	mov	r2, r3
 800d43c:	f7ff be76 	b.w	800d12c <_ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii>

0800d440 <_ZNK8touchgfx20AbstractGraphElement24getGraphXAxisScaleScaledEPKNS_17AbstractDataGraphE>:
 800d440:	680b      	ldr	r3, [r1, #0]
 800d442:	4608      	mov	r0, r1
 800d444:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800d448:	4718      	bx	r3

0800d44a <_ZNK8touchgfx20AbstractGraphElement25getGraphXAxisOffsetScaledEPKNS_17AbstractDataGraphE>:
 800d44a:	680b      	ldr	r3, [r1, #0]
 800d44c:	4608      	mov	r0, r1
 800d44e:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 800d452:	4718      	bx	r3

0800d454 <_ZNK8touchgfx20AbstractGraphElement23getGraphRangeYMinScaledEPKNS_17AbstractDataGraphE>:
 800d454:	680b      	ldr	r3, [r1, #0]
 800d456:	4608      	mov	r0, r1
 800d458:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800d45c:	4718      	bx	r3

0800d45e <_ZNK8touchgfx20AbstractGraphElement23getGraphRangeYMaxScaledEPKNS_17AbstractDataGraphE>:
 800d45e:	680b      	ldr	r3, [r1, #0]
 800d460:	4608      	mov	r0, r1
 800d462:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800d466:	4718      	bx	r3

0800d468 <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs>:
 800d468:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d46a:	460c      	mov	r4, r1
 800d46c:	ad02      	add	r5, sp, #8
 800d46e:	4616      	mov	r6, r2
 800d470:	4611      	mov	r1, r2
 800d472:	4620      	mov	r0, r4
 800d474:	f7ff feee 	bl	800d254 <_ZNK8touchgfx20AbstractGraphElement16indexToScreenXQ5EPKNS_17AbstractDataGraphEs.constprop.10>
 800d478:	f845 0d04 	str.w	r0, [r5, #-4]!
 800d47c:	4628      	mov	r0, r5
 800d47e:	f7ff fab3 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d482:	4631      	mov	r1, r6
 800d484:	b207      	sxth	r7, r0
 800d486:	4620      	mov	r0, r4
 800d488:	f7ff fee0 	bl	800d24c <_ZNK8touchgfx20AbstractGraphElement16indexToScreenYQ5EPKNS_17AbstractDataGraphEs.constprop.8>
 800d48c:	9001      	str	r0, [sp, #4]
 800d48e:	4628      	mov	r0, r5
 800d490:	f7ff faaa 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d494:	4605      	mov	r5, r0
 800d496:	4620      	mov	r0, r4
 800d498:	f7ff fb73 	bl	800cb82 <_ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv>
 800d49c:	42b8      	cmp	r0, r7
 800d49e:	dd02      	ble.n	800d4a6 <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs+0x3e>
 800d4a0:	2001      	movs	r0, #1
 800d4a2:	b003      	add	sp, #12
 800d4a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d4a6:	4620      	mov	r0, r4
 800d4a8:	f7ff fb6b 	bl	800cb82 <_ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv>
 800d4ac:	4606      	mov	r6, r0
 800d4ae:	4620      	mov	r0, r4
 800d4b0:	f7ff fb6a 	bl	800cb88 <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 800d4b4:	4430      	add	r0, r6
 800d4b6:	4287      	cmp	r7, r0
 800d4b8:	daf2      	bge.n	800d4a0 <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs+0x38>
 800d4ba:	b22d      	sxth	r5, r5
 800d4bc:	4620      	mov	r0, r4
 800d4be:	f7ff fb5d 	bl	800cb7c <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>
 800d4c2:	42a8      	cmp	r0, r5
 800d4c4:	dcec      	bgt.n	800d4a0 <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs+0x38>
 800d4c6:	4620      	mov	r0, r4
 800d4c8:	f7ff fb58 	bl	800cb7c <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>
 800d4cc:	4606      	mov	r6, r0
 800d4ce:	4620      	mov	r0, r4
 800d4d0:	f7ff fbe2 	bl	800cc98 <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>
 800d4d4:	4430      	add	r0, r6
 800d4d6:	4285      	cmp	r5, r0
 800d4d8:	bfb4      	ite	lt
 800d4da:	2000      	movlt	r0, #0
 800d4dc:	2001      	movge	r0, #1
 800d4de:	e7e0      	b.n	800d4a2 <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs+0x3a>

0800d4e0 <_ZNK8touchgfx17GraphElementBoxes4drawERKNS_4RectE>:
 800d4e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4e4:	6943      	ldr	r3, [r0, #20]
 800d4e6:	b08d      	sub	sp, #52	; 0x34
 800d4e8:	468a      	mov	sl, r1
 800d4ea:	4604      	mov	r4, r0
 800d4ec:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800d4f0:	6803      	ldr	r3, [r0, #0]
 800d4f2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800d4f4:	4798      	blx	r3
 800d4f6:	4605      	mov	r5, r0
 800d4f8:	4648      	mov	r0, r9
 800d4fa:	f7ff fb2b 	bl	800cb54 <_ZNK8touchgfx17AbstractDataGraph8getAlphaEv>
 800d4fe:	4607      	mov	r7, r0
 800d500:	4648      	mov	r0, r9
 800d502:	f7ff fc23 	bl	800cd4c <_ZNK8touchgfx17AbstractDataGraph15getUsedCapacityEv>
 800d506:	2800      	cmp	r0, #0
 800d508:	d07b      	beq.n	800d602 <_ZNK8touchgfx17GraphElementBoxes4drawERKNS_4RectE+0x122>
 800d50a:	8f26      	ldrh	r6, [r4, #56]	; 0x38
 800d50c:	2e00      	cmp	r6, #0
 800d50e:	d078      	beq.n	800d602 <_ZNK8touchgfx17GraphElementBoxes4drawERKNS_4RectE+0x122>
 800d510:	fb15 f007 	smulbb	r0, r5, r7
 800d514:	b280      	uxth	r0, r0
 800d516:	1c43      	adds	r3, r0, #1
 800d518:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800d51c:	1203      	asrs	r3, r0, #8
 800d51e:	9302      	str	r3, [sp, #8]
 800d520:	d06f      	beq.n	800d602 <_ZNK8touchgfx17GraphElementBoxes4drawERKNS_4RectE+0x122>
 800d522:	0176      	lsls	r6, r6, #5
 800d524:	af0c      	add	r7, sp, #48	; 0x30
 800d526:	0873      	lsrs	r3, r6, #1
 800d528:	f847 3d08 	str.w	r3, [r7, #-8]!
 800d52c:	4638      	mov	r0, r7
 800d52e:	f7ff feda 	bl	800d2e6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d532:	f8ba 1000 	ldrh.w	r1, [sl]
 800d536:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800d53a:	b280      	uxth	r0, r0
 800d53c:	f10d 0316 	add.w	r3, sp, #22
 800d540:	440a      	add	r2, r1
 800d542:	1a09      	subs	r1, r1, r0
 800d544:	9300      	str	r3, [sp, #0]
 800d546:	ab05      	add	r3, sp, #20
 800d548:	4402      	add	r2, r0
 800d54a:	b209      	sxth	r1, r1
 800d54c:	4620      	mov	r0, r4
 800d54e:	b212      	sxth	r2, r2
 800d550:	f7ff fef1 	bl	800d336 <_ZNK8touchgfx20AbstractGraphElement24xScreenRangeToIndexRangeEssRsS1_>
 800d554:	2800      	cmp	r0, #0
 800d556:	d054      	beq.n	800d602 <_ZNK8touchgfx17GraphElementBoxes4drawERKNS_4RectE+0x122>
 800d558:	1076      	asrs	r6, r6, #1
 800d55a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800d55e:	f10d 0820 	add.w	r8, sp, #32
 800d562:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d566:	42ab      	cmp	r3, r5
 800d568:	db4b      	blt.n	800d602 <_ZNK8touchgfx17GraphElementBoxes4drawERKNS_4RectE+0x122>
 800d56a:	462a      	mov	r2, r5
 800d56c:	4649      	mov	r1, r9
 800d56e:	4620      	mov	r0, r4
 800d570:	f7ff ff7a 	bl	800d468 <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs>
 800d574:	b110      	cbz	r0, 800d57c <_ZNK8touchgfx17GraphElementBoxes4drawERKNS_4RectE+0x9c>
 800d576:	3501      	adds	r5, #1
 800d578:	b22d      	sxth	r5, r5
 800d57a:	e7f2      	b.n	800d562 <_ZNK8touchgfx17GraphElementBoxes4drawERKNS_4RectE+0x82>
 800d57c:	4629      	mov	r1, r5
 800d57e:	4648      	mov	r0, r9
 800d580:	f7ff fe68 	bl	800d254 <_ZNK8touchgfx20AbstractGraphElement16indexToScreenXQ5EPKNS_17AbstractDataGraphEs.constprop.10>
 800d584:	4629      	mov	r1, r5
 800d586:	9003      	str	r0, [sp, #12]
 800d588:	4648      	mov	r0, r9
 800d58a:	f7ff fe5f 	bl	800d24c <_ZNK8touchgfx20AbstractGraphElement16indexToScreenYQ5EPKNS_17AbstractDataGraphEs.constprop.8>
 800d58e:	9b03      	ldr	r3, [sp, #12]
 800d590:	4683      	mov	fp, r0
 800d592:	a806      	add	r0, sp, #24
 800d594:	1b9b      	subs	r3, r3, r6
 800d596:	9306      	str	r3, [sp, #24]
 800d598:	f7ff fa26 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d59c:	ebab 0306 	sub.w	r3, fp, r6
 800d5a0:	9003      	str	r0, [sp, #12]
 800d5a2:	a807      	add	r0, sp, #28
 800d5a4:	9307      	str	r3, [sp, #28]
 800d5a6:	f7ff fa1f 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d5aa:	f9b4 3038 	ldrsh.w	r3, [r4, #56]	; 0x38
 800d5ae:	9a03      	ldr	r2, [sp, #12]
 800d5b0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d5b4:	f8ad 2020 	strh.w	r2, [sp, #32]
 800d5b8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800d5bc:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800d5c0:	e898 0003 	ldmia.w	r8, {r0, r1}
 800d5c4:	e887 0003 	stmia.w	r7, {r0, r1}
 800d5c8:	4651      	mov	r1, sl
 800d5ca:	4638      	mov	r0, r7
 800d5cc:	f7fe f878 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 800d5d0:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d5d4:	e888 0003 	stmia.w	r8, {r0, r1}
 800d5d8:	4640      	mov	r0, r8
 800d5da:	f7fe f8b4 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d5de:	2800      	cmp	r0, #0
 800d5e0:	d1c9      	bne.n	800d576 <_ZNK8touchgfx17GraphElementBoxes4drawERKNS_4RectE+0x96>
 800d5e2:	6823      	ldr	r3, [r4, #0]
 800d5e4:	4641      	mov	r1, r8
 800d5e6:	4620      	mov	r0, r4
 800d5e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d5ea:	4798      	blx	r3
 800d5ec:	f7fe fb1a 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800d5f0:	6803      	ldr	r3, [r0, #0]
 800d5f2:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800d5f4:	4641      	mov	r1, r8
 800d5f6:	f8d3 b018 	ldr.w	fp, [r3, #24]
 800d5fa:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800d5fe:	47d8      	blx	fp
 800d600:	e7b9      	b.n	800d576 <_ZNK8touchgfx17GraphElementBoxes4drawERKNS_4RectE+0x96>
 800d602:	b00d      	add	sp, #52	; 0x34
 800d604:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d608 <_ZN8touchgfx17GraphElementBoxes22invalidateGraphPointAtEs>:
 800d608:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800d60c:	6943      	ldr	r3, [r0, #20]
 800d60e:	4688      	mov	r8, r1
 800d610:	460a      	mov	r2, r1
 800d612:	4604      	mov	r4, r0
 800d614:	695e      	ldr	r6, [r3, #20]
 800d616:	4631      	mov	r1, r6
 800d618:	f7ff ff26 	bl	800d468 <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs>
 800d61c:	bb38      	cbnz	r0, 800d66e <_ZN8touchgfx17GraphElementBoxes22invalidateGraphPointAtEs+0x66>
 800d61e:	8f25      	ldrh	r5, [r4, #56]	; 0x38
 800d620:	4641      	mov	r1, r8
 800d622:	4630      	mov	r0, r6
 800d624:	f7ff fe16 	bl	800d254 <_ZNK8touchgfx20AbstractGraphElement16indexToScreenXQ5EPKNS_17AbstractDataGraphEs.constprop.10>
 800d628:	4607      	mov	r7, r0
 800d62a:	012d      	lsls	r5, r5, #4
 800d62c:	4641      	mov	r1, r8
 800d62e:	4630      	mov	r0, r6
 800d630:	f7ff fe0c 	bl	800d24c <_ZNK8touchgfx20AbstractGraphElement16indexToScreenYQ5EPKNS_17AbstractDataGraphEs.constprop.8>
 800d634:	1b7f      	subs	r7, r7, r5
 800d636:	4606      	mov	r6, r0
 800d638:	a804      	add	r0, sp, #16
 800d63a:	f840 7d10 	str.w	r7, [r0, #-16]!
 800d63e:	1b75      	subs	r5, r6, r5
 800d640:	f7ff f9d2 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d644:	4607      	mov	r7, r0
 800d646:	a804      	add	r0, sp, #16
 800d648:	f840 5d0c 	str.w	r5, [r0, #-12]!
 800d64c:	f7ff f9cc 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d650:	f9b4 3038 	ldrsh.w	r3, [r4, #56]	; 0x38
 800d654:	f8ad 000a 	strh.w	r0, [sp, #10]
 800d658:	a902      	add	r1, sp, #8
 800d65a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d65e:	4620      	mov	r0, r4
 800d660:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d664:	6823      	ldr	r3, [r4, #0]
 800d666:	f8ad 7008 	strh.w	r7, [sp, #8]
 800d66a:	691b      	ldr	r3, [r3, #16]
 800d66c:	4798      	blx	r3
 800d66e:	b004      	add	sp, #16
 800d670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d674 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev>:
 800d674:	b510      	push	{r4, lr}
 800d676:	4604      	mov	r4, r0
 800d678:	f7ff fe3e 	bl	800d2f8 <_ZN8touchgfx20AbstractGraphElementC1Ev>
 800d67c:	4b02      	ldr	r3, [pc, #8]	; (800d688 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev+0x14>)
 800d67e:	4620      	mov	r0, r4
 800d680:	6023      	str	r3, [r4, #0]
 800d682:	2300      	movs	r3, #0
 800d684:	6363      	str	r3, [r4, #52]	; 0x34
 800d686:	bd10      	pop	{r4, pc}
 800d688:	08024074 	.word	0x08024074

0800d68c <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800d68c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800d690:	2b00      	cmp	r3, #0
 800d692:	da05      	bge.n	800d6a0 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800d694:	b29b      	uxth	r3, r3
 800d696:	880a      	ldrh	r2, [r1, #0]
 800d698:	441a      	add	r2, r3
 800d69a:	425b      	negs	r3, r3
 800d69c:	800a      	strh	r2, [r1, #0]
 800d69e:	808b      	strh	r3, [r1, #4]
 800d6a0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800d6a4:	2b00      	cmp	r3, #0
 800d6a6:	da05      	bge.n	800d6b4 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800d6a8:	b29b      	uxth	r3, r3
 800d6aa:	884a      	ldrh	r2, [r1, #2]
 800d6ac:	441a      	add	r2, r3
 800d6ae:	425b      	negs	r3, r3
 800d6b0:	804a      	strh	r2, [r1, #2]
 800d6b2:	80cb      	strh	r3, [r1, #6]
 800d6b4:	4770      	bx	lr

0800d6b6 <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE>:
 800d6b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6ba:	6943      	ldr	r3, [r0, #20]
 800d6bc:	b08d      	sub	sp, #52	; 0x34
 800d6be:	460d      	mov	r5, r1
 800d6c0:	4604      	mov	r4, r0
 800d6c2:	695e      	ldr	r6, [r3, #20]
 800d6c4:	6803      	ldr	r3, [r0, #0]
 800d6c6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800d6c8:	4798      	blx	r3
 800d6ca:	4680      	mov	r8, r0
 800d6cc:	4630      	mov	r0, r6
 800d6ce:	f7ff fa41 	bl	800cb54 <_ZNK8touchgfx17AbstractDataGraph8getAlphaEv>
 800d6d2:	4607      	mov	r7, r0
 800d6d4:	4630      	mov	r0, r6
 800d6d6:	f7ff fb39 	bl	800cd4c <_ZNK8touchgfx17AbstractDataGraph15getUsedCapacityEv>
 800d6da:	2800      	cmp	r0, #0
 800d6dc:	f000 80ab 	beq.w	800d836 <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0x180>
 800d6e0:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 800d6e2:	2b00      	cmp	r3, #0
 800d6e4:	f000 80a7 	beq.w	800d836 <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0x180>
 800d6e8:	fb18 f807 	smulbb	r8, r8, r7
 800d6ec:	fa1f f388 	uxth.w	r3, r8
 800d6f0:	f103 0801 	add.w	r8, r3, #1
 800d6f4:	eb08 2813 	add.w	r8, r8, r3, lsr #8
 800d6f8:	ea5f 2828 	movs.w	r8, r8, asr #8
 800d6fc:	f000 809b 	beq.w	800d836 <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0x180>
 800d700:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d702:	4630      	mov	r0, r6
 800d704:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800d706:	f7ff fd11 	bl	800d12c <_ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii>
 800d70a:	f9b4 303e 	ldrsh.w	r3, [r4, #62]	; 0x3e
 800d70e:	4607      	mov	r7, r0
 800d710:	a80c      	add	r0, sp, #48	; 0x30
 800d712:	9303      	str	r3, [sp, #12]
 800d714:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 800d716:	011b      	lsls	r3, r3, #4
 800d718:	f840 3d1c 	str.w	r3, [r0, #-28]!
 800d71c:	f7ff fde3 	bl	800d2e6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d720:	4639      	mov	r1, r7
 800d722:	af0c      	add	r7, sp, #48	; 0x30
 800d724:	4681      	mov	r9, r0
 800d726:	4630      	mov	r0, r6
 800d728:	f7ff fd8c 	bl	800d244 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi.constprop.7>
 800d72c:	f847 0d08 	str.w	r0, [r7, #-8]!
 800d730:	4638      	mov	r0, r7
 800d732:	f7ff f959 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d736:	882b      	ldrh	r3, [r5, #0]
 800d738:	88aa      	ldrh	r2, [r5, #4]
 800d73a:	4682      	mov	sl, r0
 800d73c:	8fe0      	ldrh	r0, [r4, #62]	; 0x3e
 800d73e:	fa1f f189 	uxth.w	r1, r9
 800d742:	441a      	add	r2, r3
 800d744:	4403      	add	r3, r0
 800d746:	4402      	add	r2, r0
 800d748:	4620      	mov	r0, r4
 800d74a:	440a      	add	r2, r1
 800d74c:	1a59      	subs	r1, r3, r1
 800d74e:	f10d 0312 	add.w	r3, sp, #18
 800d752:	b212      	sxth	r2, r2
 800d754:	9300      	str	r3, [sp, #0]
 800d756:	b209      	sxth	r1, r1
 800d758:	ab04      	add	r3, sp, #16
 800d75a:	f7ff fdec 	bl	800d336 <_ZNK8touchgfx20AbstractGraphElement24xScreenRangeToIndexRangeEssRsS1_>
 800d75e:	2800      	cmp	r0, #0
 800d760:	d069      	beq.n	800d836 <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0x180>
 800d762:	4630      	mov	r0, r6
 800d764:	fa5f f888 	uxtb.w	r8, r8
 800d768:	f7ff fa08 	bl	800cb7c <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>
 800d76c:	4683      	mov	fp, r0
 800d76e:	4630      	mov	r0, r6
 800d770:	f7ff fa8f 	bl	800cc92 <_ZNK8touchgfx17AbstractDataGraph33getGraphAreaWidthIncludingPaddingEv>
 800d774:	4681      	mov	r9, r0
 800d776:	4630      	mov	r0, r6
 800d778:	f7ff fa8e 	bl	800cc98 <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>
 800d77c:	2300      	movs	r3, #0
 800d77e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800d782:	4629      	mov	r1, r5
 800d784:	a806      	add	r0, sp, #24
 800d786:	f8ad 901c 	strh.w	r9, [sp, #28]
 800d78a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d78e:	ad08      	add	r5, sp, #32
 800d790:	f8ad b01a 	strh.w	fp, [sp, #26]
 800d794:	f7fd ff94 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 800d798:	f9bd 9010 	ldrsh.w	r9, [sp, #16]
 800d79c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800d7a0:	454b      	cmp	r3, r9
 800d7a2:	db48      	blt.n	800d836 <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0x180>
 800d7a4:	4649      	mov	r1, r9
 800d7a6:	4630      	mov	r0, r6
 800d7a8:	f7ff fd54 	bl	800d254 <_ZNK8touchgfx20AbstractGraphElement16indexToScreenXQ5EPKNS_17AbstractDataGraphEs.constprop.10>
 800d7ac:	9b03      	ldr	r3, [sp, #12]
 800d7ae:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 800d7b2:	9b05      	ldr	r3, [sp, #20]
 800d7b4:	1ac0      	subs	r0, r0, r3
 800d7b6:	9008      	str	r0, [sp, #32]
 800d7b8:	4628      	mov	r0, r5
 800d7ba:	f7ff f915 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d7be:	4649      	mov	r1, r9
 800d7c0:	4683      	mov	fp, r0
 800d7c2:	4630      	mov	r0, r6
 800d7c4:	f7ff fd42 	bl	800d24c <_ZNK8touchgfx20AbstractGraphElement16indexToScreenYQ5EPKNS_17AbstractDataGraphEs.constprop.8>
 800d7c8:	9008      	str	r0, [sp, #32]
 800d7ca:	4628      	mov	r0, r5
 800d7cc:	f7ff f90c 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d7d0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d7d4:	ebaa 0000 	sub.w	r0, sl, r0
 800d7d8:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 800d7dc:	4629      	mov	r1, r5
 800d7de:	f8ad b020 	strh.w	fp, [sp, #32]
 800d7e2:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
 800d7e6:	4620      	mov	r0, r4
 800d7e8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800d7ec:	f7ff ff4e 	bl	800d68c <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800d7f0:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d7f4:	e887 0003 	stmia.w	r7, {r0, r1}
 800d7f8:	a906      	add	r1, sp, #24
 800d7fa:	4638      	mov	r0, r7
 800d7fc:	f7fd ff60 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 800d800:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d804:	e885 0003 	stmia.w	r5, {r0, r1}
 800d808:	4628      	mov	r0, r5
 800d80a:	f7fd ff9c 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d80e:	b968      	cbnz	r0, 800d82c <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0x176>
 800d810:	6823      	ldr	r3, [r4, #0]
 800d812:	4629      	mov	r1, r5
 800d814:	4620      	mov	r0, r4
 800d816:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d818:	4798      	blx	r3
 800d81a:	f7fe fa03 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800d81e:	6803      	ldr	r3, [r0, #0]
 800d820:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800d822:	4629      	mov	r1, r5
 800d824:	f8d3 b018 	ldr.w	fp, [r3, #24]
 800d828:	4643      	mov	r3, r8
 800d82a:	47d8      	blx	fp
 800d82c:	f109 0901 	add.w	r9, r9, #1
 800d830:	fa0f f989 	sxth.w	r9, r9
 800d834:	e7b2      	b.n	800d79c <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0xe6>
 800d836:	b00d      	add	sp, #52	; 0x34
 800d838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d83c <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
 800d83c:	b510      	push	{r4, lr}
 800d83e:	4604      	mov	r4, r0
 800d840:	f7ff ff18 	bl	800d674 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev>
 800d844:	4b05      	ldr	r3, [pc, #20]	; (800d85c <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x20>)
 800d846:	4620      	mov	r0, r4
 800d848:	6023      	str	r3, [r4, #0]
 800d84a:	230a      	movs	r3, #10
 800d84c:	63a3      	str	r3, [r4, #56]	; 0x38
 800d84e:	2301      	movs	r3, #1
 800d850:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 800d854:	2300      	movs	r3, #0
 800d856:	6423      	str	r3, [r4, #64]	; 0x40
 800d858:	bd10      	pop	{r4, pc}
 800d85a:	bf00      	nop
 800d85c:	08023f64 	.word	0x08023f64

0800d860 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800d860:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800d862:	460b      	mov	r3, r1
 800d864:	b120      	cbz	r0, 800d870 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0x10>
 800d866:	6b02      	ldr	r2, [r0, #48]	; 0x30
 800d868:	6b81      	ldr	r1, [r0, #56]	; 0x38
 800d86a:	4618      	mov	r0, r3
 800d86c:	f7ff bc5e 	b.w	800d12c <_ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii>
 800d870:	4770      	bx	lr

0800d872 <_ZN8touchgfx20GraphElementGridBase17setIntervalScaledEi>:
 800d872:	2900      	cmp	r1, #0
 800d874:	bfb8      	it	lt
 800d876:	4249      	neglt	r1, r1
 800d878:	6381      	str	r1, [r0, #56]	; 0x38
 800d87a:	4770      	bx	lr

0800d87c <_ZN8touchgfx20GraphElementGridBase11setIntervalEi>:
 800d87c:	2900      	cmp	r1, #0
 800d87e:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800d880:	bfb8      	it	lt
 800d882:	4249      	neglt	r1, r1
 800d884:	4359      	muls	r1, r3
 800d886:	f7ff bff4 	b.w	800d872 <_ZN8touchgfx20GraphElementGridBase17setIntervalScaledEi>

0800d88a <_ZN8touchgfx20GraphElementGridBase12setLineWidthEh>:
 800d88a:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 800d88e:	4770      	bx	lr

0800d890 <_ZNK8touchgfx17GraphElementGridY8drawLineERKNS_4RectEssssNS_9colortypeEh>:
 800d890:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d892:	b085      	sub	sp, #20
 800d894:	460f      	mov	r7, r1
 800d896:	4606      	mov	r6, r0
 800d898:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d89c:	466c      	mov	r4, sp
 800d89e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 800d8a2:	ad02      	add	r5, sp, #8
 800d8a4:	4621      	mov	r1, r4
 800d8a6:	f8ad 2000 	strh.w	r2, [sp]
 800d8aa:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d8ae:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 800d8b2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d8b6:	f7ff fee9 	bl	800d68c <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800d8ba:	e894 0003 	ldmia.w	r4, {r0, r1}
 800d8be:	e885 0003 	stmia.w	r5, {r0, r1}
 800d8c2:	4639      	mov	r1, r7
 800d8c4:	4628      	mov	r0, r5
 800d8c6:	f7fd fefb 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 800d8ca:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d8ce:	e884 0003 	stmia.w	r4, {r0, r1}
 800d8d2:	4620      	mov	r0, r4
 800d8d4:	f7fd ff37 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d8d8:	b968      	cbnz	r0, 800d8f6 <_ZNK8touchgfx17GraphElementGridY8drawLineERKNS_4RectEssssNS_9colortypeEh+0x66>
 800d8da:	6833      	ldr	r3, [r6, #0]
 800d8dc:	4621      	mov	r1, r4
 800d8de:	4630      	mov	r0, r6
 800d8e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d8e2:	4798      	blx	r3
 800d8e4:	f7fe f99e 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800d8e8:	6803      	ldr	r3, [r0, #0]
 800d8ea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800d8ec:	4621      	mov	r1, r4
 800d8ee:	699d      	ldr	r5, [r3, #24]
 800d8f0:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
 800d8f4:	47a8      	blx	r5
 800d8f6:	b005      	add	sp, #20
 800d8f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d8fa <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE>:
 800d8fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d8fe:	6943      	ldr	r3, [r0, #20]
 800d900:	b093      	sub	sp, #76	; 0x4c
 800d902:	4605      	mov	r5, r0
 800d904:	460e      	mov	r6, r1
 800d906:	695c      	ldr	r4, [r3, #20]
 800d908:	6803      	ldr	r3, [r0, #0]
 800d90a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800d90c:	4798      	blx	r3
 800d90e:	4607      	mov	r7, r0
 800d910:	4620      	mov	r0, r4
 800d912:	f7ff f91f 	bl	800cb54 <_ZNK8touchgfx17AbstractDataGraph8getAlphaEv>
 800d916:	f895 303c 	ldrb.w	r3, [r5, #60]	; 0x3c
 800d91a:	2b00      	cmp	r3, #0
 800d91c:	d065      	beq.n	800d9ea <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0xf0>
 800d91e:	fb17 f000 	smulbb	r0, r7, r0
 800d922:	b283      	uxth	r3, r0
 800d924:	1c58      	adds	r0, r3, #1
 800d926:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800d92a:	1200      	asrs	r0, r0, #8
 800d92c:	d05d      	beq.n	800d9ea <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0xf0>
 800d92e:	b2c3      	uxtb	r3, r0
 800d930:	4620      	mov	r0, r4
 800d932:	9307      	str	r3, [sp, #28]
 800d934:	f7ff f925 	bl	800cb82 <_ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv>
 800d938:	4680      	mov	r8, r0
 800d93a:	4620      	mov	r0, r4
 800d93c:	f7ff f924 	bl	800cb88 <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 800d940:	4607      	mov	r7, r0
 800d942:	4620      	mov	r0, r4
 800d944:	f7ff f9c6 	bl	800ccd4 <_ZNK8touchgfx17AbstractDataGraph34getGraphAreaHeightIncludingPaddingEv>
 800d948:	2300      	movs	r3, #0
 800d94a:	4631      	mov	r1, r6
 800d94c:	f8ad 0046 	strh.w	r0, [sp, #70]	; 0x46
 800d950:	a810      	add	r0, sp, #64	; 0x40
 800d952:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800d956:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
 800d95a:	f8ad 7044 	strh.w	r7, [sp, #68]	; 0x44
 800d95e:	f7fd feaf 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 800d962:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 800d964:	4620      	mov	r0, r4
 800d966:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 800d968:	f7ff fbe0 	bl	800d12c <_ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii>
 800d96c:	4621      	mov	r1, r4
 800d96e:	4606      	mov	r6, r0
 800d970:	4628      	mov	r0, r5
 800d972:	f7ff ff75 	bl	800d860 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>
 800d976:	4682      	mov	sl, r0
 800d978:	f895 003c 	ldrb.w	r0, [r5, #60]	; 0x3c
 800d97c:	0103      	lsls	r3, r0, #4
 800d97e:	4620      	mov	r0, r4
 800d980:	9306      	str	r3, [sp, #24]
 800d982:	f7ff f8fe 	bl	800cb82 <_ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv>
 800d986:	9008      	str	r0, [sp, #32]
 800d988:	4620      	mov	r0, r4
 800d98a:	f7ff f8fd 	bl	800cb88 <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 800d98e:	9009      	str	r0, [sp, #36]	; 0x24
 800d990:	f1ba 0f00 	cmp.w	sl, #0
 800d994:	d12c      	bne.n	800d9f0 <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0xf6>
 800d996:	bb5e      	cbnz	r6, 800d9f0 <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0xf6>
 800d998:	4631      	mov	r1, r6
 800d99a:	4620      	mov	r0, r4
 800d99c:	f7ff fc52 	bl	800d244 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi.constprop.7>
 800d9a0:	9b06      	ldr	r3, [sp, #24]
 800d9a2:	1ac3      	subs	r3, r0, r3
 800d9a4:	a812      	add	r0, sp, #72	; 0x48
 800d9a6:	f840 3d0c 	str.w	r3, [r0, #-12]!
 800d9aa:	f7ff f81d 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d9ae:	4607      	mov	r7, r0
 800d9b0:	4620      	mov	r0, r4
 800d9b2:	f7ff f8e3 	bl	800cb7c <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>
 800d9b6:	1a38      	subs	r0, r7, r0
 800d9b8:	f895 303c 	ldrb.w	r3, [r5, #60]	; 0x3c
 800d9bc:	b206      	sxth	r6, r0
 800d9be:	42f3      	cmn	r3, r6
 800d9c0:	d413      	bmi.n	800d9ea <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0xf0>
 800d9c2:	4620      	mov	r0, r4
 800d9c4:	f7ff f968 	bl	800cc98 <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>
 800d9c8:	42b0      	cmp	r0, r6
 800d9ca:	dd0e      	ble.n	800d9ea <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0xf0>
 800d9cc:	9b07      	ldr	r3, [sp, #28]
 800d9ce:	a910      	add	r1, sp, #64	; 0x40
 800d9d0:	9a08      	ldr	r2, [sp, #32]
 800d9d2:	4628      	mov	r0, r5
 800d9d4:	9303      	str	r3, [sp, #12]
 800d9d6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800d9d8:	9302      	str	r3, [sp, #8]
 800d9da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d9dc:	9301      	str	r3, [sp, #4]
 800d9de:	f895 303c 	ldrb.w	r3, [r5, #60]	; 0x3c
 800d9e2:	9300      	str	r3, [sp, #0]
 800d9e4:	b23b      	sxth	r3, r7
 800d9e6:	f7ff ff53 	bl	800d890 <_ZNK8touchgfx17GraphElementGridY8drawLineERKNS_4RectEssssNS_9colortypeEh>
 800d9ea:	b013      	add	sp, #76	; 0x4c
 800d9ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9f0:	2e00      	cmp	r6, #0
 800d9f2:	ddfa      	ble.n	800d9ea <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0xf0>
 800d9f4:	4621      	mov	r1, r4
 800d9f6:	4628      	mov	r0, r5
 800d9f8:	f7ff fd2c 	bl	800d454 <_ZNK8touchgfx20AbstractGraphElement23getGraphRangeYMinScaledEPKNS_17AbstractDataGraphE>
 800d9fc:	4607      	mov	r7, r0
 800d9fe:	4621      	mov	r1, r4
 800da00:	4628      	mov	r0, r5
 800da02:	f7ff fd2c 	bl	800d45e <_ZNK8touchgfx20AbstractGraphElement23getGraphRangeYMaxScaledEPKNS_17AbstractDataGraphE>
 800da06:	1bc3      	subs	r3, r0, r7
 800da08:	4683      	mov	fp, r0
 800da0a:	2b00      	cmp	r3, #0
 800da0c:	bfb8      	it	lt
 800da0e:	425b      	neglt	r3, r3
 800da10:	fb93 f3f6 	sdiv	r3, r3, r6
 800da14:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800da18:	dce7      	bgt.n	800d9ea <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0xf0>
 800da1a:	4639      	mov	r1, r7
 800da1c:	4620      	mov	r0, r4
 800da1e:	f7ff fc11 	bl	800d244 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi.constprop.7>
 800da22:	4680      	mov	r8, r0
 800da24:	4659      	mov	r1, fp
 800da26:	4620      	mov	r0, r4
 800da28:	f7ff fc0c 	bl	800d244 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi.constprop.7>
 800da2c:	4540      	cmp	r0, r8
 800da2e:	bfbe      	ittt	lt
 800da30:	463b      	movlt	r3, r7
 800da32:	465f      	movlt	r7, fp
 800da34:	469b      	movlt	fp, r3
 800da36:	fb97 f8f6 	sdiv	r8, r7, r6
 800da3a:	fb9b f2f6 	sdiv	r2, fp, r6
 800da3e:	455f      	cmp	r7, fp
 800da40:	bfb4      	ite	lt
 800da42:	2301      	movlt	r3, #1
 800da44:	f04f 33ff 	movge.w	r3, #4294967295
 800da48:	eba8 0803 	sub.w	r8, r8, r3
 800da4c:	441a      	add	r2, r3
 800da4e:	4590      	cmp	r8, r2
 800da50:	bfb4      	ite	lt
 800da52:	f04f 0901 	movlt.w	r9, #1
 800da56:	f04f 39ff 	movge.w	r9, #4294967295
 800da5a:	f1ba 0f00 	cmp.w	sl, #0
 800da5e:	d136      	bne.n	800dace <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0x1d4>
 800da60:	fb06 fa09 	mul.w	sl, r6, r9
 800da64:	eb09 0702 	add.w	r7, r9, r2
 800da68:	fb08 f606 	mul.w	r6, r8, r6
 800da6c:	4547      	cmp	r7, r8
 800da6e:	d0bc      	beq.n	800d9ea <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0xf0>
 800da70:	4631      	mov	r1, r6
 800da72:	4620      	mov	r0, r4
 800da74:	f7ff fbe6 	bl	800d244 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi.constprop.7>
 800da78:	9b06      	ldr	r3, [sp, #24]
 800da7a:	1ac0      	subs	r0, r0, r3
 800da7c:	900f      	str	r0, [sp, #60]	; 0x3c
 800da7e:	a80f      	add	r0, sp, #60	; 0x3c
 800da80:	f7fe ffb2 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800da84:	4683      	mov	fp, r0
 800da86:	4620      	mov	r0, r4
 800da88:	f7ff f878 	bl	800cb7c <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>
 800da8c:	ebab 0000 	sub.w	r0, fp, r0
 800da90:	f895 203c 	ldrb.w	r2, [r5, #60]	; 0x3c
 800da94:	b203      	sxth	r3, r0
 800da96:	42da      	cmn	r2, r3
 800da98:	9304      	str	r3, [sp, #16]
 800da9a:	d415      	bmi.n	800dac8 <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0x1ce>
 800da9c:	4620      	mov	r0, r4
 800da9e:	f7ff f8fb 	bl	800cc98 <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>
 800daa2:	9b04      	ldr	r3, [sp, #16]
 800daa4:	4298      	cmp	r0, r3
 800daa6:	dd0f      	ble.n	800dac8 <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0x1ce>
 800daa8:	9b07      	ldr	r3, [sp, #28]
 800daaa:	a910      	add	r1, sp, #64	; 0x40
 800daac:	9a08      	ldr	r2, [sp, #32]
 800daae:	4628      	mov	r0, r5
 800dab0:	9303      	str	r3, [sp, #12]
 800dab2:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800dab4:	9302      	str	r3, [sp, #8]
 800dab6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dab8:	9301      	str	r3, [sp, #4]
 800daba:	f895 303c 	ldrb.w	r3, [r5, #60]	; 0x3c
 800dabe:	9300      	str	r3, [sp, #0]
 800dac0:	fa0f f38b 	sxth.w	r3, fp
 800dac4:	f7ff fee4 	bl	800d890 <_ZNK8touchgfx17GraphElementGridY8drawLineERKNS_4RectEssssNS_9colortypeEh>
 800dac8:	44c8      	add	r8, r9
 800daca:	4456      	add	r6, sl
 800dacc:	e7ce      	b.n	800da6c <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0x172>
 800dace:	fb9b fbfa 	sdiv	fp, fp, sl
 800dad2:	fb97 f7fa 	sdiv	r7, r7, sl
 800dad6:	eb0b 0203 	add.w	r2, fp, r3
 800dada:	1aff      	subs	r7, r7, r3
 800dadc:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800dae0:	4620      	mov	r0, r4
 800dae2:	4297      	cmp	r7, r2
 800dae4:	bfb4      	ite	lt
 800dae6:	2301      	movlt	r3, #1
 800dae8:	f04f 33ff 	movge.w	r3, #4294967295
 800daec:	fb07 f10a 	mul.w	r1, r7, sl
 800daf0:	920c      	str	r2, [sp, #48]	; 0x30
 800daf2:	930a      	str	r3, [sp, #40]	; 0x28
 800daf4:	f7ff fba6 	bl	800d244 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi.constprop.7>
 800daf8:	f84b 0d0c 	str.w	r0, [fp, #-12]!
 800dafc:	4658      	mov	r0, fp
 800dafe:	f7fe ff73 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800db02:	fb08 f106 	mul.w	r1, r8, r6
 800db06:	b203      	sxth	r3, r0
 800db08:	4620      	mov	r0, r4
 800db0a:	9305      	str	r3, [sp, #20]
 800db0c:	f7ff fb9a 	bl	800d244 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi.constprop.7>
 800db10:	900f      	str	r0, [sp, #60]	; 0x3c
 800db12:	4658      	mov	r0, fp
 800db14:	f7fe ff68 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800db18:	fb09 f206 	mul.w	r2, r9, r6
 800db1c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800db1e:	b203      	sxth	r3, r0
 800db20:	920b      	str	r2, [sp, #44]	; 0x2c
 800db22:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800db24:	f8cd b010 	str.w	fp, [sp, #16]
 800db28:	188a      	adds	r2, r1, r2
 800db2a:	920c      	str	r2, [sp, #48]	; 0x30
 800db2c:	9a05      	ldr	r2, [sp, #20]
 800db2e:	429a      	cmp	r2, r3
 800db30:	dc13      	bgt.n	800db5a <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0x260>
 800db32:	eb08 0b09 	add.w	fp, r8, r9
 800db36:	fb06 fb0b 	mul.w	fp, r6, fp
 800db3a:	9a05      	ldr	r2, [sp, #20]
 800db3c:	429a      	cmp	r2, r3
 800db3e:	db45      	blt.n	800dbcc <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0x2d2>
 800db40:	4659      	mov	r1, fp
 800db42:	4620      	mov	r0, r4
 800db44:	f7ff fb7e 	bl	800d244 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi.constprop.7>
 800db48:	900f      	str	r0, [sp, #60]	; 0x3c
 800db4a:	9804      	ldr	r0, [sp, #16]
 800db4c:	44c8      	add	r8, r9
 800db4e:	f7fe ff4b 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800db52:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800db54:	b203      	sxth	r3, r0
 800db56:	4493      	add	fp, r2
 800db58:	e7ef      	b.n	800db3a <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0x240>
 800db5a:	fb06 f108 	mul.w	r1, r6, r8
 800db5e:	4620      	mov	r0, r4
 800db60:	f7ff fb70 	bl	800d244 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi.constprop.7>
 800db64:	9b06      	ldr	r3, [sp, #24]
 800db66:	1ac0      	subs	r0, r0, r3
 800db68:	900f      	str	r0, [sp, #60]	; 0x3c
 800db6a:	9804      	ldr	r0, [sp, #16]
 800db6c:	f7fe ff3c 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800db70:	4683      	mov	fp, r0
 800db72:	4620      	mov	r0, r4
 800db74:	f7ff f802 	bl	800cb7c <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>
 800db78:	ebab 0000 	sub.w	r0, fp, r0
 800db7c:	f895 203c 	ldrb.w	r2, [r5, #60]	; 0x3c
 800db80:	b203      	sxth	r3, r0
 800db82:	42da      	cmn	r2, r3
 800db84:	930d      	str	r3, [sp, #52]	; 0x34
 800db86:	d415      	bmi.n	800dbb4 <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0x2ba>
 800db88:	4620      	mov	r0, r4
 800db8a:	f7ff f885 	bl	800cc98 <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>
 800db8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800db90:	4298      	cmp	r0, r3
 800db92:	dd0f      	ble.n	800dbb4 <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0x2ba>
 800db94:	9b07      	ldr	r3, [sp, #28]
 800db96:	a910      	add	r1, sp, #64	; 0x40
 800db98:	9a08      	ldr	r2, [sp, #32]
 800db9a:	4628      	mov	r0, r5
 800db9c:	9303      	str	r3, [sp, #12]
 800db9e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800dba0:	9302      	str	r3, [sp, #8]
 800dba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dba4:	9301      	str	r3, [sp, #4]
 800dba6:	f895 303c 	ldrb.w	r3, [r5, #60]	; 0x3c
 800dbaa:	9300      	str	r3, [sp, #0]
 800dbac:	fa0f f38b 	sxth.w	r3, fp
 800dbb0:	f7ff fe6e 	bl	800d890 <_ZNK8touchgfx17GraphElementGridY8drawLineERKNS_4RectEssssNS_9colortypeEh>
 800dbb4:	44c8      	add	r8, r9
 800dbb6:	4620      	mov	r0, r4
 800dbb8:	fb08 f106 	mul.w	r1, r8, r6
 800dbbc:	f7ff fb42 	bl	800d244 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi.constprop.7>
 800dbc0:	900f      	str	r0, [sp, #60]	; 0x3c
 800dbc2:	9804      	ldr	r0, [sp, #16]
 800dbc4:	f7fe ff10 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800dbc8:	b203      	sxth	r3, r0
 800dbca:	e7af      	b.n	800db2c <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0x232>
 800dbcc:	930d      	str	r3, [sp, #52]	; 0x34
 800dbce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800dbd0:	441f      	add	r7, r3
 800dbd2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800dbd4:	42bb      	cmp	r3, r7
 800dbd6:	f43f af08 	beq.w	800d9ea <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0xf0>
 800dbda:	fb07 f10a 	mul.w	r1, r7, sl
 800dbde:	4620      	mov	r0, r4
 800dbe0:	f7ff fb30 	bl	800d244 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi.constprop.7>
 800dbe4:	900f      	str	r0, [sp, #60]	; 0x3c
 800dbe6:	9804      	ldr	r0, [sp, #16]
 800dbe8:	f7fe fefe 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800dbec:	b203      	sxth	r3, r0
 800dbee:	9305      	str	r3, [sp, #20]
 800dbf0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800dbf2:	e79b      	b.n	800db2c <_ZNK8touchgfx17GraphElementGridY4drawERKNS_4RectE+0x232>

0800dbf4 <_ZN8touchgfx21GraphElementHistogramC1Ev>:
 800dbf4:	b510      	push	{r4, lr}
 800dbf6:	4604      	mov	r4, r0
 800dbf8:	f7ff fd3c 	bl	800d674 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev>
 800dbfc:	4b03      	ldr	r3, [pc, #12]	; (800dc0c <_ZN8touchgfx21GraphElementHistogramC1Ev+0x18>)
 800dbfe:	2200      	movs	r2, #0
 800dc00:	4620      	mov	r0, r4
 800dc02:	6023      	str	r3, [r4, #0]
 800dc04:	2302      	movs	r3, #2
 800dc06:	e9c4 230e 	strd	r2, r3, [r4, #56]	; 0x38
 800dc0a:	bd10      	pop	{r4, pc}
 800dc0c:	08023fec 	.word	0x08023fec

0800dc10 <_ZN8touchgfx21GraphElementHistogram17setBaselineScaledEi>:
 800dc10:	6803      	ldr	r3, [r0, #0]
 800dc12:	6381      	str	r1, [r0, #56]	; 0x38
 800dc14:	695b      	ldr	r3, [r3, #20]
 800dc16:	4718      	bx	r3

0800dc18 <_ZN8touchgfx21GraphElementHistogram11setBaselineEi>:
 800dc18:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800dc1a:	4359      	muls	r1, r3
 800dc1c:	f7ff bff8 	b.w	800dc10 <_ZN8touchgfx21GraphElementHistogram17setBaselineScaledEi>

0800dc20 <_ZN8touchgfx21GraphElementHistogram11setBarWidthEt>:
 800dc20:	8781      	strh	r1, [r0, #60]	; 0x3c
 800dc22:	4770      	bx	lr

0800dc24 <_ZN8touchgfx17GraphElementBoxesC1Ev>:
 800dc24:	b510      	push	{r4, lr}
 800dc26:	4604      	mov	r4, r0
 800dc28:	f7ff fd24 	bl	800d674 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev>
 800dc2c:	4b02      	ldr	r3, [pc, #8]	; (800dc38 <_ZN8touchgfx17GraphElementBoxesC1Ev+0x14>)
 800dc2e:	4620      	mov	r0, r4
 800dc30:	6023      	str	r3, [r4, #0]
 800dc32:	2302      	movs	r3, #2
 800dc34:	8723      	strh	r3, [r4, #56]	; 0x38
 800dc36:	bd10      	pop	{r4, pc}
 800dc38:	08023e54 	.word	0x08023e54

0800dc3c <_ZN8touchgfx17GraphElementBoxes11setBoxWidthEt>:
 800dc3c:	8701      	strh	r1, [r0, #56]	; 0x38
 800dc3e:	4770      	bx	lr

0800dc40 <_ZN8touchgfx10GraphTitle22invalidateGraphPointAtEs>:
 800dc40:	4770      	bx	lr

0800dc42 <_ZN8touchgfx15GraphLabelsBaseD1Ev>:
 800dc42:	4770      	bx	lr

0800dc44 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800dc44:	4770      	bx	lr

0800dc46 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800dc46:	4770      	bx	lr

0800dc48 <_ZN8touchgfx15GraphLabelsBaseD0Ev>:
 800dc48:	b510      	push	{r4, lr}
 800dc4a:	4604      	mov	r4, r0
 800dc4c:	2150      	movs	r1, #80	; 0x50
 800dc4e:	f011 fd03 	bl	801f658 <_ZdlPvj>
 800dc52:	4620      	mov	r0, r4
 800dc54:	bd10      	pop	{r4, pc}

0800dc56 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800dc56:	b510      	push	{r4, lr}
 800dc58:	4604      	mov	r4, r0
 800dc5a:	2150      	movs	r1, #80	; 0x50
 800dc5c:	f011 fcfc 	bl	801f658 <_ZdlPvj>
 800dc60:	4620      	mov	r0, r4
 800dc62:	bd10      	pop	{r4, pc}

0800dc64 <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800dc64:	b510      	push	{r4, lr}
 800dc66:	4604      	mov	r4, r0
 800dc68:	2150      	movs	r1, #80	; 0x50
 800dc6a:	f011 fcf5 	bl	801f658 <_ZdlPvj>
 800dc6e:	4620      	mov	r0, r4
 800dc70:	bd10      	pop	{r4, pc}
	...

0800dc74 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 800dc74:	b510      	push	{r4, lr}
 800dc76:	4604      	mov	r4, r0
 800dc78:	f7ff fcfc 	bl	800d674 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev>
 800dc7c:	4a09      	ldr	r2, [pc, #36]	; (800dca4 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x30>)
 800dc7e:	4b0a      	ldr	r3, [pc, #40]	; (800dca8 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 800dc80:	4620      	mov	r0, r4
 800dc82:	63e2      	str	r2, [r4, #60]	; 0x3c
 800dc84:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800dc88:	6023      	str	r3, [r4, #0]
 800dc8a:	2300      	movs	r3, #0
 800dc8c:	f8a4 2040 	strh.w	r2, [r4, #64]	; 0x40
 800dc90:	222e      	movs	r2, #46	; 0x2e
 800dc92:	63a3      	str	r3, [r4, #56]	; 0x38
 800dc94:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800dc98:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 800dc9c:	f8a4 2048 	strh.w	r2, [r4, #72]	; 0x48
 800dca0:	64e3      	str	r3, [r4, #76]	; 0x4c
 800dca2:	bd10      	pop	{r4, pc}
 800dca4:	08022484 	.word	0x08022484
 800dca8:	08024210 	.word	0x08024210

0800dcac <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800dcac:	b570      	push	{r4, r5, r6, lr}
 800dcae:	4604      	mov	r4, r0
 800dcb0:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800dcb2:	460d      	mov	r5, r1
 800dcb4:	b150      	cbz	r0, 800dccc <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0x20>
 800dcb6:	6b86      	ldr	r6, [r0, #56]	; 0x38
 800dcb8:	f7ff fb2c 	bl	800d314 <_ZNK8touchgfx20AbstractGraphElement8getScaleEv>
 800dcbc:	4629      	mov	r1, r5
 800dcbe:	4603      	mov	r3, r0
 800dcc0:	4632      	mov	r2, r6
 800dcc2:	4620      	mov	r0, r4
 800dcc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dcc8:	f7ff bbb5 	b.w	800d436 <_ZNK8touchgfx20AbstractGraphElement19convertToGraphScaleEPKNS_17AbstractDataGraphEii>
 800dccc:	bd70      	pop	{r4, r5, r6, pc}

0800dcce <_ZN8touchgfx15GraphLabelsBase17setIntervalScaledEi>:
 800dcce:	2900      	cmp	r1, #0
 800dcd0:	bfb8      	it	lt
 800dcd2:	4249      	neglt	r1, r1
 800dcd4:	6381      	str	r1, [r0, #56]	; 0x38
 800dcd6:	4770      	bx	lr

0800dcd8 <_ZN8touchgfx15GraphLabelsBase11setIntervalEi>:
 800dcd8:	2900      	cmp	r1, #0
 800dcda:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800dcdc:	bfb8      	it	lt
 800dcde:	4249      	neglt	r1, r1
 800dce0:	4359      	muls	r1, r3
 800dce2:	f7ff bff4 	b.w	800dcce <_ZN8touchgfx15GraphLabelsBase17setIntervalScaledEi>

0800dce6 <_ZNK8touchgfx15GraphLabelsBase16getIntervalAsIntEv>:
 800dce6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800dce8:	6b02      	ldr	r2, [r0, #48]	; 0x30
 800dcea:	2b00      	cmp	r3, #0
 800dcec:	db07      	blt.n	800dcfe <_ZNK8touchgfx15GraphLabelsBase16getIntervalAsIntEv+0x18>
 800dcee:	eb02 0043 	add.w	r0, r2, r3, lsl #1
 800dcf2:	2302      	movs	r3, #2
 800dcf4:	fb90 f0f2 	sdiv	r0, r0, r2
 800dcf8:	fb90 f0f3 	sdiv	r0, r0, r3
 800dcfc:	4770      	bx	lr
 800dcfe:	f06f 0001 	mvn.w	r0, #1
 800dd02:	fb00 2003 	mla	r0, r0, r3, r2
 800dd06:	2302      	movs	r3, #2
 800dd08:	3801      	subs	r0, #1
 800dd0a:	fb90 f0f2 	sdiv	r0, r0, r2
 800dd0e:	fb90 f0f3 	sdiv	r0, r0, r3
 800dd12:	4240      	negs	r0, r0
 800dd14:	4770      	bx	lr

0800dd16 <_ZN8touchgfx15GraphLabelsBase17setLabelTypedTextERKNS_9TypedTextE>:
 800dd16:	888b      	ldrh	r3, [r1, #4]
 800dd18:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800dd1c:	4770      	bx	lr
	...

0800dd20 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800dd20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dd24:	f1b3 0900 	subs.w	r9, r3, #0
 800dd28:	460d      	mov	r5, r1
 800dd2a:	4690      	mov	r8, r2
 800dd2c:	9f08      	ldr	r7, [sp, #32]
 800dd2e:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800dd32:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800dd34:	da18      	bge.n	800dd68 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800dd36:	2a01      	cmp	r2, #1
 800dd38:	dd16      	ble.n	800dd68 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800dd3a:	232d      	movs	r3, #45	; 0x2d
 800dd3c:	f1c9 0900 	rsb	r9, r9, #0
 800dd40:	2001      	movs	r0, #1
 800dd42:	800b      	strh	r3, [r1, #0]
 800dd44:	2f00      	cmp	r7, #0
 800dd46:	d111      	bne.n	800dd6c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800dd48:	2302      	movs	r3, #2
 800dd4a:	eba8 0100 	sub.w	r1, r8, r0
 800dd4e:	4a26      	ldr	r2, [pc, #152]	; (800dde8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800dd50:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800dd54:	b289      	uxth	r1, r1
 800dd56:	fb96 f3f3 	sdiv	r3, r6, r3
 800dd5a:	444b      	add	r3, r9
 800dd5c:	fb93 f3f6 	sdiv	r3, r3, r6
 800dd60:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dd64:	f005 bcb2 	b.w	80136cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800dd68:	2000      	movs	r0, #0
 800dd6a:	e7eb      	b.n	800dd44 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800dd6c:	dd39      	ble.n	800dde2 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800dd6e:	eba8 0100 	sub.w	r1, r8, r0
 800dd72:	4a1d      	ldr	r2, [pc, #116]	; (800dde8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800dd74:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800dd78:	f108 38ff 	add.w	r8, r8, #4294967295
 800dd7c:	b289      	uxth	r1, r1
 800dd7e:	fb99 f4f6 	sdiv	r4, r9, r6
 800dd82:	4623      	mov	r3, r4
 800dd84:	f005 fca2 	bl	80136cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800dd88:	4628      	mov	r0, r5
 800dd8a:	f005 f92d 	bl	8012fe8 <_ZN8touchgfx7Unicode6strlenEPKt>
 800dd8e:	4580      	cmp	r8, r0
 800dd90:	dd27      	ble.n	800dde2 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800dd92:	f04f 0e02 	mov.w	lr, #2
 800dd96:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800dd9a:	fb06 9314 	mls	r3, r6, r4, r9
 800dd9e:	3001      	adds	r0, #1
 800dda0:	2200      	movs	r2, #0
 800dda2:	f04f 090a 	mov.w	r9, #10
 800dda6:	f107 3aff 	add.w	sl, r7, #4294967295
 800ddaa:	fb96 fefe 	sdiv	lr, r6, lr
 800ddae:	4580      	cmp	r8, r0
 800ddb0:	4684      	mov	ip, r0
 800ddb2:	dd13      	ble.n	800dddc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800ddb4:	fb09 f303 	mul.w	r3, r9, r3
 800ddb8:	4592      	cmp	sl, r2
 800ddba:	f102 0201 	add.w	r2, r2, #1
 800ddbe:	f100 0c01 	add.w	ip, r0, #1
 800ddc2:	bf08      	it	eq
 800ddc4:	4473      	addeq	r3, lr
 800ddc6:	4297      	cmp	r7, r2
 800ddc8:	fb93 f4f6 	sdiv	r4, r3, r6
 800ddcc:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800ddd0:	fb06 3314 	mls	r3, r6, r4, r3
 800ddd4:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800ddd8:	4660      	mov	r0, ip
 800ddda:	d1e8      	bne.n	800ddae <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800dddc:	2300      	movs	r3, #0
 800ddde:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800dde2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dde6:	bf00      	nop
 800dde8:	080240f4 	.word	0x080240f4

0800ddec <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800ddec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ddf0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ddf4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800ddf8:	b095      	sub	sp, #84	; 0x54
 800ddfa:	4604      	mov	r4, r0
 800ddfc:	4293      	cmp	r3, r2
 800ddfe:	460f      	mov	r7, r1
 800de00:	d045      	beq.n	800de8e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa2>
 800de02:	4984      	ldr	r1, [pc, #528]	; (800e014 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x228>)
 800de04:	680a      	ldr	r2, [r1, #0]
 800de06:	4688      	mov	r8, r1
 800de08:	b92a      	cbnz	r2, 800de16 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x2a>
 800de0a:	4b83      	ldr	r3, [pc, #524]	; (800e018 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x22c>)
 800de0c:	21b1      	movs	r1, #177	; 0xb1
 800de0e:	4a83      	ldr	r2, [pc, #524]	; (800e01c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x230>)
 800de10:	4883      	ldr	r0, [pc, #524]	; (800e020 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x234>)
 800de12:	f012 ffad 	bl	8020d70 <__assert_func>
 800de16:	4983      	ldr	r1, [pc, #524]	; (800e024 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x238>)
 800de18:	880d      	ldrh	r5, [r1, #0]
 800de1a:	4689      	mov	r9, r1
 800de1c:	429d      	cmp	r5, r3
 800de1e:	d803      	bhi.n	800de28 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x3c>
 800de20:	4b81      	ldr	r3, [pc, #516]	; (800e028 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x23c>)
 800de22:	21b2      	movs	r1, #178	; 0xb2
 800de24:	4a7d      	ldr	r2, [pc, #500]	; (800e01c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x230>)
 800de26:	e7f3      	b.n	800de10 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x24>
 800de28:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800de2c:	4b7f      	ldr	r3, [pc, #508]	; (800e02c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x240>)
 800de2e:	681b      	ldr	r3, [r3, #0]
 800de30:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800de34:	b35e      	cbz	r6, 800de8e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa2>
 800de36:	f7ff fa6f 	bl	800d318 <_ZNK8touchgfx20AbstractGraphElement8getGraphEv>
 800de3a:	6823      	ldr	r3, [r4, #0]
 800de3c:	4605      	mov	r5, r0
 800de3e:	4620      	mov	r0, r4
 800de40:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800de42:	4798      	blx	r3
 800de44:	4682      	mov	sl, r0
 800de46:	4628      	mov	r0, r5
 800de48:	f7fe fe84 	bl	800cb54 <_ZNK8touchgfx17AbstractDataGraph8getAlphaEv>
 800de4c:	fb1a f000 	smulbb	r0, sl, r0
 800de50:	b280      	uxth	r0, r0
 800de52:	1c43      	adds	r3, r0, #1
 800de54:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800de58:	0a03      	lsrs	r3, r0, #8
 800de5a:	d018      	beq.n	800de8e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa2>
 800de5c:	4620      	mov	r0, r4
 800de5e:	f7ff ff42 	bl	800dce6 <_ZNK8touchgfx15GraphLabelsBase16getIntervalAsIntEv>
 800de62:	4601      	mov	r1, r0
 800de64:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800de66:	2800      	cmp	r0, #0
 800de68:	f000 80cd 	beq.w	800e006 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x21a>
 800de6c:	f7ff ff3b 	bl	800dce6 <_ZNK8touchgfx15GraphLabelsBase16getIntervalAsIntEv>
 800de70:	2900      	cmp	r1, #0
 800de72:	dd04      	ble.n	800de7e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x92>
 800de74:	fb97 f3f1 	sdiv	r3, r7, r1
 800de78:	434b      	muls	r3, r1
 800de7a:	429f      	cmp	r7, r3
 800de7c:	d00a      	beq.n	800de94 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800de7e:	2300      	movs	r3, #0
 800de80:	2800      	cmp	r0, #0
 800de82:	dd09      	ble.n	800de98 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xac>
 800de84:	fb97 f2f0 	sdiv	r2, r7, r0
 800de88:	4350      	muls	r0, r2
 800de8a:	4287      	cmp	r7, r0
 800de8c:	d107      	bne.n	800de9e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb2>
 800de8e:	b015      	add	sp, #84	; 0x54
 800de90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de94:	2301      	movs	r3, #1
 800de96:	e7f3      	b.n	800de80 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800de98:	d101      	bne.n	800de9e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb2>
 800de9a:	b901      	cbnz	r1, 800de9e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb2>
 800de9c:	b10f      	cbz	r7, 800dea2 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb6>
 800de9e:	2b00      	cmp	r3, #0
 800dea0:	d0f5      	beq.n	800de8e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa2>
 800dea2:	682b      	ldr	r3, [r5, #0]
 800dea4:	4639      	mov	r1, r7
 800dea6:	4628      	mov	r0, r5
 800dea8:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800deac:	4798      	blx	r3
 800deae:	4682      	mov	sl, r0
 800deb0:	4629      	mov	r1, r5
 800deb2:	4620      	mov	r0, r4
 800deb4:	f7ff fac4 	bl	800d440 <_ZNK8touchgfx20AbstractGraphElement24getGraphXAxisScaleScaledEPKNS_17AbstractDataGraphE>
 800deb8:	4629      	mov	r1, r5
 800deba:	fb00 fa0a 	mul.w	sl, r0, sl
 800debe:	4620      	mov	r0, r4
 800dec0:	f7ff fac3 	bl	800d44a <_ZNK8touchgfx20AbstractGraphElement25getGraphXAxisOffsetScaledEPKNS_17AbstractDataGraphE>
 800dec4:	f8b4 3048 	ldrh.w	r3, [r4, #72]	; 0x48
 800dec8:	4482      	add	sl, r0
 800deca:	4628      	mov	r0, r5
 800decc:	f8b4 b046 	ldrh.w	fp, [r4, #70]	; 0x46
 800ded0:	9305      	str	r3, [sp, #20]
 800ded2:	f7fe fc19 	bl	800c708 <_ZNK8touchgfx17AbstractDataGraph19getXAxisScaleScaledEv>
 800ded6:	9b05      	ldr	r3, [sp, #20]
 800ded8:	2214      	movs	r2, #20
 800deda:	9002      	str	r0, [sp, #8]
 800dedc:	a90a      	add	r1, sp, #40	; 0x28
 800dede:	4620      	mov	r0, r4
 800dee0:	e9cd b300 	strd	fp, r3, [sp]
 800dee4:	4653      	mov	r3, sl
 800dee6:	f8df b148 	ldr.w	fp, [pc, #328]	; 800e030 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x244>
 800deea:	f7ff ff19 	bl	800dd20 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800deee:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800def2:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800def6:	6833      	ldr	r3, [r6, #0]
 800def8:	d137      	bne.n	800df6a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x17e>
 800defa:	f8d3 a018 	ldr.w	sl, [r3, #24]
 800defe:	f8d8 3000 	ldr.w	r3, [r8]
 800df02:	2b00      	cmp	r3, #0
 800df04:	d081      	beq.n	800de0a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1e>
 800df06:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800df0a:	f8b9 3000 	ldrh.w	r3, [r9]
 800df0e:	428b      	cmp	r3, r1
 800df10:	d986      	bls.n	800de20 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x34>
 800df12:	f8db 0000 	ldr.w	r0, [fp]
 800df16:	f7f5 febf 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800df1a:	aa0a      	add	r2, sp, #40	; 0x28
 800df1c:	4601      	mov	r1, r0
 800df1e:	4630      	mov	r0, r6
 800df20:	47d0      	blx	sl
 800df22:	4606      	mov	r6, r0
 800df24:	4628      	mov	r0, r5
 800df26:	f7fe fe1b 	bl	800cb60 <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaMarginLeftEv>
 800df2a:	463a      	mov	r2, r7
 800df2c:	4629      	mov	r1, r5
 800df2e:	4680      	mov	r8, r0
 800df30:	4620      	mov	r0, r4
 800df32:	f7ff f9f4 	bl	800d31e <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>
 800df36:	ab14      	add	r3, sp, #80	; 0x50
 800df38:	f843 0d34 	str.w	r0, [r3, #-52]!
 800df3c:	4618      	mov	r0, r3
 800df3e:	f7fe fd53 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800df42:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800df46:	4440      	add	r0, r8
 800df48:	2200      	movs	r2, #0
 800df4a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800df4e:	a908      	add	r1, sp, #32
 800df50:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800df54:	6823      	ldr	r3, [r4, #0]
 800df56:	f8ad 2022 	strh.w	r2, [sp, #34]	; 0x22
 800df5a:	f8ad 0020 	strh.w	r0, [sp, #32]
 800df5e:	4620      	mov	r0, r4
 800df60:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800df64:	691b      	ldr	r3, [r3, #16]
 800df66:	4798      	blx	r3
 800df68:	e791      	b.n	800de8e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa2>
 800df6a:	f8d3 a028 	ldr.w	sl, [r3, #40]	; 0x28
 800df6e:	f8d8 3000 	ldr.w	r3, [r8]
 800df72:	2b00      	cmp	r3, #0
 800df74:	f43f af49 	beq.w	800de0a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1e>
 800df78:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800df7c:	f8b9 3000 	ldrh.w	r3, [r9]
 800df80:	428b      	cmp	r3, r1
 800df82:	f67f af4d 	bls.w	800de20 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x34>
 800df86:	f8db 0000 	ldr.w	r0, [fp]
 800df8a:	f7f5 fe85 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800df8e:	aa0a      	add	r2, sp, #40	; 0x28
 800df90:	4601      	mov	r1, r0
 800df92:	4630      	mov	r0, r6
 800df94:	47d0      	blx	sl
 800df96:	6833      	ldr	r3, [r6, #0]
 800df98:	f8d8 2000 	ldr.w	r2, [r8]
 800df9c:	4682      	mov	sl, r0
 800df9e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dfa0:	9305      	str	r3, [sp, #20]
 800dfa2:	2a00      	cmp	r2, #0
 800dfa4:	f43f af31 	beq.w	800de0a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1e>
 800dfa8:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800dfac:	f8b9 2000 	ldrh.w	r2, [r9]
 800dfb0:	428a      	cmp	r2, r1
 800dfb2:	f67f af35 	bls.w	800de20 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x34>
 800dfb6:	f8db 0000 	ldr.w	r0, [fp]
 800dfba:	f7f5 fe6d 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800dfbe:	aa0a      	add	r2, sp, #40	; 0x28
 800dfc0:	4601      	mov	r1, r0
 800dfc2:	9b05      	ldr	r3, [sp, #20]
 800dfc4:	4630      	mov	r0, r6
 800dfc6:	4798      	blx	r3
 800dfc8:	6833      	ldr	r3, [r6, #0]
 800dfca:	fb1a fa00 	smulbb	sl, sl, r0
 800dfce:	f8d8 2000 	ldr.w	r2, [r8]
 800dfd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dfd4:	fa1f fa8a 	uxth.w	sl, sl
 800dfd8:	9305      	str	r3, [sp, #20]
 800dfda:	2a00      	cmp	r2, #0
 800dfdc:	f43f af15 	beq.w	800de0a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1e>
 800dfe0:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800dfe4:	f8b9 2000 	ldrh.w	r2, [r9]
 800dfe8:	428a      	cmp	r2, r1
 800dfea:	f67f af19 	bls.w	800de20 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x34>
 800dfee:	f8db 0000 	ldr.w	r0, [fp]
 800dff2:	f7f5 fe51 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800dff6:	aa0a      	add	r2, sp, #40	; 0x28
 800dff8:	4601      	mov	r1, r0
 800dffa:	9b05      	ldr	r3, [sp, #20]
 800dffc:	4630      	mov	r0, r6
 800dffe:	4798      	blx	r3
 800e000:	4450      	add	r0, sl
 800e002:	b286      	uxth	r6, r0
 800e004:	e78e      	b.n	800df24 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x138>
 800e006:	2900      	cmp	r1, #0
 800e008:	f73f af34 	bgt.w	800de74 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x88>
 800e00c:	f47f af3f 	bne.w	800de8e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa2>
 800e010:	460b      	mov	r3, r1
 800e012:	e743      	b.n	800de9c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800e014:	20012600 	.word	0x20012600
 800e018:	08022ab9 	.word	0x08022ab9
 800e01c:	08024290 	.word	0x08024290
 800e020:	08022b19 	.word	0x08022b19
 800e024:	20012604 	.word	0x20012604
 800e028:	08022b42 	.word	0x08022b42
 800e02c:	20012608 	.word	0x20012608
 800e030:	2001260c 	.word	0x2001260c

0800e034 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih>:
 800e034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e038:	b09b      	sub	sp, #108	; 0x6c
 800e03a:	4617      	mov	r7, r2
 800e03c:	461e      	mov	r6, r3
 800e03e:	4604      	mov	r4, r0
 800e040:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 800e044:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800e046:	9104      	str	r1, [sp, #16]
 800e048:	4619      	mov	r1, r3
 800e04a:	f7ff f968 	bl	800d31e <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>
 800e04e:	f848 0d28 	str.w	r0, [r8, #-40]!
 800e052:	4640      	mov	r0, r8
 800e054:	f7fe fcc8 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e058:	4605      	mov	r5, r0
 800e05a:	4630      	mov	r0, r6
 800e05c:	f7fe fd91 	bl	800cb82 <_ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv>
 800e060:	1a2d      	subs	r5, r5, r0
 800e062:	b22d      	sxth	r5, r5
 800e064:	2d00      	cmp	r5, #0
 800e066:	f2c0 80d1 	blt.w	800e20c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x1d8>
 800e06a:	4630      	mov	r0, r6
 800e06c:	f7fe fd8c 	bl	800cb88 <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 800e070:	42a8      	cmp	r0, r5
 800e072:	f340 80cb 	ble.w	800e20c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x1d8>
 800e076:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800e078:	4630      	mov	r0, r6
 800e07a:	6833      	ldr	r3, [r6, #0]
 800e07c:	b211      	sxth	r1, r2
 800e07e:	f8df b238 	ldr.w	fp, [pc, #568]	; 800e2b8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x284>
 800e082:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800e086:	4798      	blx	r3
 800e088:	4605      	mov	r5, r0
 800e08a:	4631      	mov	r1, r6
 800e08c:	4620      	mov	r0, r4
 800e08e:	f7ff f9d7 	bl	800d440 <_ZNK8touchgfx20AbstractGraphElement24getGraphXAxisScaleScaledEPKNS_17AbstractDataGraphE>
 800e092:	4345      	muls	r5, r0
 800e094:	4631      	mov	r1, r6
 800e096:	4620      	mov	r0, r4
 800e098:	f7ff f9d7 	bl	800d44a <_ZNK8touchgfx20AbstractGraphElement25getGraphXAxisOffsetScaledEPKNS_17AbstractDataGraphE>
 800e09c:	f8b4 9046 	ldrh.w	r9, [r4, #70]	; 0x46
 800e0a0:	f8b4 a048 	ldrh.w	sl, [r4, #72]	; 0x48
 800e0a4:	4405      	add	r5, r0
 800e0a6:	4630      	mov	r0, r6
 800e0a8:	f7fe fb2e 	bl	800c708 <_ZNK8touchgfx17AbstractDataGraph19getXAxisScaleScaledEv>
 800e0ac:	f8cd 9000 	str.w	r9, [sp]
 800e0b0:	462b      	mov	r3, r5
 800e0b2:	2214      	movs	r2, #20
 800e0b4:	4641      	mov	r1, r8
 800e0b6:	f8df 9208 	ldr.w	r9, [pc, #520]	; 800e2c0 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x28c>
 800e0ba:	e9cd a001 	strd	sl, r0, [sp, #4]
 800e0be:	4620      	mov	r0, r4
 800e0c0:	f8df a1f8 	ldr.w	sl, [pc, #504]	; 800e2bc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x288>
 800e0c4:	f7ff fe2c 	bl	800dd20 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800e0c8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e0cc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e0d0:	683b      	ldr	r3, [r7, #0]
 800e0d2:	f040 809e 	bne.w	800e212 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x1de>
 800e0d6:	699d      	ldr	r5, [r3, #24]
 800e0d8:	f8db 3000 	ldr.w	r3, [fp]
 800e0dc:	b92b      	cbnz	r3, 800e0ea <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0xb6>
 800e0de:	4b72      	ldr	r3, [pc, #456]	; (800e2a8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x274>)
 800e0e0:	21b1      	movs	r1, #177	; 0xb1
 800e0e2:	4a72      	ldr	r2, [pc, #456]	; (800e2ac <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x278>)
 800e0e4:	4872      	ldr	r0, [pc, #456]	; (800e2b0 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x27c>)
 800e0e6:	f012 fe43 	bl	8020d70 <__assert_func>
 800e0ea:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800e0ee:	f8ba 3000 	ldrh.w	r3, [sl]
 800e0f2:	428b      	cmp	r3, r1
 800e0f4:	d803      	bhi.n	800e0fe <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0xca>
 800e0f6:	4b6f      	ldr	r3, [pc, #444]	; (800e2b4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x280>)
 800e0f8:	21b2      	movs	r1, #178	; 0xb2
 800e0fa:	4a6c      	ldr	r2, [pc, #432]	; (800e2ac <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x278>)
 800e0fc:	e7f2      	b.n	800e0e4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0xb0>
 800e0fe:	f8d9 0000 	ldr.w	r0, [r9]
 800e102:	f7f5 fdc9 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800e106:	4642      	mov	r2, r8
 800e108:	4601      	mov	r1, r0
 800e10a:	4638      	mov	r0, r7
 800e10c:	47a8      	blx	r5
 800e10e:	4605      	mov	r5, r0
 800e110:	4630      	mov	r0, r6
 800e112:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 800e116:	f7fe fd23 	bl	800cb60 <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaMarginLeftEv>
 800e11a:	4631      	mov	r1, r6
 800e11c:	4682      	mov	sl, r0
 800e11e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800e120:	4620      	mov	r0, r4
 800e122:	2600      	movs	r6, #0
 800e124:	f7ff f8fb 	bl	800d31e <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>
 800e128:	f848 0d3c 	str.w	r0, [r8, #-60]!
 800e12c:	4640      	mov	r0, r8
 800e12e:	f7fe fc5b 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e132:	4450      	add	r0, sl
 800e134:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e138:	f10d 0a24 	add.w	sl, sp, #36	; 0x24
 800e13c:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800e140:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e144:	ad07      	add	r5, sp, #28
 800e146:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800e14a:	f8ad 001c 	strh.w	r0, [sp, #28]
 800e14e:	f8ad 601e 	strh.w	r6, [sp, #30]
 800e152:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e156:	e88a 0003 	stmia.w	sl, {r0, r1}
 800e15a:	9904      	ldr	r1, [sp, #16]
 800e15c:	4650      	mov	r0, sl
 800e15e:	f7fd faaf 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 800e162:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 800e166:	42b3      	cmp	r3, r6
 800e168:	dd50      	ble.n	800e20c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x1d8>
 800e16a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 800e16e:	42b3      	cmp	r3, r6
 800e170:	dd4c      	ble.n	800e20c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x1d8>
 800e172:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800e176:	4629      	mov	r1, r5
 800e178:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800e17c:	4620      	mov	r0, r4
 800e17e:	1a9b      	subs	r3, r3, r2
 800e180:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800e184:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800e188:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800e18c:	1a9b      	subs	r3, r3, r2
 800e18e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800e192:	6823      	ldr	r3, [r4, #0]
 800e194:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e196:	4798      	blx	r3
 800e198:	4b47      	ldr	r3, [pc, #284]	; (800e2b8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x284>)
 800e19a:	681b      	ldr	r3, [r3, #0]
 800e19c:	2b00      	cmp	r3, #0
 800e19e:	d09e      	beq.n	800e0de <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0xaa>
 800e1a0:	4a46      	ldr	r2, [pc, #280]	; (800e2bc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0x288>)
 800e1a2:	f8b4 b040 	ldrh.w	fp, [r4, #64]	; 0x40
 800e1a6:	8812      	ldrh	r2, [r2, #0]
 800e1a8:	455a      	cmp	r2, fp
 800e1aa:	d9a4      	bls.n	800e0f6 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0xc2>
 800e1ac:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 800e1b0:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800e1b2:	f894 1044 	ldrb.w	r1, [r4, #68]	; 0x44
 800e1b6:	785b      	ldrb	r3, [r3, #1]
 800e1b8:	920d      	str	r2, [sp, #52]	; 0x34
 800e1ba:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800e1be:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 800e1c2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e1c6:	f88d 1032 	strb.w	r1, [sp, #50]	; 0x32
 800e1ca:	f88d 203a 	strb.w	r2, [sp, #58]	; 0x3a
 800e1ce:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 800e1d2:	970b      	str	r7, [sp, #44]	; 0x2c
 800e1d4:	f88d 0030 	strb.w	r0, [sp, #48]	; 0x30
 800e1d8:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
 800e1dc:	f88d 603b 	strb.w	r6, [sp, #59]	; 0x3b
 800e1e0:	f88d 603c 	strb.w	r6, [sp, #60]	; 0x3c
 800e1e4:	f7fd fd1e 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800e1e8:	4659      	mov	r1, fp
 800e1ea:	4604      	mov	r4, r0
 800e1ec:	f8d9 0000 	ldr.w	r0, [r9]
 800e1f0:	f7f5 fd52 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800e1f4:	ab10      	add	r3, sp, #64	; 0x40
 800e1f6:	9603      	str	r6, [sp, #12]
 800e1f8:	f8cd 8000 	str.w	r8, [sp]
 800e1fc:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800e200:	4653      	mov	r3, sl
 800e202:	4620      	mov	r0, r4
 800e204:	e895 0006 	ldmia.w	r5, {r1, r2}
 800e208:	f7f5 fcfa 	bl	8003c00 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e20c:	b01b      	add	sp, #108	; 0x6c
 800e20e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e212:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800e214:	f8db 3000 	ldr.w	r3, [fp]
 800e218:	2b00      	cmp	r3, #0
 800e21a:	f43f af60 	beq.w	800e0de <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0xaa>
 800e21e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800e222:	f8ba 3000 	ldrh.w	r3, [sl]
 800e226:	428b      	cmp	r3, r1
 800e228:	f67f af65 	bls.w	800e0f6 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0xc2>
 800e22c:	f8d9 0000 	ldr.w	r0, [r9]
 800e230:	f7f5 fd32 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800e234:	4642      	mov	r2, r8
 800e236:	4601      	mov	r1, r0
 800e238:	4638      	mov	r0, r7
 800e23a:	47a8      	blx	r5
 800e23c:	683a      	ldr	r2, [r7, #0]
 800e23e:	9005      	str	r0, [sp, #20]
 800e240:	6c15      	ldr	r5, [r2, #64]	; 0x40
 800e242:	f8db 2000 	ldr.w	r2, [fp]
 800e246:	2a00      	cmp	r2, #0
 800e248:	f43f af49 	beq.w	800e0de <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0xaa>
 800e24c:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800e250:	f8ba 2000 	ldrh.w	r2, [sl]
 800e254:	428a      	cmp	r2, r1
 800e256:	f67f af4e 	bls.w	800e0f6 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0xc2>
 800e25a:	f8d9 0000 	ldr.w	r0, [r9]
 800e25e:	f7f5 fd1b 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800e262:	4642      	mov	r2, r8
 800e264:	4601      	mov	r1, r0
 800e266:	4638      	mov	r0, r7
 800e268:	47a8      	blx	r5
 800e26a:	9b05      	ldr	r3, [sp, #20]
 800e26c:	f8db 2000 	ldr.w	r2, [fp]
 800e270:	fb13 f000 	smulbb	r0, r3, r0
 800e274:	683b      	ldr	r3, [r7, #0]
 800e276:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e278:	b285      	uxth	r5, r0
 800e27a:	9305      	str	r3, [sp, #20]
 800e27c:	2a00      	cmp	r2, #0
 800e27e:	f43f af2e 	beq.w	800e0de <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0xaa>
 800e282:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800e286:	f8ba 2000 	ldrh.w	r2, [sl]
 800e28a:	428a      	cmp	r2, r1
 800e28c:	f67f af33 	bls.w	800e0f6 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0xc2>
 800e290:	f8d9 0000 	ldr.w	r0, [r9]
 800e294:	f7f5 fd00 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800e298:	4642      	mov	r2, r8
 800e29a:	4601      	mov	r1, r0
 800e29c:	9b05      	ldr	r3, [sp, #20]
 800e29e:	4638      	mov	r0, r7
 800e2a0:	4798      	blx	r3
 800e2a2:	4405      	add	r5, r0
 800e2a4:	b2ad      	uxth	r5, r5
 800e2a6:	e733      	b.n	800e110 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih+0xdc>
 800e2a8:	08022ab9 	.word	0x08022ab9
 800e2ac:	08024290 	.word	0x08024290
 800e2b0:	08022b19 	.word	0x08022b19
 800e2b4:	08022b42 	.word	0x08022b42
 800e2b8:	20012600 	.word	0x20012600
 800e2bc:	20012604 	.word	0x20012604
 800e2c0:	2001260c 	.word	0x2001260c

0800e2c4 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800e2c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2c8:	b089      	sub	sp, #36	; 0x24
 800e2ca:	4682      	mov	sl, r0
 800e2cc:	e9dd 5612 	ldrd	r5, r6, [sp, #72]	; 0x48
 800e2d0:	9306      	str	r3, [sp, #24]
 800e2d2:	42b5      	cmp	r5, r6
 800e2d4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800e2d8:	9307      	str	r3, [sp, #28]
 800e2da:	bfc2      	ittt	gt
 800e2dc:	462b      	movgt	r3, r5
 800e2de:	4635      	movgt	r5, r6
 800e2e0:	461e      	movgt	r6, r3
 800e2e2:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800e2e6:	f7ff fcfe 	bl	800dce6 <_ZNK8touchgfx15GraphLabelsBase16getIntervalAsIntEv>
 800e2ea:	f1b0 0800 	subs.w	r8, r0, #0
 800e2ee:	dd0a      	ble.n	800e306 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x42>
 800e2f0:	1b73      	subs	r3, r6, r5
 800e2f2:	2b00      	cmp	r3, #0
 800e2f4:	bfb8      	it	lt
 800e2f6:	425b      	neglt	r3, r3
 800e2f8:	fb93 f3f8 	sdiv	r3, r3, r8
 800e2fc:	2b64      	cmp	r3, #100	; 0x64
 800e2fe:	dd16      	ble.n	800e32e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x6a>
 800e300:	b009      	add	sp, #36	; 0x24
 800e302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e306:	d112      	bne.n	800e32e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x6a>
 800e308:	2d00      	cmp	r5, #0
 800e30a:	dc64      	bgt.n	800e3d6 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x112>
 800e30c:	2e00      	cmp	r6, #0
 800e30e:	da01      	bge.n	800e314 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x50>
 800e310:	2d00      	cmp	r5, #0
 800e312:	d1f5      	bne.n	800e300 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x3c>
 800e314:	9b07      	ldr	r3, [sp, #28]
 800e316:	4650      	mov	r0, sl
 800e318:	9904      	ldr	r1, [sp, #16]
 800e31a:	9313      	str	r3, [sp, #76]	; 0x4c
 800e31c:	2300      	movs	r3, #0
 800e31e:	9312      	str	r3, [sp, #72]	; 0x48
 800e320:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800e324:	b009      	add	sp, #36	; 0x24
 800e326:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e32a:	f7ff be83 	b.w	800e034 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih>
 800e32e:	f8da 004c 	ldr.w	r0, [sl, #76]	; 0x4c
 800e332:	b108      	cbz	r0, 800e338 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x74>
 800e334:	f7ff fcd7 	bl	800dce6 <_ZNK8touchgfx15GraphLabelsBase16getIntervalAsIntEv>
 800e338:	4607      	mov	r7, r0
 800e33a:	fb95 f9f8 	sdiv	r9, r5, r8
 800e33e:	f109 39ff 	add.w	r9, r9, #4294967295
 800e342:	fb09 f408 	mul.w	r4, r9, r8
 800e346:	b9b8      	cbnz	r0, 800e378 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xb4>
 800e348:	fb96 f7f8 	sdiv	r7, r6, r8
 800e34c:	3702      	adds	r7, #2
 800e34e:	454f      	cmp	r7, r9
 800e350:	d0d6      	beq.n	800e300 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x3c>
 800e352:	42a5      	cmp	r5, r4
 800e354:	dc42      	bgt.n	800e3dc <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x118>
 800e356:	42a6      	cmp	r6, r4
 800e358:	da01      	bge.n	800e35e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x9a>
 800e35a:	42a5      	cmp	r5, r4
 800e35c:	db08      	blt.n	800e370 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xac>
 800e35e:	9b07      	ldr	r3, [sp, #28]
 800e360:	4650      	mov	r0, sl
 800e362:	9904      	ldr	r1, [sp, #16]
 800e364:	e9cd 4300 	strd	r4, r3, [sp]
 800e368:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800e36c:	f7ff fe62 	bl	800e034 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih>
 800e370:	f109 0901 	add.w	r9, r9, #1
 800e374:	4444      	add	r4, r8
 800e376:	e7ea      	b.n	800e34e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x8a>
 800e378:	fb95 f9f0 	sdiv	r9, r5, r0
 800e37c:	fb96 fbf0 	sdiv	fp, r6, r0
 800e380:	f109 39ff 	add.w	r9, r9, #4294967295
 800e384:	f10b 0b02 	add.w	fp, fp, #2
 800e388:	fb09 f300 	mul.w	r3, r9, r0
 800e38c:	9303      	str	r3, [sp, #12]
 800e38e:	9b03      	ldr	r3, [sp, #12]
 800e390:	42a3      	cmp	r3, r4
 800e392:	dd13      	ble.n	800e3bc <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xf8>
 800e394:	42a5      	cmp	r5, r4
 800e396:	dc05      	bgt.n	800e3a4 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xe0>
 800e398:	42a6      	cmp	r6, r4
 800e39a:	da05      	bge.n	800e3a8 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xe4>
 800e39c:	42a5      	cmp	r5, r4
 800e39e:	da03      	bge.n	800e3a8 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xe4>
 800e3a0:	4444      	add	r4, r8
 800e3a2:	e7f4      	b.n	800e38e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xca>
 800e3a4:	42a6      	cmp	r6, r4
 800e3a6:	dcfb      	bgt.n	800e3a0 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xdc>
 800e3a8:	9b07      	ldr	r3, [sp, #28]
 800e3aa:	4650      	mov	r0, sl
 800e3ac:	9904      	ldr	r1, [sp, #16]
 800e3ae:	e9cd 4300 	strd	r4, r3, [sp]
 800e3b2:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800e3b6:	f7ff fe3d 	bl	800e034 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih>
 800e3ba:	e7f1      	b.n	800e3a0 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xdc>
 800e3bc:	9b03      	ldr	r3, [sp, #12]
 800e3be:	42a3      	cmp	r3, r4
 800e3c0:	db01      	blt.n	800e3c6 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x102>
 800e3c2:	4444      	add	r4, r8
 800e3c4:	e7fa      	b.n	800e3bc <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xf8>
 800e3c6:	f109 0901 	add.w	r9, r9, #1
 800e3ca:	45cb      	cmp	fp, r9
 800e3cc:	d098      	beq.n	800e300 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x3c>
 800e3ce:	9b03      	ldr	r3, [sp, #12]
 800e3d0:	443b      	add	r3, r7
 800e3d2:	9303      	str	r3, [sp, #12]
 800e3d4:	e7db      	b.n	800e38e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xca>
 800e3d6:	2e00      	cmp	r6, #0
 800e3d8:	dc92      	bgt.n	800e300 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x3c>
 800e3da:	e79b      	b.n	800e314 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x50>
 800e3dc:	42a6      	cmp	r6, r4
 800e3de:	dcc7      	bgt.n	800e370 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xac>
 800e3e0:	e7bd      	b.n	800e35e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x9a>
	...

0800e3e4 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE>:
 800e3e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e3e8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e3ec:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800e3f0:	b085      	sub	sp, #20
 800e3f2:	4680      	mov	r8, r0
 800e3f4:	4293      	cmp	r3, r2
 800e3f6:	468a      	mov	sl, r1
 800e3f8:	d042      	beq.n	800e480 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x9c>
 800e3fa:	4a40      	ldr	r2, [pc, #256]	; (800e4fc <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x118>)
 800e3fc:	6812      	ldr	r2, [r2, #0]
 800e3fe:	b92a      	cbnz	r2, 800e40c <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x28>
 800e400:	4b3f      	ldr	r3, [pc, #252]	; (800e500 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x11c>)
 800e402:	21b1      	movs	r1, #177	; 0xb1
 800e404:	4a3f      	ldr	r2, [pc, #252]	; (800e504 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x120>)
 800e406:	4840      	ldr	r0, [pc, #256]	; (800e508 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x124>)
 800e408:	f012 fcb2 	bl	8020d70 <__assert_func>
 800e40c:	493f      	ldr	r1, [pc, #252]	; (800e50c <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x128>)
 800e40e:	8809      	ldrh	r1, [r1, #0]
 800e410:	4299      	cmp	r1, r3
 800e412:	d803      	bhi.n	800e41c <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x38>
 800e414:	4b3e      	ldr	r3, [pc, #248]	; (800e510 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x12c>)
 800e416:	21b2      	movs	r1, #178	; 0xb2
 800e418:	4a3a      	ldr	r2, [pc, #232]	; (800e504 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x120>)
 800e41a:	e7f4      	b.n	800e406 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x22>
 800e41c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e420:	4b3c      	ldr	r3, [pc, #240]	; (800e514 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x130>)
 800e422:	681b      	ldr	r3, [r3, #0]
 800e424:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
 800e428:	f1b9 0f00 	cmp.w	r9, #0
 800e42c:	d028      	beq.n	800e480 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x9c>
 800e42e:	f7fe ff73 	bl	800d318 <_ZNK8touchgfx20AbstractGraphElement8getGraphEv>
 800e432:	f8d8 3000 	ldr.w	r3, [r8]
 800e436:	4607      	mov	r7, r0
 800e438:	4640      	mov	r0, r8
 800e43a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800e43c:	4798      	blx	r3
 800e43e:	4604      	mov	r4, r0
 800e440:	4638      	mov	r0, r7
 800e442:	f7fe fb87 	bl	800cb54 <_ZNK8touchgfx17AbstractDataGraph8getAlphaEv>
 800e446:	fb14 f000 	smulbb	r0, r4, r0
 800e44a:	b280      	uxth	r0, r0
 800e44c:	1c44      	adds	r4, r0, #1
 800e44e:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 800e452:	1224      	asrs	r4, r4, #8
 800e454:	d014      	beq.n	800e480 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x9c>
 800e456:	4640      	mov	r0, r8
 800e458:	b2e4      	uxtb	r4, r4
 800e45a:	f7ff fc44 	bl	800dce6 <_ZNK8touchgfx15GraphLabelsBase16getIntervalAsIntEv>
 800e45e:	4601      	mov	r1, r0
 800e460:	f8d8 004c 	ldr.w	r0, [r8, #76]	; 0x4c
 800e464:	b1f8      	cbz	r0, 800e4a6 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0xc2>
 800e466:	f7ff fc3e 	bl	800dce6 <_ZNK8touchgfx15GraphLabelsBase16getIntervalAsIntEv>
 800e46a:	b9f1      	cbnz	r1, 800e4aa <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0xc6>
 800e46c:	b940      	cbnz	r0, 800e480 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x9c>
 800e46e:	2300      	movs	r3, #0
 800e470:	9401      	str	r4, [sp, #4]
 800e472:	464a      	mov	r2, r9
 800e474:	4651      	mov	r1, sl
 800e476:	9300      	str	r3, [sp, #0]
 800e478:	4640      	mov	r0, r8
 800e47a:	463b      	mov	r3, r7
 800e47c:	f7ff fdda 	bl	800e034 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEih>
 800e480:	b005      	add	sp, #20
 800e482:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e486:	f10b 33ff 	add.w	r3, fp, #4294967295
 800e48a:	9402      	str	r4, [sp, #8]
 800e48c:	464a      	mov	r2, r9
 800e48e:	4651      	mov	r1, sl
 800e490:	4640      	mov	r0, r8
 800e492:	e9cd 6300 	strd	r6, r3, [sp]
 800e496:	463b      	mov	r3, r7
 800e498:	f7ff ff14 	bl	800e2c4 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>
 800e49c:	f8cd b000 	str.w	fp, [sp]
 800e4a0:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800e4a4:	e022      	b.n	800e4ec <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x108>
 800e4a6:	2900      	cmp	r1, #0
 800e4a8:	d0e1      	beq.n	800e46e <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x8a>
 800e4aa:	2900      	cmp	r1, #0
 800e4ac:	dde8      	ble.n	800e480 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x9c>
 800e4ae:	683b      	ldr	r3, [r7, #0]
 800e4b0:	4638      	mov	r0, r7
 800e4b2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800e4b6:	4798      	blx	r3
 800e4b8:	683b      	ldr	r3, [r7, #0]
 800e4ba:	4606      	mov	r6, r0
 800e4bc:	4638      	mov	r0, r7
 800e4be:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800e4c2:	4798      	blx	r3
 800e4c4:	4286      	cmp	r6, r0
 800e4c6:	4605      	mov	r5, r0
 800e4c8:	bfc4      	itt	gt
 800e4ca:	4633      	movgt	r3, r6
 800e4cc:	4606      	movgt	r6, r0
 800e4ce:	4638      	mov	r0, r7
 800e4d0:	bfc8      	it	gt
 800e4d2:	461d      	movgt	r5, r3
 800e4d4:	f7fe fc01 	bl	800ccda <_ZNK8touchgfx17AbstractDataGraph17getGapBeforeIndexEv>
 800e4d8:	f1b0 0b00 	subs.w	fp, r0, #0
 800e4dc:	dd03      	ble.n	800e4e6 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x102>
 800e4de:	45b3      	cmp	fp, r6
 800e4e0:	dd01      	ble.n	800e4e6 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x102>
 800e4e2:	45ab      	cmp	fp, r5
 800e4e4:	ddcf      	ble.n	800e486 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0xa2>
 800e4e6:	9600      	str	r6, [sp, #0]
 800e4e8:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800e4ec:	463b      	mov	r3, r7
 800e4ee:	464a      	mov	r2, r9
 800e4f0:	4651      	mov	r1, sl
 800e4f2:	4640      	mov	r0, r8
 800e4f4:	f7ff fee6 	bl	800e2c4 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>
 800e4f8:	e7c2      	b.n	800e480 <_ZNK8touchgfx12GraphLabelsX4drawERKNS_4RectE+0x9c>
 800e4fa:	bf00      	nop
 800e4fc:	20012600 	.word	0x20012600
 800e500:	08022ab9 	.word	0x08022ab9
 800e504:	08024290 	.word	0x08024290
 800e508:	08022b19 	.word	0x08022b19
 800e50c:	20012604 	.word	0x20012604
 800e510:	08022b42 	.word	0x08022b42
 800e514:	20012608 	.word	0x20012608

0800e518 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800e518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e51c:	b09b      	sub	sp, #108	; 0x6c
 800e51e:	4616      	mov	r6, r2
 800e520:	4699      	mov	r9, r3
 800e522:	4604      	mov	r4, r0
 800e524:	af1a      	add	r7, sp, #104	; 0x68
 800e526:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800e528:	9104      	str	r1, [sp, #16]
 800e52a:	4619      	mov	r1, r3
 800e52c:	f7fe fefd 	bl	800d32a <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi>
 800e530:	f847 0d28 	str.w	r0, [r7, #-40]!
 800e534:	4638      	mov	r0, r7
 800e536:	f7fe fa57 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e53a:	4605      	mov	r5, r0
 800e53c:	4648      	mov	r0, r9
 800e53e:	f7fe fb1d 	bl	800cb7c <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>
 800e542:	1a2d      	subs	r5, r5, r0
 800e544:	b22d      	sxth	r5, r5
 800e546:	2d00      	cmp	r5, #0
 800e548:	f2c0 80ee 	blt.w	800e728 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x210>
 800e54c:	4648      	mov	r0, r9
 800e54e:	f7fe fba3 	bl	800cc98 <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>
 800e552:	42a8      	cmp	r0, r5
 800e554:	f340 80e8 	ble.w	800e728 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x210>
 800e558:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e55a:	2214      	movs	r2, #20
 800e55c:	4639      	mov	r1, r7
 800e55e:	4620      	mov	r0, r4
 800e560:	9302      	str	r3, [sp, #8]
 800e562:	f8b4 3048 	ldrh.w	r3, [r4, #72]	; 0x48
 800e566:	f8df b204 	ldr.w	fp, [pc, #516]	; 800e76c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x254>
 800e56a:	9301      	str	r3, [sp, #4]
 800e56c:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 800e570:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 800e770 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x258>
 800e574:	9300      	str	r3, [sp, #0]
 800e576:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800e578:	f7ff fbd2 	bl	800dd20 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800e57c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e580:	f8df 81f0 	ldr.w	r8, [pc, #496]	; 800e774 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x25c>
 800e584:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e588:	6833      	ldr	r3, [r6, #0]
 800e58a:	f040 80d0 	bne.w	800e72e <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x216>
 800e58e:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800e590:	f8db 3000 	ldr.w	r3, [fp]
 800e594:	b92b      	cbnz	r3, 800e5a2 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x8a>
 800e596:	4b71      	ldr	r3, [pc, #452]	; (800e75c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x244>)
 800e598:	21b1      	movs	r1, #177	; 0xb1
 800e59a:	4a71      	ldr	r2, [pc, #452]	; (800e760 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x248>)
 800e59c:	4871      	ldr	r0, [pc, #452]	; (800e764 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x24c>)
 800e59e:	f012 fbe7 	bl	8020d70 <__assert_func>
 800e5a2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800e5a6:	f8ba 3000 	ldrh.w	r3, [sl]
 800e5aa:	428b      	cmp	r3, r1
 800e5ac:	d803      	bhi.n	800e5b6 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x9e>
 800e5ae:	4b6e      	ldr	r3, [pc, #440]	; (800e768 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x250>)
 800e5b0:	21b2      	movs	r1, #178	; 0xb2
 800e5b2:	4a6b      	ldr	r2, [pc, #428]	; (800e760 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x248>)
 800e5b4:	e7f2      	b.n	800e59c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x84>
 800e5b6:	f8d8 0000 	ldr.w	r0, [r8]
 800e5ba:	f7f5 fb6d 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800e5be:	463a      	mov	r2, r7
 800e5c0:	4601      	mov	r1, r0
 800e5c2:	4630      	mov	r0, r6
 800e5c4:	47a8      	blx	r5
 800e5c6:	6832      	ldr	r2, [r6, #0]
 800e5c8:	9005      	str	r0, [sp, #20]
 800e5ca:	6c15      	ldr	r5, [r2, #64]	; 0x40
 800e5cc:	f8db 2000 	ldr.w	r2, [fp]
 800e5d0:	2a00      	cmp	r2, #0
 800e5d2:	d0e0      	beq.n	800e596 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x7e>
 800e5d4:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800e5d8:	f8ba 2000 	ldrh.w	r2, [sl]
 800e5dc:	428a      	cmp	r2, r1
 800e5de:	d9e6      	bls.n	800e5ae <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x96>
 800e5e0:	f8d8 0000 	ldr.w	r0, [r8]
 800e5e4:	f7f5 fb58 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800e5e8:	463a      	mov	r2, r7
 800e5ea:	4601      	mov	r1, r0
 800e5ec:	4630      	mov	r0, r6
 800e5ee:	47a8      	blx	r5
 800e5f0:	9b05      	ldr	r3, [sp, #20]
 800e5f2:	f8db 2000 	ldr.w	r2, [fp]
 800e5f6:	fb13 f000 	smulbb	r0, r3, r0
 800e5fa:	6833      	ldr	r3, [r6, #0]
 800e5fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e5fe:	b285      	uxth	r5, r0
 800e600:	9305      	str	r3, [sp, #20]
 800e602:	2a00      	cmp	r2, #0
 800e604:	d0c7      	beq.n	800e596 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x7e>
 800e606:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800e60a:	f8ba 2000 	ldrh.w	r2, [sl]
 800e60e:	428a      	cmp	r2, r1
 800e610:	d9cd      	bls.n	800e5ae <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x96>
 800e612:	f8d8 0000 	ldr.w	r0, [r8]
 800e616:	f7f5 fb3f 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800e61a:	463a      	mov	r2, r7
 800e61c:	4601      	mov	r1, r0
 800e61e:	9b05      	ldr	r3, [sp, #20]
 800e620:	4630      	mov	r0, r6
 800e622:	4798      	blx	r3
 800e624:	4405      	add	r5, r0
 800e626:	b2ad      	uxth	r5, r5
 800e628:	4648      	mov	r0, r9
 800e62a:	2700      	movs	r7, #0
 800e62c:	f7fe fa95 	bl	800cb5a <_ZNK8touchgfx17AbstractDataGraph21getGraphAreaMarginTopEv>
 800e630:	4649      	mov	r1, r9
 800e632:	f10d 0968 	add.w	r9, sp, #104	; 0x68
 800e636:	4682      	mov	sl, r0
 800e638:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800e63a:	4620      	mov	r0, r4
 800e63c:	f7fe fe75 	bl	800d32a <_ZNK8touchgfx20AbstractGraphElement16valueToScreenYQ5EPKNS_17AbstractDataGraphEi>
 800e640:	f849 0d3c 	str.w	r0, [r9, #-60]!
 800e644:	4648      	mov	r0, r9
 800e646:	f7fe f9cf 	bl	800c9e8 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e64a:	4450      	add	r0, sl
 800e64c:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800e650:	f10d 0a24 	add.w	sl, sp, #36	; 0x24
 800e654:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800e658:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 800e65c:	ad07      	add	r5, sp, #28
 800e65e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800e662:	f8ad 701c 	strh.w	r7, [sp, #28]
 800e666:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e66a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e66e:	e88a 0003 	stmia.w	sl, {r0, r1}
 800e672:	9904      	ldr	r1, [sp, #16]
 800e674:	4650      	mov	r0, sl
 800e676:	f7fd f823 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 800e67a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 800e67e:	42bb      	cmp	r3, r7
 800e680:	dd52      	ble.n	800e728 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x210>
 800e682:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 800e686:	42bb      	cmp	r3, r7
 800e688:	dd4e      	ble.n	800e728 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x210>
 800e68a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800e68e:	4629      	mov	r1, r5
 800e690:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 800e694:	4620      	mov	r0, r4
 800e696:	1a9b      	subs	r3, r3, r2
 800e698:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800e69c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800e6a0:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800e6a4:	1a9b      	subs	r3, r3, r2
 800e6a6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800e6aa:	6823      	ldr	r3, [r4, #0]
 800e6ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e6ae:	4798      	blx	r3
 800e6b0:	4b2e      	ldr	r3, [pc, #184]	; (800e76c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x254>)
 800e6b2:	681b      	ldr	r3, [r3, #0]
 800e6b4:	2b00      	cmp	r3, #0
 800e6b6:	f43f af6e 	beq.w	800e596 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x7e>
 800e6ba:	4a2d      	ldr	r2, [pc, #180]	; (800e770 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x258>)
 800e6bc:	f8b4 b040 	ldrh.w	fp, [r4, #64]	; 0x40
 800e6c0:	8812      	ldrh	r2, [r2, #0]
 800e6c2:	455a      	cmp	r2, fp
 800e6c4:	f67f af73 	bls.w	800e5ae <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x96>
 800e6c8:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 800e6cc:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800e6ce:	f894 1044 	ldrb.w	r1, [r4, #68]	; 0x44
 800e6d2:	785b      	ldrb	r3, [r3, #1]
 800e6d4:	920d      	str	r2, [sp, #52]	; 0x34
 800e6d6:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800e6da:	f89d 2098 	ldrb.w	r2, [sp, #152]	; 0x98
 800e6de:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e6e2:	f88d 1032 	strb.w	r1, [sp, #50]	; 0x32
 800e6e6:	f88d 203a 	strb.w	r2, [sp, #58]	; 0x3a
 800e6ea:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 800e6ee:	960b      	str	r6, [sp, #44]	; 0x2c
 800e6f0:	f88d 0030 	strb.w	r0, [sp, #48]	; 0x30
 800e6f4:	f8ad 7038 	strh.w	r7, [sp, #56]	; 0x38
 800e6f8:	f88d 703b 	strb.w	r7, [sp, #59]	; 0x3b
 800e6fc:	f88d 703c 	strb.w	r7, [sp, #60]	; 0x3c
 800e700:	f7fd fa90 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800e704:	4659      	mov	r1, fp
 800e706:	4604      	mov	r4, r0
 800e708:	f8d8 0000 	ldr.w	r0, [r8]
 800e70c:	f7f5 fac4 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800e710:	ab10      	add	r3, sp, #64	; 0x40
 800e712:	9703      	str	r7, [sp, #12]
 800e714:	f8cd 9000 	str.w	r9, [sp]
 800e718:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800e71c:	4653      	mov	r3, sl
 800e71e:	4620      	mov	r0, r4
 800e720:	e895 0006 	ldmia.w	r5, {r1, r2}
 800e724:	f7f5 fa6c 	bl	8003c00 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e728:	b01b      	add	sp, #108	; 0x6c
 800e72a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e72e:	699d      	ldr	r5, [r3, #24]
 800e730:	f8db 3000 	ldr.w	r3, [fp]
 800e734:	2b00      	cmp	r3, #0
 800e736:	f43f af2e 	beq.w	800e596 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x7e>
 800e73a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800e73e:	f8ba 3000 	ldrh.w	r3, [sl]
 800e742:	428b      	cmp	r3, r1
 800e744:	f67f af33 	bls.w	800e5ae <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x96>
 800e748:	f8d8 0000 	ldr.w	r0, [r8]
 800e74c:	f7f5 faa4 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800e750:	463a      	mov	r2, r7
 800e752:	4601      	mov	r1, r0
 800e754:	4630      	mov	r0, r6
 800e756:	47a8      	blx	r5
 800e758:	4605      	mov	r5, r0
 800e75a:	e765      	b.n	800e628 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x110>
 800e75c:	08022ab9 	.word	0x08022ab9
 800e760:	08024290 	.word	0x08024290
 800e764:	08022b19 	.word	0x08022b19
 800e768:	08022b42 	.word	0x08022b42
 800e76c:	20012600 	.word	0x20012600
 800e770:	20012604 	.word	0x20012604
 800e774:	2001260c 	.word	0x2001260c

0800e778 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE>:
 800e778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e77c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e780:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800e784:	b089      	sub	sp, #36	; 0x24
 800e786:	4605      	mov	r5, r0
 800e788:	4293      	cmp	r3, r2
 800e78a:	9106      	str	r1, [sp, #24]
 800e78c:	d048      	beq.n	800e820 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0xa8>
 800e78e:	4a54      	ldr	r2, [pc, #336]	; (800e8e0 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x168>)
 800e790:	6812      	ldr	r2, [r2, #0]
 800e792:	b92a      	cbnz	r2, 800e7a0 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x28>
 800e794:	4b53      	ldr	r3, [pc, #332]	; (800e8e4 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x16c>)
 800e796:	21b1      	movs	r1, #177	; 0xb1
 800e798:	4a53      	ldr	r2, [pc, #332]	; (800e8e8 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x170>)
 800e79a:	4854      	ldr	r0, [pc, #336]	; (800e8ec <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x174>)
 800e79c:	f012 fae8 	bl	8020d70 <__assert_func>
 800e7a0:	4953      	ldr	r1, [pc, #332]	; (800e8f0 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x178>)
 800e7a2:	8809      	ldrh	r1, [r1, #0]
 800e7a4:	4299      	cmp	r1, r3
 800e7a6:	d803      	bhi.n	800e7b0 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x38>
 800e7a8:	4b52      	ldr	r3, [pc, #328]	; (800e8f4 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x17c>)
 800e7aa:	21b2      	movs	r1, #178	; 0xb2
 800e7ac:	4a4e      	ldr	r2, [pc, #312]	; (800e8e8 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x170>)
 800e7ae:	e7f4      	b.n	800e79a <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x22>
 800e7b0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e7b4:	4b50      	ldr	r3, [pc, #320]	; (800e8f8 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x180>)
 800e7b6:	681b      	ldr	r3, [r3, #0]
 800e7b8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e7bc:	9304      	str	r3, [sp, #16]
 800e7be:	b37b      	cbz	r3, 800e820 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0xa8>
 800e7c0:	f7fe fdaa 	bl	800d318 <_ZNK8touchgfx20AbstractGraphElement8getGraphEv>
 800e7c4:	682b      	ldr	r3, [r5, #0]
 800e7c6:	4681      	mov	r9, r0
 800e7c8:	4628      	mov	r0, r5
 800e7ca:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800e7cc:	4798      	blx	r3
 800e7ce:	4604      	mov	r4, r0
 800e7d0:	4648      	mov	r0, r9
 800e7d2:	f7fe f9bf 	bl	800cb54 <_ZNK8touchgfx17AbstractDataGraph8getAlphaEv>
 800e7d6:	fb14 f000 	smulbb	r0, r4, r0
 800e7da:	b283      	uxth	r3, r0
 800e7dc:	1c58      	adds	r0, r3, #1
 800e7de:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800e7e2:	1200      	asrs	r0, r0, #8
 800e7e4:	d01c      	beq.n	800e820 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0xa8>
 800e7e6:	b2c3      	uxtb	r3, r0
 800e7e8:	6baa      	ldr	r2, [r5, #56]	; 0x38
 800e7ea:	4649      	mov	r1, r9
 800e7ec:	4628      	mov	r0, r5
 800e7ee:	9305      	str	r3, [sp, #20]
 800e7f0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800e7f2:	f7fe fe20 	bl	800d436 <_ZNK8touchgfx20AbstractGraphElement19convertToGraphScaleEPKNS_17AbstractDataGraphEii>
 800e7f6:	4649      	mov	r1, r9
 800e7f8:	4680      	mov	r8, r0
 800e7fa:	4628      	mov	r0, r5
 800e7fc:	f7ff fa56 	bl	800dcac <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>
 800e800:	4682      	mov	sl, r0
 800e802:	b980      	cbnz	r0, 800e826 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0xae>
 800e804:	f1b8 0f00 	cmp.w	r8, #0
 800e808:	d10d      	bne.n	800e826 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0xae>
 800e80a:	9b05      	ldr	r3, [sp, #20]
 800e80c:	4628      	mov	r0, r5
 800e80e:	f8cd 8000 	str.w	r8, [sp]
 800e812:	9a04      	ldr	r2, [sp, #16]
 800e814:	9906      	ldr	r1, [sp, #24]
 800e816:	e9cd 8301 	strd	r8, r3, [sp, #4]
 800e81a:	464b      	mov	r3, r9
 800e81c:	f7ff fe7c 	bl	800e518 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>
 800e820:	b009      	add	sp, #36	; 0x24
 800e822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e826:	f1b8 0f00 	cmp.w	r8, #0
 800e82a:	ddf9      	ble.n	800e820 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0xa8>
 800e82c:	4649      	mov	r1, r9
 800e82e:	4628      	mov	r0, r5
 800e830:	f7fe fe10 	bl	800d454 <_ZNK8touchgfx20AbstractGraphElement23getGraphRangeYMinScaledEPKNS_17AbstractDataGraphE>
 800e834:	4606      	mov	r6, r0
 800e836:	4649      	mov	r1, r9
 800e838:	4628      	mov	r0, r5
 800e83a:	f7fe fe10 	bl	800d45e <_ZNK8touchgfx20AbstractGraphElement23getGraphRangeYMaxScaledEPKNS_17AbstractDataGraphE>
 800e83e:	1b83      	subs	r3, r0, r6
 800e840:	2b00      	cmp	r3, #0
 800e842:	bfb8      	it	lt
 800e844:	425b      	neglt	r3, r3
 800e846:	fb93 f3f8 	sdiv	r3, r3, r8
 800e84a:	2b64      	cmp	r3, #100	; 0x64
 800e84c:	dce8      	bgt.n	800e820 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0xa8>
 800e84e:	4286      	cmp	r6, r0
 800e850:	bfc4      	itt	gt
 800e852:	4633      	movgt	r3, r6
 800e854:	4606      	movgt	r6, r0
 800e856:	fb96 f7f8 	sdiv	r7, r6, r8
 800e85a:	f107 37ff 	add.w	r7, r7, #4294967295
 800e85e:	bfc8      	it	gt
 800e860:	4618      	movgt	r0, r3
 800e862:	fb07 f408 	mul.w	r4, r7, r8
 800e866:	f1ba 0f00 	cmp.w	sl, #0
 800e86a:	d113      	bne.n	800e894 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x11c>
 800e86c:	fb90 f0f8 	sdiv	r0, r0, r8
 800e870:	1c86      	adds	r6, r0, #2
 800e872:	42be      	cmp	r6, r7
 800e874:	d0d4      	beq.n	800e820 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0xa8>
 800e876:	9b05      	ldr	r3, [sp, #20]
 800e878:	4628      	mov	r0, r5
 800e87a:	9a04      	ldr	r2, [sp, #16]
 800e87c:	9302      	str	r3, [sp, #8]
 800e87e:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e880:	9906      	ldr	r1, [sp, #24]
 800e882:	437b      	muls	r3, r7
 800e884:	3701      	adds	r7, #1
 800e886:	e9cd 4300 	strd	r4, r3, [sp]
 800e88a:	464b      	mov	r3, r9
 800e88c:	4444      	add	r4, r8
 800e88e:	f7ff fe43 	bl	800e518 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>
 800e892:	e7ee      	b.n	800e872 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0xfa>
 800e894:	fb96 f6fa 	sdiv	r6, r6, sl
 800e898:	fb90 f0fa 	sdiv	r0, r0, sl
 800e89c:	3e01      	subs	r6, #1
 800e89e:	1c83      	adds	r3, r0, #2
 800e8a0:	fb06 fb0a 	mul.w	fp, r6, sl
 800e8a4:	9307      	str	r3, [sp, #28]
 800e8a6:	45a3      	cmp	fp, r4
 800e8a8:	dd0e      	ble.n	800e8c8 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x150>
 800e8aa:	9b05      	ldr	r3, [sp, #20]
 800e8ac:	4628      	mov	r0, r5
 800e8ae:	9a04      	ldr	r2, [sp, #16]
 800e8b0:	9302      	str	r3, [sp, #8]
 800e8b2:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e8b4:	9906      	ldr	r1, [sp, #24]
 800e8b6:	437b      	muls	r3, r7
 800e8b8:	3701      	adds	r7, #1
 800e8ba:	e9cd 4300 	strd	r4, r3, [sp]
 800e8be:	464b      	mov	r3, r9
 800e8c0:	4444      	add	r4, r8
 800e8c2:	f7ff fe29 	bl	800e518 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>
 800e8c6:	e7ee      	b.n	800e8a6 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x12e>
 800e8c8:	45a3      	cmp	fp, r4
 800e8ca:	db02      	blt.n	800e8d2 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x15a>
 800e8cc:	3701      	adds	r7, #1
 800e8ce:	4444      	add	r4, r8
 800e8d0:	e7fa      	b.n	800e8c8 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x150>
 800e8d2:	3601      	adds	r6, #1
 800e8d4:	9b07      	ldr	r3, [sp, #28]
 800e8d6:	42b3      	cmp	r3, r6
 800e8d8:	d0a2      	beq.n	800e820 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0xa8>
 800e8da:	44d3      	add	fp, sl
 800e8dc:	e7e3      	b.n	800e8a6 <_ZNK8touchgfx12GraphLabelsY4drawERKNS_4RectE+0x12e>
 800e8de:	bf00      	nop
 800e8e0:	20012600 	.word	0x20012600
 800e8e4:	08022ab9 	.word	0x08022ab9
 800e8e8:	08024290 	.word	0x08024290
 800e8ec:	08022b19 	.word	0x08022b19
 800e8f0:	20012604 	.word	0x20012604
 800e8f4:	08022b42 	.word	0x08022b42
 800e8f8:	20012608 	.word	0x20012608

0800e8fc <_ZNK8touchgfx21DataGraphWrapAndClear18indexToGlobalIndexEs>:
 800e8fc:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800e900:	f9b0 011a 	ldrsh.w	r0, [r0, #282]	; 0x11a
 800e904:	4419      	add	r1, r3
 800e906:	1a08      	subs	r0, r1, r0
 800e908:	4770      	bx	lr

0800e90a <_ZN8touchgfx21DataGraphWrapAndClearD1Ev>:
 800e90a:	4770      	bx	lr

0800e90c <_ZN8touchgfx21DataGraphWrapAndClear8addValueEi>:
 800e90c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e90e:	f9b0 511a 	ldrsh.w	r5, [r0, #282]	; 0x11a
 800e912:	460f      	mov	r7, r1
 800e914:	f8d0 6128 	ldr.w	r6, [r0, #296]	; 0x128
 800e918:	4604      	mov	r4, r0
 800e91a:	1c6b      	adds	r3, r5, #1
 800e91c:	4629      	mov	r1, r5
 800e91e:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800e922:	6803      	ldr	r3, [r0, #0]
 800e924:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800e928:	4798      	blx	r3
 800e92a:	f846 7020 	str.w	r7, [r6, r0, lsl #2]
 800e92e:	b915      	cbnz	r5, 800e936 <_ZN8touchgfx21DataGraphWrapAndClear8addValueEi+0x2a>
 800e930:	4620      	mov	r0, r4
 800e932:	f7fe fabe 	bl	800ceb2 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800e936:	4620      	mov	r0, r4
 800e938:	4629      	mov	r1, r5
 800e93a:	f7fe fa8f 	bl	800ce5c <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800e93e:	4628      	mov	r0, r5
 800e940:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e942 <_ZN8touchgfx21DataGraphWrapAndClearD0Ev>:
 800e942:	b510      	push	{r4, lr}
 800e944:	4604      	mov	r4, r0
 800e946:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800e94a:	f010 fe85 	bl	801f658 <_ZdlPvj>
 800e94e:	4620      	mov	r0, r4
 800e950:	bd10      	pop	{r4, pc}

0800e952 <_ZN8touchgfx21DataGraphWrapAndClear14beforeAddValueEv>:
 800e952:	b510      	push	{r4, lr}
 800e954:	f9b0 211a 	ldrsh.w	r2, [r0, #282]	; 0x11a
 800e958:	4604      	mov	r4, r0
 800e95a:	f9b0 3118 	ldrsh.w	r3, [r0, #280]	; 0x118
 800e95e:	429a      	cmp	r2, r3
 800e960:	db0b      	blt.n	800e97a <_ZN8touchgfx21DataGraphWrapAndClear14beforeAddValueEv+0x28>
 800e962:	f7fe faa6 	bl	800ceb2 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800e966:	6823      	ldr	r3, [r4, #0]
 800e968:	4620      	mov	r0, r4
 800e96a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800e96e:	4798      	blx	r3
 800e970:	4620      	mov	r0, r4
 800e972:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e976:	f7fe ba81 	b.w	800ce7c <_ZN8touchgfx17AbstractDataGraph19invalidateGraphAreaEv>
 800e97a:	bd10      	pop	{r4, pc}

0800e97c <_ZN8touchgfx21DataGraphWrapAndClearC1EsPi>:
 800e97c:	b510      	push	{r4, lr}
 800e97e:	4604      	mov	r4, r0
 800e980:	f7fe fbf0 	bl	800d164 <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi>
 800e984:	4b01      	ldr	r3, [pc, #4]	; (800e98c <_ZN8touchgfx21DataGraphWrapAndClearC1EsPi+0x10>)
 800e986:	4620      	mov	r0, r4
 800e988:	6023      	str	r3, [r4, #0]
 800e98a:	bd10      	pop	{r4, pc}
 800e98c:	080242c8 	.word	0x080242c8

0800e990 <_ZN8touchgfx8TextAreaD1Ev>:
 800e990:	4770      	bx	lr
	...

0800e994 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800e994:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e996:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e99a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e99c:	4299      	cmp	r1, r3
 800e99e:	d029      	beq.n	800e9f4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800e9a0:	4b15      	ldr	r3, [pc, #84]	; (800e9f8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800e9a2:	681b      	ldr	r3, [r3, #0]
 800e9a4:	b92b      	cbnz	r3, 800e9b2 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800e9a6:	4b15      	ldr	r3, [pc, #84]	; (800e9fc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800e9a8:	21b1      	movs	r1, #177	; 0xb1
 800e9aa:	4a15      	ldr	r2, [pc, #84]	; (800ea00 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800e9ac:	4815      	ldr	r0, [pc, #84]	; (800ea04 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800e9ae:	f012 f9df 	bl	8020d70 <__assert_func>
 800e9b2:	4a15      	ldr	r2, [pc, #84]	; (800ea08 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800e9b4:	8812      	ldrh	r2, [r2, #0]
 800e9b6:	428a      	cmp	r2, r1
 800e9b8:	d803      	bhi.n	800e9c2 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800e9ba:	4b14      	ldr	r3, [pc, #80]	; (800ea0c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800e9bc:	21b2      	movs	r1, #178	; 0xb2
 800e9be:	4a10      	ldr	r2, [pc, #64]	; (800ea00 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800e9c0:	e7f4      	b.n	800e9ac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800e9c2:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800e9c6:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800e9ca:	4b11      	ldr	r3, [pc, #68]	; (800ea10 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800e9cc:	7854      	ldrb	r4, [r2, #1]
 800e9ce:	681b      	ldr	r3, [r3, #0]
 800e9d0:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800e9d4:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800e9d8:	682b      	ldr	r3, [r5, #0]
 800e9da:	69de      	ldr	r6, [r3, #28]
 800e9dc:	4b0d      	ldr	r3, [pc, #52]	; (800ea14 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800e9de:	6818      	ldr	r0, [r3, #0]
 800e9e0:	f7f5 f95a 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800e9e4:	2300      	movs	r3, #0
 800e9e6:	4602      	mov	r2, r0
 800e9e8:	4621      	mov	r1, r4
 800e9ea:	9300      	str	r3, [sp, #0]
 800e9ec:	4628      	mov	r0, r5
 800e9ee:	47b0      	blx	r6
 800e9f0:	b002      	add	sp, #8
 800e9f2:	bd70      	pop	{r4, r5, r6, pc}
 800e9f4:	2000      	movs	r0, #0
 800e9f6:	e7fb      	b.n	800e9f0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800e9f8:	20012600 	.word	0x20012600
 800e9fc:	08022ab9 	.word	0x08022ab9
 800ea00:	0802445c 	.word	0x0802445c
 800ea04:	08022b19 	.word	0x08022b19
 800ea08:	20012604 	.word	0x20012604
 800ea0c:	08022b42 	.word	0x08022b42
 800ea10:	20012608 	.word	0x20012608
 800ea14:	2001260c 	.word	0x2001260c

0800ea18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800ea18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ea1c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ea20:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ea22:	b08c      	sub	sp, #48	; 0x30
 800ea24:	4604      	mov	r4, r0
 800ea26:	4293      	cmp	r3, r2
 800ea28:	4688      	mov	r8, r1
 800ea2a:	d05f      	beq.n	800eaec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800ea2c:	4e31      	ldr	r6, [pc, #196]	; (800eaf4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800ea2e:	6832      	ldr	r2, [r6, #0]
 800ea30:	b92a      	cbnz	r2, 800ea3e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800ea32:	4b31      	ldr	r3, [pc, #196]	; (800eaf8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800ea34:	21b1      	movs	r1, #177	; 0xb1
 800ea36:	4a31      	ldr	r2, [pc, #196]	; (800eafc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800ea38:	4831      	ldr	r0, [pc, #196]	; (800eb00 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800ea3a:	f012 f999 	bl	8020d70 <__assert_func>
 800ea3e:	4d31      	ldr	r5, [pc, #196]	; (800eb04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800ea40:	8829      	ldrh	r1, [r5, #0]
 800ea42:	4299      	cmp	r1, r3
 800ea44:	d803      	bhi.n	800ea4e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800ea46:	4b30      	ldr	r3, [pc, #192]	; (800eb08 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800ea48:	21b2      	movs	r1, #178	; 0xb2
 800ea4a:	4a2c      	ldr	r2, [pc, #176]	; (800eafc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800ea4c:	e7f4      	b.n	800ea38 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800ea4e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800ea52:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ea56:	4b2d      	ldr	r3, [pc, #180]	; (800eb0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800ea58:	681b      	ldr	r3, [r3, #0]
 800ea5a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800ea5e:	2a00      	cmp	r2, #0
 800ea60:	d044      	beq.n	800eaec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800ea62:	784b      	ldrb	r3, [r1, #1]
 800ea64:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800ea68:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800ea6c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ea70:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800ea74:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800ea78:	4b25      	ldr	r3, [pc, #148]	; (800eb10 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800ea7a:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800ea7e:	681b      	ldr	r3, [r3, #0]
 800ea80:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800ea84:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800ea88:	9207      	str	r2, [sp, #28]
 800ea8a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ea8c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ea90:	9009      	str	r0, [sp, #36]	; 0x24
 800ea92:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800ea96:	f88d 9020 	strb.w	r9, [sp, #32]
 800ea9a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800ea9e:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800eaa2:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800eaa6:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800eaaa:	b10a      	cbz	r2, 800eab0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800eaac:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800eaae:	b907      	cbnz	r7, 800eab2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800eab0:	689f      	ldr	r7, [r3, #8]
 800eab2:	f10d 0914 	add.w	r9, sp, #20
 800eab6:	4621      	mov	r1, r4
 800eab8:	4648      	mov	r0, r9
 800eaba:	f002 fe37 	bl	801172c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eabe:	6833      	ldr	r3, [r6, #0]
 800eac0:	2b00      	cmp	r3, #0
 800eac2:	d0b6      	beq.n	800ea32 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800eac4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800eac6:	882b      	ldrh	r3, [r5, #0]
 800eac8:	428b      	cmp	r3, r1
 800eaca:	d9bc      	bls.n	800ea46 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800eacc:	4b11      	ldr	r3, [pc, #68]	; (800eb14 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800eace:	6818      	ldr	r0, [r3, #0]
 800ead0:	f7f5 f8e2 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800ead4:	2300      	movs	r3, #0
 800ead6:	9001      	str	r0, [sp, #4]
 800ead8:	4638      	mov	r0, r7
 800eada:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800eade:	ab07      	add	r3, sp, #28
 800eae0:	9300      	str	r3, [sp, #0]
 800eae2:	4643      	mov	r3, r8
 800eae4:	e899 0006 	ldmia.w	r9, {r1, r2}
 800eae8:	f7f5 f88a 	bl	8003c00 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800eaec:	b00c      	add	sp, #48	; 0x30
 800eaee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eaf2:	bf00      	nop
 800eaf4:	20012600 	.word	0x20012600
 800eaf8:	08022ab9 	.word	0x08022ab9
 800eafc:	0802445c 	.word	0x0802445c
 800eb00:	08022b19 	.word	0x08022b19
 800eb04:	20012604 	.word	0x20012604
 800eb08:	08022b42 	.word	0x08022b42
 800eb0c:	20012608 	.word	0x20012608
 800eb10:	200125b0 	.word	0x200125b0
 800eb14:	2001260c 	.word	0x2001260c

0800eb18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800eb18:	b40e      	push	{r1, r2, r3}
 800eb1a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800eb1e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eb22:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800eb24:	b09b      	sub	sp, #108	; 0x6c
 800eb26:	4604      	mov	r4, r0
 800eb28:	4293      	cmp	r3, r2
 800eb2a:	d061      	beq.n	800ebf0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800eb2c:	aa24      	add	r2, sp, #144	; 0x90
 800eb2e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800ec04 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800eb32:	9203      	str	r2, [sp, #12]
 800eb34:	f8da 2000 	ldr.w	r2, [sl]
 800eb38:	b92a      	cbnz	r2, 800eb46 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800eb3a:	4b2e      	ldr	r3, [pc, #184]	; (800ebf4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 800eb3c:	21b1      	movs	r1, #177	; 0xb1
 800eb3e:	4a2e      	ldr	r2, [pc, #184]	; (800ebf8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800eb40:	482e      	ldr	r0, [pc, #184]	; (800ebfc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 800eb42:	f012 f915 	bl	8020d70 <__assert_func>
 800eb46:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800ec08 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 800eb4a:	f8b8 1000 	ldrh.w	r1, [r8]
 800eb4e:	4299      	cmp	r1, r3
 800eb50:	d803      	bhi.n	800eb5a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800eb52:	4b2b      	ldr	r3, [pc, #172]	; (800ec00 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800eb54:	21b2      	movs	r1, #178	; 0xb2
 800eb56:	4a28      	ldr	r2, [pc, #160]	; (800ebf8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800eb58:	e7f2      	b.n	800eb40 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800eb5a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800ec0c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 800eb5e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800eb62:	f8d9 3000 	ldr.w	r3, [r9]
 800eb66:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800eb6a:	683b      	ldr	r3, [r7, #0]
 800eb6c:	4638      	mov	r0, r7
 800eb6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800eb70:	4798      	blx	r3
 800eb72:	4606      	mov	r6, r0
 800eb74:	b205      	sxth	r5, r0
 800eb76:	a804      	add	r0, sp, #16
 800eb78:	f003 fa9d 	bl	80120b6 <_ZN8touchgfx12TextProviderC1Ev>
 800eb7c:	683b      	ldr	r3, [r7, #0]
 800eb7e:	4638      	mov	r0, r7
 800eb80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eb82:	4798      	blx	r3
 800eb84:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800eb86:	4603      	mov	r3, r0
 800eb88:	9a03      	ldr	r2, [sp, #12]
 800eb8a:	a804      	add	r0, sp, #16
 800eb8c:	f003 fad8 	bl	8012140 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800eb90:	f8da 3000 	ldr.w	r3, [sl]
 800eb94:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800eb98:	2b00      	cmp	r3, #0
 800eb9a:	d0ce      	beq.n	800eb3a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800eb9c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800eb9e:	f8b8 0000 	ldrh.w	r0, [r8]
 800eba2:	4290      	cmp	r0, r2
 800eba4:	d9d5      	bls.n	800eb52 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800eba6:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 800ebaa:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800ebae:	f8d9 3000 	ldr.w	r3, [r9]
 800ebb2:	787a      	ldrb	r2, [r7, #1]
 800ebb4:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 800ebb8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ebbc:	9700      	str	r7, [sp, #0]
 800ebbe:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800ebc2:	a804      	add	r0, sp, #16
 800ebc4:	f001 f957 	bl	800fe76 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800ebc8:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800ebcc:	b203      	sxth	r3, r0
 800ebce:	18a9      	adds	r1, r5, r2
 800ebd0:	2900      	cmp	r1, #0
 800ebd2:	dd0b      	ble.n	800ebec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800ebd4:	3b01      	subs	r3, #1
 800ebd6:	fb13 f302 	smulbb	r3, r3, r2
 800ebda:	fb16 3300 	smlabb	r3, r6, r0, r3
 800ebde:	b21d      	sxth	r5, r3
 800ebe0:	4628      	mov	r0, r5
 800ebe2:	b01b      	add	sp, #108	; 0x6c
 800ebe4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ebe8:	b003      	add	sp, #12
 800ebea:	4770      	bx	lr
 800ebec:	2b00      	cmp	r3, #0
 800ebee:	dcf7      	bgt.n	800ebe0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800ebf0:	2500      	movs	r5, #0
 800ebf2:	e7f5      	b.n	800ebe0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800ebf4:	08022ab9 	.word	0x08022ab9
 800ebf8:	0802445c 	.word	0x0802445c
 800ebfc:	08022b19 	.word	0x08022b19
 800ec00:	08022b42 	.word	0x08022b42
 800ec04:	20012600 	.word	0x20012600
 800ec08:	20012604 	.word	0x20012604
 800ec0c:	20012608 	.word	0x20012608

0800ec10 <_ZN8touchgfx8TextAreaD0Ev>:
 800ec10:	b510      	push	{r4, lr}
 800ec12:	4604      	mov	r4, r0
 800ec14:	213c      	movs	r1, #60	; 0x3c
 800ec16:	f010 fd1f 	bl	801f658 <_ZdlPvj>
 800ec1a:	4620      	mov	r0, r4
 800ec1c:	bd10      	pop	{r4, pc}
	...

0800ec20 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800ec20:	b570      	push	{r4, r5, r6, lr}
 800ec22:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ec26:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ec28:	4604      	mov	r4, r0
 800ec2a:	4299      	cmp	r1, r3
 800ec2c:	d01e      	beq.n	800ec6c <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800ec2e:	6803      	ldr	r3, [r0, #0]
 800ec30:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800ec32:	4b0f      	ldr	r3, [pc, #60]	; (800ec70 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800ec34:	681b      	ldr	r3, [r3, #0]
 800ec36:	b92b      	cbnz	r3, 800ec44 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800ec38:	4b0e      	ldr	r3, [pc, #56]	; (800ec74 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800ec3a:	21b1      	movs	r1, #177	; 0xb1
 800ec3c:	4a0e      	ldr	r2, [pc, #56]	; (800ec78 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800ec3e:	480f      	ldr	r0, [pc, #60]	; (800ec7c <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800ec40:	f012 f896 	bl	8020d70 <__assert_func>
 800ec44:	4b0e      	ldr	r3, [pc, #56]	; (800ec80 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800ec46:	881b      	ldrh	r3, [r3, #0]
 800ec48:	428b      	cmp	r3, r1
 800ec4a:	d803      	bhi.n	800ec54 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800ec4c:	4b0d      	ldr	r3, [pc, #52]	; (800ec84 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800ec4e:	21b2      	movs	r1, #178	; 0xb2
 800ec50:	4a09      	ldr	r2, [pc, #36]	; (800ec78 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800ec52:	e7f4      	b.n	800ec3e <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800ec54:	4b0c      	ldr	r3, [pc, #48]	; (800ec88 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800ec56:	6818      	ldr	r0, [r3, #0]
 800ec58:	f7f5 f81e 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800ec5c:	2300      	movs	r3, #0
 800ec5e:	4601      	mov	r1, r0
 800ec60:	46ac      	mov	ip, r5
 800ec62:	4620      	mov	r0, r4
 800ec64:	461a      	mov	r2, r3
 800ec66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ec6a:	4760      	bx	ip
 800ec6c:	2000      	movs	r0, #0
 800ec6e:	bd70      	pop	{r4, r5, r6, pc}
 800ec70:	20012600 	.word	0x20012600
 800ec74:	08022ab9 	.word	0x08022ab9
 800ec78:	0802445c 	.word	0x0802445c
 800ec7c:	08022b19 	.word	0x08022b19
 800ec80:	20012604 	.word	0x20012604
 800ec84:	08022b42 	.word	0x08022b42
 800ec88:	2001260c 	.word	0x2001260c

0800ec8c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800ec8c:	b570      	push	{r4, r5, r6, lr}
 800ec8e:	6803      	ldr	r3, [r0, #0]
 800ec90:	4604      	mov	r4, r0
 800ec92:	4615      	mov	r5, r2
 800ec94:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ec96:	4798      	blx	r3
 800ec98:	6823      	ldr	r3, [r4, #0]
 800ec9a:	4629      	mov	r1, r5
 800ec9c:	4620      	mov	r0, r4
 800ec9e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800eca0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eca4:	4718      	bx	r3

0800eca6 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800eca6:	b538      	push	{r3, r4, r5, lr}
 800eca8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ecac:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800ecae:	4604      	mov	r4, r0
 800ecb0:	429a      	cmp	r2, r3
 800ecb2:	d014      	beq.n	800ecde <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800ecb4:	6803      	ldr	r3, [r0, #0]
 800ecb6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800ecb8:	4798      	blx	r3
 800ecba:	6823      	ldr	r3, [r4, #0]
 800ecbc:	4605      	mov	r5, r0
 800ecbe:	4620      	mov	r0, r4
 800ecc0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ecc2:	4798      	blx	r3
 800ecc4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ecc8:	b22d      	sxth	r5, r5
 800ecca:	4601      	mov	r1, r0
 800eccc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800ecd0:	bf06      	itte	eq
 800ecd2:	4602      	moveq	r2, r0
 800ecd4:	4629      	moveq	r1, r5
 800ecd6:	462a      	movne	r2, r5
 800ecd8:	4620      	mov	r0, r4
 800ecda:	f7ff ffd7 	bl	800ec8c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ecde:	bd38      	pop	{r3, r4, r5, pc}

0800ece0 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800ece0:	888a      	ldrh	r2, [r1, #4]
 800ece2:	8582      	strh	r2, [r0, #44]	; 0x2c
 800ece4:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800ece8:	b922      	cbnz	r2, 800ecf4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800ecea:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ecee:	b90b      	cbnz	r3, 800ecf4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800ecf0:	f7ff bfd9 	b.w	800eca6 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800ecf4:	4770      	bx	lr

0800ecf6 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800ecf6:	2300      	movs	r3, #0
 800ecf8:	8083      	strh	r3, [r0, #4]
 800ecfa:	80c3      	strh	r3, [r0, #6]
 800ecfc:	8003      	strh	r3, [r0, #0]
 800ecfe:	8043      	strh	r3, [r0, #2]
 800ed00:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800ed04:	2bff      	cmp	r3, #255	; 0xff
 800ed06:	bf01      	itttt	eq
 800ed08:	890b      	ldrheq	r3, [r1, #8]
 800ed0a:	8083      	strheq	r3, [r0, #4]
 800ed0c:	894b      	ldrheq	r3, [r1, #10]
 800ed0e:	80c3      	strheq	r3, [r0, #6]
 800ed10:	4770      	bx	lr
	...

0800ed14 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800ed14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ed16:	4604      	mov	r4, r0
 800ed18:	466b      	mov	r3, sp
 800ed1a:	6808      	ldr	r0, [r1, #0]
 800ed1c:	6849      	ldr	r1, [r1, #4]
 800ed1e:	c303      	stmia	r3!, {r0, r1}
 800ed20:	6823      	ldr	r3, [r4, #0]
 800ed22:	4669      	mov	r1, sp
 800ed24:	4620      	mov	r0, r4
 800ed26:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ed28:	4798      	blx	r3
 800ed2a:	4b08      	ldr	r3, [pc, #32]	; (800ed4c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800ed2c:	681b      	ldr	r3, [r3, #0]
 800ed2e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ed32:	b10a      	cbz	r2, 800ed38 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800ed34:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ed36:	b900      	cbnz	r0, 800ed3a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800ed38:	6898      	ldr	r0, [r3, #8]
 800ed3a:	6803      	ldr	r3, [r0, #0]
 800ed3c:	4669      	mov	r1, sp
 800ed3e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800ed40:	699d      	ldr	r5, [r3, #24]
 800ed42:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800ed46:	47a8      	blx	r5
 800ed48:	b003      	add	sp, #12
 800ed4a:	bd30      	pop	{r4, r5, pc}
 800ed4c:	200125b0 	.word	0x200125b0

0800ed50 <_ZN8touchgfx3BoxD1Ev>:
 800ed50:	4770      	bx	lr

0800ed52 <_ZN8touchgfx3BoxD0Ev>:
 800ed52:	b510      	push	{r4, lr}
 800ed54:	4604      	mov	r4, r0
 800ed56:	212c      	movs	r1, #44	; 0x2c
 800ed58:	f010 fc7e 	bl	801f658 <_ZdlPvj>
 800ed5c:	4620      	mov	r0, r4
 800ed5e:	bd10      	pop	{r4, pc}

0800ed60 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800ed60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ed64:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ed68:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ed6a:	b08c      	sub	sp, #48	; 0x30
 800ed6c:	4604      	mov	r4, r0
 800ed6e:	4293      	cmp	r3, r2
 800ed70:	460e      	mov	r6, r1
 800ed72:	d05d      	beq.n	800ee30 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800ed74:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 800ee54 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 800ed78:	f8d8 2000 	ldr.w	r2, [r8]
 800ed7c:	b92a      	cbnz	r2, 800ed8a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 800ed7e:	4b2e      	ldr	r3, [pc, #184]	; (800ee38 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 800ed80:	21b1      	movs	r1, #177	; 0xb1
 800ed82:	4a2e      	ldr	r2, [pc, #184]	; (800ee3c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800ed84:	482e      	ldr	r0, [pc, #184]	; (800ee40 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 800ed86:	f011 fff3 	bl	8020d70 <__assert_func>
 800ed8a:	4f2e      	ldr	r7, [pc, #184]	; (800ee44 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 800ed8c:	8839      	ldrh	r1, [r7, #0]
 800ed8e:	4299      	cmp	r1, r3
 800ed90:	d803      	bhi.n	800ed9a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 800ed92:	4b2d      	ldr	r3, [pc, #180]	; (800ee48 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 800ed94:	21b2      	movs	r1, #178	; 0xb2
 800ed96:	4a29      	ldr	r2, [pc, #164]	; (800ee3c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800ed98:	e7f4      	b.n	800ed84 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 800ed9a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800ed9e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800eda2:	4b2a      	ldr	r3, [pc, #168]	; (800ee4c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 800eda4:	681b      	ldr	r3, [r3, #0]
 800eda6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800edaa:	2a00      	cmp	r2, #0
 800edac:	d040      	beq.n	800ee30 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800edae:	784b      	ldrb	r3, [r1, #1]
 800edb0:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 800edb4:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800edb8:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800edbc:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800edc0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800edc4:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800edc8:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800edcc:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800edd0:	ad05      	add	r5, sp, #20
 800edd2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800edd4:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800edd8:	9207      	str	r2, [sp, #28]
 800edda:	f88d 9020 	strb.w	r9, [sp, #32]
 800edde:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800ede2:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800ede6:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800edea:	9009      	str	r0, [sp, #36]	; 0x24
 800edec:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800edf0:	f7fc ff18 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800edf4:	4621      	mov	r1, r4
 800edf6:	4681      	mov	r9, r0
 800edf8:	4628      	mov	r0, r5
 800edfa:	f002 fc97 	bl	801172c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800edfe:	f8d8 3000 	ldr.w	r3, [r8]
 800ee02:	2b00      	cmp	r3, #0
 800ee04:	d0bb      	beq.n	800ed7e <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 800ee06:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ee08:	883b      	ldrh	r3, [r7, #0]
 800ee0a:	428b      	cmp	r3, r1
 800ee0c:	d9c1      	bls.n	800ed92 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 800ee0e:	4b10      	ldr	r3, [pc, #64]	; (800ee50 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 800ee10:	6818      	ldr	r0, [r3, #0]
 800ee12:	f7f4 ff41 	bl	8003c98 <_ZNK8touchgfx5Texts7getTextEt>
 800ee16:	2300      	movs	r3, #0
 800ee18:	9303      	str	r3, [sp, #12]
 800ee1a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ee1c:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800ee20:	ab07      	add	r3, sp, #28
 800ee22:	4648      	mov	r0, r9
 800ee24:	9300      	str	r3, [sp, #0]
 800ee26:	4633      	mov	r3, r6
 800ee28:	e895 0006 	ldmia.w	r5, {r1, r2}
 800ee2c:	f7f4 fee8 	bl	8003c00 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ee30:	b00c      	add	sp, #48	; 0x30
 800ee32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ee36:	bf00      	nop
 800ee38:	08022ab9 	.word	0x08022ab9
 800ee3c:	080244f0 	.word	0x080244f0
 800ee40:	08022b19 	.word	0x08022b19
 800ee44:	20012604 	.word	0x20012604
 800ee48:	08022b42 	.word	0x08022b42
 800ee4c:	20012608 	.word	0x20012608
 800ee50:	2001260c 	.word	0x2001260c
 800ee54:	20012600 	.word	0x20012600

0800ee58 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800ee58:	4770      	bx	lr

0800ee5a <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800ee5a:	b510      	push	{r4, lr}
 800ee5c:	4604      	mov	r4, r0
 800ee5e:	2134      	movs	r1, #52	; 0x34
 800ee60:	f010 fbfa 	bl	801f658 <_ZdlPvj>
 800ee64:	4620      	mov	r0, r4
 800ee66:	bd10      	pop	{r4, pc}

0800ee68 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800ee68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ee6c:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800ee6e:	4604      	mov	r4, r0
 800ee70:	460e      	mov	r6, r1
 800ee72:	b08e      	sub	sp, #56	; 0x38
 800ee74:	b218      	sxth	r0, r3
 800ee76:	8921      	ldrh	r1, [r4, #8]
 800ee78:	005b      	lsls	r3, r3, #1
 800ee7a:	8962      	ldrh	r2, [r4, #10]
 800ee7c:	f8ad 0000 	strh.w	r0, [sp]
 800ee80:	b29b      	uxth	r3, r3
 800ee82:	f8ad 0002 	strh.w	r0, [sp, #2]
 800ee86:	1ac9      	subs	r1, r1, r3
 800ee88:	1ad3      	subs	r3, r2, r3
 800ee8a:	b209      	sxth	r1, r1
 800ee8c:	b21b      	sxth	r3, r3
 800ee8e:	2900      	cmp	r1, #0
 800ee90:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ee94:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ee98:	dd5e      	ble.n	800ef58 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800ee9a:	2b00      	cmp	r3, #0
 800ee9c:	dd5c      	ble.n	800ef58 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800ee9e:	6830      	ldr	r0, [r6, #0]
 800eea0:	ab02      	add	r3, sp, #8
 800eea2:	6871      	ldr	r1, [r6, #4]
 800eea4:	c303      	stmia	r3!, {r0, r1}
 800eea6:	4669      	mov	r1, sp
 800eea8:	a802      	add	r0, sp, #8
 800eeaa:	f7fc fc09 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 800eeae:	4620      	mov	r0, r4
 800eeb0:	a902      	add	r1, sp, #8
 800eeb2:	f7ff ff2f 	bl	800ed14 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800eeb6:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800eeb8:	2800      	cmp	r0, #0
 800eeba:	d05f      	beq.n	800ef7c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800eebc:	8963      	ldrh	r3, [r4, #10]
 800eebe:	b202      	sxth	r2, r0
 800eec0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800eec4:	2500      	movs	r5, #0
 800eec6:	1a1f      	subs	r7, r3, r0
 800eec8:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800eecc:	f8ad 101c 	strh.w	r1, [sp, #28]
 800eed0:	b21b      	sxth	r3, r3
 800eed2:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800eed6:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800eeda:	af04      	add	r7, sp, #16
 800eedc:	1a09      	subs	r1, r1, r0
 800eede:	9506      	str	r5, [sp, #24]
 800eee0:	f8ad 201e 	strh.w	r2, [sp, #30]
 800eee4:	f8ad 5020 	strh.w	r5, [sp, #32]
 800eee8:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800eeec:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800eef0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800eef4:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800eef8:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800eefc:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800ef00:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800ef04:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800ef08:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ef0c:	ab06      	add	r3, sp, #24
 800ef0e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800ef12:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ef16:	e887 0003 	stmia.w	r7, {r0, r1}
 800ef1a:	4631      	mov	r1, r6
 800ef1c:	4638      	mov	r0, r7
 800ef1e:	f7fc fbcf 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 800ef22:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800ef26:	2b00      	cmp	r3, #0
 800ef28:	dd12      	ble.n	800ef50 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800ef2a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800ef2e:	2b00      	cmp	r3, #0
 800ef30:	dd0e      	ble.n	800ef50 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800ef32:	6823      	ldr	r3, [r4, #0]
 800ef34:	4639      	mov	r1, r7
 800ef36:	4620      	mov	r0, r4
 800ef38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ef3a:	4798      	blx	r3
 800ef3c:	f7fc fe72 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800ef40:	6803      	ldr	r3, [r0, #0]
 800ef42:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ef44:	4639      	mov	r1, r7
 800ef46:	f8d3 8018 	ldr.w	r8, [r3, #24]
 800ef4a:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800ef4e:	47c0      	blx	r8
 800ef50:	3501      	adds	r5, #1
 800ef52:	2d04      	cmp	r5, #4
 800ef54:	d1da      	bne.n	800ef0c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800ef56:	e011      	b.n	800ef7c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800ef58:	6830      	ldr	r0, [r6, #0]
 800ef5a:	ab06      	add	r3, sp, #24
 800ef5c:	6871      	ldr	r1, [r6, #4]
 800ef5e:	c303      	stmia	r3!, {r0, r1}
 800ef60:	6823      	ldr	r3, [r4, #0]
 800ef62:	a906      	add	r1, sp, #24
 800ef64:	4620      	mov	r0, r4
 800ef66:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ef68:	4798      	blx	r3
 800ef6a:	f7fc fe5b 	bl	800bc24 <_ZN8touchgfx3HAL3lcdEv>
 800ef6e:	6803      	ldr	r3, [r0, #0]
 800ef70:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ef72:	a906      	add	r1, sp, #24
 800ef74:	699d      	ldr	r5, [r3, #24]
 800ef76:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800ef7a:	47a8      	blx	r5
 800ef7c:	b00e      	add	sp, #56	; 0x38
 800ef7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ef82 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800ef82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef86:	b08d      	sub	sp, #52	; 0x34
 800ef88:	4688      	mov	r8, r1
 800ef8a:	f8d3 c000 	ldr.w	ip, [r3]
 800ef8e:	9916      	ldr	r1, [sp, #88]	; 0x58
 800ef90:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800ef94:	680f      	ldr	r7, [r1, #0]
 800ef96:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800ef9a:	eba7 070c 	sub.w	r7, r7, ip
 800ef9e:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800efa2:	edd3 6a07 	vldr	s13, [r3, #28]
 800efa6:	42bc      	cmp	r4, r7
 800efa8:	9918      	ldr	r1, [sp, #96]	; 0x60
 800efaa:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800efae:	bfa8      	it	ge
 800efb0:	463c      	movge	r4, r7
 800efb2:	f9b1 9000 	ldrsh.w	r9, [r1]
 800efb6:	f9ba 1000 	ldrsh.w	r1, [sl]
 800efba:	ee07 4a90 	vmov	s15, r4
 800efbe:	eb09 0e0c 	add.w	lr, r9, ip
 800efc2:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800efc6:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800efca:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800efce:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800efd2:	4571      	cmp	r1, lr
 800efd4:	ee25 4a04 	vmul.f32	s8, s10, s8
 800efd8:	ee65 4a24 	vmul.f32	s9, s10, s9
 800efdc:	ee25 5a27 	vmul.f32	s10, s10, s15
 800efe0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800efe4:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800efe8:	ee32 1a05 	vadd.f32	s2, s4, s10
 800efec:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800eff0:	ee36 0a84 	vadd.f32	s0, s13, s8
 800eff4:	ee61 1a87 	vmul.f32	s3, s3, s14
 800eff8:	ee22 2a07 	vmul.f32	s4, s4, s14
 800effc:	f340 808c 	ble.w	800f118 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800f000:	eba1 060e 	sub.w	r6, r1, lr
 800f004:	fb96 f5f4 	sdiv	r5, r6, r4
 800f008:	ee07 5a10 	vmov	s14, r5
 800f00c:	2d00      	cmp	r5, #0
 800f00e:	fb04 6615 	mls	r6, r4, r5, r6
 800f012:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f016:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f01a:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f01e:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f022:	dd12      	ble.n	800f04a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800f024:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f028:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f02c:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f030:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f034:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f038:	bf14      	ite	ne
 800f03a:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f03e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f042:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f046:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f04a:	fb05 f204 	mul.w	r2, r5, r4
 800f04e:	1abf      	subs	r7, r7, r2
 800f050:	4494      	add	ip, r2
 800f052:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f056:	4411      	add	r1, r2
 800f058:	eb09 020c 	add.w	r2, r9, ip
 800f05c:	b209      	sxth	r1, r1
 800f05e:	443a      	add	r2, r7
 800f060:	428a      	cmp	r2, r1
 800f062:	bfc4      	itt	gt
 800f064:	eba1 0209 	subgt.w	r2, r1, r9
 800f068:	eba2 070c 	subgt.w	r7, r2, ip
 800f06c:	2f00      	cmp	r7, #0
 800f06e:	dd50      	ble.n	800f112 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800f070:	fb97 f1f4 	sdiv	r1, r7, r4
 800f074:	fb04 7211 	mls	r2, r4, r1, r7
 800f078:	b90a      	cbnz	r2, 800f07e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800f07a:	3901      	subs	r1, #1
 800f07c:	4622      	mov	r2, r4
 800f07e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f082:	6840      	ldr	r0, [r0, #4]
 800f084:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800f088:	44b6      	add	lr, r6
 800f08a:	f8d0 a000 	ldr.w	sl, [r0]
 800f08e:	2900      	cmp	r1, #0
 800f090:	bfcc      	ite	gt
 800f092:	46a1      	movgt	r9, r4
 800f094:	4691      	movle	r9, r2
 800f096:	900b      	str	r0, [sp, #44]	; 0x2c
 800f098:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800f09a:	fb04 e505 	mla	r5, r4, r5, lr
 800f09e:	eef0 6a42 	vmov.f32	s13, s4
 800f0a2:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800f0a6:	9008      	str	r0, [sp, #32]
 800f0a8:	eeb0 7a61 	vmov.f32	s14, s3
 800f0ac:	9818      	ldr	r0, [sp, #96]	; 0x60
 800f0ae:	695b      	ldr	r3, [r3, #20]
 800f0b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f0b4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f0b8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f0bc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800f0be:	445b      	add	r3, fp
 800f0c0:	9307      	str	r3, [sp, #28]
 800f0c2:	ee16 3a90 	vmov	r3, s13
 800f0c6:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f0ca:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f0ce:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f0d2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f0d6:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f0da:	ee17 7a90 	vmov	r7, s15
 800f0de:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f0e2:	fb97 f7f4 	sdiv	r7, r7, r4
 800f0e6:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f0ea:	ee17 ca90 	vmov	ip, s15
 800f0ee:	fb9c fcf4 	sdiv	ip, ip, r4
 800f0f2:	fb0c 3306 	mla	r3, ip, r6, r3
 800f0f6:	9302      	str	r3, [sp, #8]
 800f0f8:	ee17 3a10 	vmov	r3, s14
 800f0fc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f100:	fb07 3706 	mla	r7, r7, r6, r3
 800f104:	eba9 0306 	sub.w	r3, r9, r6
 800f108:	e9cd 4700 	strd	r4, r7, [sp]
 800f10c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f110:	47a0      	blx	r4
 800f112:	b00d      	add	sp, #52	; 0x34
 800f114:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f118:	2500      	movs	r5, #0
 800f11a:	462e      	mov	r6, r5
 800f11c:	e799      	b.n	800f052 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>
	...

0800f120 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f124:	b0db      	sub	sp, #364	; 0x16c
 800f126:	461d      	mov	r5, r3
 800f128:	4614      	mov	r4, r2
 800f12a:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800f12e:	910f      	str	r1, [sp, #60]	; 0x3c
 800f130:	4629      	mov	r1, r5
 800f132:	930a      	str	r3, [sp, #40]	; 0x28
 800f134:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800f138:	9009      	str	r0, [sp, #36]	; 0x24
 800f13a:	930b      	str	r3, [sp, #44]	; 0x2c
 800f13c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800f140:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800f144:	9310      	str	r3, [sp, #64]	; 0x40
 800f146:	6803      	ldr	r3, [r0, #0]
 800f148:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 800f14a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800f14e:	47b8      	blx	r7
 800f150:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f152:	6058      	str	r0, [r3, #4]
 800f154:	2800      	cmp	r0, #0
 800f156:	f000 83a1 	beq.w	800f89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f15a:	682b      	ldr	r3, [r5, #0]
 800f15c:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800f160:	ed94 7a02 	vldr	s14, [r4, #8]
 800f164:	9314      	str	r3, [sp, #80]	; 0x50
 800f166:	686b      	ldr	r3, [r5, #4]
 800f168:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f16c:	9315      	str	r3, [sp, #84]	; 0x54
 800f16e:	4bc1      	ldr	r3, [pc, #772]	; (800f474 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f170:	7819      	ldrb	r1, [r3, #0]
 800f172:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f176:	2900      	cmp	r1, #0
 800f178:	bf16      	itet	ne
 800f17a:	4619      	movne	r1, r3
 800f17c:	4611      	moveq	r1, r2
 800f17e:	4613      	movne	r3, r2
 800f180:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f184:	9116      	str	r1, [sp, #88]	; 0x58
 800f186:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800f18a:	f240 8387 	bls.w	800f89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f18e:	ed94 7a07 	vldr	s14, [r4, #28]
 800f192:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f196:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f19a:	f240 837f 	bls.w	800f89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f19e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800f1a2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f1a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1aa:	f240 8377 	bls.w	800f89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1ae:	6822      	ldr	r2, [r4, #0]
 800f1b0:	4bb1      	ldr	r3, [pc, #708]	; (800f478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800f1b2:	429a      	cmp	r2, r3
 800f1b4:	f2c0 8372 	blt.w	800f89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1b8:	49b0      	ldr	r1, [pc, #704]	; (800f47c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800f1ba:	6963      	ldr	r3, [r4, #20]
 800f1bc:	428a      	cmp	r2, r1
 800f1be:	f300 836d 	bgt.w	800f89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1c2:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f1c6:	48ae      	ldr	r0, [pc, #696]	; (800f480 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f1c8:	33ff      	adds	r3, #255	; 0xff
 800f1ca:	4283      	cmp	r3, r0
 800f1cc:	f200 8366 	bhi.w	800f89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1d0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f1d2:	4dac      	ldr	r5, [pc, #688]	; (800f484 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f1d4:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f1d8:	33ff      	adds	r3, #255	; 0xff
 800f1da:	42ab      	cmp	r3, r5
 800f1dc:	f200 835e 	bhi.w	800f89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1e0:	6862      	ldr	r2, [r4, #4]
 800f1e2:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800f1e6:	33ff      	adds	r3, #255	; 0xff
 800f1e8:	4283      	cmp	r3, r0
 800f1ea:	f200 8357 	bhi.w	800f89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1ee:	69a1      	ldr	r1, [r4, #24]
 800f1f0:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800f1f4:	33ff      	adds	r3, #255	; 0xff
 800f1f6:	4283      	cmp	r3, r0
 800f1f8:	f200 8350 	bhi.w	800f89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1fc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f1fe:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800f202:	30ff      	adds	r0, #255	; 0xff
 800f204:	42a8      	cmp	r0, r5
 800f206:	f200 8349 	bhi.w	800f89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f20a:	428a      	cmp	r2, r1
 800f20c:	f280 8110 	bge.w	800f430 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f210:	429a      	cmp	r2, r3
 800f212:	f300 8119 	bgt.w	800f448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f216:	4299      	cmp	r1, r3
 800f218:	f280 811d 	bge.w	800f456 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f21c:	2502      	movs	r5, #2
 800f21e:	2701      	movs	r7, #1
 800f220:	46a9      	mov	r9, r5
 800f222:	46b8      	mov	r8, r7
 800f224:	f04f 0a00 	mov.w	sl, #0
 800f228:	4621      	mov	r1, r4
 800f22a:	a849      	add	r0, sp, #292	; 0x124
 800f22c:	f003 fcfc 	bl	8012c28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f230:	4622      	mov	r2, r4
 800f232:	4653      	mov	r3, sl
 800f234:	a949      	add	r1, sp, #292	; 0x124
 800f236:	f8cd 9000 	str.w	r9, [sp]
 800f23a:	a819      	add	r0, sp, #100	; 0x64
 800f23c:	f003 fe24 	bl	8012e88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f240:	4622      	mov	r2, r4
 800f242:	4653      	mov	r3, sl
 800f244:	a949      	add	r1, sp, #292	; 0x124
 800f246:	f8cd 8000 	str.w	r8, [sp]
 800f24a:	a829      	add	r0, sp, #164	; 0xa4
 800f24c:	f003 fe1c 	bl	8012e88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f250:	4643      	mov	r3, r8
 800f252:	4622      	mov	r2, r4
 800f254:	a949      	add	r1, sp, #292	; 0x124
 800f256:	f8cd 9000 	str.w	r9, [sp]
 800f25a:	a839      	add	r0, sp, #228	; 0xe4
 800f25c:	f003 fe14 	bl	8012e88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f260:	42af      	cmp	r7, r5
 800f262:	af12      	add	r7, sp, #72	; 0x48
 800f264:	bfb7      	itett	lt
 800f266:	2300      	movlt	r3, #0
 800f268:	2301      	movge	r3, #1
 800f26a:	ad29      	addlt	r5, sp, #164	; 0xa4
 800f26c:	ac19      	addlt	r4, sp, #100	; 0x64
 800f26e:	bfb1      	iteee	lt
 800f270:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f272:	ad19      	addge	r5, sp, #100	; 0x64
 800f274:	930e      	strge	r3, [sp, #56]	; 0x38
 800f276:	ac29      	addge	r4, sp, #164	; 0xa4
 800f278:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f27a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f27e:	e887 0003 	stmia.w	r7, {r0, r1}
 800f282:	b928      	cbnz	r0, 800f290 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f284:	4b80      	ldr	r3, [pc, #512]	; (800f488 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f286:	6818      	ldr	r0, [r3, #0]
 800f288:	6803      	ldr	r3, [r0, #0]
 800f28a:	6a1b      	ldr	r3, [r3, #32]
 800f28c:	4798      	blx	r3
 800f28e:	6038      	str	r0, [r7, #0]
 800f290:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f292:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f296:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f29a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800f29c:	930c      	str	r3, [sp, #48]	; 0x30
 800f29e:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f2a0:	6963      	ldr	r3, [r4, #20]
 800f2a2:	440b      	add	r3, r1
 800f2a4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f2a8:	4408      	add	r0, r1
 800f2aa:	b200      	sxth	r0, r0
 800f2ac:	4283      	cmp	r3, r0
 800f2ae:	900d      	str	r0, [sp, #52]	; 0x34
 800f2b0:	f280 80dd 	bge.w	800f46e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f2b4:	428b      	cmp	r3, r1
 800f2b6:	da08      	bge.n	800f2ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f2b8:	2a00      	cmp	r2, #0
 800f2ba:	dd06      	ble.n	800f2ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f2bc:	1acb      	subs	r3, r1, r3
 800f2be:	429a      	cmp	r2, r3
 800f2c0:	f2c0 80e4 	blt.w	800f48c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f2c4:	2b00      	cmp	r3, #0
 800f2c6:	f300 80e2 	bgt.w	800f48e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f2ca:	6967      	ldr	r7, [r4, #20]
 800f2cc:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800f2d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f2d2:	443b      	add	r3, r7
 800f2d4:	461f      	mov	r7, r3
 800f2d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f2d8:	1bdf      	subs	r7, r3, r7
 800f2da:	4297      	cmp	r7, r2
 800f2dc:	bfa8      	it	ge
 800f2de:	4617      	movge	r7, r2
 800f2e0:	2f00      	cmp	r7, #0
 800f2e2:	f340 8166 	ble.w	800f5b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f2e6:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f2e8:	6829      	ldr	r1, [r5, #0]
 800f2ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f2ee:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f2f2:	4411      	add	r1, r2
 800f2f4:	6820      	ldr	r0, [r4, #0]
 800f2f6:	4299      	cmp	r1, r3
 800f2f8:	dd1a      	ble.n	800f330 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f2fa:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f2fe:	4402      	add	r2, r0
 800f300:	440b      	add	r3, r1
 800f302:	b21b      	sxth	r3, r3
 800f304:	429a      	cmp	r2, r3
 800f306:	dc13      	bgt.n	800f330 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f308:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f30a:	a912      	add	r1, sp, #72	; 0x48
 800f30c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f30e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f310:	681b      	ldr	r3, [r3, #0]
 800f312:	9206      	str	r2, [sp, #24]
 800f314:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f316:	9500      	str	r5, [sp, #0]
 800f318:	9205      	str	r2, [sp, #20]
 800f31a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f31c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f320:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800f322:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f326:	aa49      	add	r2, sp, #292	; 0x124
 800f328:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800f32c:	4623      	mov	r3, r4
 800f32e:	47c8      	blx	r9
 800f330:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800f334:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800f338:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800f33c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f340:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800f344:	68a1      	ldr	r1, [r4, #8]
 800f346:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f34a:	ed94 6a08 	vldr	s12, [r4, #32]
 800f34e:	edd4 6a07 	vldr	s13, [r4, #28]
 800f352:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f356:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f35a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f35e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f362:	edc4 6a07 	vstr	s13, [r4, #28]
 800f366:	441a      	add	r2, r3
 800f368:	6963      	ldr	r3, [r4, #20]
 800f36a:	3301      	adds	r3, #1
 800f36c:	6022      	str	r2, [r4, #0]
 800f36e:	6163      	str	r3, [r4, #20]
 800f370:	69a3      	ldr	r3, [r4, #24]
 800f372:	3b01      	subs	r3, #1
 800f374:	61a3      	str	r3, [r4, #24]
 800f376:	6923      	ldr	r3, [r4, #16]
 800f378:	440b      	add	r3, r1
 800f37a:	68e1      	ldr	r1, [r4, #12]
 800f37c:	428b      	cmp	r3, r1
 800f37e:	6123      	str	r3, [r4, #16]
 800f380:	db15      	blt.n	800f3ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800f382:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800f386:	3201      	adds	r2, #1
 800f388:	1a5b      	subs	r3, r3, r1
 800f38a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f38e:	6022      	str	r2, [r4, #0]
 800f390:	6123      	str	r3, [r4, #16]
 800f392:	edc4 6a07 	vstr	s13, [r4, #28]
 800f396:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800f39a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f39e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f3a2:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800f3a6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f3aa:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f3ae:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800f3b2:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800f3b6:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800f3ba:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f3be:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800f3c2:	68a9      	ldr	r1, [r5, #8]
 800f3c4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f3c8:	ed95 6a08 	vldr	s12, [r5, #32]
 800f3cc:	edd5 6a07 	vldr	s13, [r5, #28]
 800f3d0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f3d4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f3d8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f3dc:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f3e0:	edc5 6a07 	vstr	s13, [r5, #28]
 800f3e4:	441a      	add	r2, r3
 800f3e6:	696b      	ldr	r3, [r5, #20]
 800f3e8:	3301      	adds	r3, #1
 800f3ea:	602a      	str	r2, [r5, #0]
 800f3ec:	616b      	str	r3, [r5, #20]
 800f3ee:	69ab      	ldr	r3, [r5, #24]
 800f3f0:	3b01      	subs	r3, #1
 800f3f2:	61ab      	str	r3, [r5, #24]
 800f3f4:	692b      	ldr	r3, [r5, #16]
 800f3f6:	440b      	add	r3, r1
 800f3f8:	68e9      	ldr	r1, [r5, #12]
 800f3fa:	428b      	cmp	r3, r1
 800f3fc:	612b      	str	r3, [r5, #16]
 800f3fe:	db15      	blt.n	800f42c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800f400:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f404:	3201      	adds	r2, #1
 800f406:	1a5b      	subs	r3, r3, r1
 800f408:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f40c:	602a      	str	r2, [r5, #0]
 800f40e:	612b      	str	r3, [r5, #16]
 800f410:	edc5 6a07 	vstr	s13, [r5, #28]
 800f414:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800f418:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f41c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f420:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800f424:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f428:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f42c:	3f01      	subs	r7, #1
 800f42e:	e757      	b.n	800f2e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800f430:	4299      	cmp	r1, r3
 800f432:	dc13      	bgt.n	800f45c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800f434:	429a      	cmp	r2, r3
 800f436:	da14      	bge.n	800f462 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800f438:	2502      	movs	r5, #2
 800f43a:	2703      	movs	r7, #3
 800f43c:	f04f 0800 	mov.w	r8, #0
 800f440:	46a9      	mov	r9, r5
 800f442:	f04f 0a01 	mov.w	sl, #1
 800f446:	e6ef      	b.n	800f228 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f448:	2501      	movs	r5, #1
 800f44a:	2700      	movs	r7, #0
 800f44c:	46a9      	mov	r9, r5
 800f44e:	46b8      	mov	r8, r7
 800f450:	f04f 0a02 	mov.w	sl, #2
 800f454:	e6e8      	b.n	800f228 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f456:	2501      	movs	r5, #1
 800f458:	2702      	movs	r7, #2
 800f45a:	e6e1      	b.n	800f220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800f45c:	2500      	movs	r5, #0
 800f45e:	2701      	movs	r7, #1
 800f460:	e7f4      	b.n	800f44c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800f462:	2702      	movs	r7, #2
 800f464:	2503      	movs	r5, #3
 800f466:	f04f 0900 	mov.w	r9, #0
 800f46a:	46b8      	mov	r8, r7
 800f46c:	e7e9      	b.n	800f442 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800f46e:	4613      	mov	r3, r2
 800f470:	e728      	b.n	800f2c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800f472:	bf00      	nop
 800f474:	200125a8 	.word	0x200125a8
 800f478:	fffd8f01 	.word	0xfffd8f01
 800f47c:	00027100 	.word	0x00027100
 800f480:	0004e1ff 	.word	0x0004e1ff
 800f484:	0004e1fe 	.word	0x0004e1fe
 800f488:	200125b0 	.word	0x200125b0
 800f48c:	4613      	mov	r3, r2
 800f48e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f490:	469e      	mov	lr, r3
 800f492:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800f494:	469c      	mov	ip, r3
 800f496:	9111      	str	r1, [sp, #68]	; 0x44
 800f498:	f04f 0900 	mov.w	r9, #0
 800f49c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800f4a0:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800f4a4:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800f4a8:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800f4ac:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800f4b0:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800f4b4:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800f4b8:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800f4bc:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800f4c0:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800f4c4:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800f4c8:	f1bc 0f00 	cmp.w	ip, #0
 800f4cc:	d147      	bne.n	800f55e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800f4ce:	eb03 0c07 	add.w	ip, r3, r7
 800f4d2:	1ad7      	subs	r7, r2, r3
 800f4d4:	f1b9 0f00 	cmp.w	r9, #0
 800f4d8:	d009      	beq.n	800f4ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800f4da:	9029      	str	r0, [sp, #164]	; 0xa4
 800f4dc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800f4e0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800f4e4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800f4e8:	912d      	str	r1, [sp, #180]	; 0xb4
 800f4ea:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800f4ee:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f4f0:	f04f 0800 	mov.w	r8, #0
 800f4f4:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800f4f8:	9111      	str	r1, [sp, #68]	; 0x44
 800f4fa:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800f4fe:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800f502:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800f506:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800f50a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800f50e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800f512:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800f516:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800f51a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800f51e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800f522:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800f526:	f1be 0f00 	cmp.w	lr, #0
 800f52a:	d031      	beq.n	800f590 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800f52c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f52e:	4450      	add	r0, sl
 800f530:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f534:	4431      	add	r1, r6
 800f536:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f53a:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f53e:	4549      	cmp	r1, r9
 800f540:	db08      	blt.n	800f554 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800f542:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f546:	3001      	adds	r0, #1
 800f548:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f54c:	eba1 0109 	sub.w	r1, r1, r9
 800f550:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f554:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f558:	f04f 0801 	mov.w	r8, #1
 800f55c:	e7e3      	b.n	800f526 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800f55e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f560:	4450      	add	r0, sl
 800f562:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f566:	4431      	add	r1, r6
 800f568:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f56c:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f570:	4541      	cmp	r1, r8
 800f572:	db08      	blt.n	800f586 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800f574:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f578:	3001      	adds	r0, #1
 800f57a:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f57e:	eba1 0108 	sub.w	r1, r1, r8
 800f582:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f586:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f58a:	f04f 0901 	mov.w	r9, #1
 800f58e:	e79b      	b.n	800f4c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800f590:	449c      	add	ip, r3
 800f592:	1aff      	subs	r7, r7, r3
 800f594:	f1b8 0f00 	cmp.w	r8, #0
 800f598:	d009      	beq.n	800f5ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800f59a:	9019      	str	r0, [sp, #100]	; 0x64
 800f59c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800f5a0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800f5a4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800f5a8:	911d      	str	r1, [sp, #116]	; 0x74
 800f5aa:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800f5ae:	1ad2      	subs	r2, r2, r3
 800f5b0:	e68b      	b.n	800f2ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f5b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f5b4:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800f5b6:	2b00      	cmp	r3, #0
 800f5b8:	f000 80d1 	beq.w	800f75e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800f5bc:	ad19      	add	r5, sp, #100	; 0x64
 800f5be:	ac39      	add	r4, sp, #228	; 0xe4
 800f5c0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f5c2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f5c6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f5ca:	930c      	str	r3, [sp, #48]	; 0x30
 800f5cc:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f5ce:	6963      	ldr	r3, [r4, #20]
 800f5d0:	440b      	add	r3, r1
 800f5d2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f5d6:	4408      	add	r0, r1
 800f5d8:	b200      	sxth	r0, r0
 800f5da:	4283      	cmp	r3, r0
 800f5dc:	900d      	str	r0, [sp, #52]	; 0x34
 800f5de:	f280 80c1 	bge.w	800f764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f5e2:	428b      	cmp	r3, r1
 800f5e4:	da08      	bge.n	800f5f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f5e6:	2a00      	cmp	r2, #0
 800f5e8:	dd06      	ble.n	800f5f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f5ea:	1acb      	subs	r3, r1, r3
 800f5ec:	429a      	cmp	r2, r3
 800f5ee:	f2c0 80bb 	blt.w	800f768 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f5f2:	2b00      	cmp	r3, #0
 800f5f4:	f300 80b9 	bgt.w	800f76a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f5f8:	6967      	ldr	r7, [r4, #20]
 800f5fa:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800f5fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f600:	443b      	add	r3, r7
 800f602:	461f      	mov	r7, r3
 800f604:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f606:	1bdf      	subs	r7, r3, r7
 800f608:	4297      	cmp	r7, r2
 800f60a:	bfa8      	it	ge
 800f60c:	4617      	movge	r7, r2
 800f60e:	2f00      	cmp	r7, #0
 800f610:	f340 813c 	ble.w	800f88c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f614:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f616:	6829      	ldr	r1, [r5, #0]
 800f618:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f61c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f620:	4411      	add	r1, r2
 800f622:	6820      	ldr	r0, [r4, #0]
 800f624:	4299      	cmp	r1, r3
 800f626:	dd1a      	ble.n	800f65e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f628:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f62c:	4402      	add	r2, r0
 800f62e:	440b      	add	r3, r1
 800f630:	b21b      	sxth	r3, r3
 800f632:	429a      	cmp	r2, r3
 800f634:	dc13      	bgt.n	800f65e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f636:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f638:	a912      	add	r1, sp, #72	; 0x48
 800f63a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f63c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f63e:	681b      	ldr	r3, [r3, #0]
 800f640:	9206      	str	r2, [sp, #24]
 800f642:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f644:	9500      	str	r5, [sp, #0]
 800f646:	9205      	str	r2, [sp, #20]
 800f648:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f64a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f64e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800f650:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f654:	aa49      	add	r2, sp, #292	; 0x124
 800f656:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800f65a:	4623      	mov	r3, r4
 800f65c:	47c8      	blx	r9
 800f65e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800f662:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800f666:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800f66a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f66e:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800f672:	68a1      	ldr	r1, [r4, #8]
 800f674:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f678:	ed94 6a08 	vldr	s12, [r4, #32]
 800f67c:	edd4 6a07 	vldr	s13, [r4, #28]
 800f680:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f684:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f688:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f68c:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f690:	edc4 6a07 	vstr	s13, [r4, #28]
 800f694:	441a      	add	r2, r3
 800f696:	6963      	ldr	r3, [r4, #20]
 800f698:	3301      	adds	r3, #1
 800f69a:	6022      	str	r2, [r4, #0]
 800f69c:	6163      	str	r3, [r4, #20]
 800f69e:	69a3      	ldr	r3, [r4, #24]
 800f6a0:	3b01      	subs	r3, #1
 800f6a2:	61a3      	str	r3, [r4, #24]
 800f6a4:	6923      	ldr	r3, [r4, #16]
 800f6a6:	440b      	add	r3, r1
 800f6a8:	68e1      	ldr	r1, [r4, #12]
 800f6aa:	428b      	cmp	r3, r1
 800f6ac:	6123      	str	r3, [r4, #16]
 800f6ae:	db15      	blt.n	800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f6b0:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800f6b4:	3201      	adds	r2, #1
 800f6b6:	1a5b      	subs	r3, r3, r1
 800f6b8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f6bc:	6022      	str	r2, [r4, #0]
 800f6be:	6123      	str	r3, [r4, #16]
 800f6c0:	edc4 6a07 	vstr	s13, [r4, #28]
 800f6c4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800f6c8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f6cc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f6d0:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800f6d4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f6d8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f6dc:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800f6e0:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800f6e4:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800f6e8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f6ec:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800f6f0:	68a9      	ldr	r1, [r5, #8]
 800f6f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f6f6:	ed95 6a08 	vldr	s12, [r5, #32]
 800f6fa:	edd5 6a07 	vldr	s13, [r5, #28]
 800f6fe:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f702:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f706:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f70a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f70e:	edc5 6a07 	vstr	s13, [r5, #28]
 800f712:	441a      	add	r2, r3
 800f714:	696b      	ldr	r3, [r5, #20]
 800f716:	3301      	adds	r3, #1
 800f718:	602a      	str	r2, [r5, #0]
 800f71a:	616b      	str	r3, [r5, #20]
 800f71c:	69ab      	ldr	r3, [r5, #24]
 800f71e:	3b01      	subs	r3, #1
 800f720:	61ab      	str	r3, [r5, #24]
 800f722:	692b      	ldr	r3, [r5, #16]
 800f724:	440b      	add	r3, r1
 800f726:	68e9      	ldr	r1, [r5, #12]
 800f728:	428b      	cmp	r3, r1
 800f72a:	612b      	str	r3, [r5, #16]
 800f72c:	db15      	blt.n	800f75a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f72e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f732:	3201      	adds	r2, #1
 800f734:	1a5b      	subs	r3, r3, r1
 800f736:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f73a:	602a      	str	r2, [r5, #0]
 800f73c:	612b      	str	r3, [r5, #16]
 800f73e:	edc5 6a07 	vstr	s13, [r5, #28]
 800f742:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800f746:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f74a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f74e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800f752:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f756:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f75a:	3f01      	subs	r7, #1
 800f75c:	e757      	b.n	800f60e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f75e:	ad39      	add	r5, sp, #228	; 0xe4
 800f760:	ac19      	add	r4, sp, #100	; 0x64
 800f762:	e72d      	b.n	800f5c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f764:	4613      	mov	r3, r2
 800f766:	e744      	b.n	800f5f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f768:	4613      	mov	r3, r2
 800f76a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800f76c:	469e      	mov	lr, r3
 800f76e:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800f772:	461f      	mov	r7, r3
 800f774:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800f778:	f04f 0900 	mov.w	r9, #0
 800f77c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800f780:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800f784:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800f788:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800f78c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800f790:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800f792:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800f796:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800f79a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800f79e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800f7a2:	960e      	str	r6, [sp, #56]	; 0x38
 800f7a4:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800f7a8:	2f00      	cmp	r7, #0
 800f7aa:	d146      	bne.n	800f83a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f7ac:	449c      	add	ip, r3
 800f7ae:	1ad7      	subs	r7, r2, r3
 800f7b0:	f1b9 0f00 	cmp.w	r9, #0
 800f7b4:	d009      	beq.n	800f7ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f7b6:	9039      	str	r0, [sp, #228]	; 0xe4
 800f7b8:	913d      	str	r1, [sp, #244]	; 0xf4
 800f7ba:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800f7be:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800f7c2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800f7c6:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800f7ca:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f7cc:	f04f 0800 	mov.w	r8, #0
 800f7d0:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800f7d4:	910e      	str	r1, [sp, #56]	; 0x38
 800f7d6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800f7da:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800f7de:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800f7e2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800f7e6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800f7ea:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800f7ee:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800f7f2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800f7f6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800f7fa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800f7fe:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800f802:	f1be 0f00 	cmp.w	lr, #0
 800f806:	d030      	beq.n	800f86a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f808:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800f80a:	4450      	add	r0, sl
 800f80c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f810:	4431      	add	r1, r6
 800f812:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f816:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f81a:	4549      	cmp	r1, r9
 800f81c:	db08      	blt.n	800f830 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f81e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f822:	3001      	adds	r0, #1
 800f824:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f828:	eba1 0109 	sub.w	r1, r1, r9
 800f82c:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f830:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f834:	f04f 0801 	mov.w	r8, #1
 800f838:	e7e3      	b.n	800f802 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f83a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800f83c:	4450      	add	r0, sl
 800f83e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f842:	4431      	add	r1, r6
 800f844:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f848:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f84c:	4541      	cmp	r1, r8
 800f84e:	db08      	blt.n	800f862 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f850:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f854:	3001      	adds	r0, #1
 800f856:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f85a:	eba1 0108 	sub.w	r1, r1, r8
 800f85e:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f862:	3f01      	subs	r7, #1
 800f864:	f04f 0901 	mov.w	r9, #1
 800f868:	e79e      	b.n	800f7a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f86a:	449c      	add	ip, r3
 800f86c:	1aff      	subs	r7, r7, r3
 800f86e:	f1b8 0f00 	cmp.w	r8, #0
 800f872:	d009      	beq.n	800f888 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f874:	9019      	str	r0, [sp, #100]	; 0x64
 800f876:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800f87a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800f87e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800f882:	911d      	str	r1, [sp, #116]	; 0x74
 800f884:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800f888:	1ad2      	subs	r2, r2, r3
 800f88a:	e6b5      	b.n	800f5f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f88c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f88e:	681b      	ldr	r3, [r3, #0]
 800f890:	b923      	cbnz	r3, 800f89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f892:	4b04      	ldr	r3, [pc, #16]	; (800f8a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f894:	6818      	ldr	r0, [r3, #0]
 800f896:	6803      	ldr	r3, [r0, #0]
 800f898:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f89a:	4798      	blx	r3
 800f89c:	b05b      	add	sp, #364	; 0x16c
 800f89e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f8a2:	bf00      	nop
 800f8a4:	200125b0 	.word	0x200125b0

0800f8a8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800f8a8:	b570      	push	{r4, r5, r6, lr}
 800f8aa:	4604      	mov	r4, r0
 800f8ac:	2500      	movs	r5, #0
 800f8ae:	9804      	ldr	r0, [sp, #16]
 800f8b0:	7223      	strb	r3, [r4, #8]
 800f8b2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f8b6:	8025      	strh	r5, [r4, #0]
 800f8b8:	6061      	str	r1, [r4, #4]
 800f8ba:	7263      	strb	r3, [r4, #9]
 800f8bc:	60e0      	str	r0, [r4, #12]
 800f8be:	8222      	strh	r2, [r4, #16]
 800f8c0:	8265      	strh	r5, [r4, #18]
 800f8c2:	82a5      	strh	r5, [r4, #20]
 800f8c4:	82e5      	strh	r5, [r4, #22]
 800f8c6:	8325      	strh	r5, [r4, #24]
 800f8c8:	8365      	strh	r5, [r4, #26]
 800f8ca:	83a5      	strh	r5, [r4, #28]
 800f8cc:	77a5      	strb	r5, [r4, #30]
 800f8ce:	6803      	ldr	r3, [r0, #0]
 800f8d0:	695b      	ldr	r3, [r3, #20]
 800f8d2:	4798      	blx	r3
 800f8d4:	4606      	mov	r6, r0
 800f8d6:	b1f8      	cbz	r0, 800f918 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800f8d8:	68e0      	ldr	r0, [r4, #12]
 800f8da:	4631      	mov	r1, r6
 800f8dc:	6803      	ldr	r3, [r0, #0]
 800f8de:	68db      	ldr	r3, [r3, #12]
 800f8e0:	4798      	blx	r3
 800f8e2:	7b43      	ldrb	r3, [r0, #13]
 800f8e4:	7a82      	ldrb	r2, [r0, #10]
 800f8e6:	4605      	mov	r5, r0
 800f8e8:	005b      	lsls	r3, r3, #1
 800f8ea:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f8ee:	4313      	orrs	r3, r2
 800f8f0:	83a3      	strh	r3, [r4, #28]
 800f8f2:	7a63      	ldrb	r3, [r4, #9]
 800f8f4:	2b04      	cmp	r3, #4
 800f8f6:	d10f      	bne.n	800f918 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800f8f8:	68e0      	ldr	r0, [r4, #12]
 800f8fa:	462a      	mov	r2, r5
 800f8fc:	4631      	mov	r1, r6
 800f8fe:	6803      	ldr	r3, [r0, #0]
 800f900:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f902:	4798      	blx	r3
 800f904:	7b6b      	ldrb	r3, [r5, #13]
 800f906:	005b      	lsls	r3, r3, #1
 800f908:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f90c:	7aab      	ldrb	r3, [r5, #10]
 800f90e:	4313      	orrs	r3, r2
 800f910:	4418      	add	r0, r3
 800f912:	8ba3      	ldrh	r3, [r4, #28]
 800f914:	4418      	add	r0, r3
 800f916:	83a0      	strh	r0, [r4, #28]
 800f918:	4620      	mov	r0, r4
 800f91a:	bd70      	pop	{r4, r5, r6, pc}

0800f91c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800f91c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f920:	2400      	movs	r4, #0
 800f922:	b085      	sub	sp, #20
 800f924:	4681      	mov	r9, r0
 800f926:	4688      	mov	r8, r1
 800f928:	4692      	mov	sl, r2
 800f92a:	469b      	mov	fp, r3
 800f92c:	4627      	mov	r7, r4
 800f92e:	4625      	mov	r5, r4
 800f930:	4626      	mov	r6, r4
 800f932:	4554      	cmp	r4, sl
 800f934:	da2a      	bge.n	800f98c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f936:	2300      	movs	r3, #0
 800f938:	9303      	str	r3, [sp, #12]
 800f93a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f93e:	429d      	cmp	r5, r3
 800f940:	d004      	beq.n	800f94c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800f942:	f242 030b 	movw	r3, #8203	; 0x200b
 800f946:	429d      	cmp	r5, r3
 800f948:	bf18      	it	ne
 800f94a:	462f      	movne	r7, r5
 800f94c:	ab03      	add	r3, sp, #12
 800f94e:	4642      	mov	r2, r8
 800f950:	4659      	mov	r1, fp
 800f952:	4648      	mov	r0, r9
 800f954:	f002 feee 	bl	8012734 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f958:	4605      	mov	r5, r0
 800f95a:	b1b8      	cbz	r0, 800f98c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f95c:	280a      	cmp	r0, #10
 800f95e:	d015      	beq.n	800f98c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f960:	9a03      	ldr	r2, [sp, #12]
 800f962:	b18a      	cbz	r2, 800f988 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800f964:	7b50      	ldrb	r0, [r2, #13]
 800f966:	4639      	mov	r1, r7
 800f968:	7a93      	ldrb	r3, [r2, #10]
 800f96a:	0040      	lsls	r0, r0, #1
 800f96c:	8895      	ldrh	r5, [r2, #4]
 800f96e:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800f972:	4303      	orrs	r3, r0
 800f974:	4640      	mov	r0, r8
 800f976:	9301      	str	r3, [sp, #4]
 800f978:	f8d8 3000 	ldr.w	r3, [r8]
 800f97c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f97e:	4798      	blx	r3
 800f980:	9b01      	ldr	r3, [sp, #4]
 800f982:	4418      	add	r0, r3
 800f984:	4406      	add	r6, r0
 800f986:	b2b6      	uxth	r6, r6
 800f988:	3401      	adds	r4, #1
 800f98a:	e7d2      	b.n	800f932 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800f98c:	4630      	mov	r0, r6
 800f98e:	b005      	add	sp, #20
 800f990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f994 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800f994:	2a02      	cmp	r2, #2
 800f996:	b530      	push	{r4, r5, lr}
 800f998:	d011      	beq.n	800f9be <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800f99a:	2a03      	cmp	r2, #3
 800f99c:	d01c      	beq.n	800f9d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800f99e:	2a01      	cmp	r2, #1
 800f9a0:	d10c      	bne.n	800f9bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f9a2:	888b      	ldrh	r3, [r1, #4]
 800f9a4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800f9a8:	8801      	ldrh	r1, [r0, #0]
 800f9aa:	1a9b      	subs	r3, r3, r2
 800f9ac:	8844      	ldrh	r4, [r0, #2]
 800f9ae:	1a5b      	subs	r3, r3, r1
 800f9b0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f9b4:	8004      	strh	r4, [r0, #0]
 800f9b6:	8043      	strh	r3, [r0, #2]
 800f9b8:	8081      	strh	r1, [r0, #4]
 800f9ba:	80c2      	strh	r2, [r0, #6]
 800f9bc:	bd30      	pop	{r4, r5, pc}
 800f9be:	88cb      	ldrh	r3, [r1, #6]
 800f9c0:	88c2      	ldrh	r2, [r0, #6]
 800f9c2:	1a9b      	subs	r3, r3, r2
 800f9c4:	8842      	ldrh	r2, [r0, #2]
 800f9c6:	1a9b      	subs	r3, r3, r2
 800f9c8:	888a      	ldrh	r2, [r1, #4]
 800f9ca:	8881      	ldrh	r1, [r0, #4]
 800f9cc:	8043      	strh	r3, [r0, #2]
 800f9ce:	1a52      	subs	r2, r2, r1
 800f9d0:	8801      	ldrh	r1, [r0, #0]
 800f9d2:	1a52      	subs	r2, r2, r1
 800f9d4:	8002      	strh	r2, [r0, #0]
 800f9d6:	e7f1      	b.n	800f9bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f9d8:	88cb      	ldrh	r3, [r1, #6]
 800f9da:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800f9de:	8841      	ldrh	r1, [r0, #2]
 800f9e0:	1a9b      	subs	r3, r3, r2
 800f9e2:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f9e6:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f9ea:	1a5b      	subs	r3, r3, r1
 800f9ec:	8045      	strh	r5, [r0, #2]
 800f9ee:	8082      	strh	r2, [r0, #4]
 800f9f0:	8003      	strh	r3, [r0, #0]
 800f9f2:	80c4      	strh	r4, [r0, #6]
 800f9f4:	e7e2      	b.n	800f9bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800f9f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800f9f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9fa:	b09f      	sub	sp, #124	; 0x7c
 800f9fc:	9116      	str	r1, [sp, #88]	; 0x58
 800f9fe:	9317      	str	r3, [sp, #92]	; 0x5c
 800fa00:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800fa02:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800fa04:	8809      	ldrh	r1, [r1, #0]
 800fa06:	889b      	ldrh	r3, [r3, #4]
 800fa08:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800fa0c:	440b      	add	r3, r1
 800fa0e:	9212      	str	r2, [sp, #72]	; 0x48
 800fa10:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800fa14:	b21b      	sxth	r3, r3
 800fa16:	9011      	str	r0, [sp, #68]	; 0x44
 800fa18:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800fa1c:	9310      	str	r3, [sp, #64]	; 0x40
 800fa1e:	f8d8 3000 	ldr.w	r3, [r8]
 800fa22:	7a59      	ldrb	r1, [r3, #9]
 800fa24:	7a1b      	ldrb	r3, [r3, #8]
 800fa26:	9114      	str	r1, [sp, #80]	; 0x50
 800fa28:	9315      	str	r3, [sp, #84]	; 0x54
 800fa2a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800fa2c:	f9b3 5000 	ldrsh.w	r5, [r3]
 800fa30:	2a00      	cmp	r2, #0
 800fa32:	d067      	beq.n	800fb04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800fa34:	f898 3010 	ldrb.w	r3, [r8, #16]
 800fa38:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800fa3a:	2b04      	cmp	r3, #4
 800fa3c:	bf14      	ite	ne
 800fa3e:	2301      	movne	r3, #1
 800fa40:	2302      	moveq	r3, #2
 800fa42:	4413      	add	r3, r2
 800fa44:	f04f 0900 	mov.w	r9, #0
 800fa48:	930f      	str	r3, [sp, #60]	; 0x3c
 800fa4a:	464c      	mov	r4, r9
 800fa4c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800fa50:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800fa54:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800fa58:	4293      	cmp	r3, r2
 800fa5a:	f280 808c 	bge.w	800fb76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800fa5e:	2300      	movs	r3, #0
 800fa60:	931c      	str	r3, [sp, #112]	; 0x70
 800fa62:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800fa66:	429c      	cmp	r4, r3
 800fa68:	d006      	beq.n	800fa78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800fa6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fa6c:	f242 020b 	movw	r2, #8203	; 0x200b
 800fa70:	4294      	cmp	r4, r2
 800fa72:	bf18      	it	ne
 800fa74:	4623      	movne	r3, r4
 800fa76:	930d      	str	r3, [sp, #52]	; 0x34
 800fa78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fa7a:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800fa7c:	f8d8 2000 	ldr.w	r2, [r8]
 800fa80:	428b      	cmp	r3, r1
 800fa82:	db41      	blt.n	800fb08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800fa84:	6813      	ldr	r3, [r2, #0]
 800fa86:	4610      	mov	r0, r2
 800fa88:	695b      	ldr	r3, [r3, #20]
 800fa8a:	4798      	blx	r3
 800fa8c:	4604      	mov	r4, r0
 800fa8e:	f8d8 0000 	ldr.w	r0, [r8]
 800fa92:	aa1d      	add	r2, sp, #116	; 0x74
 800fa94:	4621      	mov	r1, r4
 800fa96:	6803      	ldr	r3, [r0, #0]
 800fa98:	689e      	ldr	r6, [r3, #8]
 800fa9a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800fa9e:	47b0      	blx	r6
 800faa0:	901c      	str	r0, [sp, #112]	; 0x70
 800faa2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800faa6:	429c      	cmp	r4, r3
 800faa8:	f000 80ea 	beq.w	800fc80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 800faac:	f242 030b 	movw	r3, #8203	; 0x200b
 800fab0:	429c      	cmp	r4, r3
 800fab2:	f000 80e5 	beq.w	800fc80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 800fab6:	2c00      	cmp	r4, #0
 800fab8:	f000 80f7 	beq.w	800fcaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 800fabc:	2c0a      	cmp	r4, #10
 800fabe:	d060      	beq.n	800fb82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800fac0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800fac2:	b36a      	cbz	r2, 800fb20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800fac4:	8894      	ldrh	r4, [r2, #4]
 800fac6:	f1bb 0f00 	cmp.w	fp, #0
 800faca:	d03b      	beq.n	800fb44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800facc:	f892 900d 	ldrb.w	r9, [r2, #13]
 800fad0:	f1bb 0f01 	cmp.w	fp, #1
 800fad4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800fad8:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800fadc:	f892 900a 	ldrb.w	r9, [r2, #10]
 800fae0:	ea49 0903 	orr.w	r9, r9, r3
 800fae4:	d134      	bne.n	800fb50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800fae6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fae8:	eba5 0509 	sub.w	r5, r5, r9
 800faec:	2b00      	cmp	r3, #0
 800faee:	d14f      	bne.n	800fb90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800faf0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800faf2:	eb09 0305 	add.w	r3, r9, r5
 800faf6:	4413      	add	r3, r2
 800faf8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800fafa:	f9b2 2000 	ldrsh.w	r2, [r2]
 800fafe:	4293      	cmp	r3, r2
 800fb00:	da51      	bge.n	800fba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800fb02:	e038      	b.n	800fb76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800fb04:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800fb06:	e79d      	b.n	800fa44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800fb08:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800fb0c:	4659      	mov	r1, fp
 800fb0e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800fb10:	9301      	str	r3, [sp, #4]
 800fb12:	ab1d      	add	r3, sp, #116	; 0x74
 800fb14:	9300      	str	r3, [sp, #0]
 800fb16:	ab1c      	add	r3, sp, #112	; 0x70
 800fb18:	f002 fe64 	bl	80127e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800fb1c:	4604      	mov	r4, r0
 800fb1e:	e7c0      	b.n	800faa2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800fb20:	f8d8 0000 	ldr.w	r0, [r8]
 800fb24:	6803      	ldr	r3, [r0, #0]
 800fb26:	691b      	ldr	r3, [r3, #16]
 800fb28:	4798      	blx	r3
 800fb2a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800fb2e:	4298      	cmp	r0, r3
 800fb30:	f000 80a6 	beq.w	800fc80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 800fb34:	f242 030b 	movw	r3, #8203	; 0x200b
 800fb38:	4298      	cmp	r0, r3
 800fb3a:	f000 80a1 	beq.w	800fc80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 800fb3e:	f1bb 0f00 	cmp.w	fp, #0
 800fb42:	d100      	bne.n	800fb46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800fb44:	444d      	add	r5, r9
 800fb46:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800fb48:	2a00      	cmp	r2, #0
 800fb4a:	d1bf      	bne.n	800facc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800fb4c:	4691      	mov	r9, r2
 800fb4e:	e097      	b.n	800fc80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 800fb50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fb52:	2b00      	cmp	r3, #0
 800fb54:	f000 80ab 	beq.w	800fcae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b8>
 800fb58:	f1bb 0f00 	cmp.w	fp, #0
 800fb5c:	d118      	bne.n	800fb90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800fb5e:	f8d8 0000 	ldr.w	r0, [r8]
 800fb62:	990d      	ldr	r1, [sp, #52]	; 0x34
 800fb64:	6803      	ldr	r3, [r0, #0]
 800fb66:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fb68:	4798      	blx	r3
 800fb6a:	4405      	add	r5, r0
 800fb6c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fb6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fb70:	1aeb      	subs	r3, r5, r3
 800fb72:	4293      	cmp	r3, r2
 800fb74:	dd17      	ble.n	800fba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800fb76:	2c00      	cmp	r4, #0
 800fb78:	f000 8097 	beq.w	800fcaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 800fb7c:	2c0a      	cmp	r4, #10
 800fb7e:	f040 8085 	bne.w	800fc8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800fb82:	240a      	movs	r4, #10
 800fb84:	fab4 f084 	clz	r0, r4
 800fb88:	0940      	lsrs	r0, r0, #5
 800fb8a:	b01f      	add	sp, #124	; 0x7c
 800fb8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fb90:	f8d8 0000 	ldr.w	r0, [r8]
 800fb94:	990d      	ldr	r1, [sp, #52]	; 0x34
 800fb96:	6803      	ldr	r3, [r0, #0]
 800fb98:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fb9a:	4798      	blx	r3
 800fb9c:	f1bb 0f01 	cmp.w	fp, #1
 800fba0:	eba5 0500 	sub.w	r5, r5, r0
 800fba4:	d0a4      	beq.n	800faf0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800fba6:	981c      	ldr	r0, [sp, #112]	; 0x70
 800fba8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800fbaa:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800fbae:	f9b3 6000 	ldrsh.w	r6, [r3]
 800fbb2:	7b43      	ldrb	r3, [r0, #13]
 800fbb4:	4429      	add	r1, r5
 800fbb6:	015b      	lsls	r3, r3, #5
 800fbb8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fbbc:	7983      	ldrb	r3, [r0, #6]
 800fbbe:	4313      	orrs	r3, r2
 800fbc0:	440b      	add	r3, r1
 800fbc2:	42b3      	cmp	r3, r6
 800fbc4:	db5c      	blt.n	800fc80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 800fbc6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fbc8:	4299      	cmp	r1, r3
 800fbca:	da59      	bge.n	800fc80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 800fbcc:	f8d8 0000 	ldr.w	r0, [r8]
 800fbd0:	42ae      	cmp	r6, r5
 800fbd2:	6803      	ldr	r3, [r0, #0]
 800fbd4:	bfcc      	ite	gt
 800fbd6:	1b76      	subgt	r6, r6, r5
 800fbd8:	2600      	movle	r6, #0
 800fbda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fbdc:	bfc8      	it	gt
 800fbde:	b2b6      	uxthgt	r6, r6
 800fbe0:	4798      	blx	r3
 800fbe2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800fbe4:	7b5a      	ldrb	r2, [r3, #13]
 800fbe6:	00d1      	lsls	r1, r2, #3
 800fbe8:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800fbec:	7a19      	ldrb	r1, [r3, #8]
 800fbee:	4339      	orrs	r1, r7
 800fbf0:	0657      	lsls	r7, r2, #25
 800fbf2:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800fbf4:	bf48      	it	mi
 800fbf6:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800fbfa:	4407      	add	r7, r0
 800fbfc:	bf48      	it	mi
 800fbfe:	b209      	sxthmi	r1, r1
 800fc00:	1a7f      	subs	r7, r7, r1
 800fc02:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800fc04:	b2bf      	uxth	r7, r7
 800fc06:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800fc0a:	fa0f fa87 	sxth.w	sl, r7
 800fc0e:	4551      	cmp	r1, sl
 800fc10:	dd3a      	ble.n	800fc88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800fc12:	0112      	lsls	r2, r2, #4
 800fc14:	79d8      	ldrb	r0, [r3, #7]
 800fc16:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800fc1a:	4302      	orrs	r2, r0
 800fc1c:	4492      	add	sl, r2
 800fc1e:	4551      	cmp	r1, sl
 800fc20:	dc2e      	bgt.n	800fc80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 800fc22:	1bcf      	subs	r7, r1, r7
 800fc24:	468a      	mov	sl, r1
 800fc26:	b2bf      	uxth	r7, r7
 800fc28:	9319      	str	r3, [sp, #100]	; 0x64
 800fc2a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800fc2c:	f8d8 0000 	ldr.w	r0, [r8]
 800fc30:	681a      	ldr	r2, [r3, #0]
 800fc32:	6801      	ldr	r1, [r0, #0]
 800fc34:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800fc36:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800fc38:	9313      	str	r3, [sp, #76]	; 0x4c
 800fc3a:	9218      	str	r2, [sp, #96]	; 0x60
 800fc3c:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800fc3e:	4788      	blx	r1
 800fc40:	f898 1006 	ldrb.w	r1, [r8, #6]
 800fc44:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800fc46:	910b      	str	r1, [sp, #44]	; 0x2c
 800fc48:	f898 100e 	ldrb.w	r1, [r8, #14]
 800fc4c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800fc4e:	910a      	str	r1, [sp, #40]	; 0x28
 800fc50:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800fc54:	9109      	str	r1, [sp, #36]	; 0x24
 800fc56:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800fc5a:	9305      	str	r3, [sp, #20]
 800fc5c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800fc5e:	9206      	str	r2, [sp, #24]
 800fc60:	e9cd a601 	strd	sl, r6, [sp, #4]
 800fc64:	442e      	add	r6, r5
 800fc66:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800fc6a:	b236      	sxth	r6, r6
 800fc6c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800fc6e:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800fc72:	9600      	str	r6, [sp, #0]
 800fc74:	9916      	ldr	r1, [sp, #88]	; 0x58
 800fc76:	681a      	ldr	r2, [r3, #0]
 800fc78:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fc7a:	685b      	ldr	r3, [r3, #4]
 800fc7c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fc7e:	47b0      	blx	r6
 800fc80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fc82:	3301      	adds	r3, #1
 800fc84:	930e      	str	r3, [sp, #56]	; 0x38
 800fc86:	e6e5      	b.n	800fa54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800fc88:	2700      	movs	r7, #0
 800fc8a:	e7cd      	b.n	800fc28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 800fc8c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800fc8e:	3501      	adds	r5, #1
 800fc90:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800fc92:	429d      	cmp	r5, r3
 800fc94:	f6bf af76 	bge.w	800fb84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800fc98:	4659      	mov	r1, fp
 800fc9a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800fc9c:	f7f3 ff6c 	bl	8003b78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fca0:	4604      	mov	r4, r0
 800fca2:	b110      	cbz	r0, 800fcaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 800fca4:	280a      	cmp	r0, #10
 800fca6:	d1f2      	bne.n	800fc8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800fca8:	e76b      	b.n	800fb82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800fcaa:	2400      	movs	r4, #0
 800fcac:	e76a      	b.n	800fb84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800fcae:	f1bb 0f00 	cmp.w	fp, #0
 800fcb2:	f43f af5b 	beq.w	800fb6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800fcb6:	e776      	b.n	800fba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800fcb8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800fcb8:	b530      	push	{r4, r5, lr}
 800fcba:	8a44      	ldrh	r4, [r0, #18]
 800fcbc:	8ac5      	ldrh	r5, [r0, #22]
 800fcbe:	82c3      	strh	r3, [r0, #22]
 800fcc0:	442c      	add	r4, r5
 800fcc2:	1ae4      	subs	r4, r4, r3
 800fcc4:	8b03      	ldrh	r3, [r0, #24]
 800fcc6:	8244      	strh	r4, [r0, #18]
 800fcc8:	8a84      	ldrh	r4, [r0, #20]
 800fcca:	4422      	add	r2, r4
 800fccc:	440c      	add	r4, r1
 800fcce:	1a59      	subs	r1, r3, r1
 800fcd0:	8342      	strh	r2, [r0, #26]
 800fcd2:	8284      	strh	r4, [r0, #20]
 800fcd4:	8301      	strh	r1, [r0, #24]
 800fcd6:	bd30      	pop	{r4, r5, pc}

0800fcd8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800fcd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fcdc:	7a43      	ldrb	r3, [r0, #9]
 800fcde:	b087      	sub	sp, #28
 800fce0:	4604      	mov	r4, r0
 800fce2:	460f      	mov	r7, r1
 800fce4:	1eda      	subs	r2, r3, #3
 800fce6:	b2d2      	uxtb	r2, r2
 800fce8:	2900      	cmp	r1, #0
 800fcea:	d036      	beq.n	800fd5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800fcec:	2a01      	cmp	r2, #1
 800fcee:	d932      	bls.n	800fd56 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800fcf0:	1e58      	subs	r0, r3, #1
 800fcf2:	f1d0 0b00 	rsbs	fp, r0, #0
 800fcf6:	eb4b 0b00 	adc.w	fp, fp, r0
 800fcfa:	1e99      	subs	r1, r3, #2
 800fcfc:	424b      	negs	r3, r1
 800fcfe:	414b      	adcs	r3, r1
 800fd00:	9303      	str	r3, [sp, #12]
 800fd02:	2300      	movs	r3, #0
 800fd04:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800fd08:	2500      	movs	r5, #0
 800fd0a:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800fd0e:	46a9      	mov	r9, r5
 800fd10:	8265      	strh	r5, [r4, #18]
 800fd12:	82a5      	strh	r5, [r4, #20]
 800fd14:	2300      	movs	r3, #0
 800fd16:	9305      	str	r3, [sp, #20]
 800fd18:	8823      	ldrh	r3, [r4, #0]
 800fd1a:	2b20      	cmp	r3, #32
 800fd1c:	d02b      	beq.n	800fd76 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800fd1e:	eba3 020a 	sub.w	r2, r3, sl
 800fd22:	4256      	negs	r6, r2
 800fd24:	4156      	adcs	r6, r2
 800fd26:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800fd2a:	4293      	cmp	r3, r2
 800fd2c:	d004      	beq.n	800fd38 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800fd2e:	4553      	cmp	r3, sl
 800fd30:	bf16      	itet	ne
 800fd32:	4699      	movne	r9, r3
 800fd34:	2601      	moveq	r6, #1
 800fd36:	2600      	movne	r6, #0
 800fd38:	ab05      	add	r3, sp, #20
 800fd3a:	68e2      	ldr	r2, [r4, #12]
 800fd3c:	7a21      	ldrb	r1, [r4, #8]
 800fd3e:	6860      	ldr	r0, [r4, #4]
 800fd40:	f002 fcf8 	bl	8012734 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fd44:	8020      	strh	r0, [r4, #0]
 800fd46:	b9c8      	cbnz	r0, 800fd7c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800fd48:	8b22      	ldrh	r2, [r4, #24]
 800fd4a:	2300      	movs	r3, #0
 800fd4c:	4611      	mov	r1, r2
 800fd4e:	4620      	mov	r0, r4
 800fd50:	f7ff ffb2 	bl	800fcb8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800fd54:	e066      	b.n	800fe24 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800fd56:	468b      	mov	fp, r1
 800fd58:	e7cf      	b.n	800fcfa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800fd5a:	3b01      	subs	r3, #1
 800fd5c:	2a01      	cmp	r2, #1
 800fd5e:	9103      	str	r1, [sp, #12]
 800fd60:	468b      	mov	fp, r1
 800fd62:	bf8c      	ite	hi
 800fd64:	2200      	movhi	r2, #0
 800fd66:	2201      	movls	r2, #1
 800fd68:	2b01      	cmp	r3, #1
 800fd6a:	9202      	str	r2, [sp, #8]
 800fd6c:	bf8c      	ite	hi
 800fd6e:	2300      	movhi	r3, #0
 800fd70:	2301      	movls	r3, #1
 800fd72:	9301      	str	r3, [sp, #4]
 800fd74:	e7c8      	b.n	800fd08 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800fd76:	4699      	mov	r9, r3
 800fd78:	2601      	movs	r6, #1
 800fd7a:	e7dd      	b.n	800fd38 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800fd7c:	8ae3      	ldrh	r3, [r4, #22]
 800fd7e:	280a      	cmp	r0, #10
 800fd80:	f103 0301 	add.w	r3, r3, #1
 800fd84:	82e3      	strh	r3, [r4, #22]
 800fd86:	d0df      	beq.n	800fd48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800fd88:	9a05      	ldr	r2, [sp, #20]
 800fd8a:	bb42      	cbnz	r2, 800fdde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800fd8c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800fd90:	4298      	cmp	r0, r3
 800fd92:	d001      	beq.n	800fd98 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800fd94:	4550      	cmp	r0, sl
 800fd96:	d1bd      	bne.n	800fd14 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd98:	8823      	ldrh	r3, [r4, #0]
 800fd9a:	8b21      	ldrh	r1, [r4, #24]
 800fd9c:	2b20      	cmp	r3, #32
 800fd9e:	d001      	beq.n	800fda4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800fda0:	4553      	cmp	r3, sl
 800fda2:	d131      	bne.n	800fe08 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800fda4:	2e00      	cmp	r6, #0
 800fda6:	bf0a      	itet	eq
 800fda8:	460d      	moveq	r5, r1
 800fdaa:	4630      	movne	r0, r6
 800fdac:	2001      	moveq	r0, #1
 800fdae:	440a      	add	r2, r1
 800fdb0:	8aa3      	ldrh	r3, [r4, #20]
 800fdb2:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800fdb6:	b292      	uxth	r2, r2
 800fdb8:	8322      	strh	r2, [r4, #24]
 800fdba:	4413      	add	r3, r2
 800fdbc:	2f00      	cmp	r7, #0
 800fdbe:	d03a      	beq.n	800fe36 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800fdc0:	f1bb 0f00 	cmp.w	fp, #0
 800fdc4:	d102      	bne.n	800fdcc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800fdc6:	9903      	ldr	r1, [sp, #12]
 800fdc8:	b301      	cbz	r1, 800fe0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800fdca:	b1f8      	cbz	r0, 800fe0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800fdcc:	8ba1      	ldrh	r1, [r4, #28]
 800fdce:	4419      	add	r1, r3
 800fdd0:	458c      	cmp	ip, r1
 800fdd2:	da2a      	bge.n	800fe2a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800fdd4:	8a61      	ldrh	r1, [r4, #18]
 800fdd6:	b341      	cbz	r1, 800fe2a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800fdd8:	4563      	cmp	r3, ip
 800fdda:	dd9b      	ble.n	800fd14 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fddc:	e01c      	b.n	800fe18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800fdde:	8893      	ldrh	r3, [r2, #4]
 800fde0:	4649      	mov	r1, r9
 800fde2:	8023      	strh	r3, [r4, #0]
 800fde4:	f892 800d 	ldrb.w	r8, [r2, #13]
 800fde8:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800fdec:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800fdf0:	f892 800a 	ldrb.w	r8, [r2, #10]
 800fdf4:	ea48 0800 	orr.w	r8, r8, r0
 800fdf8:	68e0      	ldr	r0, [r4, #12]
 800fdfa:	6803      	ldr	r3, [r0, #0]
 800fdfc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fdfe:	4798      	blx	r3
 800fe00:	eb08 0200 	add.w	r2, r8, r0
 800fe04:	b292      	uxth	r2, r2
 800fe06:	e7c7      	b.n	800fd98 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800fe08:	2000      	movs	r0, #0
 800fe0a:	e7d0      	b.n	800fdae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800fe0c:	4563      	cmp	r3, ip
 800fe0e:	dd81      	ble.n	800fd14 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fe10:	8a63      	ldrh	r3, [r4, #18]
 800fe12:	2b00      	cmp	r3, #0
 800fe14:	f43f af7e 	beq.w	800fd14 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fe18:	2301      	movs	r3, #1
 800fe1a:	8ba2      	ldrh	r2, [r4, #28]
 800fe1c:	77a3      	strb	r3, [r4, #30]
 800fe1e:	8b63      	ldrh	r3, [r4, #26]
 800fe20:	4413      	add	r3, r2
 800fe22:	8363      	strh	r3, [r4, #26]
 800fe24:	b007      	add	sp, #28
 800fe26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe2a:	2300      	movs	r3, #0
 800fe2c:	4611      	mov	r1, r2
 800fe2e:	4620      	mov	r0, r4
 800fe30:	f7ff ff42 	bl	800fcb8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800fe34:	e76e      	b.n	800fd14 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fe36:	4563      	cmp	r3, ip
 800fe38:	dd14      	ble.n	800fe64 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800fe3a:	9b02      	ldr	r3, [sp, #8]
 800fe3c:	b113      	cbz	r3, 800fe44 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800fe3e:	2301      	movs	r3, #1
 800fe40:	460a      	mov	r2, r1
 800fe42:	e783      	b.n	800fd4c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800fe44:	9b01      	ldr	r3, [sp, #4]
 800fe46:	2b00      	cmp	r3, #0
 800fe48:	f43f af64 	beq.w	800fd14 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fe4c:	2800      	cmp	r0, #0
 800fe4e:	f47f af61 	bne.w	800fd14 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fe52:	b116      	cbz	r6, 800fe5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800fe54:	2301      	movs	r3, #1
 800fe56:	462a      	mov	r2, r5
 800fe58:	e779      	b.n	800fd4e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800fe5a:	8a63      	ldrh	r3, [r4, #18]
 800fe5c:	2b00      	cmp	r3, #0
 800fe5e:	f43f af59 	beq.w	800fd14 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fe62:	e7df      	b.n	800fe24 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800fe64:	2800      	cmp	r0, #0
 800fe66:	f47f af55 	bne.w	800fd14 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fe6a:	2e00      	cmp	r6, #0
 800fe6c:	f43f af52 	beq.w	800fd14 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fe70:	2301      	movs	r3, #1
 800fe72:	462a      	mov	r2, r5
 800fe74:	e7db      	b.n	800fe2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800fe76 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800fe76:	b530      	push	{r4, r5, lr}
 800fe78:	4605      	mov	r5, r0
 800fe7a:	b08b      	sub	sp, #44	; 0x2c
 800fe7c:	b191      	cbz	r1, 800fea4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800fe7e:	2401      	movs	r4, #1
 800fe80:	e9cd 3100 	strd	r3, r1, [sp]
 800fe84:	4613      	mov	r3, r2
 800fe86:	4601      	mov	r1, r0
 800fe88:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800fe8c:	a802      	add	r0, sp, #8
 800fe8e:	f7ff fd0b 	bl	800f8a8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800fe92:	2100      	movs	r1, #0
 800fe94:	a802      	add	r0, sp, #8
 800fe96:	f7ff ff1f 	bl	800fcd8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800fe9a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800fe9e:	b163      	cbz	r3, 800feba <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800fea0:	3401      	adds	r4, #1
 800fea2:	e7f6      	b.n	800fe92 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800fea4:	2401      	movs	r4, #1
 800fea6:	f002 fd3d 	bl	8012924 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800feaa:	280a      	cmp	r0, #10
 800feac:	4628      	mov	r0, r5
 800feae:	bf08      	it	eq
 800feb0:	3401      	addeq	r4, #1
 800feb2:	f002 fd37 	bl	8012924 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800feb6:	2800      	cmp	r0, #0
 800feb8:	d1f7      	bne.n	800feaa <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800feba:	b2a0      	uxth	r0, r4
 800febc:	b00b      	add	sp, #44	; 0x2c
 800febe:	bd30      	pop	{r4, r5, pc}

0800fec0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800fec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fec4:	b0db      	sub	sp, #364	; 0x16c
 800fec6:	4689      	mov	r9, r1
 800fec8:	461c      	mov	r4, r3
 800feca:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 800fece:	900a      	str	r0, [sp, #40]	; 0x28
 800fed0:	f1ba 0f00 	cmp.w	sl, #0
 800fed4:	f000 80a5 	beq.w	8010022 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800fed8:	681b      	ldr	r3, [r3, #0]
 800feda:	2b00      	cmp	r3, #0
 800fedc:	f000 80a1 	beq.w	8010022 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800fee0:	7ba3      	ldrb	r3, [r4, #14]
 800fee2:	2b00      	cmp	r3, #0
 800fee4:	f000 809d 	beq.w	8010022 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800fee8:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800feec:	6810      	ldr	r0, [r2, #0]
 800feee:	6851      	ldr	r1, [r2, #4]
 800fef0:	2500      	movs	r5, #0
 800fef2:	4643      	mov	r3, r8
 800fef4:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800fef8:	950e      	str	r5, [sp, #56]	; 0x38
 800fefa:	af18      	add	r7, sp, #96	; 0x60
 800fefc:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800ff00:	79a2      	ldrb	r2, [r4, #6]
 800ff02:	c303      	stmia	r3!, {r0, r1}
 800ff04:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800ff08:	a90e      	add	r1, sp, #56	; 0x38
 800ff0a:	4640      	mov	r0, r8
 800ff0c:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800ff10:	f7ff fd40 	bl	800f994 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800ff14:	a90e      	add	r1, sp, #56	; 0x38
 800ff16:	79a2      	ldrb	r2, [r4, #6]
 800ff18:	4608      	mov	r0, r1
 800ff1a:	f7ff fd3b 	bl	800f994 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800ff1e:	4638      	mov	r0, r7
 800ff20:	f002 f8c9 	bl	80120b6 <_ZN8touchgfx12TextProviderC1Ev>
 800ff24:	6820      	ldr	r0, [r4, #0]
 800ff26:	6803      	ldr	r3, [r0, #0]
 800ff28:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ff2a:	4798      	blx	r3
 800ff2c:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800ff2e:	4603      	mov	r3, r0
 800ff30:	4651      	mov	r1, sl
 800ff32:	4638      	mov	r0, r7
 800ff34:	f002 f904 	bl	8012140 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ff38:	7923      	ldrb	r3, [r4, #4]
 800ff3a:	6820      	ldr	r0, [r4, #0]
 800ff3c:	9308      	str	r3, [sp, #32]
 800ff3e:	6803      	ldr	r3, [r0, #0]
 800ff40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ff42:	4798      	blx	r3
 800ff44:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ff48:	181e      	adds	r6, r3, r0
 800ff4a:	42ae      	cmp	r6, r5
 800ff4c:	dd06      	ble.n	800ff5c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800ff4e:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800ff52:	4282      	cmp	r2, r0
 800ff54:	bfa4      	itt	ge
 800ff56:	189d      	addge	r5, r3, r2
 800ff58:	fb95 f5f6 	sdivge	r5, r5, r6
 800ff5c:	a82e      	add	r0, sp, #184	; 0xb8
 800ff5e:	f002 f8aa 	bl	80120b6 <_ZN8touchgfx12TextProviderC1Ev>
 800ff62:	7c23      	ldrb	r3, [r4, #16]
 800ff64:	b14b      	cbz	r3, 800ff7a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 800ff66:	6820      	ldr	r0, [r4, #0]
 800ff68:	6803      	ldr	r3, [r0, #0]
 800ff6a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ff6c:	4798      	blx	r3
 800ff6e:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800ff70:	4603      	mov	r3, r0
 800ff72:	4651      	mov	r1, sl
 800ff74:	a82e      	add	r0, sp, #184	; 0xb8
 800ff76:	f002 f8e3 	bl	8012140 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ff7a:	7c21      	ldrb	r1, [r4, #16]
 800ff7c:	a810      	add	r0, sp, #64	; 0x40
 800ff7e:	7963      	ldrb	r3, [r4, #5]
 800ff80:	9101      	str	r1, [sp, #4]
 800ff82:	6821      	ldr	r1, [r4, #0]
 800ff84:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800ff88:	9100      	str	r1, [sp, #0]
 800ff8a:	a92e      	add	r1, sp, #184	; 0xb8
 800ff8c:	f7ff fc8c 	bl	800f8a8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800ff90:	7c23      	ldrb	r3, [r4, #16]
 800ff92:	b9bb      	cbnz	r3, 800ffc4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 800ff94:	fa1f fa86 	uxth.w	sl, r6
 800ff98:	2d00      	cmp	r5, #0
 800ff9a:	dd45      	ble.n	8010028 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800ff9c:	4638      	mov	r0, r7
 800ff9e:	f002 fcc1 	bl	8012924 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ffa2:	2800      	cmp	r0, #0
 800ffa4:	d03d      	beq.n	8010022 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800ffa6:	280a      	cmp	r0, #10
 800ffa8:	d1f6      	bne.n	800ff98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800ffaa:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800ffae:	3d01      	subs	r5, #1
 800ffb0:	4453      	add	r3, sl
 800ffb2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800ffb6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800ffba:	eba3 030a 	sub.w	r3, r3, sl
 800ffbe:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800ffc2:	e7e9      	b.n	800ff98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800ffc4:	0073      	lsls	r3, r6, #1
 800ffc6:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800ffca:	fa1f fa86 	uxth.w	sl, r6
 800ffce:	9309      	str	r3, [sp, #36]	; 0x24
 800ffd0:	2d00      	cmp	r5, #0
 800ffd2:	dd29      	ble.n	8010028 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800ffd4:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800ffd8:	a810      	add	r0, sp, #64	; 0x40
 800ffda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ffdc:	428b      	cmp	r3, r1
 800ffde:	bfd4      	ite	le
 800ffe0:	2100      	movle	r1, #0
 800ffe2:	2101      	movgt	r1, #1
 800ffe4:	f7ff fe78 	bl	800fcd8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800ffe8:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 800ffec:	3b01      	subs	r3, #1
 800ffee:	b29b      	uxth	r3, r3
 800fff0:	455b      	cmp	r3, fp
 800fff2:	930b      	str	r3, [sp, #44]	; 0x2c
 800fff4:	d005      	beq.n	8010002 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800fff6:	7961      	ldrb	r1, [r4, #5]
 800fff8:	4638      	mov	r0, r7
 800fffa:	f7f3 fdbd 	bl	8003b78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fffe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010000:	e7f4      	b.n	800ffec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 8010002:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8010006:	3d01      	subs	r5, #1
 8010008:	4453      	add	r3, sl
 801000a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801000e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010012:	eba3 030a 	sub.w	r3, r3, sl
 8010016:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801001a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801001e:	2b00      	cmp	r3, #0
 8010020:	d1d6      	bne.n	800ffd0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 8010022:	b05b      	add	sp, #364	; 0x16c
 8010024:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010028:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 801002c:	ad44      	add	r5, sp, #272	; 0x110
 801002e:	f04f 0b00 	mov.w	fp, #0
 8010032:	7c23      	ldrb	r3, [r4, #16]
 8010034:	2b00      	cmp	r3, #0
 8010036:	d067      	beq.n	8010108 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 8010038:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 801003c:	a810      	add	r0, sp, #64	; 0x40
 801003e:	458a      	cmp	sl, r1
 8010040:	bfd4      	ite	le
 8010042:	2100      	movle	r1, #0
 8010044:	2101      	movgt	r1, #1
 8010046:	f7ff fe47 	bl	800fcd8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801004a:	9b08      	ldr	r3, [sp, #32]
 801004c:	2b00      	cmp	r3, #0
 801004e:	d056      	beq.n	80100fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8010050:	7c23      	ldrb	r3, [r4, #16]
 8010052:	2258      	movs	r2, #88	; 0x58
 8010054:	4639      	mov	r1, r7
 8010056:	4628      	mov	r0, r5
 8010058:	9309      	str	r3, [sp, #36]	; 0x24
 801005a:	f010 ff07 	bl	8020e6c <memcpy>
 801005e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010060:	2b00      	cmp	r3, #0
 8010062:	d059      	beq.n	8010118 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 8010064:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 8010068:	7922      	ldrb	r2, [r4, #4]
 801006a:	2a01      	cmp	r2, #1
 801006c:	d13d      	bne.n	80100ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 801006e:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 8010072:	1ac0      	subs	r0, r0, r3
 8010074:	2302      	movs	r3, #2
 8010076:	fb90 f0f3 	sdiv	r0, r0, r3
 801007a:	b200      	sxth	r0, r0
 801007c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010080:	4418      	add	r0, r3
 8010082:	7c23      	ldrb	r3, [r4, #16]
 8010084:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 8010088:	2b00      	cmp	r3, #0
 801008a:	d03a      	beq.n	8010102 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 801008c:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 8010090:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 8010094:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8010098:	9500      	str	r5, [sp, #0]
 801009a:	980a      	ldr	r0, [sp, #40]	; 0x28
 801009c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80100a0:	e9cd b703 	strd	fp, r7, [sp, #12]
 80100a4:	e9cd 8401 	strd	r8, r4, [sp, #4]
 80100a8:	464a      	mov	r2, r9
 80100aa:	2100      	movs	r1, #0
 80100ac:	f7ff fca3 	bl	800f9f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80100b0:	2800      	cmp	r0, #0
 80100b2:	d1b6      	bne.n	8010022 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 80100b4:	b2b2      	uxth	r2, r6
 80100b6:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 80100ba:	4611      	mov	r1, r2
 80100bc:	4413      	add	r3, r2
 80100be:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 80100c2:	b21b      	sxth	r3, r3
 80100c4:	1a52      	subs	r2, r2, r1
 80100c6:	7c21      	ldrb	r1, [r4, #16]
 80100c8:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80100cc:	b212      	sxth	r2, r2
 80100ce:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 80100d2:	b109      	cbz	r1, 80100d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 80100d4:	42b2      	cmp	r2, r6
 80100d6:	dba4      	blt.n	8010022 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 80100d8:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 80100dc:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 80100e0:	440a      	add	r2, r1
 80100e2:	b212      	sxth	r2, r2
 80100e4:	4293      	cmp	r3, r2
 80100e6:	dda4      	ble.n	8010032 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 80100e8:	e79b      	b.n	8010022 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 80100ea:	2a02      	cmp	r2, #2
 80100ec:	d105      	bne.n	80100fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 80100ee:	7be2      	ldrb	r2, [r4, #15]
 80100f0:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 80100f4:	1a80      	subs	r0, r0, r2
 80100f6:	1ac0      	subs	r0, r0, r3
 80100f8:	e7bf      	b.n	801007a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 80100fa:	2000      	movs	r0, #0
 80100fc:	e7be      	b.n	801007c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 80100fe:	7be0      	ldrb	r0, [r4, #15]
 8010100:	e7bc      	b.n	801007c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 8010102:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010106:	e7c3      	b.n	8010090 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 8010108:	9b08      	ldr	r3, [sp, #32]
 801010a:	2b00      	cmp	r3, #0
 801010c:	d0f7      	beq.n	80100fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801010e:	2258      	movs	r2, #88	; 0x58
 8010110:	4639      	mov	r1, r7
 8010112:	4628      	mov	r0, r5
 8010114:	f010 feaa 	bl	8020e6c <memcpy>
 8010118:	2300      	movs	r3, #0
 801011a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801011e:	6821      	ldr	r1, [r4, #0]
 8010120:	4628      	mov	r0, r5
 8010122:	f7ff fbfb 	bl	800f91c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010126:	b203      	sxth	r3, r0
 8010128:	e79e      	b.n	8010068 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0801012a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801012a:	2b02      	cmp	r3, #2
 801012c:	b510      	push	{r4, lr}
 801012e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010132:	d00b      	beq.n	801014c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 8010134:	2b03      	cmp	r3, #3
 8010136:	d00e      	beq.n	8010156 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 8010138:	2b01      	cmp	r3, #1
 801013a:	d001      	beq.n	8010140 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 801013c:	1860      	adds	r0, r4, r1
 801013e:	bd10      	pop	{r4, pc}
 8010140:	8880      	ldrh	r0, [r0, #4]
 8010142:	4420      	add	r0, r4
 8010144:	b200      	sxth	r0, r0
 8010146:	1a80      	subs	r0, r0, r2
 8010148:	3801      	subs	r0, #1
 801014a:	e7f8      	b.n	801013e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 801014c:	8880      	ldrh	r0, [r0, #4]
 801014e:	4420      	add	r0, r4
 8010150:	b200      	sxth	r0, r0
 8010152:	1a40      	subs	r0, r0, r1
 8010154:	e7f8      	b.n	8010148 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010156:	18a0      	adds	r0, r4, r2
 8010158:	e7f1      	b.n	801013e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0801015a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801015a:	2b02      	cmp	r3, #2
 801015c:	b510      	push	{r4, lr}
 801015e:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8010162:	d006      	beq.n	8010172 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 8010164:	2b03      	cmp	r3, #3
 8010166:	d00a      	beq.n	801017e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010168:	2b01      	cmp	r3, #1
 801016a:	bf14      	ite	ne
 801016c:	18a0      	addne	r0, r4, r2
 801016e:	1860      	addeq	r0, r4, r1
 8010170:	bd10      	pop	{r4, pc}
 8010172:	88c0      	ldrh	r0, [r0, #6]
 8010174:	4420      	add	r0, r4
 8010176:	b200      	sxth	r0, r0
 8010178:	1a80      	subs	r0, r0, r2
 801017a:	3801      	subs	r0, #1
 801017c:	e7f8      	b.n	8010170 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 801017e:	88c0      	ldrh	r0, [r0, #6]
 8010180:	4420      	add	r0, r4
 8010182:	b200      	sxth	r0, r0
 8010184:	1a40      	subs	r0, r0, r1
 8010186:	e7f8      	b.n	801017a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

08010188 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010188:	4b01      	ldr	r3, [pc, #4]	; (8010190 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801018a:	2200      	movs	r2, #0
 801018c:	601a      	str	r2, [r3, #0]
 801018e:	4770      	bx	lr
 8010190:	200125b8 	.word	0x200125b8

08010194 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010194:	4603      	mov	r3, r0
 8010196:	b1c8      	cbz	r0, 80101cc <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010198:	0c02      	lsrs	r2, r0, #16
 801019a:	0412      	lsls	r2, r2, #16
 801019c:	b9a2      	cbnz	r2, 80101c8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801019e:	0403      	lsls	r3, r0, #16
 80101a0:	2010      	movs	r0, #16
 80101a2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80101a6:	bf04      	itt	eq
 80101a8:	021b      	lsleq	r3, r3, #8
 80101aa:	3008      	addeq	r0, #8
 80101ac:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80101b0:	bf04      	itt	eq
 80101b2:	011b      	lsleq	r3, r3, #4
 80101b4:	3004      	addeq	r0, #4
 80101b6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80101ba:	bf04      	itt	eq
 80101bc:	009b      	lsleq	r3, r3, #2
 80101be:	3002      	addeq	r0, #2
 80101c0:	2b00      	cmp	r3, #0
 80101c2:	db04      	blt.n	80101ce <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80101c4:	3001      	adds	r0, #1
 80101c6:	4770      	bx	lr
 80101c8:	2000      	movs	r0, #0
 80101ca:	e7ea      	b.n	80101a2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80101cc:	2020      	movs	r0, #32
 80101ce:	4770      	bx	lr

080101d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80101d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101d4:	b087      	sub	sp, #28
 80101d6:	4681      	mov	r9, r0
 80101d8:	4698      	mov	r8, r3
 80101da:	4610      	mov	r0, r2
 80101dc:	460d      	mov	r5, r1
 80101de:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80101e2:	b981      	cbnz	r1, 8010206 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 80101e4:	b14b      	cbz	r3, 80101fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 80101e6:	460b      	mov	r3, r1
 80101e8:	464a      	mov	r2, r9
 80101ea:	4641      	mov	r1, r8
 80101ec:	e9cd 4700 	strd	r4, r7, [sp]
 80101f0:	f7ff ffee 	bl	80101d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80101f4:	b007      	add	sp, #28
 80101f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80101fa:	f04f 33ff 	mov.w	r3, #4294967295
 80101fe:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010202:	603b      	str	r3, [r7, #0]
 8010204:	e7f6      	b.n	80101f4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010206:	fa32 fa01 	lsrs.w	sl, r2, r1
 801020a:	d107      	bne.n	801021c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 801020c:	fb09 f602 	mul.w	r6, r9, r2
 8010210:	fbb6 f0f4 	udiv	r0, r6, r4
 8010214:	fb04 6610 	mls	r6, r4, r0, r6
 8010218:	603e      	str	r6, [r7, #0]
 801021a:	e7eb      	b.n	80101f4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 801021c:	2601      	movs	r6, #1
 801021e:	fa09 fb01 	lsl.w	fp, r9, r1
 8010222:	408e      	lsls	r6, r1
 8010224:	fbbb f3f4 	udiv	r3, fp, r4
 8010228:	3e01      	subs	r6, #1
 801022a:	9302      	str	r3, [sp, #8]
 801022c:	fb0a f303 	mul.w	r3, sl, r3
 8010230:	4016      	ands	r6, r2
 8010232:	9303      	str	r3, [sp, #12]
 8010234:	4630      	mov	r0, r6
 8010236:	f7ff ffad 	bl	8010194 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801023a:	464a      	mov	r2, r9
 801023c:	460b      	mov	r3, r1
 801023e:	4601      	mov	r1, r0
 8010240:	4630      	mov	r0, r6
 8010242:	e9cd 4700 	strd	r4, r7, [sp]
 8010246:	f7ff ffc3 	bl	80101d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801024a:	9b02      	ldr	r3, [sp, #8]
 801024c:	4606      	mov	r6, r0
 801024e:	eb05 0108 	add.w	r1, r5, r8
 8010252:	fb04 bb13 	mls	fp, r4, r3, fp
 8010256:	4658      	mov	r0, fp
 8010258:	f7ff ff9c 	bl	8010194 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801025c:	ab05      	add	r3, sp, #20
 801025e:	465a      	mov	r2, fp
 8010260:	e9cd 4300 	strd	r4, r3, [sp]
 8010264:	4603      	mov	r3, r0
 8010266:	4650      	mov	r0, sl
 8010268:	f7ff ffb2 	bl	80101d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801026c:	6839      	ldr	r1, [r7, #0]
 801026e:	9a05      	ldr	r2, [sp, #20]
 8010270:	9b03      	ldr	r3, [sp, #12]
 8010272:	4411      	add	r1, r2
 8010274:	fbb1 f2f4 	udiv	r2, r1, r4
 8010278:	18d3      	adds	r3, r2, r3
 801027a:	fb04 1412 	mls	r4, r4, r2, r1
 801027e:	441e      	add	r6, r3
 8010280:	603c      	str	r4, [r7, #0]
 8010282:	4430      	add	r0, r6
 8010284:	e7b6      	b.n	80101f4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08010286 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010286:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801028a:	b085      	sub	sp, #20
 801028c:	f1b0 0900 	subs.w	r9, r0, #0
 8010290:	461d      	mov	r5, r3
 8010292:	4617      	mov	r7, r2
 8010294:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010296:	bfbb      	ittet	lt
 8010298:	f1c9 0900 	rsblt	r9, r9, #0
 801029c:	f04f 36ff 	movlt.w	r6, #4294967295
 80102a0:	2601      	movge	r6, #1
 80102a2:	6823      	ldrlt	r3, [r4, #0]
 80102a4:	bfbc      	itt	lt
 80102a6:	425b      	neglt	r3, r3
 80102a8:	6023      	strlt	r3, [r4, #0]
 80102aa:	2a00      	cmp	r2, #0
 80102ac:	da04      	bge.n	80102b8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80102ae:	6823      	ldr	r3, [r4, #0]
 80102b0:	4257      	negs	r7, r2
 80102b2:	4276      	negs	r6, r6
 80102b4:	425b      	negs	r3, r3
 80102b6:	6023      	str	r3, [r4, #0]
 80102b8:	2d00      	cmp	r5, #0
 80102ba:	4638      	mov	r0, r7
 80102bc:	bfba      	itte	lt
 80102be:	426d      	neglt	r5, r5
 80102c0:	f04f 38ff 	movlt.w	r8, #4294967295
 80102c4:	f04f 0801 	movge.w	r8, #1
 80102c8:	f7ff ff64 	bl	8010194 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80102cc:	ab03      	add	r3, sp, #12
 80102ce:	463a      	mov	r2, r7
 80102d0:	e9cd 5300 	strd	r5, r3, [sp]
 80102d4:	4603      	mov	r3, r0
 80102d6:	4648      	mov	r0, r9
 80102d8:	f7ff ff7a 	bl	80101d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80102dc:	6823      	ldr	r3, [r4, #0]
 80102de:	9a03      	ldr	r2, [sp, #12]
 80102e0:	4546      	cmp	r6, r8
 80102e2:	441a      	add	r2, r3
 80102e4:	fb92 f3f5 	sdiv	r3, r2, r5
 80102e8:	4418      	add	r0, r3
 80102ea:	fb05 2313 	mls	r3, r5, r3, r2
 80102ee:	bf18      	it	ne
 80102f0:	4240      	negne	r0, r0
 80102f2:	1c72      	adds	r2, r6, #1
 80102f4:	6023      	str	r3, [r4, #0]
 80102f6:	d105      	bne.n	8010304 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80102f8:	2b00      	cmp	r3, #0
 80102fa:	f1c3 0200 	rsb	r2, r3, #0
 80102fe:	db0b      	blt.n	8010318 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8010300:	6022      	str	r2, [r4, #0]
 8010302:	e006      	b.n	8010312 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010304:	2e01      	cmp	r6, #1
 8010306:	d104      	bne.n	8010312 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010308:	2b00      	cmp	r3, #0
 801030a:	da02      	bge.n	8010312 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801030c:	442b      	add	r3, r5
 801030e:	3801      	subs	r0, #1
 8010310:	6023      	str	r3, [r4, #0]
 8010312:	b005      	add	sp, #20
 8010314:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010318:	3801      	subs	r0, #1
 801031a:	1b52      	subs	r2, r2, r5
 801031c:	e7f0      	b.n	8010300 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08010320 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010320:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010324:	4c1c      	ldr	r4, [pc, #112]	; (8010398 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010326:	4605      	mov	r5, r0
 8010328:	6807      	ldr	r7, [r0, #0]
 801032a:	69a3      	ldr	r3, [r4, #24]
 801032c:	b92b      	cbnz	r3, 801033a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801032e:	6840      	ldr	r0, [r0, #4]
 8010330:	e9c5 7000 	strd	r7, r0, [r5]
 8010334:	b004      	add	sp, #16
 8010336:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801033a:	f04f 0802 	mov.w	r8, #2
 801033e:	68a2      	ldr	r2, [r4, #8]
 8010340:	ae04      	add	r6, sp, #16
 8010342:	6820      	ldr	r0, [r4, #0]
 8010344:	fb93 f1f8 	sdiv	r1, r3, r8
 8010348:	440a      	add	r2, r1
 801034a:	69e1      	ldr	r1, [r4, #28]
 801034c:	f846 2d04 	str.w	r2, [r6, #-4]!
 8010350:	463a      	mov	r2, r7
 8010352:	9600      	str	r6, [sp, #0]
 8010354:	f7ff ff97 	bl	8010286 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010358:	69a3      	ldr	r3, [r4, #24]
 801035a:	4607      	mov	r7, r0
 801035c:	686a      	ldr	r2, [r5, #4]
 801035e:	6a21      	ldr	r1, [r4, #32]
 8010360:	9600      	str	r6, [sp, #0]
 8010362:	6860      	ldr	r0, [r4, #4]
 8010364:	f7ff ff8f 	bl	8010286 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010368:	69a3      	ldr	r3, [r4, #24]
 801036a:	6962      	ldr	r2, [r4, #20]
 801036c:	4407      	add	r7, r0
 801036e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010370:	9600      	str	r6, [sp, #0]
 8010372:	68e0      	ldr	r0, [r4, #12]
 8010374:	fb93 f8f8 	sdiv	r8, r3, r8
 8010378:	4442      	add	r2, r8
 801037a:	9203      	str	r2, [sp, #12]
 801037c:	682a      	ldr	r2, [r5, #0]
 801037e:	f7ff ff82 	bl	8010286 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010382:	4680      	mov	r8, r0
 8010384:	9600      	str	r6, [sp, #0]
 8010386:	69a3      	ldr	r3, [r4, #24]
 8010388:	686a      	ldr	r2, [r5, #4]
 801038a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 801038c:	6920      	ldr	r0, [r4, #16]
 801038e:	f7ff ff7a 	bl	8010286 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010392:	4440      	add	r0, r8
 8010394:	e7cc      	b.n	8010330 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010396:	bf00      	nop
 8010398:	200125bc 	.word	0x200125bc

0801039c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801039c:	4b07      	ldr	r3, [pc, #28]	; (80103bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 801039e:	b510      	push	{r4, lr}
 80103a0:	781b      	ldrb	r3, [r3, #0]
 80103a2:	2b01      	cmp	r3, #1
 80103a4:	d108      	bne.n	80103b8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80103a6:	4b06      	ldr	r3, [pc, #24]	; (80103c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80103a8:	880c      	ldrh	r4, [r1, #0]
 80103aa:	881b      	ldrh	r3, [r3, #0]
 80103ac:	f9b0 2000 	ldrsh.w	r2, [r0]
 80103b0:	3b01      	subs	r3, #1
 80103b2:	1b1b      	subs	r3, r3, r4
 80103b4:	8003      	strh	r3, [r0, #0]
 80103b6:	800a      	strh	r2, [r1, #0]
 80103b8:	bd10      	pop	{r4, pc}
 80103ba:	bf00      	nop
 80103bc:	200125a8 	.word	0x200125a8
 80103c0:	200125ac 	.word	0x200125ac

080103c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80103c4:	4b0a      	ldr	r3, [pc, #40]	; (80103f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80103c6:	b510      	push	{r4, lr}
 80103c8:	781b      	ldrb	r3, [r3, #0]
 80103ca:	2b01      	cmp	r3, #1
 80103cc:	d10e      	bne.n	80103ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80103ce:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80103d2:	8843      	ldrh	r3, [r0, #2]
 80103d4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80103d8:	18ca      	adds	r2, r1, r3
 80103da:	4b06      	ldr	r3, [pc, #24]	; (80103f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80103dc:	8044      	strh	r4, [r0, #2]
 80103de:	881b      	ldrh	r3, [r3, #0]
 80103e0:	1a9b      	subs	r3, r3, r2
 80103e2:	8003      	strh	r3, [r0, #0]
 80103e4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80103e8:	8081      	strh	r1, [r0, #4]
 80103ea:	80c3      	strh	r3, [r0, #6]
 80103ec:	bd10      	pop	{r4, pc}
 80103ee:	bf00      	nop
 80103f0:	200125a8 	.word	0x200125a8
 80103f4:	200125a4 	.word	0x200125a4

080103f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80103f8:	4b07      	ldr	r3, [pc, #28]	; (8010418 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80103fa:	b510      	push	{r4, lr}
 80103fc:	781b      	ldrb	r3, [r3, #0]
 80103fe:	2b01      	cmp	r3, #1
 8010400:	d108      	bne.n	8010414 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010402:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010406:	f9b0 4000 	ldrsh.w	r4, [r0]
 801040a:	8003      	strh	r3, [r0, #0]
 801040c:	8893      	ldrh	r3, [r2, #4]
 801040e:	3b01      	subs	r3, #1
 8010410:	1b1b      	subs	r3, r3, r4
 8010412:	800b      	strh	r3, [r1, #0]
 8010414:	bd10      	pop	{r4, pc}
 8010416:	bf00      	nop
 8010418:	200125a8 	.word	0x200125a8

0801041c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801041c:	4b08      	ldr	r3, [pc, #32]	; (8010440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 801041e:	b513      	push	{r0, r1, r4, lr}
 8010420:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010424:	2400      	movs	r4, #0
 8010426:	4b07      	ldr	r3, [pc, #28]	; (8010444 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 8010428:	f8ad 2004 	strh.w	r2, [sp, #4]
 801042c:	466a      	mov	r2, sp
 801042e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010432:	9400      	str	r4, [sp, #0]
 8010434:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010438:	f7ff ffde 	bl	80103f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801043c:	b002      	add	sp, #8
 801043e:	bd10      	pop	{r4, pc}
 8010440:	200125a4 	.word	0x200125a4
 8010444:	200125a6 	.word	0x200125a6

08010448 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010448:	4b0a      	ldr	r3, [pc, #40]	; (8010474 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801044a:	460a      	mov	r2, r1
 801044c:	b510      	push	{r4, lr}
 801044e:	781b      	ldrb	r3, [r3, #0]
 8010450:	2b01      	cmp	r3, #1
 8010452:	d10d      	bne.n	8010470 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010454:	8881      	ldrh	r1, [r0, #4]
 8010456:	8803      	ldrh	r3, [r0, #0]
 8010458:	440b      	add	r3, r1
 801045a:	4601      	mov	r1, r0
 801045c:	3b01      	subs	r3, #1
 801045e:	f821 3b02 	strh.w	r3, [r1], #2
 8010462:	f7ff ffc9 	bl	80103f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010466:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801046a:	88c2      	ldrh	r2, [r0, #6]
 801046c:	80c3      	strh	r3, [r0, #6]
 801046e:	8082      	strh	r2, [r0, #4]
 8010470:	bd10      	pop	{r4, pc}
 8010472:	bf00      	nop
 8010474:	200125a8 	.word	0x200125a8

08010478 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010478:	4b09      	ldr	r3, [pc, #36]	; (80104a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801047a:	b507      	push	{r0, r1, r2, lr}
 801047c:	2100      	movs	r1, #0
 801047e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010482:	4b08      	ldr	r3, [pc, #32]	; (80104a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 8010484:	9100      	str	r1, [sp, #0]
 8010486:	4669      	mov	r1, sp
 8010488:	f9b3 3000 	ldrsh.w	r3, [r3]
 801048c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010490:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010494:	f7ff ffd8 	bl	8010448 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010498:	b003      	add	sp, #12
 801049a:	f85d fb04 	ldr.w	pc, [sp], #4
 801049e:	bf00      	nop
 80104a0:	200125a4 	.word	0x200125a4
 80104a4:	200125a6 	.word	0x200125a6

080104a8 <_ZN8touchgfx11Application13requestRedrawEv>:
 80104a8:	4b06      	ldr	r3, [pc, #24]	; (80104c4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80104aa:	2100      	movs	r1, #0
 80104ac:	f9b3 2000 	ldrsh.w	r2, [r3]
 80104b0:	4b05      	ldr	r3, [pc, #20]	; (80104c8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80104b2:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 80104b6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80104ba:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 80104be:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 80104c2:	4770      	bx	lr
 80104c4:	200125a4 	.word	0x200125a4
 80104c8:	200125a6 	.word	0x200125a6

080104cc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80104cc:	4b03      	ldr	r3, [pc, #12]	; (80104dc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80104ce:	6818      	ldr	r0, [r3, #0]
 80104d0:	b110      	cbz	r0, 80104d8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80104d2:	6803      	ldr	r3, [r0, #0]
 80104d4:	699b      	ldr	r3, [r3, #24]
 80104d6:	4718      	bx	r3
 80104d8:	4770      	bx	lr
 80104da:	bf00      	nop
 80104dc:	200125ec 	.word	0x200125ec

080104e0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80104e0:	4770      	bx	lr
	...

080104e4 <_ZN8touchgfx11Application4drawEv>:
 80104e4:	4b09      	ldr	r3, [pc, #36]	; (801050c <_ZN8touchgfx11Application4drawEv+0x28>)
 80104e6:	b507      	push	{r0, r1, r2, lr}
 80104e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80104ec:	2100      	movs	r1, #0
 80104ee:	4b08      	ldr	r3, [pc, #32]	; (8010510 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80104f0:	9100      	str	r1, [sp, #0]
 80104f2:	4669      	mov	r1, sp
 80104f4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80104f8:	f8ad 2004 	strh.w	r2, [sp, #4]
 80104fc:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010500:	6803      	ldr	r3, [r0, #0]
 8010502:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010504:	4798      	blx	r3
 8010506:	b003      	add	sp, #12
 8010508:	f85d fb04 	ldr.w	pc, [sp], #4
 801050c:	200125a4 	.word	0x200125a4
 8010510:	200125a6 	.word	0x200125a6

08010514 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010514:	4b03      	ldr	r3, [pc, #12]	; (8010524 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010516:	6818      	ldr	r0, [r3, #0]
 8010518:	b110      	cbz	r0, 8010520 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801051a:	6803      	ldr	r3, [r0, #0]
 801051c:	69db      	ldr	r3, [r3, #28]
 801051e:	4718      	bx	r3
 8010520:	4770      	bx	lr
 8010522:	bf00      	nop
 8010524:	200125ec 	.word	0x200125ec

08010528 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010528:	4b03      	ldr	r3, [pc, #12]	; (8010538 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801052a:	6818      	ldr	r0, [r3, #0]
 801052c:	b110      	cbz	r0, 8010534 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801052e:	6803      	ldr	r3, [r0, #0]
 8010530:	6a1b      	ldr	r3, [r3, #32]
 8010532:	4718      	bx	r3
 8010534:	4770      	bx	lr
 8010536:	bf00      	nop
 8010538:	200125ec 	.word	0x200125ec

0801053c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801053c:	4b03      	ldr	r3, [pc, #12]	; (801054c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801053e:	6818      	ldr	r0, [r3, #0]
 8010540:	b110      	cbz	r0, 8010548 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010542:	6803      	ldr	r3, [r0, #0]
 8010544:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010546:	4718      	bx	r3
 8010548:	4770      	bx	lr
 801054a:	bf00      	nop
 801054c:	200125ec 	.word	0x200125ec

08010550 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010550:	b570      	push	{r4, r5, r6, lr}
 8010552:	4d34      	ldr	r5, [pc, #208]	; (8010624 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 8010554:	4604      	mov	r4, r0
 8010556:	6828      	ldr	r0, [r5, #0]
 8010558:	b140      	cbz	r0, 801056c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801055a:	7a03      	ldrb	r3, [r0, #8]
 801055c:	b933      	cbnz	r3, 801056c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801055e:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 8010562:	6803      	ldr	r3, [r0, #0]
 8010564:	689b      	ldr	r3, [r3, #8]
 8010566:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801056a:	4718      	bx	r3
 801056c:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 8010570:	b97b      	cbnz	r3, 8010592 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010572:	b170      	cbz	r0, 8010592 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010574:	7a03      	ldrb	r3, [r0, #8]
 8010576:	b163      	cbz	r3, 8010592 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010578:	4b2b      	ldr	r3, [pc, #172]	; (8010628 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 801057a:	6818      	ldr	r0, [r3, #0]
 801057c:	b110      	cbz	r0, 8010584 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801057e:	6803      	ldr	r3, [r0, #0]
 8010580:	691b      	ldr	r3, [r3, #16]
 8010582:	4798      	blx	r3
 8010584:	6828      	ldr	r0, [r5, #0]
 8010586:	6803      	ldr	r3, [r0, #0]
 8010588:	68db      	ldr	r3, [r3, #12]
 801058a:	4798      	blx	r3
 801058c:	2301      	movs	r3, #1
 801058e:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 8010592:	2500      	movs	r5, #0
 8010594:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8010598:	42a8      	cmp	r0, r5
 801059a:	dd0c      	ble.n	80105b6 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 801059c:	1963      	adds	r3, r4, r5
 801059e:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 80105a2:	b132      	cbz	r2, 80105b2 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 80105a4:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80105a8:	4413      	add	r3, r2
 80105aa:	6858      	ldr	r0, [r3, #4]
 80105ac:	6803      	ldr	r3, [r0, #0]
 80105ae:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80105b0:	4798      	blx	r3
 80105b2:	3501      	adds	r5, #1
 80105b4:	e7ee      	b.n	8010594 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 80105b6:	2300      	movs	r3, #0
 80105b8:	461a      	mov	r2, r3
 80105ba:	4298      	cmp	r0, r3
 80105bc:	d114      	bne.n	80105e8 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 80105be:	1d25      	adds	r5, r4, #4
 80105c0:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 80105c4:	1e48      	subs	r0, r1, #1
 80105c6:	b280      	uxth	r0, r0
 80105c8:	4291      	cmp	r1, r2
 80105ca:	dd24      	ble.n	8010616 <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 80105cc:	4288      	cmp	r0, r1
 80105ce:	d2fb      	bcs.n	80105c8 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 80105d0:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 80105d4:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 80105d8:	3304      	adds	r3, #4
 80105da:	428b      	cmp	r3, r1
 80105dc:	d018      	beq.n	8010610 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 80105de:	f853 6f04 	ldr.w	r6, [r3, #4]!
 80105e2:	f843 6c04 	str.w	r6, [r3, #-4]
 80105e6:	e7f8      	b.n	80105da <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 80105e8:	18e1      	adds	r1, r4, r3
 80105ea:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 80105ee:	b16d      	cbz	r5, 801060c <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 80105f0:	429a      	cmp	r2, r3
 80105f2:	d00a      	beq.n	801060a <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 80105f4:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 80105f8:	4431      	add	r1, r6
 80105fa:	684e      	ldr	r6, [r1, #4]
 80105fc:	b291      	uxth	r1, r2
 80105fe:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8010602:	604e      	str	r6, [r1, #4]
 8010604:	18a1      	adds	r1, r4, r2
 8010606:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 801060a:	3201      	adds	r2, #1
 801060c:	3301      	adds	r3, #1
 801060e:	e7d4      	b.n	80105ba <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8010610:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 8010614:	e7d4      	b.n	80105c0 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 8010616:	4b04      	ldr	r3, [pc, #16]	; (8010628 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 8010618:	6818      	ldr	r0, [r3, #0]
 801061a:	b110      	cbz	r0, 8010622 <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 801061c:	6803      	ldr	r3, [r0, #0]
 801061e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010620:	e7a1      	b.n	8010566 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8010622:	bd70      	pop	{r4, r5, r6, pc}
 8010624:	200125f0 	.word	0x200125f0
 8010628:	200125ec 	.word	0x200125ec

0801062c <_ZN8touchgfx11ApplicationD1Ev>:
 801062c:	4770      	bx	lr

0801062e <_ZN8touchgfx11ApplicationD0Ev>:
 801062e:	b510      	push	{r4, lr}
 8010630:	4604      	mov	r4, r0
 8010632:	f44f 719c 	mov.w	r1, #312	; 0x138
 8010636:	f00f f80f 	bl	801f658 <_ZdlPvj>
 801063a:	4620      	mov	r0, r4
 801063c:	bd10      	pop	{r4, pc}
	...

08010640 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010640:	b570      	push	{r4, r5, r6, lr}
 8010642:	4606      	mov	r6, r0
 8010644:	460c      	mov	r4, r1
 8010646:	b929      	cbnz	r1, 8010654 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 8010648:	4b0c      	ldr	r3, [pc, #48]	; (801067c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 801064a:	2164      	movs	r1, #100	; 0x64
 801064c:	4a0c      	ldr	r2, [pc, #48]	; (8010680 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 801064e:	480d      	ldr	r0, [pc, #52]	; (8010684 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 8010650:	f010 fb8e 	bl	8020d70 <__assert_func>
 8010654:	2300      	movs	r3, #0
 8010656:	4d0c      	ldr	r5, [pc, #48]	; (8010688 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 8010658:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801065c:	6828      	ldr	r0, [r5, #0]
 801065e:	b110      	cbz	r0, 8010666 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 8010660:	6803      	ldr	r3, [r0, #0]
 8010662:	695b      	ldr	r3, [r3, #20]
 8010664:	4798      	blx	r3
 8010666:	602c      	str	r4, [r5, #0]
 8010668:	4620      	mov	r0, r4
 801066a:	6823      	ldr	r3, [r4, #0]
 801066c:	68db      	ldr	r3, [r3, #12]
 801066e:	4798      	blx	r3
 8010670:	6833      	ldr	r3, [r6, #0]
 8010672:	4630      	mov	r0, r6
 8010674:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010676:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801067a:	4718      	bx	r3
 801067c:	08024584 	.word	0x08024584
 8010680:	08024654 	.word	0x08024654
 8010684:	0802458e 	.word	0x0802458e
 8010688:	200125ec 	.word	0x200125ec

0801068c <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801068c:	b510      	push	{r4, lr}
 801068e:	f9b1 4000 	ldrsh.w	r4, [r1]
 8010692:	888a      	ldrh	r2, [r1, #4]
 8010694:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010698:	4422      	add	r2, r4
 801069a:	b212      	sxth	r2, r2
 801069c:	4293      	cmp	r3, r2
 801069e:	da15      	bge.n	80106cc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80106a0:	8882      	ldrh	r2, [r0, #4]
 80106a2:	4413      	add	r3, r2
 80106a4:	b21b      	sxth	r3, r3
 80106a6:	429c      	cmp	r4, r3
 80106a8:	da10      	bge.n	80106cc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80106aa:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80106ae:	88c9      	ldrh	r1, [r1, #6]
 80106b0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80106b4:	4419      	add	r1, r3
 80106b6:	b209      	sxth	r1, r1
 80106b8:	428a      	cmp	r2, r1
 80106ba:	da07      	bge.n	80106cc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80106bc:	88c0      	ldrh	r0, [r0, #6]
 80106be:	4410      	add	r0, r2
 80106c0:	b200      	sxth	r0, r0
 80106c2:	4283      	cmp	r3, r0
 80106c4:	bfac      	ite	ge
 80106c6:	2000      	movge	r0, #0
 80106c8:	2001      	movlt	r0, #1
 80106ca:	bd10      	pop	{r4, pc}
 80106cc:	2000      	movs	r0, #0
 80106ce:	e7fc      	b.n	80106ca <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080106d0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80106d0:	b570      	push	{r4, r5, r6, lr}
 80106d2:	f9b1 4000 	ldrsh.w	r4, [r1]
 80106d6:	f9b0 5000 	ldrsh.w	r5, [r0]
 80106da:	42ac      	cmp	r4, r5
 80106dc:	db18      	blt.n	8010710 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 80106de:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 80106e2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80106e6:	429a      	cmp	r2, r3
 80106e8:	db12      	blt.n	8010710 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 80106ea:	8886      	ldrh	r6, [r0, #4]
 80106ec:	4435      	add	r5, r6
 80106ee:	888e      	ldrh	r6, [r1, #4]
 80106f0:	4434      	add	r4, r6
 80106f2:	b22d      	sxth	r5, r5
 80106f4:	b224      	sxth	r4, r4
 80106f6:	42a5      	cmp	r5, r4
 80106f8:	db0a      	blt.n	8010710 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 80106fa:	88c0      	ldrh	r0, [r0, #6]
 80106fc:	4418      	add	r0, r3
 80106fe:	88cb      	ldrh	r3, [r1, #6]
 8010700:	441a      	add	r2, r3
 8010702:	b200      	sxth	r0, r0
 8010704:	b212      	sxth	r2, r2
 8010706:	4290      	cmp	r0, r2
 8010708:	bfb4      	ite	lt
 801070a:	2000      	movlt	r0, #0
 801070c:	2001      	movge	r0, #1
 801070e:	bd70      	pop	{r4, r5, r6, pc}
 8010710:	2000      	movs	r0, #0
 8010712:	e7fc      	b.n	801070e <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

08010714 <_ZN8touchgfx11Application11getInstanceEv>:
 8010714:	4b01      	ldr	r3, [pc, #4]	; (801071c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8010716:	6818      	ldr	r0, [r3, #0]
 8010718:	4770      	bx	lr
 801071a:	bf00      	nop
 801071c:	200125fc 	.word	0x200125fc

08010720 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8010720:	2300      	movs	r3, #0
 8010722:	f100 0288 	add.w	r2, r0, #136	; 0x88
 8010726:	30a8      	adds	r0, #168	; 0xa8
 8010728:	f820 3c24 	strh.w	r3, [r0, #-36]
 801072c:	f802 3b01 	strb.w	r3, [r2], #1
 8010730:	4282      	cmp	r2, r0
 8010732:	d1fb      	bne.n	801072c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8010734:	4770      	bx	lr

08010736 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8010736:	4603      	mov	r3, r0
 8010738:	f100 0140 	add.w	r1, r0, #64	; 0x40
 801073c:	2200      	movs	r2, #0
 801073e:	801a      	strh	r2, [r3, #0]
 8010740:	3308      	adds	r3, #8
 8010742:	f823 2c06 	strh.w	r2, [r3, #-6]
 8010746:	f823 2c04 	strh.w	r2, [r3, #-4]
 801074a:	f823 2c02 	strh.w	r2, [r3, #-2]
 801074e:	428b      	cmp	r3, r1
 8010750:	d1f5      	bne.n	801073e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8010752:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8010756:	4770      	bx	lr

08010758 <_ZN8touchgfx11ApplicationC1Ev>:
 8010758:	b570      	push	{r4, r5, r6, lr}
 801075a:	4b1a      	ldr	r3, [pc, #104]	; (80107c4 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 801075c:	2500      	movs	r5, #0
 801075e:	4604      	mov	r4, r0
 8010760:	30a8      	adds	r0, #168	; 0xa8
 8010762:	f840 3ca8 	str.w	r3, [r0, #-168]
 8010766:	f820 5c24 	strh.w	r5, [r0, #-36]
 801076a:	f7ff ffe4 	bl	8010736 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801076e:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8010772:	f7ff ffe0 	bl	8010736 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010776:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 801077a:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 801077e:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8010782:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8010786:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 801078a:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 801078e:	490e      	ldr	r1, [pc, #56]	; (80107c8 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8010790:	480e      	ldr	r0, [pc, #56]	; (80107cc <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8010792:	f00e fd79 	bl	801f288 <CRC_Lock>
 8010796:	4e0e      	ldr	r6, [pc, #56]	; (80107d0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8010798:	4b0e      	ldr	r3, [pc, #56]	; (80107d4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801079a:	b158      	cbz	r0, 80107b4 <_ZN8touchgfx11ApplicationC1Ev+0x5c>
 801079c:	801d      	strh	r5, [r3, #0]
 801079e:	2300      	movs	r3, #0
 80107a0:	4a0d      	ldr	r2, [pc, #52]	; (80107d8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80107a2:	4620      	mov	r0, r4
 80107a4:	6013      	str	r3, [r2, #0]
 80107a6:	4a0d      	ldr	r2, [pc, #52]	; (80107dc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80107a8:	6033      	str	r3, [r6, #0]
 80107aa:	6013      	str	r3, [r2, #0]
 80107ac:	f7ff ffb8 	bl	8010720 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 80107b0:	4620      	mov	r0, r4
 80107b2:	bd70      	pop	{r4, r5, r6, pc}
 80107b4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80107b8:	2002      	movs	r0, #2
 80107ba:	801a      	strh	r2, [r3, #0]
 80107bc:	6030      	str	r0, [r6, #0]
 80107be:	f001 fb2f 	bl	8011e20 <_ZN8touchgfx6Screen4drawEv>
 80107c2:	e7ec      	b.n	801079e <_ZN8touchgfx11ApplicationC1Ev+0x46>
 80107c4:	08024618 	.word	0x08024618
 80107c8:	b5e8b5cd 	.word	0xb5e8b5cd
 80107cc:	f407a5c2 	.word	0xf407a5c2
 80107d0:	200125ec 	.word	0x200125ec
 80107d4:	20000074 	.word	0x20000074
 80107d8:	200125fc 	.word	0x200125fc
 80107dc:	200125f0 	.word	0x200125f0

080107e0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80107e0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80107e4:	428b      	cmp	r3, r1
 80107e6:	b510      	push	{r4, lr}
 80107e8:	d90e      	bls.n	8010808 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 80107ea:	3b01      	subs	r3, #1
 80107ec:	b29b      	uxth	r3, r3
 80107ee:	428b      	cmp	r3, r1
 80107f0:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80107f4:	d908      	bls.n	8010808 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 80107f6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80107fa:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80107fe:	681a      	ldr	r2, [r3, #0]
 8010800:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010804:	685a      	ldr	r2, [r3, #4]
 8010806:	6062      	str	r2, [r4, #4]
 8010808:	bd10      	pop	{r4, pc}
	...

0801080c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 801080c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801080e:	466b      	mov	r3, sp
 8010810:	4604      	mov	r4, r0
 8010812:	e883 0006 	stmia.w	r3, {r1, r2}
 8010816:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 801081a:	2a07      	cmp	r2, #7
 801081c:	d906      	bls.n	801082c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 801081e:	4b09      	ldr	r3, [pc, #36]	; (8010844 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 8010820:	f240 118f 	movw	r1, #399	; 0x18f
 8010824:	4a08      	ldr	r2, [pc, #32]	; (8010848 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 8010826:	4809      	ldr	r0, [pc, #36]	; (801084c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 8010828:	f010 faa2 	bl	8020d70 <__assert_func>
 801082c:	1c51      	adds	r1, r2, #1
 801082e:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 8010832:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8010836:	cb03      	ldmia	r3!, {r0, r1}
 8010838:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 801083c:	6069      	str	r1, [r5, #4]
 801083e:	b003      	add	sp, #12
 8010840:	bd30      	pop	{r4, r5, pc}
 8010842:	bf00      	nop
 8010844:	080245b8 	.word	0x080245b8
 8010848:	08024698 	.word	0x08024698
 801084c:	080245e7 	.word	0x080245e7

08010850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010854:	b08d      	sub	sp, #52	; 0x34
 8010856:	4683      	mov	fp, r0
 8010858:	ac08      	add	r4, sp, #32
 801085a:	4620      	mov	r0, r4
 801085c:	e884 0006 	stmia.w	r4, {r1, r2}
 8010860:	f7fa ff71 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010864:	2800      	cmp	r0, #0
 8010866:	d16a      	bne.n	801093e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8010868:	9402      	str	r4, [sp, #8]
 801086a:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 801086e:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8010872:	2400      	movs	r4, #0
 8010874:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8010878:	9301      	str	r3, [sp, #4]
 801087a:	36a0      	adds	r6, #160	; 0xa0
 801087c:	42a5      	cmp	r5, r4
 801087e:	d00d      	beq.n	801089c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 8010880:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8010884:	9802      	ldr	r0, [sp, #8]
 8010886:	f7ff ff23 	bl	80106d0 <_ZNK8touchgfx4Rect8includesERKS0_>
 801088a:	b128      	cbz	r0, 8010898 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 801088c:	1e69      	subs	r1, r5, #1
 801088e:	9801      	ldr	r0, [sp, #4]
 8010890:	1b09      	subs	r1, r1, r4
 8010892:	b289      	uxth	r1, r1
 8010894:	f7ff ffa4 	bl	80107e0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010898:	3401      	adds	r4, #1
 801089a:	e7ef      	b.n	801087c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801089c:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80108a0:	1e7b      	subs	r3, r7, #1
 80108a2:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 80108a6:	9703      	str	r7, [sp, #12]
 80108a8:	9300      	str	r3, [sp, #0]
 80108aa:	2400      	movs	r4, #0
 80108ac:	4655      	mov	r5, sl
 80108ae:	9704      	str	r7, [sp, #16]
 80108b0:	4626      	mov	r6, r4
 80108b2:	9b04      	ldr	r3, [sp, #16]
 80108b4:	2b00      	cmp	r3, #0
 80108b6:	d078      	beq.n	80109aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 80108b8:	9902      	ldr	r1, [sp, #8]
 80108ba:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80108be:	f7ff fee5 	bl	801068c <_ZNK8touchgfx4Rect9intersectERKS0_>
 80108c2:	b360      	cbz	r0, 801091e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 80108c4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80108c8:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 80108cc:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 80108d0:	45e6      	cmp	lr, ip
 80108d2:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 80108d6:	db35      	blt.n	8010944 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 80108d8:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 80108dc:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80108e0:	4472      	add	r2, lr
 80108e2:	4463      	add	r3, ip
 80108e4:	b212      	sxth	r2, r2
 80108e6:	b21b      	sxth	r3, r3
 80108e8:	429a      	cmp	r2, r3
 80108ea:	dc2b      	bgt.n	8010944 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 80108ec:	fa1f f288 	uxth.w	r2, r8
 80108f0:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80108f4:	45c1      	cmp	r9, r8
 80108f6:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 80108fa:	4413      	add	r3, r2
 80108fc:	fa1f fc89 	uxth.w	ip, r9
 8010900:	b29b      	uxth	r3, r3
 8010902:	fa0f fe83 	sxth.w	lr, r3
 8010906:	db0f      	blt.n	8010928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 8010908:	eba3 030c 	sub.w	r3, r3, ip
 801090c:	1ac9      	subs	r1, r1, r3
 801090e:	b209      	sxth	r1, r1
 8010910:	2900      	cmp	r1, #0
 8010912:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8010916:	dd12      	ble.n	801093e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8010918:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 801091c:	4604      	mov	r4, r0
 801091e:	9b04      	ldr	r3, [sp, #16]
 8010920:	3d08      	subs	r5, #8
 8010922:	3b01      	subs	r3, #1
 8010924:	9304      	str	r3, [sp, #16]
 8010926:	e7c4      	b.n	80108b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 8010928:	4461      	add	r1, ip
 801092a:	b209      	sxth	r1, r1
 801092c:	4571      	cmp	r1, lr
 801092e:	dc3a      	bgt.n	80109a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8010930:	eba2 020c 	sub.w	r2, r2, ip
 8010934:	b212      	sxth	r2, r2
 8010936:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801093a:	2a00      	cmp	r2, #0
 801093c:	dcee      	bgt.n	801091c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 801093e:	b00d      	add	sp, #52	; 0x34
 8010940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010944:	45c1      	cmp	r9, r8
 8010946:	db2e      	blt.n	80109a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8010948:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 801094c:	4499      	add	r9, r3
 801094e:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8010952:	4498      	add	r8, r3
 8010954:	fa0f f989 	sxth.w	r9, r9
 8010958:	fa0f f888 	sxth.w	r8, r8
 801095c:	45c1      	cmp	r9, r8
 801095e:	dc22      	bgt.n	80109a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8010960:	fa1f f28c 	uxth.w	r2, ip
 8010964:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8010968:	45e6      	cmp	lr, ip
 801096a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801096e:	4413      	add	r3, r2
 8010970:	fa1f f88e 	uxth.w	r8, lr
 8010974:	b29b      	uxth	r3, r3
 8010976:	fa0f f983 	sxth.w	r9, r3
 801097a:	db0a      	blt.n	8010992 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 801097c:	eba3 0308 	sub.w	r3, r3, r8
 8010980:	1ac9      	subs	r1, r1, r3
 8010982:	b209      	sxth	r1, r1
 8010984:	2900      	cmp	r1, #0
 8010986:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 801098a:	ddd8      	ble.n	801093e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 801098c:	f8ad 9020 	strh.w	r9, [sp, #32]
 8010990:	e7c4      	b.n	801091c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 8010992:	4441      	add	r1, r8
 8010994:	b209      	sxth	r1, r1
 8010996:	4549      	cmp	r1, r9
 8010998:	dc05      	bgt.n	80109a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 801099a:	eba2 0208 	sub.w	r2, r2, r8
 801099e:	b212      	sxth	r2, r2
 80109a0:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80109a4:	e7c9      	b.n	801093a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80109a6:	4606      	mov	r6, r0
 80109a8:	e7b9      	b.n	801091e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 80109aa:	2c00      	cmp	r4, #0
 80109ac:	f47f af7d 	bne.w	80108aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 80109b0:	2e00      	cmp	r6, #0
 80109b2:	f000 81dc 	beq.w	8010d6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x51e>
 80109b6:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 80109ba:	4655      	mov	r5, sl
 80109bc:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 80109c0:	b2b9      	uxth	r1, r7
 80109c2:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 80109c6:	b2b3      	uxth	r3, r6
 80109c8:	9104      	str	r1, [sp, #16]
 80109ca:	9804      	ldr	r0, [sp, #16]
 80109cc:	441a      	add	r2, r3
 80109ce:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 80109d2:	b292      	uxth	r2, r2
 80109d4:	4401      	add	r1, r0
 80109d6:	fa0f f882 	sxth.w	r8, r2
 80109da:	b289      	uxth	r1, r1
 80109dc:	9105      	str	r1, [sp, #20]
 80109de:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 80109e2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80109e6:	9b03      	ldr	r3, [sp, #12]
 80109e8:	2b00      	cmp	r3, #0
 80109ea:	d054      	beq.n	8010a96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 80109ec:	9902      	ldr	r1, [sp, #8]
 80109ee:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80109f2:	f7ff fe4b 	bl	801068c <_ZNK8touchgfx4Rect9intersectERKS0_>
 80109f6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80109fa:	b1d8      	cbz	r0, 8010a34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 80109fc:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8010a00:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8010a04:	4576      	cmp	r6, lr
 8010a06:	dc26      	bgt.n	8010a56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010a08:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8010a0c:	44f4      	add	ip, lr
 8010a0e:	fa0f fc8c 	sxth.w	ip, ip
 8010a12:	45e0      	cmp	r8, ip
 8010a14:	db1f      	blt.n	8010a56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010a16:	428f      	cmp	r7, r1
 8010a18:	fa1f fc81 	uxth.w	ip, r1
 8010a1c:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8010a20:	dc0f      	bgt.n	8010a42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8010a22:	9805      	ldr	r0, [sp, #20]
 8010a24:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8010a28:	eba0 0c0c 	sub.w	ip, r0, ip
 8010a2c:	eba1 010c 	sub.w	r1, r1, ip
 8010a30:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8010a34:	4620      	mov	r0, r4
 8010a36:	9903      	ldr	r1, [sp, #12]
 8010a38:	3d08      	subs	r5, #8
 8010a3a:	4604      	mov	r4, r0
 8010a3c:	3901      	subs	r1, #1
 8010a3e:	9103      	str	r1, [sp, #12]
 8010a40:	e7cf      	b.n	80109e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 8010a42:	4461      	add	r1, ip
 8010a44:	b209      	sxth	r1, r1
 8010a46:	4549      	cmp	r1, r9
 8010a48:	dcf5      	bgt.n	8010a36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010a4a:	9904      	ldr	r1, [sp, #16]
 8010a4c:	eba1 0c0c 	sub.w	ip, r1, ip
 8010a50:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8010a54:	e7ee      	b.n	8010a34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8010a56:	428f      	cmp	r7, r1
 8010a58:	dced      	bgt.n	8010a36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010a5a:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 8010a5e:	4461      	add	r1, ip
 8010a60:	b209      	sxth	r1, r1
 8010a62:	4589      	cmp	r9, r1
 8010a64:	dbe7      	blt.n	8010a36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010a66:	4576      	cmp	r6, lr
 8010a68:	fa1f fc8e 	uxth.w	ip, lr
 8010a6c:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 8010a70:	dc08      	bgt.n	8010a84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 8010a72:	eba2 0c0c 	sub.w	ip, r2, ip
 8010a76:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 8010a7a:	eba1 010c 	sub.w	r1, r1, ip
 8010a7e:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8010a82:	e7d7      	b.n	8010a34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8010a84:	4461      	add	r1, ip
 8010a86:	b209      	sxth	r1, r1
 8010a88:	4588      	cmp	r8, r1
 8010a8a:	dbd4      	blt.n	8010a36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010a8c:	eba3 0c0c 	sub.w	ip, r3, ip
 8010a90:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8010a94:	e7ce      	b.n	8010a34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8010a96:	2c00      	cmp	r4, #0
 8010a98:	f000 8169 	beq.w	8010d6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x51e>
 8010a9c:	9b00      	ldr	r3, [sp, #0]
 8010a9e:	3301      	adds	r3, #1
 8010aa0:	f000 8165 	beq.w	8010d6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x51e>
 8010aa4:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 8010aa8:	9802      	ldr	r0, [sp, #8]
 8010aaa:	4621      	mov	r1, r4
 8010aac:	f7ff fe10 	bl	80106d0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8010ab0:	b120      	cbz	r0, 8010abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 8010ab2:	f8bd 1000 	ldrh.w	r1, [sp]
 8010ab6:	9801      	ldr	r0, [sp, #4]
 8010ab8:	f7ff fe92 	bl	80107e0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010abc:	9902      	ldr	r1, [sp, #8]
 8010abe:	4620      	mov	r0, r4
 8010ac0:	f7ff fde4 	bl	801068c <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010ac4:	2800      	cmp	r0, #0
 8010ac6:	f000 809b 	beq.w	8010c00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 8010aca:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8010ace:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 8010ad2:	fa1f f288 	uxth.w	r2, r8
 8010ad6:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 8010ada:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 8010ade:	19d5      	adds	r5, r2, r7
 8010ae0:	b2a1      	uxth	r1, r4
 8010ae2:	45a0      	cmp	r8, r4
 8010ae4:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8010ae8:	fa1f f985 	uxth.w	r9, r5
 8010aec:	440b      	add	r3, r1
 8010aee:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 8010af2:	fa0f f589 	sxth.w	r5, r9
 8010af6:	b29b      	uxth	r3, r3
 8010af8:	9503      	str	r5, [sp, #12]
 8010afa:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8010afe:	9507      	str	r5, [sp, #28]
 8010b00:	f340 809d 	ble.w	8010c3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8010b04:	1a52      	subs	r2, r2, r1
 8010b06:	4584      	cmp	ip, r0
 8010b08:	fa0f fe83 	sxth.w	lr, r3
 8010b0c:	b292      	uxth	r2, r2
 8010b0e:	b215      	sxth	r5, r2
 8010b10:	dd2f      	ble.n	8010b72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 8010b12:	9e00      	ldr	r6, [sp, #0]
 8010b14:	fa1f fc8c 	uxth.w	ip, ip
 8010b18:	b280      	uxth	r0, r0
 8010b1a:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8010b1e:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 8010b22:	9e03      	ldr	r6, [sp, #12]
 8010b24:	ebac 0300 	sub.w	r3, ip, r0
 8010b28:	448c      	add	ip, r1
 8010b2a:	eba6 060e 	sub.w	r6, r6, lr
 8010b2e:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 8010b32:	b29b      	uxth	r3, r3
 8010b34:	4470      	add	r0, lr
 8010b36:	fa0f fc8c 	sxth.w	ip, ip
 8010b3a:	b21c      	sxth	r4, r3
 8010b3c:	b200      	sxth	r0, r0
 8010b3e:	4366      	muls	r6, r4
 8010b40:	ebac 0000 	sub.w	r0, ip, r0
 8010b44:	4368      	muls	r0, r5
 8010b46:	4286      	cmp	r6, r0
 8010b48:	db09      	blt.n	8010b5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 8010b4a:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 8010b4e:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8010b52:	4417      	add	r7, r2
 8010b54:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010b58:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8010b5c:	e685      	b.n	801086a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010b5e:	440b      	add	r3, r1
 8010b60:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 8010b64:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010b68:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8010b6c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010b70:	e67b      	b.n	801086a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010b72:	9e03      	ldr	r6, [sp, #12]
 8010b74:	45b6      	cmp	lr, r6
 8010b76:	da28      	bge.n	8010bca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 8010b78:	9b00      	ldr	r3, [sp, #0]
 8010b7a:	eba6 060e 	sub.w	r6, r6, lr
 8010b7e:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8010b82:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 8010b86:	eb04 030c 	add.w	r3, r4, ip
 8010b8a:	fa1f f883 	uxth.w	r8, r3
 8010b8e:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 8010b92:	4403      	add	r3, r0
 8010b94:	fa0f f988 	sxth.w	r9, r8
 8010b98:	eba0 000c 	sub.w	r0, r0, ip
 8010b9c:	eba3 0308 	sub.w	r3, r3, r8
 8010ba0:	4368      	muls	r0, r5
 8010ba2:	b29b      	uxth	r3, r3
 8010ba4:	fa0f f883 	sxth.w	r8, r3
 8010ba8:	fb08 f606 	mul.w	r6, r8, r6
 8010bac:	42b0      	cmp	r0, r6
 8010bae:	dc06      	bgt.n	8010bbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 8010bb0:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 8010bb4:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 8010bb8:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 8010bbc:	e7c9      	b.n	8010b52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 8010bbe:	4423      	add	r3, r4
 8010bc0:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 8010bc4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010bc8:	e64f      	b.n	801086a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010bca:	eba3 0309 	sub.w	r3, r3, r9
 8010bce:	9807      	ldr	r0, [sp, #28]
 8010bd0:	b29b      	uxth	r3, r3
 8010bd2:	2806      	cmp	r0, #6
 8010bd4:	fa0f fc83 	sxth.w	ip, r3
 8010bd8:	d818      	bhi.n	8010c0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 8010bda:	4652      	mov	r2, sl
 8010bdc:	ab0a      	add	r3, sp, #40	; 0x28
 8010bde:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 8010be2:	6851      	ldr	r1, [r2, #4]
 8010be4:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 8010be8:	c303      	stmia	r3!, {r0, r1}
 8010bea:	9b03      	ldr	r3, [sp, #12]
 8010bec:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8010bf0:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8010bf4:	ab0a      	add	r3, sp, #40	; 0x28
 8010bf6:	9801      	ldr	r0, [sp, #4]
 8010bf8:	e893 0006 	ldmia.w	r3, {r1, r2}
 8010bfc:	f7ff fe06 	bl	801080c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8010c00:	9b00      	ldr	r3, [sp, #0]
 8010c02:	f1aa 0a08 	sub.w	sl, sl, #8
 8010c06:	3b01      	subs	r3, #1
 8010c08:	9300      	str	r3, [sp, #0]
 8010c0a:	e747      	b.n	8010a9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8010c0c:	9800      	ldr	r0, [sp, #0]
 8010c0e:	45ac      	cmp	ip, r5
 8010c10:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8010c14:	db0c      	blt.n	8010c30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 8010c16:	4417      	add	r7, r2
 8010c18:	4458      	add	r0, fp
 8010c1a:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010c1e:	b2bf      	uxth	r7, r7
 8010c20:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 8010c24:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8010c28:	440f      	add	r7, r1
 8010c2a:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 8010c2e:	e61c      	b.n	801086a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010c30:	4458      	add	r0, fp
 8010c32:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 8010c36:	443b      	add	r3, r7
 8010c38:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010c3c:	e615      	b.n	801086a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010c3e:	fa1f f18c 	uxth.w	r1, ip
 8010c42:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 8010c46:	b282      	uxth	r2, r0
 8010c48:	4584      	cmp	ip, r0
 8010c4a:	eb01 0e05 	add.w	lr, r1, r5
 8010c4e:	9204      	str	r2, [sp, #16]
 8010c50:	fa1f fe8e 	uxth.w	lr, lr
 8010c54:	9e04      	ldr	r6, [sp, #16]
 8010c56:	fa0f f28e 	sxth.w	r2, lr
 8010c5a:	9205      	str	r2, [sp, #20]
 8010c5c:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 8010c60:	4432      	add	r2, r6
 8010c62:	b292      	uxth	r2, r2
 8010c64:	9206      	str	r2, [sp, #24]
 8010c66:	da26      	bge.n	8010cb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 8010c68:	eba3 0309 	sub.w	r3, r3, r9
 8010c6c:	eba2 020e 	sub.w	r2, r2, lr
 8010c70:	eba0 000c 	sub.w	r0, r0, ip
 8010c74:	eba4 0408 	sub.w	r4, r4, r8
 8010c78:	b29b      	uxth	r3, r3
 8010c7a:	b292      	uxth	r2, r2
 8010c7c:	fa0f fa83 	sxth.w	sl, r3
 8010c80:	b211      	sxth	r1, r2
 8010c82:	fb0a f000 	mul.w	r0, sl, r0
 8010c86:	434c      	muls	r4, r1
 8010c88:	42a0      	cmp	r0, r4
 8010c8a:	9800      	ldr	r0, [sp, #0]
 8010c8c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8010c90:	dc06      	bgt.n	8010ca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 8010c92:	4458      	add	r0, fp
 8010c94:	9a05      	ldr	r2, [sp, #20]
 8010c96:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 8010c9a:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 8010c9e:	e7ca      	b.n	8010c36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 8010ca0:	eb0b 0300 	add.w	r3, fp, r0
 8010ca4:	9903      	ldr	r1, [sp, #12]
 8010ca6:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 8010caa:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 8010cae:	442a      	add	r2, r5
 8010cb0:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8010cb4:	e5d9      	b.n	801086a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010cb6:	9e04      	ldr	r6, [sp, #16]
 8010cb8:	9a03      	ldr	r2, [sp, #12]
 8010cba:	1b89      	subs	r1, r1, r6
 8010cbc:	b21e      	sxth	r6, r3
 8010cbe:	b289      	uxth	r1, r1
 8010cc0:	4296      	cmp	r6, r2
 8010cc2:	fa0f fc81 	sxth.w	ip, r1
 8010cc6:	dd25      	ble.n	8010d14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c4>
 8010cc8:	eba3 0309 	sub.w	r3, r3, r9
 8010ccc:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8010cd0:	9e05      	ldr	r6, [sp, #20]
 8010cd2:	eba4 0408 	sub.w	r4, r4, r8
 8010cd6:	b29b      	uxth	r3, r3
 8010cd8:	eba6 0902 	sub.w	r9, r6, r2
 8010cdc:	fb0c f404 	mul.w	r4, ip, r4
 8010ce0:	b218      	sxth	r0, r3
 8010ce2:	9a00      	ldr	r2, [sp, #0]
 8010ce4:	fb00 f909 	mul.w	r9, r0, r9
 8010ce8:	00d2      	lsls	r2, r2, #3
 8010cea:	454c      	cmp	r4, r9
 8010cec:	db03      	blt.n	8010cf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a6>
 8010cee:	445a      	add	r2, fp
 8010cf0:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 8010cf4:	e79f      	b.n	8010c36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 8010cf6:	eb0b 0302 	add.w	r3, fp, r2
 8010cfa:	9a03      	ldr	r2, [sp, #12]
 8010cfc:	4429      	add	r1, r5
 8010cfe:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8010d02:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 8010d06:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8010d0a:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8010d0e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010d12:	e5aa      	b.n	801086a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010d14:	9b06      	ldr	r3, [sp, #24]
 8010d16:	9c07      	ldr	r4, [sp, #28]
 8010d18:	eba3 020e 	sub.w	r2, r3, lr
 8010d1c:	2c06      	cmp	r4, #6
 8010d1e:	b292      	uxth	r2, r2
 8010d20:	b213      	sxth	r3, r2
 8010d22:	d80d      	bhi.n	8010d40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f0>
 8010d24:	4651      	mov	r1, sl
 8010d26:	aa0a      	add	r2, sp, #40	; 0x28
 8010d28:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 8010d2c:	6849      	ldr	r1, [r1, #4]
 8010d2e:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 8010d32:	9b05      	ldr	r3, [sp, #20]
 8010d34:	c203      	stmia	r2!, {r0, r1}
 8010d36:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8010d3a:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 8010d3e:	e759      	b.n	8010bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 8010d40:	9c00      	ldr	r4, [sp, #0]
 8010d42:	4563      	cmp	r3, ip
 8010d44:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8010d48:	db0d      	blt.n	8010d66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x516>
 8010d4a:	4429      	add	r1, r5
 8010d4c:	9a04      	ldr	r2, [sp, #16]
 8010d4e:	445c      	add	r4, fp
 8010d50:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010d54:	b289      	uxth	r1, r1
 8010d56:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 8010d5a:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8010d5e:	4411      	add	r1, r2
 8010d60:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 8010d64:	e581      	b.n	801086a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010d66:	445c      	add	r4, fp
 8010d68:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 8010d6c:	e79f      	b.n	8010cae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 8010d6e:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8010d72:	2f07      	cmp	r7, #7
 8010d74:	d806      	bhi.n	8010d84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 8010d76:	ab08      	add	r3, sp, #32
 8010d78:	9801      	ldr	r0, [sp, #4]
 8010d7a:	e893 0006 	ldmia.w	r3, {r1, r2}
 8010d7e:	f7ff fd45 	bl	801080c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8010d82:	e5dc      	b.n	801093e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8010d84:	f107 39ff 	add.w	r9, r7, #4294967295
 8010d88:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8010d8c:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 8010d90:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8010d94:	f04f 35ff 	mov.w	r5, #4294967295
 8010d98:	2400      	movs	r4, #0
 8010d9a:	9304      	str	r3, [sp, #16]
 8010d9c:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 8010da0:	f109 32ff 	add.w	r2, r9, #4294967295
 8010da4:	9300      	str	r3, [sp, #0]
 8010da6:	4690      	mov	r8, r2
 8010da8:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 8010dac:	9303      	str	r3, [sp, #12]
 8010dae:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8010db2:	f1b8 3fff 	cmp.w	r8, #4294967295
 8010db6:	6818      	ldr	r0, [r3, #0]
 8010db8:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8010dbc:	9206      	str	r2, [sp, #24]
 8010dbe:	bf16      	itet	ne
 8010dc0:	9904      	ldrne	r1, [sp, #16]
 8010dc2:	f8dd e008 	ldreq.w	lr, [sp, #8]
 8010dc6:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 8010dca:	9305      	str	r3, [sp, #20]
 8010dcc:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8010dd0:	f8be 6004 	ldrh.w	r6, [lr, #4]
 8010dd4:	fb16 f601 	smulbb	r6, r6, r1
 8010dd8:	6859      	ldr	r1, [r3, #4]
 8010dda:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8010dde:	4671      	mov	r1, lr
 8010de0:	a80a      	add	r0, sp, #40	; 0x28
 8010de2:	f7fc fa3b 	bl	800d25c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010de6:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8010dea:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8010dee:	9b03      	ldr	r3, [sp, #12]
 8010df0:	9a00      	ldr	r2, [sp, #0]
 8010df2:	fb11 f100 	smulbb	r1, r1, r0
 8010df6:	2008      	movs	r0, #8
 8010df8:	fb02 6603 	mla	r6, r2, r3, r6
 8010dfc:	1b8e      	subs	r6, r1, r6
 8010dfe:	fb91 f1f0 	sdiv	r1, r1, r0
 8010e02:	42b1      	cmp	r1, r6
 8010e04:	dc21      	bgt.n	8010e4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 8010e06:	4556      	cmp	r6, sl
 8010e08:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 8010e0c:	da03      	bge.n	8010e16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c6>
 8010e0e:	b1e6      	cbz	r6, 8010e4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 8010e10:	46b2      	mov	sl, r6
 8010e12:	4645      	mov	r5, r8
 8010e14:	464c      	mov	r4, r9
 8010e16:	f108 38ff 	add.w	r8, r8, #4294967295
 8010e1a:	f118 0f02 	cmn.w	r8, #2
 8010e1e:	d1c8      	bne.n	8010db2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x562>
 8010e20:	f1b2 3fff 	cmp.w	r2, #4294967295
 8010e24:	f1a7 0708 	sub.w	r7, r7, #8
 8010e28:	4691      	mov	r9, r2
 8010e2a:	d1b7      	bne.n	8010d9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 8010e2c:	9b01      	ldr	r3, [sp, #4]
 8010e2e:	b2a6      	uxth	r6, r4
 8010e30:	00e4      	lsls	r4, r4, #3
 8010e32:	1918      	adds	r0, r3, r4
 8010e34:	1c6b      	adds	r3, r5, #1
 8010e36:	d10b      	bne.n	8010e50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x600>
 8010e38:	4601      	mov	r1, r0
 8010e3a:	9802      	ldr	r0, [sp, #8]
 8010e3c:	f7fc fa0e 	bl	800d25c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010e40:	4631      	mov	r1, r6
 8010e42:	9801      	ldr	r0, [sp, #4]
 8010e44:	f7ff fccc 	bl	80107e0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010e48:	e50f      	b.n	801086a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010e4a:	4645      	mov	r5, r8
 8010e4c:	464c      	mov	r4, r9
 8010e4e:	e7ed      	b.n	8010e2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5dc>
 8010e50:	9b01      	ldr	r3, [sp, #4]
 8010e52:	00ed      	lsls	r5, r5, #3
 8010e54:	445c      	add	r4, fp
 8010e56:	1959      	adds	r1, r3, r5
 8010e58:	445d      	add	r5, fp
 8010e5a:	f7fc f9ff 	bl	800d25c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010e5e:	9b02      	ldr	r3, [sp, #8]
 8010e60:	cb03      	ldmia	r3!, {r0, r1}
 8010e62:	9b02      	ldr	r3, [sp, #8]
 8010e64:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 8010e68:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 8010e6c:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 8010e70:	6861      	ldr	r1, [r4, #4]
 8010e72:	c303      	stmia	r3!, {r0, r1}
 8010e74:	e7e4      	b.n	8010e40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f0>
	...

08010e78 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8010e78:	4b1d      	ldr	r3, [pc, #116]	; (8010ef0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 8010e7a:	b530      	push	{r4, r5, lr}
 8010e7c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010e80:	b085      	sub	sp, #20
 8010e82:	4b1c      	ldr	r3, [pc, #112]	; (8010ef4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 8010e84:	460c      	mov	r4, r1
 8010e86:	2100      	movs	r1, #0
 8010e88:	4605      	mov	r5, r0
 8010e8a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010e8e:	6820      	ldr	r0, [r4, #0]
 8010e90:	9100      	str	r1, [sp, #0]
 8010e92:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010e96:	ab02      	add	r3, sp, #8
 8010e98:	6861      	ldr	r1, [r4, #4]
 8010e9a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010e9e:	c303      	stmia	r3!, {r0, r1}
 8010ea0:	4669      	mov	r1, sp
 8010ea2:	a802      	add	r0, sp, #8
 8010ea4:	f7fa fc0c 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 8010ea8:	ab02      	add	r3, sp, #8
 8010eaa:	cb03      	ldmia	r3!, {r0, r1}
 8010eac:	4b12      	ldr	r3, [pc, #72]	; (8010ef8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 8010eae:	6020      	str	r0, [r4, #0]
 8010eb0:	6818      	ldr	r0, [r3, #0]
 8010eb2:	6061      	str	r1, [r4, #4]
 8010eb4:	b138      	cbz	r0, 8010ec6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 8010eb6:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 8010eba:	b133      	cbz	r3, 8010eca <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 8010ebc:	6821      	ldr	r1, [r4, #0]
 8010ebe:	4628      	mov	r0, r5
 8010ec0:	6862      	ldr	r2, [r4, #4]
 8010ec2:	f7ff fcc5 	bl	8010850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010ec6:	b005      	add	sp, #20
 8010ec8:	bd30      	pop	{r4, r5, pc}
 8010eca:	6803      	ldr	r3, [r0, #0]
 8010ecc:	4621      	mov	r1, r4
 8010ece:	689b      	ldr	r3, [r3, #8]
 8010ed0:	4798      	blx	r3
 8010ed2:	4b0a      	ldr	r3, [pc, #40]	; (8010efc <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 8010ed4:	6818      	ldr	r0, [r3, #0]
 8010ed6:	b118      	cbz	r0, 8010ee0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 8010ed8:	6803      	ldr	r3, [r0, #0]
 8010eda:	4621      	mov	r1, r4
 8010edc:	689b      	ldr	r3, [r3, #8]
 8010ede:	4798      	blx	r3
 8010ee0:	4b07      	ldr	r3, [pc, #28]	; (8010f00 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 8010ee2:	4621      	mov	r1, r4
 8010ee4:	6818      	ldr	r0, [r3, #0]
 8010ee6:	6803      	ldr	r3, [r0, #0]
 8010ee8:	695b      	ldr	r3, [r3, #20]
 8010eea:	4798      	blx	r3
 8010eec:	e7eb      	b.n	8010ec6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 8010eee:	bf00      	nop
 8010ef0:	200125a4 	.word	0x200125a4
 8010ef4:	200125a6 	.word	0x200125a6
 8010ef8:	200125ec 	.word	0x200125ec
 8010efc:	200125e8 	.word	0x200125e8
 8010f00:	200125b0 	.word	0x200125b0

08010f04 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 8010f04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f08:	4604      	mov	r4, r0
 8010f0a:	b09b      	sub	sp, #108	; 0x6c
 8010f0c:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 8010f10:	b129      	cbz	r1, 8010f1e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 8010f12:	2300      	movs	r3, #0
 8010f14:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8010f18:	b01b      	add	sp, #108	; 0x6c
 8010f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f1e:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8010f22:	4630      	mov	r0, r6
 8010f24:	f7fa fc0f 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010f28:	4605      	mov	r5, r0
 8010f2a:	b940      	cbnz	r0, 8010f3e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 8010f2c:	4620      	mov	r0, r4
 8010f2e:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010f32:	f7ff fc8d 	bl	8010850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010f36:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8010f3a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8010f3e:	4ba6      	ldr	r3, [pc, #664]	; (80111d8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d4>)
 8010f40:	681b      	ldr	r3, [r3, #0]
 8010f42:	b33b      	cbz	r3, 8010f94 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8010f44:	4da5      	ldr	r5, [pc, #660]	; (80111dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 8010f46:	4628      	mov	r0, r5
 8010f48:	f7fa fbfd 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010f4c:	4606      	mov	r6, r0
 8010f4e:	bb08      	cbnz	r0, 8010f94 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8010f50:	4628      	mov	r0, r5
 8010f52:	f7ff fa37 	bl	80103c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010f56:	6829      	ldr	r1, [r5, #0]
 8010f58:	686a      	ldr	r2, [r5, #4]
 8010f5a:	4620      	mov	r0, r4
 8010f5c:	f7ff fc78 	bl	8010850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010f60:	802e      	strh	r6, [r5, #0]
 8010f62:	806e      	strh	r6, [r5, #2]
 8010f64:	80ae      	strh	r6, [r5, #4]
 8010f66:	80ee      	strh	r6, [r5, #6]
 8010f68:	4f9d      	ldr	r7, [pc, #628]	; (80111e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 8010f6a:	a809      	add	r0, sp, #36	; 0x24
 8010f6c:	f7ff fbe3 	bl	8010736 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010f70:	883d      	ldrh	r5, [r7, #0]
 8010f72:	462e      	mov	r6, r5
 8010f74:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8010f78:	42b3      	cmp	r3, r6
 8010f7a:	d910      	bls.n	8010f9e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 8010f7c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8010f80:	3601      	adds	r6, #1
 8010f82:	a809      	add	r0, sp, #36	; 0x24
 8010f84:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 8010f88:	b2b6      	uxth	r6, r6
 8010f8a:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 8010f8e:	f7ff fc3d 	bl	801080c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8010f92:	e7ef      	b.n	8010f74 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 8010f94:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8010f98:	2b00      	cmp	r3, #0
 8010f9a:	d1e5      	bne.n	8010f68 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 8010f9c:	e7bc      	b.n	8010f18 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 8010f9e:	462e      	mov	r6, r5
 8010fa0:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8010fa4:	42b3      	cmp	r3, r6
 8010fa6:	d90b      	bls.n	8010fc0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 8010fa8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8010fac:	3601      	adds	r6, #1
 8010fae:	4620      	mov	r0, r4
 8010fb0:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8010fb4:	b2b6      	uxth	r6, r6
 8010fb6:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8010fba:	f7ff fc49 	bl	8010850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010fbe:	e7ef      	b.n	8010fa0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 8010fc0:	4a88      	ldr	r2, [pc, #544]	; (80111e4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 8010fc2:	6813      	ldr	r3, [r2, #0]
 8010fc4:	4690      	mov	r8, r2
 8010fc6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8010fca:	2b01      	cmp	r3, #1
 8010fcc:	f040 8093 	bne.w	80110f6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f2>
 8010fd0:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8010fd4:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 8010fd8:	f04f 0900 	mov.w	r9, #0
 8010fdc:	33aa      	adds	r3, #170	; 0xaa
 8010fde:	42a8      	cmp	r0, r5
 8010fe0:	f103 0308 	add.w	r3, r3, #8
 8010fe4:	dd0a      	ble.n	8010ffc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 8010fe6:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8010fea:	3501      	adds	r5, #1
 8010fec:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 8010ff0:	440a      	add	r2, r1
 8010ff2:	b212      	sxth	r2, r2
 8010ff4:	4591      	cmp	r9, r2
 8010ff6:	bfb8      	it	lt
 8010ff8:	4691      	movlt	r9, r2
 8010ffa:	e7f0      	b.n	8010fde <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 8010ffc:	4b7a      	ldr	r3, [pc, #488]	; (80111e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 8010ffe:	4e7b      	ldr	r6, [pc, #492]	; (80111ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 8011000:	881d      	ldrh	r5, [r3, #0]
 8011002:	2300      	movs	r3, #0
 8011004:	2d0f      	cmp	r5, #15
 8011006:	bf8c      	ite	hi
 8011008:	08ed      	lsrhi	r5, r5, #3
 801100a:	2501      	movls	r5, #1
 801100c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8011010:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8011014:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 8011018:	f8d8 0000 	ldr.w	r0, [r8]
 801101c:	440b      	add	r3, r1
 801101e:	6802      	ldr	r2, [r0, #0]
 8011020:	b21b      	sxth	r3, r3
 8011022:	4599      	cmp	r9, r3
 8011024:	dd4a      	ble.n	80110bc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1b8>
 8011026:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 801102a:	4798      	blx	r3
 801102c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011030:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8011034:	4413      	add	r3, r2
 8011036:	b21b      	sxth	r3, r3
 8011038:	195a      	adds	r2, r3, r5
 801103a:	4290      	cmp	r0, r2
 801103c:	da07      	bge.n	801104e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 801103e:	4581      	cmp	r9, r0
 8011040:	dd05      	ble.n	801104e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 8011042:	4298      	cmp	r0, r3
 8011044:	da33      	bge.n	80110ae <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 8011046:	2b00      	cmp	r3, #0
 8011048:	dd31      	ble.n	80110ae <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 801104a:	4648      	mov	r0, r9
 801104c:	e004      	b.n	8011058 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 801104e:	4298      	cmp	r0, r3
 8011050:	dbfb      	blt.n	801104a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 8011052:	4548      	cmp	r0, r9
 8011054:	bfa8      	it	ge
 8011056:	4648      	movge	r0, r9
 8011058:	f9b6 2000 	ldrsh.w	r2, [r6]
 801105c:	2100      	movs	r1, #0
 801105e:	1ac0      	subs	r0, r0, r3
 8011060:	f8b7 a000 	ldrh.w	sl, [r7]
 8011064:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011068:	f8ad 3016 	strh.w	r3, [sp, #22]
 801106c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011070:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011074:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011078:	4553      	cmp	r3, sl
 801107a:	d9c9      	bls.n	8011010 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 801107c:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8011080:	ab07      	add	r3, sp, #28
 8011082:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011086:	6851      	ldr	r1, [r2, #4]
 8011088:	c303      	stmia	r3!, {r0, r1}
 801108a:	a807      	add	r0, sp, #28
 801108c:	a905      	add	r1, sp, #20
 801108e:	f7fa fb17 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 8011092:	a807      	add	r0, sp, #28
 8011094:	f7fa fb57 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011098:	b920      	cbnz	r0, 80110a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 801109a:	6823      	ldr	r3, [r4, #0]
 801109c:	a907      	add	r1, sp, #28
 801109e:	4620      	mov	r0, r4
 80110a0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80110a2:	4798      	blx	r3
 80110a4:	f10a 0a01 	add.w	sl, sl, #1
 80110a8:	fa1f fa8a 	uxth.w	sl, sl
 80110ac:	e7e2      	b.n	8011074 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 80110ae:	f8d8 0000 	ldr.w	r0, [r8]
 80110b2:	2101      	movs	r1, #1
 80110b4:	6803      	ldr	r3, [r0, #0]
 80110b6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80110b8:	4798      	blx	r3
 80110ba:	e7a9      	b.n	8011010 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 80110bc:	69d3      	ldr	r3, [r2, #28]
 80110be:	4798      	blx	r3
 80110c0:	4b4b      	ldr	r3, [pc, #300]	; (80111f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 80110c2:	781b      	ldrb	r3, [r3, #0]
 80110c4:	2b00      	cmp	r3, #0
 80110c6:	f43f af27 	beq.w	8010f18 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 80110ca:	2300      	movs	r3, #0
 80110cc:	883d      	ldrh	r5, [r7, #0]
 80110ce:	34ea      	adds	r4, #234	; 0xea
 80110d0:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 80110d4:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 80110d8:	42ab      	cmp	r3, r5
 80110da:	f67f af1d 	bls.w	8010f18 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 80110de:	ab1a      	add	r3, sp, #104	; 0x68
 80110e0:	4620      	mov	r0, r4
 80110e2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80110e6:	3501      	adds	r5, #1
 80110e8:	3b44      	subs	r3, #68	; 0x44
 80110ea:	b2ad      	uxth	r5, r5
 80110ec:	e893 0006 	ldmia.w	r3, {r1, r2}
 80110f0:	f7ff fb8c 	bl	801080c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 80110f4:	e7ee      	b.n	80110d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d0>
 80110f6:	2b02      	cmp	r3, #2
 80110f8:	f040 813d 	bne.w	8011376 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x472>
 80110fc:	4b3d      	ldr	r3, [pc, #244]	; (80111f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 80110fe:	781b      	ldrb	r3, [r3, #0]
 8011100:	2b01      	cmp	r3, #1
 8011102:	d02c      	beq.n	801115e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25a>
 8011104:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 8011108:	883a      	ldrh	r2, [r7, #0]
 801110a:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 801110e:	3201      	adds	r2, #1
 8011110:	b292      	uxth	r2, r2
 8011112:	2900      	cmp	r1, #0
 8011114:	d0d4      	beq.n	80110c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 8011116:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 801111a:	4610      	mov	r0, r2
 801111c:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8011120:	f04f 0a00 	mov.w	sl, #0
 8011124:	441d      	add	r5, r3
 8011126:	b22d      	sxth	r5, r5
 8011128:	b283      	uxth	r3, r0
 801112a:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 801112e:	4299      	cmp	r1, r3
 8011130:	f240 80c4 	bls.w	80112bc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b8>
 8011134:	4426      	add	r6, r4
 8011136:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 801113a:	4684      	mov	ip, r0
 801113c:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 8011140:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 8011144:	4573      	cmp	r3, lr
 8011146:	f340 80a6 	ble.w	8011296 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x392>
 801114a:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 801114e:	4475      	add	r5, lr
 8011150:	b22d      	sxth	r5, r5
 8011152:	429d      	cmp	r5, r3
 8011154:	bfa8      	it	ge
 8011156:	461d      	movge	r5, r3
 8011158:	3001      	adds	r0, #1
 801115a:	46e2      	mov	sl, ip
 801115c:	e7e4      	b.n	8011128 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x224>
 801115e:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8011162:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8011166:	f1bb 0f00 	cmp.w	fp, #0
 801116a:	d0a9      	beq.n	80110c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 801116c:	883b      	ldrh	r3, [r7, #0]
 801116e:	2600      	movs	r6, #0
 8011170:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8011174:	3301      	adds	r3, #1
 8011176:	b29b      	uxth	r3, r3
 8011178:	b299      	uxth	r1, r3
 801117a:	00f5      	lsls	r5, r6, #3
 801117c:	458b      	cmp	fp, r1
 801117e:	d93b      	bls.n	80111f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 8011180:	4425      	add	r5, r4
 8011182:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8011186:	469c      	mov	ip, r3
 8011188:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 801118c:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8011190:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8011194:	4408      	add	r0, r1
 8011196:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 801119a:	4471      	add	r1, lr
 801119c:	b200      	sxth	r0, r0
 801119e:	b209      	sxth	r1, r1
 80111a0:	4288      	cmp	r0, r1
 80111a2:	da06      	bge.n	80111b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ae>
 80111a4:	4586      	cmp	lr, r0
 80111a6:	4672      	mov	r2, lr
 80111a8:	bfb8      	it	lt
 80111aa:	4602      	movlt	r2, r0
 80111ac:	3301      	adds	r3, #1
 80111ae:	4666      	mov	r6, ip
 80111b0:	e7e2      	b.n	8011178 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x274>
 80111b2:	d10b      	bne.n	80111cc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2c8>
 80111b4:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 80111b8:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 80111bc:	458c      	cmp	ip, r1
 80111be:	bfb4      	ite	lt
 80111c0:	469c      	movlt	ip, r3
 80111c2:	46b4      	movge	ip, r6
 80111c4:	4572      	cmp	r2, lr
 80111c6:	bfb8      	it	lt
 80111c8:	4672      	movlt	r2, lr
 80111ca:	e7ef      	b.n	80111ac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 80111cc:	428a      	cmp	r2, r1
 80111ce:	46b4      	mov	ip, r6
 80111d0:	bfb8      	it	lt
 80111d2:	460a      	movlt	r2, r1
 80111d4:	e7ea      	b.n	80111ac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 80111d6:	bf00      	nop
 80111d8:	200125e8 	.word	0x200125e8
 80111dc:	200125f4 	.word	0x200125f4
 80111e0:	20000074 	.word	0x20000074
 80111e4:	200125b0 	.word	0x200125b0
 80111e8:	200125a6 	.word	0x200125a6
 80111ec:	200125a4 	.word	0x200125a4
 80111f0:	200125ae 	.word	0x200125ae
 80111f4:	200125a8 	.word	0x200125a8
 80111f8:	1961      	adds	r1, r4, r5
 80111fa:	ab07      	add	r3, sp, #28
 80111fc:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8011200:	6849      	ldr	r1, [r1, #4]
 8011202:	c303      	stmia	r3!, {r0, r1}
 8011204:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011208:	a807      	add	r0, sp, #28
 801120a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801120e:	2b13      	cmp	r3, #19
 8011210:	440b      	add	r3, r1
 8011212:	bfd8      	it	le
 8011214:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011218:	1a9b      	subs	r3, r3, r2
 801121a:	f8ad 201c 	strh.w	r2, [sp, #28]
 801121e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011222:	f7ff f929 	bl	8010478 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011226:	a807      	add	r0, sp, #28
 8011228:	f7fa fa8d 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 801122c:	2800      	cmp	r0, #0
 801122e:	d198      	bne.n	8011162 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 8011230:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8011234:	4425      	add	r5, r4
 8011236:	f8d8 0000 	ldr.w	r0, [r8]
 801123a:	f1bc 0f14 	cmp.w	ip, #20
 801123e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011242:	f8d0 e000 	ldr.w	lr, [r0]
 8011246:	bfa8      	it	ge
 8011248:	f04f 0c14 	movge.w	ip, #20
 801124c:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8011250:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011254:	fa1f fc8c 	uxth.w	ip, ip
 8011258:	f8cd c000 	str.w	ip, [sp]
 801125c:	f8de a074 	ldr.w	sl, [lr, #116]	; 0x74
 8011260:	47d0      	blx	sl
 8011262:	4682      	mov	sl, r0
 8011264:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011268:	a807      	add	r0, sp, #28
 801126a:	f7ff f8ab 	bl	80103c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801126e:	6823      	ldr	r3, [r4, #0]
 8011270:	4620      	mov	r0, r4
 8011272:	a907      	add	r1, sp, #28
 8011274:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011276:	4798      	blx	r3
 8011278:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 801127c:	eba0 000a 	sub.w	r0, r0, sl
 8011280:	b200      	sxth	r0, r0
 8011282:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8011286:	2800      	cmp	r0, #0
 8011288:	f47f af6b 	bne.w	8011162 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 801128c:	b2b1      	uxth	r1, r6
 801128e:	4648      	mov	r0, r9
 8011290:	f7ff faa6 	bl	80107e0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011294:	e765      	b.n	8011162 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 8011296:	d10c      	bne.n	80112b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ae>
 8011298:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 801129c:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 80112a0:	45b4      	cmp	ip, r6
 80112a2:	bfb4      	ite	lt
 80112a4:	4684      	movlt	ip, r0
 80112a6:	46d4      	movge	ip, sl
 80112a8:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 80112ac:	4433      	add	r3, r6
 80112ae:	b21b      	sxth	r3, r3
 80112b0:	e74f      	b.n	8011152 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x24e>
 80112b2:	4575      	cmp	r5, lr
 80112b4:	46d4      	mov	ip, sl
 80112b6:	bfa8      	it	ge
 80112b8:	4675      	movge	r5, lr
 80112ba:	e74d      	b.n	8011158 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x254>
 80112bc:	eb0b 0006 	add.w	r0, fp, r6
 80112c0:	4426      	add	r6, r4
 80112c2:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 80112c6:	f1b9 0f13 	cmp.w	r9, #19
 80112ca:	bfdc      	itt	le
 80112cc:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 80112d0:	444d      	addle	r5, r9
 80112d2:	e9cd 1202 	strd	r1, r2, [sp, #8]
 80112d6:	bfd8      	it	le
 80112d8:	b22d      	sxthle	r5, r5
 80112da:	f7fa fa34 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 80112de:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80112e2:	2800      	cmp	r0, #0
 80112e4:	f47f af15 	bne.w	8011112 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x20e>
 80112e8:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 80112ec:	fa1f f989 	uxth.w	r9, r9
 80112f0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80112f4:	eba5 050c 	sub.w	r5, r5, ip
 80112f8:	fa1f f28c 	uxth.w	r2, ip
 80112fc:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 8011300:	eb02 0009 	add.w	r0, r2, r9
 8011304:	2d14      	cmp	r5, #20
 8011306:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 801130a:	bfa8      	it	ge
 801130c:	2514      	movge	r5, #20
 801130e:	b200      	sxth	r0, r0
 8011310:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011314:	b289      	uxth	r1, r1
 8011316:	fa1f fe85 	uxth.w	lr, r5
 801131a:	eba0 000c 	sub.w	r0, r0, ip
 801131e:	f8ad c01e 	strh.w	ip, [sp, #30]
 8011322:	4586      	cmp	lr, r0
 8011324:	f8d8 0000 	ldr.w	r0, [r8]
 8011328:	f8ad 3020 	strh.w	r3, [sp, #32]
 801132c:	b29b      	uxth	r3, r3
 801132e:	bfb8      	it	lt
 8011330:	46f1      	movlt	r9, lr
 8011332:	6805      	ldr	r5, [r0, #0]
 8011334:	f8cd 9000 	str.w	r9, [sp]
 8011338:	6f6d      	ldr	r5, [r5, #116]	; 0x74
 801133a:	47a8      	blx	r5
 801133c:	6823      	ldr	r3, [r4, #0]
 801133e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011342:	a907      	add	r1, sp, #28
 8011344:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011346:	4620      	mov	r0, r4
 8011348:	4798      	blx	r3
 801134a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801134e:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 8011352:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 8011356:	1a5b      	subs	r3, r3, r1
 8011358:	440a      	add	r2, r1
 801135a:	b21b      	sxth	r3, r3
 801135c:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 8011360:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 8011364:	2b00      	cmp	r3, #0
 8011366:	f47f aecf 	bne.w	8011108 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 801136a:	fa1f f18a 	uxth.w	r1, sl
 801136e:	4658      	mov	r0, fp
 8011370:	f7ff fa36 	bl	80107e0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011374:	e6c8      	b.n	8011108 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 8011376:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801137a:	42ab      	cmp	r3, r5
 801137c:	f67f aea0 	bls.w	80110c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 8011380:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011384:	ab07      	add	r3, sp, #28
 8011386:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801138a:	6851      	ldr	r1, [r2, #4]
 801138c:	c303      	stmia	r3!, {r0, r1}
 801138e:	a807      	add	r0, sp, #28
 8011390:	f7fa f9d9 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011394:	b920      	cbnz	r0, 80113a0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49c>
 8011396:	6823      	ldr	r3, [r4, #0]
 8011398:	a907      	add	r1, sp, #28
 801139a:	4620      	mov	r0, r4
 801139c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801139e:	4798      	blx	r3
 80113a0:	3501      	adds	r5, #1
 80113a2:	b2ad      	uxth	r5, r5
 80113a4:	e7e7      	b.n	8011376 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x472>
 80113a6:	bf00      	nop

080113a8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80113a8:	4b03      	ldr	r3, [pc, #12]	; (80113b8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80113aa:	2200      	movs	r2, #0
 80113ac:	801a      	strh	r2, [r3, #0]
 80113ae:	805a      	strh	r2, [r3, #2]
 80113b0:	809a      	strh	r2, [r3, #4]
 80113b2:	80da      	strh	r2, [r3, #6]
 80113b4:	4770      	bx	lr
 80113b6:	bf00      	nop
 80113b8:	200125f4 	.word	0x200125f4

080113bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80113bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113c0:	b099      	sub	sp, #100	; 0x64
 80113c2:	4607      	mov	r7, r0
 80113c4:	4614      	mov	r4, r2
 80113c6:	461d      	mov	r5, r3
 80113c8:	a802      	add	r0, sp, #8
 80113ca:	468a      	mov	sl, r1
 80113cc:	f000 fe73 	bl	80120b6 <_ZN8touchgfx12TextProviderC1Ev>
 80113d0:	683b      	ldr	r3, [r7, #0]
 80113d2:	4638      	mov	r0, r7
 80113d4:	f242 0b0b 	movw	fp, #8203	; 0x200b
 80113d8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80113da:	4798      	blx	r3
 80113dc:	462a      	mov	r2, r5
 80113de:	2500      	movs	r5, #0
 80113e0:	4621      	mov	r1, r4
 80113e2:	4603      	mov	r3, r0
 80113e4:	a802      	add	r0, sp, #8
 80113e6:	462c      	mov	r4, r5
 80113e8:	46a9      	mov	r9, r5
 80113ea:	46a8      	mov	r8, r5
 80113ec:	f000 fea8 	bl	8012140 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 80113f0:	2300      	movs	r3, #0
 80113f2:	9301      	str	r3, [sp, #4]
 80113f4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80113f8:	429c      	cmp	r4, r3
 80113fa:	d002      	beq.n	8011402 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 80113fc:	455c      	cmp	r4, fp
 80113fe:	bf18      	it	ne
 8011400:	4625      	movne	r5, r4
 8011402:	ab01      	add	r3, sp, #4
 8011404:	463a      	mov	r2, r7
 8011406:	4651      	mov	r1, sl
 8011408:	a802      	add	r0, sp, #8
 801140a:	f001 f993 	bl	8012734 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801140e:	4604      	mov	r4, r0
 8011410:	b108      	cbz	r0, 8011416 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 8011412:	280a      	cmp	r0, #10
 8011414:	d10a      	bne.n	801142c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 8011416:	45c1      	cmp	r9, r8
 8011418:	bf38      	it	cc
 801141a:	46c1      	movcc	r9, r8
 801141c:	f04f 0800 	mov.w	r8, #0
 8011420:	2c00      	cmp	r4, #0
 8011422:	d1e5      	bne.n	80113f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 8011424:	4648      	mov	r0, r9
 8011426:	b019      	add	sp, #100	; 0x64
 8011428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801142c:	9a01      	ldr	r2, [sp, #4]
 801142e:	2a00      	cmp	r2, #0
 8011430:	d0de      	beq.n	80113f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 8011432:	7b56      	ldrb	r6, [r2, #13]
 8011434:	4629      	mov	r1, r5
 8011436:	683b      	ldr	r3, [r7, #0]
 8011438:	0076      	lsls	r6, r6, #1
 801143a:	8894      	ldrh	r4, [r2, #4]
 801143c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801143e:	f406 7080 	and.w	r0, r6, #256	; 0x100
 8011442:	7a96      	ldrb	r6, [r2, #10]
 8011444:	4306      	orrs	r6, r0
 8011446:	4638      	mov	r0, r7
 8011448:	4798      	blx	r3
 801144a:	4430      	add	r0, r6
 801144c:	4480      	add	r8, r0
 801144e:	fa1f f888 	uxth.w	r8, r8
 8011452:	e7e5      	b.n	8011420 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

08011454 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011454:	b508      	push	{r3, lr}
 8011456:	6803      	ldr	r3, [r0, #0]
 8011458:	68db      	ldr	r3, [r3, #12]
 801145a:	4798      	blx	r3
 801145c:	b128      	cbz	r0, 801146a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801145e:	7b43      	ldrb	r3, [r0, #13]
 8011460:	7a80      	ldrb	r0, [r0, #10]
 8011462:	005b      	lsls	r3, r3, #1
 8011464:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011468:	4318      	orrs	r0, r3
 801146a:	bd08      	pop	{r3, pc}

0801146c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801146c:	b40e      	push	{r1, r2, r3}
 801146e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011470:	b098      	sub	sp, #96	; 0x60
 8011472:	4605      	mov	r5, r0
 8011474:	ab1d      	add	r3, sp, #116	; 0x74
 8011476:	a802      	add	r0, sp, #8
 8011478:	ae18      	add	r6, sp, #96	; 0x60
 801147a:	f853 4b04 	ldr.w	r4, [r3], #4
 801147e:	9300      	str	r3, [sp, #0]
 8011480:	f000 fe19 	bl	80120b6 <_ZN8touchgfx12TextProviderC1Ev>
 8011484:	682b      	ldr	r3, [r5, #0]
 8011486:	4628      	mov	r0, r5
 8011488:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801148a:	4798      	blx	r3
 801148c:	4621      	mov	r1, r4
 801148e:	2400      	movs	r4, #0
 8011490:	4603      	mov	r3, r0
 8011492:	9a00      	ldr	r2, [sp, #0]
 8011494:	a802      	add	r0, sp, #8
 8011496:	f000 fe53 	bl	8012140 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 801149a:	f846 4d5c 	str.w	r4, [r6, #-92]!
 801149e:	462a      	mov	r2, r5
 80114a0:	4633      	mov	r3, r6
 80114a2:	4621      	mov	r1, r4
 80114a4:	a802      	add	r0, sp, #8
 80114a6:	f001 f945 	bl	8012734 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80114aa:	b300      	cbz	r0, 80114ee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80114ac:	280a      	cmp	r0, #10
 80114ae:	d01a      	beq.n	80114e6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7a>
 80114b0:	9f01      	ldr	r7, [sp, #4]
 80114b2:	b1c7      	cbz	r7, 80114e6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7a>
 80114b4:	7b78      	ldrb	r0, [r7, #13]
 80114b6:	7a3b      	ldrb	r3, [r7, #8]
 80114b8:	00c1      	lsls	r1, r0, #3
 80114ba:	88aa      	ldrh	r2, [r5, #4]
 80114bc:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80114c0:	4319      	orrs	r1, r3
 80114c2:	0643      	lsls	r3, r0, #25
 80114c4:	ea4f 1000 	mov.w	r0, r0, lsl #4
 80114c8:	bf48      	it	mi
 80114ca:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80114ce:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80114d2:	bf48      	it	mi
 80114d4:	b219      	sxthmi	r1, r3
 80114d6:	79fb      	ldrb	r3, [r7, #7]
 80114d8:	4303      	orrs	r3, r0
 80114da:	4413      	add	r3, r2
 80114dc:	1a5b      	subs	r3, r3, r1
 80114de:	b29b      	uxth	r3, r3
 80114e0:	42a3      	cmp	r3, r4
 80114e2:	bfc8      	it	gt
 80114e4:	b21c      	sxthgt	r4, r3
 80114e6:	4633      	mov	r3, r6
 80114e8:	462a      	mov	r2, r5
 80114ea:	2100      	movs	r1, #0
 80114ec:	e7da      	b.n	80114a4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 80114ee:	b2a0      	uxth	r0, r4
 80114f0:	b018      	add	sp, #96	; 0x60
 80114f2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80114f6:	b003      	add	sp, #12
 80114f8:	4770      	bx	lr

080114fa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80114fa:	b40e      	push	{r1, r2, r3}
 80114fc:	b530      	push	{r4, r5, lr}
 80114fe:	b098      	sub	sp, #96	; 0x60
 8011500:	4604      	mov	r4, r0
 8011502:	ab1b      	add	r3, sp, #108	; 0x6c
 8011504:	a802      	add	r0, sp, #8
 8011506:	f853 5b04 	ldr.w	r5, [r3], #4
 801150a:	9301      	str	r3, [sp, #4]
 801150c:	f000 fdd3 	bl	80120b6 <_ZN8touchgfx12TextProviderC1Ev>
 8011510:	6823      	ldr	r3, [r4, #0]
 8011512:	4620      	mov	r0, r4
 8011514:	2401      	movs	r4, #1
 8011516:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011518:	4798      	blx	r3
 801151a:	9a01      	ldr	r2, [sp, #4]
 801151c:	4603      	mov	r3, r0
 801151e:	4629      	mov	r1, r5
 8011520:	a802      	add	r0, sp, #8
 8011522:	f000 fe0d 	bl	8012140 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 8011526:	a802      	add	r0, sp, #8
 8011528:	f001 f9fc 	bl	8012924 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801152c:	b2a3      	uxth	r3, r4
 801152e:	b138      	cbz	r0, 8011540 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x46>
 8011530:	280a      	cmp	r0, #10
 8011532:	a802      	add	r0, sp, #8
 8011534:	bf04      	itt	eq
 8011536:	3301      	addeq	r3, #1
 8011538:	b21c      	sxtheq	r4, r3
 801153a:	f001 f9f3 	bl	8012924 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801153e:	e7f5      	b.n	801152c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 8011540:	4618      	mov	r0, r3
 8011542:	b018      	add	sp, #96	; 0x60
 8011544:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011548:	b003      	add	sp, #12
 801154a:	4770      	bx	lr

0801154c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801154c:	b40e      	push	{r1, r2, r3}
 801154e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011550:	b098      	sub	sp, #96	; 0x60
 8011552:	4604      	mov	r4, r0
 8011554:	26ff      	movs	r6, #255	; 0xff
 8011556:	ab1d      	add	r3, sp, #116	; 0x74
 8011558:	a802      	add	r0, sp, #8
 801155a:	f853 5b04 	ldr.w	r5, [r3], #4
 801155e:	9300      	str	r3, [sp, #0]
 8011560:	f000 fda9 	bl	80120b6 <_ZN8touchgfx12TextProviderC1Ev>
 8011564:	6823      	ldr	r3, [r4, #0]
 8011566:	4620      	mov	r0, r4
 8011568:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801156a:	4798      	blx	r3
 801156c:	4629      	mov	r1, r5
 801156e:	4603      	mov	r3, r0
 8011570:	9a00      	ldr	r2, [sp, #0]
 8011572:	a802      	add	r0, sp, #8
 8011574:	ad18      	add	r5, sp, #96	; 0x60
 8011576:	f000 fde3 	bl	8012140 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 801157a:	2100      	movs	r1, #0
 801157c:	4622      	mov	r2, r4
 801157e:	a802      	add	r0, sp, #8
 8011580:	f845 1d5c 	str.w	r1, [r5, #-92]!
 8011584:	462b      	mov	r3, r5
 8011586:	f001 f8d5 	bl	8012734 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801158a:	b1d8      	cbz	r0, 80115c4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801158c:	280a      	cmp	r0, #10
 801158e:	d012      	beq.n	80115b6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 8011590:	9801      	ldr	r0, [sp, #4]
 8011592:	b180      	cbz	r0, 80115b6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 8011594:	7b47      	ldrb	r7, [r0, #13]
 8011596:	7922      	ldrb	r2, [r4, #4]
 8011598:	00fb      	lsls	r3, r7, #3
 801159a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801159e:	7a03      	ldrb	r3, [r0, #8]
 80115a0:	430b      	orrs	r3, r1
 80115a2:	0679      	lsls	r1, r7, #25
 80115a4:	bf44      	itt	mi
 80115a6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80115aa:	b21b      	sxthmi	r3, r3
 80115ac:	1ad3      	subs	r3, r2, r3
 80115ae:	b2db      	uxtb	r3, r3
 80115b0:	429e      	cmp	r6, r3
 80115b2:	bf28      	it	cs
 80115b4:	461e      	movcs	r6, r3
 80115b6:	462b      	mov	r3, r5
 80115b8:	4622      	mov	r2, r4
 80115ba:	2100      	movs	r1, #0
 80115bc:	a802      	add	r0, sp, #8
 80115be:	f001 f8b9 	bl	8012734 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80115c2:	e7e2      	b.n	801158a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 80115c4:	4630      	mov	r0, r6
 80115c6:	b018      	add	sp, #96	; 0x60
 80115c8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80115cc:	b003      	add	sp, #12
 80115ce:	4770      	bx	lr

080115d0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80115d0:	b513      	push	{r0, r1, r4, lr}
 80115d2:	1d01      	adds	r1, r0, #4
 80115d4:	4603      	mov	r3, r0
 80115d6:	466a      	mov	r2, sp
 80115d8:	c903      	ldmia	r1, {r0, r1}
 80115da:	e882 0003 	stmia.w	r2, {r0, r1}
 80115de:	2100      	movs	r1, #0
 80115e0:	4618      	mov	r0, r3
 80115e2:	9100      	str	r1, [sp, #0]
 80115e4:	6819      	ldr	r1, [r3, #0]
 80115e6:	690c      	ldr	r4, [r1, #16]
 80115e8:	4611      	mov	r1, r2
 80115ea:	47a0      	blx	r4
 80115ec:	b002      	add	sp, #8
 80115ee:	bd10      	pop	{r4, pc}

080115f0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80115f0:	b538      	push	{r3, r4, r5, lr}
 80115f2:	680b      	ldr	r3, [r1, #0]
 80115f4:	460c      	mov	r4, r1
 80115f6:	4605      	mov	r5, r0
 80115f8:	68db      	ldr	r3, [r3, #12]
 80115fa:	4798      	blx	r3
 80115fc:	6823      	ldr	r3, [r4, #0]
 80115fe:	4620      	mov	r0, r4
 8011600:	4629      	mov	r1, r5
 8011602:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011604:	4798      	blx	r3
 8011606:	4628      	mov	r0, r5
 8011608:	bd38      	pop	{r3, r4, r5, pc}

0801160a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801160a:	b410      	push	{r4}
 801160c:	880a      	ldrh	r2, [r1, #0]
 801160e:	8884      	ldrh	r4, [r0, #4]
 8011610:	4422      	add	r2, r4
 8011612:	800a      	strh	r2, [r1, #0]
 8011614:	884a      	ldrh	r2, [r1, #2]
 8011616:	88c4      	ldrh	r4, [r0, #6]
 8011618:	4422      	add	r2, r4
 801161a:	804a      	strh	r2, [r1, #2]
 801161c:	6940      	ldr	r0, [r0, #20]
 801161e:	b120      	cbz	r0, 801162a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8011620:	6803      	ldr	r3, [r0, #0]
 8011622:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011626:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011628:	4718      	bx	r3
 801162a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801162e:	4770      	bx	lr

08011630 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8011630:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011632:	460b      	mov	r3, r1
 8011634:	b085      	sub	sp, #20
 8011636:	4604      	mov	r4, r0
 8011638:	b901      	cbnz	r1, 801163c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801163a:	b322      	cbz	r2, 8011686 <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 801163c:	1d27      	adds	r7, r4, #4
 801163e:	466e      	mov	r6, sp
 8011640:	88e5      	ldrh	r5, [r4, #6]
 8011642:	e897 0003 	ldmia.w	r7, {r0, r1}
 8011646:	442a      	add	r2, r5
 8011648:	e886 0003 	stmia.w	r6, {r0, r1}
 801164c:	88a1      	ldrh	r1, [r4, #4]
 801164e:	4620      	mov	r0, r4
 8011650:	b215      	sxth	r5, r2
 8011652:	4419      	add	r1, r3
 8011654:	6823      	ldr	r3, [r4, #0]
 8011656:	b209      	sxth	r1, r1
 8011658:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801165a:	4798      	blx	r3
 801165c:	6823      	ldr	r3, [r4, #0]
 801165e:	4629      	mov	r1, r5
 8011660:	4620      	mov	r0, r4
 8011662:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011664:	ad02      	add	r5, sp, #8
 8011666:	4798      	blx	r3
 8011668:	e897 0003 	ldmia.w	r7, {r0, r1}
 801166c:	e885 0003 	stmia.w	r5, {r0, r1}
 8011670:	6960      	ldr	r0, [r4, #20]
 8011672:	b150      	cbz	r0, 801168a <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 8011674:	6803      	ldr	r3, [r0, #0]
 8011676:	4631      	mov	r1, r6
 8011678:	691b      	ldr	r3, [r3, #16]
 801167a:	4798      	blx	r3
 801167c:	6960      	ldr	r0, [r4, #20]
 801167e:	6803      	ldr	r3, [r0, #0]
 8011680:	691b      	ldr	r3, [r3, #16]
 8011682:	4629      	mov	r1, r5
 8011684:	4798      	blx	r3
 8011686:	b005      	add	sp, #20
 8011688:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801168a:	f7ff f843 	bl	8010714 <_ZN8touchgfx11Application11getInstanceEv>
 801168e:	6803      	ldr	r3, [r0, #0]
 8011690:	4631      	mov	r1, r6
 8011692:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011694:	4798      	blx	r3
 8011696:	f7ff f83d 	bl	8010714 <_ZN8touchgfx11Application11getInstanceEv>
 801169a:	6803      	ldr	r3, [r0, #0]
 801169c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801169e:	e7f0      	b.n	8011682 <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

080116a0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80116a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80116a2:	8882      	ldrh	r2, [r0, #4]
 80116a4:	4605      	mov	r5, r0
 80116a6:	880b      	ldrh	r3, [r1, #0]
 80116a8:	460c      	mov	r4, r1
 80116aa:	4413      	add	r3, r2
 80116ac:	800b      	strh	r3, [r1, #0]
 80116ae:	884b      	ldrh	r3, [r1, #2]
 80116b0:	88c2      	ldrh	r2, [r0, #6]
 80116b2:	4413      	add	r3, r2
 80116b4:	4602      	mov	r2, r0
 80116b6:	804b      	strh	r3, [r1, #2]
 80116b8:	466b      	mov	r3, sp
 80116ba:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80116be:	6851      	ldr	r1, [r2, #4]
 80116c0:	c303      	stmia	r3!, {r0, r1}
 80116c2:	4621      	mov	r1, r4
 80116c4:	4668      	mov	r0, sp
 80116c6:	f7f9 fffb 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 80116ca:	466b      	mov	r3, sp
 80116cc:	cb03      	ldmia	r3!, {r0, r1}
 80116ce:	6020      	str	r0, [r4, #0]
 80116d0:	6061      	str	r1, [r4, #4]
 80116d2:	6968      	ldr	r0, [r5, #20]
 80116d4:	b128      	cbz	r0, 80116e2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 80116d6:	6803      	ldr	r3, [r0, #0]
 80116d8:	691b      	ldr	r3, [r3, #16]
 80116da:	4621      	mov	r1, r4
 80116dc:	4798      	blx	r3
 80116de:	b003      	add	sp, #12
 80116e0:	bd30      	pop	{r4, r5, pc}
 80116e2:	f7ff f817 	bl	8010714 <_ZN8touchgfx11Application11getInstanceEv>
 80116e6:	6803      	ldr	r3, [r0, #0]
 80116e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80116ea:	e7f6      	b.n	80116da <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

080116ec <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80116ec:	b570      	push	{r4, r5, r6, lr}
 80116ee:	8882      	ldrh	r2, [r0, #4]
 80116f0:	460c      	mov	r4, r1
 80116f2:	880b      	ldrh	r3, [r1, #0]
 80116f4:	4605      	mov	r5, r0
 80116f6:	4413      	add	r3, r2
 80116f8:	800b      	strh	r3, [r1, #0]
 80116fa:	884b      	ldrh	r3, [r1, #2]
 80116fc:	88c2      	ldrh	r2, [r0, #6]
 80116fe:	4413      	add	r3, r2
 8011700:	804b      	strh	r3, [r1, #2]
 8011702:	1d01      	adds	r1, r0, #4
 8011704:	4620      	mov	r0, r4
 8011706:	f7f9 ffdb 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 801170a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801170e:	2b00      	cmp	r3, #0
 8011710:	dd0b      	ble.n	801172a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011712:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011716:	2b00      	cmp	r3, #0
 8011718:	dd07      	ble.n	801172a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801171a:	6968      	ldr	r0, [r5, #20]
 801171c:	b128      	cbz	r0, 801172a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801171e:	6803      	ldr	r3, [r0, #0]
 8011720:	4621      	mov	r1, r4
 8011722:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011724:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011728:	4718      	bx	r3
 801172a:	bd70      	pop	{r4, r5, r6, pc}

0801172c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801172c:	b510      	push	{r4, lr}
 801172e:	2300      	movs	r3, #0
 8011730:	4604      	mov	r4, r0
 8011732:	4608      	mov	r0, r1
 8011734:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8011738:	8023      	strh	r3, [r4, #0]
 801173a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801173e:	8063      	strh	r3, [r4, #2]
 8011740:	6803      	ldr	r3, [r0, #0]
 8011742:	80a1      	strh	r1, [r4, #4]
 8011744:	4621      	mov	r1, r4
 8011746:	80e2      	strh	r2, [r4, #6]
 8011748:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801174a:	4798      	blx	r3
 801174c:	4620      	mov	r0, r4
 801174e:	bd10      	pop	{r4, pc}

08011750 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8011750:	b530      	push	{r4, r5, lr}
 8011752:	8083      	strh	r3, [r0, #4]
 8011754:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8011758:	f89d 5010 	ldrb.w	r5, [sp, #16]
 801175c:	7183      	strb	r3, [r0, #6]
 801175e:	79c3      	ldrb	r3, [r0, #7]
 8011760:	6101      	str	r1, [r0, #16]
 8011762:	f365 0306 	bfi	r3, r5, #0, #7
 8011766:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801176a:	8282      	strh	r2, [r0, #20]
 801176c:	f365 13c7 	bfi	r3, r5, #7, #1
 8011770:	71c3      	strb	r3, [r0, #7]
 8011772:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8011776:	7203      	strb	r3, [r0, #8]
 8011778:	f89d 301c 	ldrb.w	r3, [sp, #28]
 801177c:	7243      	strb	r3, [r0, #9]
 801177e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011782:	8143      	strh	r3, [r0, #10]
 8011784:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8011788:	8183      	strh	r3, [r0, #12]
 801178a:	4b01      	ldr	r3, [pc, #4]	; (8011790 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 801178c:	6003      	str	r3, [r0, #0]
 801178e:	bd30      	pop	{r4, r5, pc}
 8011790:	08024708 	.word	0x08024708

08011794 <_ZNK8touchgfx9ConstFont4findEt>:
 8011794:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011796:	6904      	ldr	r4, [r0, #16]
 8011798:	b3bc      	cbz	r4, 801180a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801179a:	88a3      	ldrh	r3, [r4, #4]
 801179c:	8a82      	ldrh	r2, [r0, #20]
 801179e:	1acb      	subs	r3, r1, r3
 80117a0:	f102 32ff 	add.w	r2, r2, #4294967295
 80117a4:	d431      	bmi.n	801180a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80117a6:	4293      	cmp	r3, r2
 80117a8:	dd0c      	ble.n	80117c4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80117aa:	230e      	movs	r3, #14
 80117ac:	fb03 4302 	mla	r3, r3, r2, r4
 80117b0:	889b      	ldrh	r3, [r3, #4]
 80117b2:	1a5b      	subs	r3, r3, r1
 80117b4:	1ad3      	subs	r3, r2, r3
 80117b6:	429a      	cmp	r2, r3
 80117b8:	db27      	blt.n	801180a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80117ba:	2b00      	cmp	r3, #0
 80117bc:	bfbc      	itt	lt
 80117be:	2302      	movlt	r3, #2
 80117c0:	fb92 f3f3 	sdivlt	r3, r2, r3
 80117c4:	2500      	movs	r5, #0
 80117c6:	260e      	movs	r6, #14
 80117c8:	4295      	cmp	r5, r2
 80117ca:	dc1e      	bgt.n	801180a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80117cc:	fb06 4003 	mla	r0, r6, r3, r4
 80117d0:	8887      	ldrh	r7, [r0, #4]
 80117d2:	42b9      	cmp	r1, r7
 80117d4:	d01a      	beq.n	801180c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80117d6:	d20d      	bcs.n	80117f4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80117d8:	1e5a      	subs	r2, r3, #1
 80117da:	4295      	cmp	r5, r2
 80117dc:	dc15      	bgt.n	801180a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80117de:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80117e2:	1a5b      	subs	r3, r3, r1
 80117e4:	1ad3      	subs	r3, r2, r3
 80117e6:	429a      	cmp	r2, r3
 80117e8:	db0f      	blt.n	801180a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80117ea:	429d      	cmp	r5, r3
 80117ec:	ddec      	ble.n	80117c8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80117ee:	1953      	adds	r3, r2, r5
 80117f0:	105b      	asrs	r3, r3, #1
 80117f2:	e7e9      	b.n	80117c8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80117f4:	1c5d      	adds	r5, r3, #1
 80117f6:	42aa      	cmp	r2, r5
 80117f8:	db07      	blt.n	801180a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80117fa:	8a43      	ldrh	r3, [r0, #18]
 80117fc:	1acb      	subs	r3, r1, r3
 80117fe:	442b      	add	r3, r5
 8011800:	429d      	cmp	r5, r3
 8011802:	dc02      	bgt.n	801180a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011804:	429a      	cmp	r2, r3
 8011806:	dadf      	bge.n	80117c8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011808:	e7f1      	b.n	80117ee <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801180a:	2000      	movs	r0, #0
 801180c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801180e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801180e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011810:	4604      	mov	r4, r0
 8011812:	4617      	mov	r7, r2
 8011814:	461e      	mov	r6, r3
 8011816:	b911      	cbnz	r1, 801181e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011818:	2500      	movs	r5, #0
 801181a:	4628      	mov	r0, r5
 801181c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801181e:	290a      	cmp	r1, #10
 8011820:	d0fa      	beq.n	8011818 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011822:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8011826:	4291      	cmp	r1, r2
 8011828:	d0f6      	beq.n	8011818 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801182a:	f242 020b 	movw	r2, #8203	; 0x200b
 801182e:	4291      	cmp	r1, r2
 8011830:	d0f2      	beq.n	8011818 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011832:	f7ff ffaf 	bl	8011794 <_ZNK8touchgfx9ConstFont4findEt>
 8011836:	4605      	mov	r5, r0
 8011838:	b950      	cbnz	r0, 8011850 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801183a:	6823      	ldr	r3, [r4, #0]
 801183c:	4620      	mov	r0, r4
 801183e:	691b      	ldr	r3, [r3, #16]
 8011840:	4798      	blx	r3
 8011842:	4601      	mov	r1, r0
 8011844:	4620      	mov	r0, r4
 8011846:	f7ff ffa5 	bl	8011794 <_ZNK8touchgfx9ConstFont4findEt>
 801184a:	4605      	mov	r5, r0
 801184c:	2800      	cmp	r0, #0
 801184e:	d0e3      	beq.n	8011818 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011850:	6823      	ldr	r3, [r4, #0]
 8011852:	4629      	mov	r1, r5
 8011854:	4620      	mov	r0, r4
 8011856:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011858:	4798      	blx	r3
 801185a:	6038      	str	r0, [r7, #0]
 801185c:	6823      	ldr	r3, [r4, #0]
 801185e:	4620      	mov	r0, r4
 8011860:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011862:	4798      	blx	r3
 8011864:	7030      	strb	r0, [r6, #0]
 8011866:	e7d8      	b.n	801181a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011868 <_ZN8touchgfx6memsetEPvhm>:
 8011868:	4402      	add	r2, r0
 801186a:	4290      	cmp	r0, r2
 801186c:	d002      	beq.n	8011874 <_ZN8touchgfx6memsetEPvhm+0xc>
 801186e:	f800 1b01 	strb.w	r1, [r0], #1
 8011872:	e7fa      	b.n	801186a <_ZN8touchgfx6memsetEPvhm+0x2>
 8011874:	4770      	bx	lr

08011876 <_ZN8touchgfx4clzuEm>:
 8011876:	4603      	mov	r3, r0
 8011878:	b1c8      	cbz	r0, 80118ae <_ZN8touchgfx4clzuEm+0x38>
 801187a:	0c02      	lsrs	r2, r0, #16
 801187c:	0412      	lsls	r2, r2, #16
 801187e:	b9a2      	cbnz	r2, 80118aa <_ZN8touchgfx4clzuEm+0x34>
 8011880:	0403      	lsls	r3, r0, #16
 8011882:	2010      	movs	r0, #16
 8011884:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8011888:	bf04      	itt	eq
 801188a:	021b      	lsleq	r3, r3, #8
 801188c:	3008      	addeq	r0, #8
 801188e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8011892:	bf04      	itt	eq
 8011894:	011b      	lsleq	r3, r3, #4
 8011896:	3004      	addeq	r0, #4
 8011898:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801189c:	bf04      	itt	eq
 801189e:	009b      	lsleq	r3, r3, #2
 80118a0:	3002      	addeq	r0, #2
 80118a2:	2b00      	cmp	r3, #0
 80118a4:	db04      	blt.n	80118b0 <_ZN8touchgfx4clzuEm+0x3a>
 80118a6:	3001      	adds	r0, #1
 80118a8:	4770      	bx	lr
 80118aa:	2000      	movs	r0, #0
 80118ac:	e7ea      	b.n	8011884 <_ZN8touchgfx4clzuEm+0xe>
 80118ae:	2020      	movs	r0, #32
 80118b0:	4770      	bx	lr

080118b2 <_ZN8touchgfx7muldivuEmmmRm>:
 80118b2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80118b6:	4680      	mov	r8, r0
 80118b8:	460f      	mov	r7, r1
 80118ba:	4615      	mov	r5, r2
 80118bc:	461e      	mov	r6, r3
 80118be:	f7ff ffda 	bl	8011876 <_ZN8touchgfx4clzuEm>
 80118c2:	b998      	cbnz	r0, 80118ec <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 80118c4:	4608      	mov	r0, r1
 80118c6:	f7ff ffd6 	bl	8011876 <_ZN8touchgfx4clzuEm>
 80118ca:	2800      	cmp	r0, #0
 80118cc:	dd08      	ble.n	80118e0 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 80118ce:	4633      	mov	r3, r6
 80118d0:	462a      	mov	r2, r5
 80118d2:	4641      	mov	r1, r8
 80118d4:	4638      	mov	r0, r7
 80118d6:	f7ff ffec 	bl	80118b2 <_ZN8touchgfx7muldivuEmmmRm>
 80118da:	b003      	add	sp, #12
 80118dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80118e0:	f04f 33ff 	mov.w	r3, #4294967295
 80118e4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80118e8:	6033      	str	r3, [r6, #0]
 80118ea:	e7f6      	b.n	80118da <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80118ec:	fa31 f900 	lsrs.w	r9, r1, r0
 80118f0:	fb01 f308 	mul.w	r3, r1, r8
 80118f4:	d105      	bne.n	8011902 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80118f6:	fbb3 f0f5 	udiv	r0, r3, r5
 80118fa:	fb05 3510 	mls	r5, r5, r0, r3
 80118fe:	6035      	str	r5, [r6, #0]
 8011900:	e7eb      	b.n	80118da <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8011902:	2301      	movs	r3, #1
 8011904:	fa08 fb00 	lsl.w	fp, r8, r0
 8011908:	462a      	mov	r2, r5
 801190a:	4641      	mov	r1, r8
 801190c:	fa03 f000 	lsl.w	r0, r3, r0
 8011910:	4633      	mov	r3, r6
 8011912:	fbbb faf5 	udiv	sl, fp, r5
 8011916:	3801      	subs	r0, #1
 8011918:	fb09 f40a 	mul.w	r4, r9, sl
 801191c:	4038      	ands	r0, r7
 801191e:	f7ff ffc8 	bl	80118b2 <_ZN8touchgfx7muldivuEmmmRm>
 8011922:	462a      	mov	r2, r5
 8011924:	4607      	mov	r7, r0
 8011926:	ab01      	add	r3, sp, #4
 8011928:	fb05 b11a 	mls	r1, r5, sl, fp
 801192c:	4648      	mov	r0, r9
 801192e:	f7ff ffc0 	bl	80118b2 <_ZN8touchgfx7muldivuEmmmRm>
 8011932:	9b01      	ldr	r3, [sp, #4]
 8011934:	6832      	ldr	r2, [r6, #0]
 8011936:	441a      	add	r2, r3
 8011938:	fbb2 f3f5 	udiv	r3, r2, r5
 801193c:	441c      	add	r4, r3
 801193e:	fb05 2513 	mls	r5, r5, r3, r2
 8011942:	443c      	add	r4, r7
 8011944:	4420      	add	r0, r4
 8011946:	e7da      	b.n	80118fe <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08011948 <_ZN8touchgfx6muldivElllRl>:
 8011948:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801194a:	2800      	cmp	r0, #0
 801194c:	461e      	mov	r6, r3
 801194e:	bfba      	itte	lt
 8011950:	4240      	neglt	r0, r0
 8011952:	f04f 34ff 	movlt.w	r4, #4294967295
 8011956:	2401      	movge	r4, #1
 8011958:	2900      	cmp	r1, #0
 801195a:	bfbc      	itt	lt
 801195c:	4249      	neglt	r1, r1
 801195e:	4264      	neglt	r4, r4
 8011960:	2a00      	cmp	r2, #0
 8011962:	bfb6      	itet	lt
 8011964:	4265      	neglt	r5, r4
 8011966:	4625      	movge	r5, r4
 8011968:	4252      	neglt	r2, r2
 801196a:	4288      	cmp	r0, r1
 801196c:	bfc2      	ittt	gt
 801196e:	4603      	movgt	r3, r0
 8011970:	4608      	movgt	r0, r1
 8011972:	4619      	movgt	r1, r3
 8011974:	ab01      	add	r3, sp, #4
 8011976:	f7ff ff9c 	bl	80118b2 <_ZN8touchgfx7muldivuEmmmRm>
 801197a:	9b01      	ldr	r3, [sp, #4]
 801197c:	4368      	muls	r0, r5
 801197e:	435c      	muls	r4, r3
 8011980:	6034      	str	r4, [r6, #0]
 8011982:	b002      	add	sp, #8
 8011984:	bd70      	pop	{r4, r5, r6, pc}

08011986 <_ZN8touchgfx6muldivElll>:
 8011986:	b513      	push	{r0, r1, r4, lr}
 8011988:	4614      	mov	r4, r2
 801198a:	ab01      	add	r3, sp, #4
 801198c:	f7ff ffdc 	bl	8011948 <_ZN8touchgfx6muldivElllRl>
 8011990:	2800      	cmp	r0, #0
 8011992:	ea84 72e4 	eor.w	r2, r4, r4, asr #31
 8011996:	9b01      	ldr	r3, [sp, #4]
 8011998:	eba2 72e4 	sub.w	r2, r2, r4, asr #31
 801199c:	db0a      	blt.n	80119b4 <_ZN8touchgfx6muldivElll+0x2e>
 801199e:	2b00      	cmp	r3, #0
 80119a0:	f102 0201 	add.w	r2, r2, #1
 80119a4:	bfb8      	it	lt
 80119a6:	425b      	neglt	r3, r3
 80119a8:	ebb3 0f62 	cmp.w	r3, r2, asr #1
 80119ac:	db00      	blt.n	80119b0 <_ZN8touchgfx6muldivElll+0x2a>
 80119ae:	3001      	adds	r0, #1
 80119b0:	b002      	add	sp, #8
 80119b2:	bd10      	pop	{r4, pc}
 80119b4:	2b00      	cmp	r3, #0
 80119b6:	bfb8      	it	lt
 80119b8:	425b      	neglt	r3, r3
 80119ba:	ebb3 0f62 	cmp.w	r3, r2, asr #1
 80119be:	bfc8      	it	gt
 80119c0:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80119c4:	e7f4      	b.n	80119b0 <_ZN8touchgfx6muldivElll+0x2a>

080119c6 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 80119c6:	2000      	movs	r0, #0
 80119c8:	4770      	bx	lr

080119ca <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 80119ca:	2001      	movs	r0, #1
 80119cc:	4770      	bx	lr

080119ce <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 80119ce:	2002      	movs	r0, #2
 80119d0:	4770      	bx	lr

080119d2 <_ZN8touchgfx6ScreenD1Ev>:
 80119d2:	4770      	bx	lr

080119d4 <_ZN8touchgfx12GestureEventD1Ev>:
 80119d4:	4770      	bx	lr

080119d6 <_ZN8touchgfx9DragEventD1Ev>:
 80119d6:	4770      	bx	lr

080119d8 <_ZN8touchgfx10ClickEventD1Ev>:
 80119d8:	4770      	bx	lr

080119da <_ZN8touchgfx10ClickEventD0Ev>:
 80119da:	b510      	push	{r4, lr}
 80119dc:	4604      	mov	r4, r0
 80119de:	210c      	movs	r1, #12
 80119e0:	f00d fe3a 	bl	801f658 <_ZdlPvj>
 80119e4:	4620      	mov	r0, r4
 80119e6:	bd10      	pop	{r4, pc}

080119e8 <_ZN8touchgfx9DragEventD0Ev>:
 80119e8:	b510      	push	{r4, lr}
 80119ea:	4604      	mov	r4, r0
 80119ec:	2110      	movs	r1, #16
 80119ee:	f00d fe33 	bl	801f658 <_ZdlPvj>
 80119f2:	4620      	mov	r0, r4
 80119f4:	bd10      	pop	{r4, pc}

080119f6 <_ZN8touchgfx12GestureEventD0Ev>:
 80119f6:	b510      	push	{r4, lr}
 80119f8:	4604      	mov	r4, r0
 80119fa:	210c      	movs	r1, #12
 80119fc:	f00d fe2c 	bl	801f658 <_ZdlPvj>
 8011a00:	4620      	mov	r0, r4
 8011a02:	bd10      	pop	{r4, pc}

08011a04 <_ZN8touchgfx6ScreenD0Ev>:
 8011a04:	b510      	push	{r4, lr}
 8011a06:	4604      	mov	r4, r0
 8011a08:	213c      	movs	r1, #60	; 0x3c
 8011a0a:	f00d fe25 	bl	801f658 <_ZdlPvj>
 8011a0e:	4620      	mov	r0, r4
 8011a10:	bd10      	pop	{r4, pc}
	...

08011a14 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011a14:	b530      	push	{r4, r5, lr}
 8011a16:	460d      	mov	r5, r1
 8011a18:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8011a1a:	b087      	sub	sp, #28
 8011a1c:	4604      	mov	r4, r0
 8011a1e:	b301      	cbz	r1, 8011a62 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8011a20:	a801      	add	r0, sp, #4
 8011a22:	f7ff fe83 	bl	801172c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011a26:	892a      	ldrh	r2, [r5, #8]
 8011a28:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011a2c:	7928      	ldrb	r0, [r5, #4]
 8011a2e:	1ad2      	subs	r2, r2, r3
 8011a30:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011a32:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011a36:	441a      	add	r2, r3
 8011a38:	896b      	ldrh	r3, [r5, #10]
 8011a3a:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8011a3e:	f88d 0010 	strb.w	r0, [sp, #16]
 8011a42:	1b5b      	subs	r3, r3, r5
 8011a44:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8011a46:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011a48:	442b      	add	r3, r5
 8011a4a:	4d07      	ldr	r5, [pc, #28]	; (8011a68 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011a4c:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011a50:	a903      	add	r1, sp, #12
 8011a52:	9503      	str	r5, [sp, #12]
 8011a54:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011a58:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011a5c:	6803      	ldr	r3, [r0, #0]
 8011a5e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011a60:	4798      	blx	r3
 8011a62:	b007      	add	sp, #28
 8011a64:	bd30      	pop	{r4, r5, pc}
 8011a66:	bf00      	nop
 8011a68:	08024784 	.word	0x08024784

08011a6c <_ZNK8touchgfx4Rect9intersectEss>:
 8011a6c:	b510      	push	{r4, lr}
 8011a6e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011a72:	428b      	cmp	r3, r1
 8011a74:	dc10      	bgt.n	8011a98 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 8011a76:	8884      	ldrh	r4, [r0, #4]
 8011a78:	4423      	add	r3, r4
 8011a7a:	b21b      	sxth	r3, r3
 8011a7c:	4299      	cmp	r1, r3
 8011a7e:	da0b      	bge.n	8011a98 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 8011a80:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8011a84:	4293      	cmp	r3, r2
 8011a86:	dc07      	bgt.n	8011a98 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 8011a88:	88c0      	ldrh	r0, [r0, #6]
 8011a8a:	4418      	add	r0, r3
 8011a8c:	b200      	sxth	r0, r0
 8011a8e:	4282      	cmp	r2, r0
 8011a90:	bfac      	ite	ge
 8011a92:	2000      	movge	r0, #0
 8011a94:	2001      	movlt	r0, #1
 8011a96:	bd10      	pop	{r4, pc}
 8011a98:	2000      	movs	r0, #0
 8011a9a:	e7fc      	b.n	8011a96 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

08011a9c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011a9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a9e:	460c      	mov	r4, r1
 8011aa0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8011aa2:	b089      	sub	sp, #36	; 0x24
 8011aa4:	4605      	mov	r5, r0
 8011aa6:	2900      	cmp	r1, #0
 8011aa8:	d054      	beq.n	8011b54 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 8011aaa:	4668      	mov	r0, sp
 8011aac:	f7ff fe3e 	bl	801172c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011ab0:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 8011ab2:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 8011ab4:	4668      	mov	r0, sp
 8011ab6:	8922      	ldrh	r2, [r4, #8]
 8011ab8:	88e1      	ldrh	r1, [r4, #6]
 8011aba:	443a      	add	r2, r7
 8011abc:	4431      	add	r1, r6
 8011abe:	b212      	sxth	r2, r2
 8011ac0:	b209      	sxth	r1, r1
 8011ac2:	f7ff ffd3 	bl	8011a6c <_ZNK8touchgfx4Rect9intersectEss>
 8011ac6:	b1d0      	cbz	r0, 8011afe <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 8011ac8:	89a2      	ldrh	r2, [r4, #12]
 8011aca:	4668      	mov	r0, sp
 8011acc:	8961      	ldrh	r1, [r4, #10]
 8011ace:	443a      	add	r2, r7
 8011ad0:	4431      	add	r1, r6
 8011ad2:	b212      	sxth	r2, r2
 8011ad4:	b209      	sxth	r1, r1
 8011ad6:	f7ff ffc9 	bl	8011a6c <_ZNK8touchgfx4Rect9intersectEss>
 8011ada:	4603      	mov	r3, r0
 8011adc:	b978      	cbnz	r0, 8011afe <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 8011ade:	4a1e      	ldr	r2, [pc, #120]	; (8011b58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 8011ae0:	a904      	add	r1, sp, #16
 8011ae2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011ae4:	9204      	str	r2, [sp, #16]
 8011ae6:	2202      	movs	r2, #2
 8011ae8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011aec:	f88d 2014 	strb.w	r2, [sp, #20]
 8011af0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011af4:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011af8:	6803      	ldr	r3, [r0, #0]
 8011afa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011afc:	4798      	blx	r3
 8011afe:	6b29      	ldr	r1, [r5, #48]	; 0x30
 8011b00:	a802      	add	r0, sp, #8
 8011b02:	f7ff fe13 	bl	801172c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011b06:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011b0a:	88e0      	ldrh	r0, [r4, #6]
 8011b0c:	8961      	ldrh	r1, [r4, #10]
 8011b0e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8011b12:	1a80      	subs	r0, r0, r2
 8011b14:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 8011b18:	1a89      	subs	r1, r1, r2
 8011b1a:	8923      	ldrh	r3, [r4, #8]
 8011b1c:	4460      	add	r0, ip
 8011b1e:	89a2      	ldrh	r2, [r4, #12]
 8011b20:	4461      	add	r1, ip
 8011b22:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8011b24:	eba3 030e 	sub.w	r3, r3, lr
 8011b28:	eba2 020e 	sub.w	r2, r2, lr
 8011b2c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011b30:	7927      	ldrb	r7, [r4, #4]
 8011b32:	4433      	add	r3, r6
 8011b34:	4432      	add	r2, r6
 8011b36:	4c09      	ldr	r4, [pc, #36]	; (8011b5c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 8011b38:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011b3a:	f8ad 101a 	strh.w	r1, [sp, #26]
 8011b3e:	a904      	add	r1, sp, #16
 8011b40:	9404      	str	r4, [sp, #16]
 8011b42:	f88d 7014 	strb.w	r7, [sp, #20]
 8011b46:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011b4a:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011b4e:	6803      	ldr	r3, [r0, #0]
 8011b50:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011b52:	4798      	blx	r3
 8011b54:	b009      	add	sp, #36	; 0x24
 8011b56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011b58:	0802475c 	.word	0x0802475c
 8011b5c:	08024770 	.word	0x08024770

08011b60 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b64:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 8011b68:	b0a1      	sub	sp, #132	; 0x84
 8011b6a:	4604      	mov	r4, r0
 8011b6c:	460d      	mov	r5, r1
 8011b6e:	790b      	ldrb	r3, [r1, #4]
 8011b70:	f1b9 0f00 	cmp.w	r9, #0
 8011b74:	d00f      	beq.n	8011b96 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 8011b76:	2b00      	cmp	r3, #0
 8011b78:	f040 80a2 	bne.w	8011cc0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x160>
 8011b7c:	b021      	add	sp, #132	; 0x84
 8011b7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b82:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8011b86:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 8011b8a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011b8e:	1d20      	adds	r0, r4, #4
 8011b90:	f7f9 fcdc 	bl	800b54c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011b94:	e094      	b.n	8011cc0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x160>
 8011b96:	2b00      	cmp	r3, #0
 8011b98:	d1f0      	bne.n	8011b7c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 8011b9a:	4b5f      	ldr	r3, [pc, #380]	; (8011d18 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 8011b9c:	681b      	ldr	r3, [r3, #0]
 8011b9e:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 8011ba2:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 8011ba6:	f1ba 0f03 	cmp.w	sl, #3
 8011baa:	ddea      	ble.n	8011b82 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 8011bac:	f1ba 0f0c 	cmp.w	sl, #12
 8011bb0:	f04f 0303 	mov.w	r3, #3
 8011bb4:	f04f 0600 	mov.w	r6, #0
 8011bb8:	4958      	ldr	r1, [pc, #352]	; (8011d1c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 8011bba:	bfd8      	it	le
 8011bbc:	f10a 32ff 	addle.w	r2, sl, #4294967295
 8011bc0:	960a      	str	r6, [sp, #40]	; 0x28
 8011bc2:	bfd8      	it	le
 8011bc4:	fb92 f3f3 	sdivle	r3, r2, r3
 8011bc8:	9301      	str	r3, [sp, #4]
 8011bca:	4b55      	ldr	r3, [pc, #340]	; (8011d20 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 8011bcc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011bd0:	4b54      	ldr	r3, [pc, #336]	; (8011d24 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 8011bd2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8011bd6:	2248      	movs	r2, #72	; 0x48
 8011bd8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011bdc:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011be0:	ab0e      	add	r3, sp, #56	; 0x38
 8011be2:	4618      	mov	r0, r3
 8011be4:	f00f f942 	bl	8020e6c <memcpy>
 8011be8:	f04f 32ff 	mov.w	r2, #4294967295
 8011bec:	f8cd a008 	str.w	sl, [sp, #8]
 8011bf0:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8011bf4:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8011bf8:	46b3      	mov	fp, r6
 8011bfa:	fb93 f3f2 	sdiv	r3, r3, r2
 8011bfe:	b29b      	uxth	r3, r3
 8011c00:	9303      	str	r3, [sp, #12]
 8011c02:	2300      	movs	r3, #0
 8011c04:	9a03      	ldr	r2, [sp, #12]
 8011c06:	88ef      	ldrh	r7, [r5, #6]
 8011c08:	a80a      	add	r0, sp, #40	; 0x28
 8011c0a:	9309      	str	r3, [sp, #36]	; 0x24
 8011c0c:	9b07      	ldr	r3, [sp, #28]
 8011c0e:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 8011c12:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 8011c16:	fb13 f302 	smulbb	r3, r3, r2
 8011c1a:	b29b      	uxth	r3, r3
 8011c1c:	9304      	str	r3, [sp, #16]
 8011c1e:	9b07      	ldr	r3, [sp, #28]
 8011c20:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8011c24:	685b      	ldr	r3, [r3, #4]
 8011c26:	fb13 f302 	smulbb	r3, r3, r2
 8011c2a:	b29b      	uxth	r3, r3
 8011c2c:	9305      	str	r3, [sp, #20]
 8011c2e:	9b04      	ldr	r3, [sp, #16]
 8011c30:	441f      	add	r7, r3
 8011c32:	9b05      	ldr	r3, [sp, #20]
 8011c34:	4498      	add	r8, r3
 8011c36:	b23f      	sxth	r7, r7
 8011c38:	fa0f f888 	sxth.w	r8, r8
 8011c3c:	4639      	mov	r1, r7
 8011c3e:	4642      	mov	r2, r8
 8011c40:	f7ff ff14 	bl	8011a6c <_ZNK8touchgfx4Rect9intersectEss>
 8011c44:	b380      	cbz	r0, 8011ca8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x148>
 8011c46:	4639      	mov	r1, r7
 8011c48:	ab09      	add	r3, sp, #36	; 0x24
 8011c4a:	4642      	mov	r2, r8
 8011c4c:	1d20      	adds	r0, r4, #4
 8011c4e:	f7f9 fc7d 	bl	800b54c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011c52:	9909      	ldr	r1, [sp, #36]	; 0x24
 8011c54:	b341      	cbz	r1, 8011ca8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x148>
 8011c56:	4549      	cmp	r1, r9
 8011c58:	d026      	beq.n	8011ca8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x148>
 8011c5a:	a80c      	add	r0, sp, #48	; 0x30
 8011c5c:	f7ff fd66 	bl	801172c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011c60:	2002      	movs	r0, #2
 8011c62:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8011c66:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8011c6a:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8011c6e:	fb92 f2f0 	sdiv	r2, r2, r0
 8011c72:	440a      	add	r2, r1
 8011c74:	1a99      	subs	r1, r3, r2
 8011c76:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8011c7a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 8011c7e:	fb93 f3f0 	sdiv	r3, r3, r0
 8011c82:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 8011c86:	4403      	add	r3, r0
 8011c88:	1ad3      	subs	r3, r2, r3
 8011c8a:	9a06      	ldr	r2, [sp, #24]
 8011c8c:	435b      	muls	r3, r3
 8011c8e:	fb01 3301 	mla	r3, r1, r1, r3
 8011c92:	4293      	cmp	r3, r2
 8011c94:	d208      	bcs.n	8011ca8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x148>
 8011c96:	9a04      	ldr	r2, [sp, #16]
 8011c98:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8011c9c:	86a2      	strh	r2, [r4, #52]	; 0x34
 8011c9e:	9a05      	ldr	r2, [sp, #20]
 8011ca0:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 8011ca4:	86e2      	strh	r2, [r4, #54]	; 0x36
 8011ca6:	9306      	str	r3, [sp, #24]
 8011ca8:	f10b 0b02 	add.w	fp, fp, #2
 8011cac:	f1bb 0f08 	cmp.w	fp, #8
 8011cb0:	dda7      	ble.n	8011c02 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa2>
 8011cb2:	9b02      	ldr	r3, [sp, #8]
 8011cb4:	3601      	adds	r6, #1
 8011cb6:	4453      	add	r3, sl
 8011cb8:	9302      	str	r3, [sp, #8]
 8011cba:	9b01      	ldr	r3, [sp, #4]
 8011cbc:	42b3      	cmp	r3, r6
 8011cbe:	d199      	bne.n	8011bf4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x94>
 8011cc0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011cc2:	2900      	cmp	r1, #0
 8011cc4:	f43f af5a 	beq.w	8011b7c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 8011cc8:	a80c      	add	r0, sp, #48	; 0x30
 8011cca:	2600      	movs	r6, #0
 8011ccc:	f7ff fd2e 	bl	801172c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011cd0:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8011cd4:	88ea      	ldrh	r2, [r5, #6]
 8011cd6:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 8011cda:	1ad2      	subs	r2, r2, r3
 8011cdc:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011cde:	7929      	ldrb	r1, [r5, #4]
 8011ce0:	441a      	add	r2, r3
 8011ce2:	892b      	ldrh	r3, [r5, #8]
 8011ce4:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 8011ce8:	a90e      	add	r1, sp, #56	; 0x38
 8011cea:	1a1b      	subs	r3, r3, r0
 8011cec:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 8011cee:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 8011cf2:	4403      	add	r3, r0
 8011cf4:	480c      	ldr	r0, [pc, #48]	; (8011d28 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c8>)
 8011cf6:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 8011cfa:	900e      	str	r0, [sp, #56]	; 0x38
 8011cfc:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011cfe:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 8011d02:	6803      	ldr	r3, [r0, #0]
 8011d04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011d06:	4798      	blx	r3
 8011d08:	792b      	ldrb	r3, [r5, #4]
 8011d0a:	2b00      	cmp	r3, #0
 8011d0c:	f43f af36 	beq.w	8011b7c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 8011d10:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8011d14:	e732      	b.n	8011b7c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 8011d16:	bf00      	nop
 8011d18:	200125b0 	.word	0x200125b0
 8011d1c:	08021dc8 	.word	0x08021dc8
 8011d20:	200125a4 	.word	0x200125a4
 8011d24:	200125a6 	.word	0x200125a6
 8011d28:	0802475c 	.word	0x0802475c

08011d2c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011d2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011d2e:	4604      	mov	r4, r0
 8011d30:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011d34:	3201      	adds	r2, #1
 8011d36:	d112      	bne.n	8011d5e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011d38:	2500      	movs	r5, #0
 8011d3a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011d3e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011d42:	6803      	ldr	r3, [r0, #0]
 8011d44:	9500      	str	r5, [sp, #0]
 8011d46:	466d      	mov	r5, sp
 8011d48:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011d4c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011d50:	4629      	mov	r1, r5
 8011d52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d54:	4798      	blx	r3
 8011d56:	e895 0003 	ldmia.w	r5, {r0, r1}
 8011d5a:	e884 0003 	stmia.w	r4, {r0, r1}
 8011d5e:	4620      	mov	r0, r4
 8011d60:	b003      	add	sp, #12
 8011d62:	bd30      	pop	{r4, r5, pc}

08011d64 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011d64:	b513      	push	{r0, r1, r4, lr}
 8011d66:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8011d6a:	4604      	mov	r4, r0
 8011d6c:	3301      	adds	r3, #1
 8011d6e:	d109      	bne.n	8011d84 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011d70:	4601      	mov	r1, r0
 8011d72:	4668      	mov	r0, sp
 8011d74:	f7ff fcda 	bl	801172c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011d78:	f8bd 3000 	ldrh.w	r3, [sp]
 8011d7c:	8423      	strh	r3, [r4, #32]
 8011d7e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011d82:	8463      	strh	r3, [r4, #34]	; 0x22
 8011d84:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8011d88:	b002      	add	sp, #8
 8011d8a:	bd10      	pop	{r4, pc}

08011d8c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8011d8c:	b513      	push	{r0, r1, r4, lr}
 8011d8e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8011d92:	4604      	mov	r4, r0
 8011d94:	3301      	adds	r3, #1
 8011d96:	d109      	bne.n	8011dac <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011d98:	4601      	mov	r1, r0
 8011d9a:	4668      	mov	r0, sp
 8011d9c:	f7ff fcc6 	bl	801172c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011da0:	f8bd 3000 	ldrh.w	r3, [sp]
 8011da4:	8423      	strh	r3, [r4, #32]
 8011da6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011daa:	8463      	strh	r3, [r4, #34]	; 0x22
 8011dac:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8011db0:	b002      	add	sp, #8
 8011db2:	bd10      	pop	{r4, pc}

08011db4 <_ZN8touchgfx6ScreenC1Ev>:
 8011db4:	b570      	push	{r4, r5, r6, lr}
 8011db6:	4b16      	ldr	r3, [pc, #88]	; (8011e10 <_ZN8touchgfx6ScreenC1Ev+0x5c>)
 8011db8:	4605      	mov	r5, r0
 8011dba:	4a16      	ldr	r2, [pc, #88]	; (8011e14 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8011dbc:	2101      	movs	r1, #1
 8011dbe:	f845 3b04 	str.w	r3, [r5], #4
 8011dc2:	2300      	movs	r3, #0
 8011dc4:	6042      	str	r2, [r0, #4]
 8011dc6:	4604      	mov	r4, r0
 8011dc8:	8103      	strh	r3, [r0, #8]
 8011dca:	8143      	strh	r3, [r0, #10]
 8011dcc:	8183      	strh	r3, [r0, #12]
 8011dce:	81c3      	strh	r3, [r0, #14]
 8011dd0:	8203      	strh	r3, [r0, #16]
 8011dd2:	8243      	strh	r3, [r0, #18]
 8011dd4:	8283      	strh	r3, [r0, #20]
 8011dd6:	82c3      	strh	r3, [r0, #22]
 8011dd8:	6203      	str	r3, [r0, #32]
 8011dda:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8011dde:	6343      	str	r3, [r0, #52]	; 0x34
 8011de0:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8011de4:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8011de8:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8011dec:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8011df0:	4b09      	ldr	r3, [pc, #36]	; (8011e18 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011df2:	4628      	mov	r0, r5
 8011df4:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011df8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8011dfa:	4a08      	ldr	r2, [pc, #32]	; (8011e1c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8011dfc:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011e00:	4798      	blx	r3
 8011e02:	6863      	ldr	r3, [r4, #4]
 8011e04:	4628      	mov	r0, r5
 8011e06:	4631      	mov	r1, r6
 8011e08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011e0a:	4798      	blx	r3
 8011e0c:	4620      	mov	r0, r4
 8011e0e:	bd70      	pop	{r4, r5, r6, pc}
 8011e10:	08024798 	.word	0x08024798
 8011e14:	08023384 	.word	0x08023384
 8011e18:	200125a6 	.word	0x200125a6
 8011e1c:	200125a4 	.word	0x200125a4

08011e20 <_ZN8touchgfx6Screen4drawEv>:
 8011e20:	4b09      	ldr	r3, [pc, #36]	; (8011e48 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8011e22:	b507      	push	{r0, r1, r2, lr}
 8011e24:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011e28:	2100      	movs	r1, #0
 8011e2a:	4b08      	ldr	r3, [pc, #32]	; (8011e4c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011e2c:	9100      	str	r1, [sp, #0]
 8011e2e:	4669      	mov	r1, sp
 8011e30:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011e34:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011e38:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011e3c:	6803      	ldr	r3, [r0, #0]
 8011e3e:	689b      	ldr	r3, [r3, #8]
 8011e40:	4798      	blx	r3
 8011e42:	b003      	add	sp, #12
 8011e44:	f85d fb04 	ldr.w	pc, [sp], #4
 8011e48:	200125a4 	.word	0x200125a4
 8011e4c:	200125a6 	.word	0x200125a6

08011e50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011e50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e54:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011e58:	b089      	sub	sp, #36	; 0x24
 8011e5a:	4680      	mov	r8, r0
 8011e5c:	460c      	mov	r4, r1
 8011e5e:	2b00      	cmp	r3, #0
 8011e60:	4615      	mov	r5, r2
 8011e62:	dd0e      	ble.n	8011e82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011e64:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011e68:	2b00      	cmp	r3, #0
 8011e6a:	dd0a      	ble.n	8011e82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011e6c:	4628      	mov	r0, r5
 8011e6e:	f7ff ff5d 	bl	8011d2c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011e72:	4621      	mov	r1, r4
 8011e74:	f7fe fc0a 	bl	801068c <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011e78:	69eb      	ldr	r3, [r5, #28]
 8011e7a:	b928      	cbnz	r0, 8011e88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011e7c:	461d      	mov	r5, r3
 8011e7e:	2b00      	cmp	r3, #0
 8011e80:	d1f4      	bne.n	8011e6c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8011e82:	b009      	add	sp, #36	; 0x24
 8011e84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e88:	ae04      	add	r6, sp, #16
 8011e8a:	2b00      	cmp	r3, #0
 8011e8c:	f000 80b5 	beq.w	8011ffa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011e90:	682b      	ldr	r3, [r5, #0]
 8011e92:	4629      	mov	r1, r5
 8011e94:	a802      	add	r0, sp, #8
 8011e96:	68db      	ldr	r3, [r3, #12]
 8011e98:	4798      	blx	r3
 8011e9a:	4628      	mov	r0, r5
 8011e9c:	f7ff ff62 	bl	8011d64 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011ea0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8011ea4:	4407      	add	r7, r0
 8011ea6:	4628      	mov	r0, r5
 8011ea8:	f7ff ff70 	bl	8011d8c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011eac:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011eb0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011eb4:	b23f      	sxth	r7, r7
 8011eb6:	4418      	add	r0, r3
 8011eb8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011ebc:	4621      	mov	r1, r4
 8011ebe:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011ec2:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011ec6:	4630      	mov	r0, r6
 8011ec8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011ecc:	f8ad 7010 	strh.w	r7, [sp, #16]
 8011ed0:	f7f9 fbf6 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 8011ed4:	4628      	mov	r0, r5
 8011ed6:	f7ff ff29 	bl	8011d2c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011eda:	ab06      	add	r3, sp, #24
 8011edc:	4602      	mov	r2, r0
 8011ede:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011ee2:	e883 0003 	stmia.w	r3, {r0, r1}
 8011ee6:	4611      	mov	r1, r2
 8011ee8:	4618      	mov	r0, r3
 8011eea:	f7f9 fbe9 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 8011eee:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011ef2:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011ef6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011efa:	4299      	cmp	r1, r3
 8011efc:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8011f00:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8011f04:	d10b      	bne.n	8011f1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011f06:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011f0a:	4552      	cmp	r2, sl
 8011f0c:	d107      	bne.n	8011f1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011f0e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011f12:	455a      	cmp	r2, fp
 8011f14:	d103      	bne.n	8011f1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011f16:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011f1a:	454a      	cmp	r2, r9
 8011f1c:	d06d      	beq.n	8011ffa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011f1e:	f1bb 0f00 	cmp.w	fp, #0
 8011f22:	dd65      	ble.n	8011ff0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011f24:	f1b9 0f00 	cmp.w	r9, #0
 8011f28:	dd62      	ble.n	8011ff0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011f2a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011f2e:	fa1f f08a 	uxth.w	r0, sl
 8011f32:	4552      	cmp	r2, sl
 8011f34:	9000      	str	r0, [sp, #0]
 8011f36:	da12      	bge.n	8011f5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011f38:	9301      	str	r3, [sp, #4]
 8011f3a:	9b00      	ldr	r3, [sp, #0]
 8011f3c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011f40:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011f44:	1a9a      	subs	r2, r3, r2
 8011f46:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011f4a:	4631      	mov	r1, r6
 8011f4c:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011f50:	4640      	mov	r0, r8
 8011f52:	f8ad 2016 	strh.w	r2, [sp, #22]
 8011f56:	69ea      	ldr	r2, [r5, #28]
 8011f58:	f7ff ff7a 	bl	8011e50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011f5c:	9b01      	ldr	r3, [sp, #4]
 8011f5e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011f62:	b29f      	uxth	r7, r3
 8011f64:	429a      	cmp	r2, r3
 8011f66:	da0d      	bge.n	8011f84 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011f68:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011f6c:	1aba      	subs	r2, r7, r2
 8011f6e:	f8ad a012 	strh.w	sl, [sp, #18]
 8011f72:	4631      	mov	r1, r6
 8011f74:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011f78:	4640      	mov	r0, r8
 8011f7a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011f7e:	69ea      	ldr	r2, [r5, #28]
 8011f80:	f7ff ff66 	bl	8011e50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011f84:	8822      	ldrh	r2, [r4, #0]
 8011f86:	445f      	add	r7, fp
 8011f88:	88a3      	ldrh	r3, [r4, #4]
 8011f8a:	b2bf      	uxth	r7, r7
 8011f8c:	4413      	add	r3, r2
 8011f8e:	b23a      	sxth	r2, r7
 8011f90:	b29b      	uxth	r3, r3
 8011f92:	b219      	sxth	r1, r3
 8011f94:	4291      	cmp	r1, r2
 8011f96:	dd0d      	ble.n	8011fb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011f98:	1bdb      	subs	r3, r3, r7
 8011f9a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011f9e:	f8ad a012 	strh.w	sl, [sp, #18]
 8011fa2:	4631      	mov	r1, r6
 8011fa4:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011fa8:	4640      	mov	r0, r8
 8011faa:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011fae:	69ea      	ldr	r2, [r5, #28]
 8011fb0:	f7ff ff4e 	bl	8011e50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011fb4:	88e2      	ldrh	r2, [r4, #6]
 8011fb6:	8863      	ldrh	r3, [r4, #2]
 8011fb8:	4413      	add	r3, r2
 8011fba:	9a00      	ldr	r2, [sp, #0]
 8011fbc:	444a      	add	r2, r9
 8011fbe:	b29b      	uxth	r3, r3
 8011fc0:	fa1f f982 	uxth.w	r9, r2
 8011fc4:	b219      	sxth	r1, r3
 8011fc6:	fa0f f289 	sxth.w	r2, r9
 8011fca:	428a      	cmp	r2, r1
 8011fcc:	da15      	bge.n	8011ffa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011fce:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011fd2:	eba3 0309 	sub.w	r3, r3, r9
 8011fd6:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011fda:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011fde:	4631      	mov	r1, r6
 8011fe0:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011fe4:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011fe8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011fec:	69ea      	ldr	r2, [r5, #28]
 8011fee:	e001      	b.n	8011ff4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8011ff0:	69ea      	ldr	r2, [r5, #28]
 8011ff2:	4621      	mov	r1, r4
 8011ff4:	4640      	mov	r0, r8
 8011ff6:	f7ff ff2b 	bl	8011e50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011ffa:	4628      	mov	r0, r5
 8011ffc:	f7ff fe96 	bl	8011d2c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012000:	6861      	ldr	r1, [r4, #4]
 8012002:	4602      	mov	r2, r0
 8012004:	4633      	mov	r3, r6
 8012006:	6820      	ldr	r0, [r4, #0]
 8012008:	c303      	stmia	r3!, {r0, r1}
 801200a:	4611      	mov	r1, r2
 801200c:	4630      	mov	r0, r6
 801200e:	f7f9 fb57 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 8012012:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012016:	2b00      	cmp	r3, #0
 8012018:	f77f af33 	ble.w	8011e82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801201c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012020:	2b00      	cmp	r3, #0
 8012022:	f77f af2e 	ble.w	8011e82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012026:	4628      	mov	r0, r5
 8012028:	f7ff fe9c 	bl	8011d64 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801202c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012030:	1a18      	subs	r0, r3, r0
 8012032:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012036:	4628      	mov	r0, r5
 8012038:	f7ff fea8 	bl	8011d8c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801203c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012040:	4631      	mov	r1, r6
 8012042:	1a18      	subs	r0, r3, r0
 8012044:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012048:	4628      	mov	r0, r5
 801204a:	682b      	ldr	r3, [r5, #0]
 801204c:	689b      	ldr	r3, [r3, #8]
 801204e:	4798      	blx	r3
 8012050:	e717      	b.n	8011e82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012052 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012052:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012054:	2300      	movs	r3, #0
 8012056:	aa02      	add	r2, sp, #8
 8012058:	4604      	mov	r4, r0
 801205a:	3004      	adds	r0, #4
 801205c:	f842 3d04 	str.w	r3, [r2, #-4]!
 8012060:	460d      	mov	r5, r1
 8012062:	f7f9 fc05 	bl	800b870 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8012066:	9a01      	ldr	r2, [sp, #4]
 8012068:	b11a      	cbz	r2, 8012072 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 801206a:	4629      	mov	r1, r5
 801206c:	4620      	mov	r0, r4
 801206e:	f7ff feef 	bl	8011e50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012072:	b003      	add	sp, #12
 8012074:	bd30      	pop	{r4, r5, pc}

08012076 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8012076:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012078:	4602      	mov	r2, r0
 801207a:	4604      	mov	r4, r0
 801207c:	460d      	mov	r5, r1
 801207e:	466b      	mov	r3, sp
 8012080:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012084:	6851      	ldr	r1, [r2, #4]
 8012086:	c303      	stmia	r3!, {r0, r1}
 8012088:	4629      	mov	r1, r5
 801208a:	4668      	mov	r0, sp
 801208c:	f7f9 fb18 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 8012090:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012094:	4669      	mov	r1, sp
 8012096:	b123      	cbz	r3, 80120a2 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 8012098:	4620      	mov	r0, r4
 801209a:	f7ff ffda 	bl	8012052 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801209e:	b003      	add	sp, #12
 80120a0:	bd30      	pop	{r4, r5, pc}
 80120a2:	1d20      	adds	r0, r4, #4
 80120a4:	f7f9 fbab 	bl	800b7fe <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80120a8:	e7f9      	b.n	801209e <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

080120aa <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80120aa:	460b      	mov	r3, r1
 80120ac:	680a      	ldr	r2, [r1, #0]
 80120ae:	1d01      	adds	r1, r0, #4
 80120b0:	6992      	ldr	r2, [r2, #24]
 80120b2:	4618      	mov	r0, r3
 80120b4:	4710      	bx	r2

080120b6 <_ZN8touchgfx12TextProviderC1Ev>:
 80120b6:	2300      	movs	r3, #0
 80120b8:	2201      	movs	r2, #1
 80120ba:	b510      	push	{r4, lr}
 80120bc:	4604      	mov	r4, r0
 80120be:	60c3      	str	r3, [r0, #12]
 80120c0:	7403      	strb	r3, [r0, #16]
 80120c2:	82c3      	strh	r3, [r0, #22]
 80120c4:	8303      	strh	r3, [r0, #24]
 80120c6:	85c3      	strh	r3, [r0, #46]	; 0x2e
 80120c8:	8603      	strh	r3, [r0, #48]	; 0x30
 80120ca:	86c3      	strh	r3, [r0, #54]	; 0x36
 80120cc:	8703      	strh	r3, [r0, #56]	; 0x38
 80120ce:	63c3      	str	r3, [r0, #60]	; 0x3c
 80120d0:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 80120d4:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 80120d8:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 80120dc:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 80120e0:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 80120e4:	e9c0 3300 	strd	r3, r3, [r0]
 80120e8:	f7f1 fd88 	bl	8003bfc <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80120ec:	4620      	mov	r0, r4
 80120ee:	bd10      	pop	{r4, pc}

080120f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80120f0:	b530      	push	{r4, r5, lr}
 80120f2:	2500      	movs	r5, #0
 80120f4:	2401      	movs	r4, #1
 80120f6:	6843      	ldr	r3, [r0, #4]
 80120f8:	b913      	cbnz	r3, 8012100 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80120fa:	6803      	ldr	r3, [r0, #0]
 80120fc:	b1f3      	cbz	r3, 801213c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 80120fe:	6043      	str	r3, [r0, #4]
 8012100:	7c03      	ldrb	r3, [r0, #16]
 8012102:	b143      	cbz	r3, 8012116 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012104:	68c3      	ldr	r3, [r0, #12]
 8012106:	b12b      	cbz	r3, 8012114 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012108:	881a      	ldrh	r2, [r3, #0]
 801210a:	b11a      	cbz	r2, 8012114 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801210c:	1c9a      	adds	r2, r3, #2
 801210e:	60c2      	str	r2, [r0, #12]
 8012110:	8818      	ldrh	r0, [r3, #0]
 8012112:	bd30      	pop	{r4, r5, pc}
 8012114:	7405      	strb	r5, [r0, #16]
 8012116:	6843      	ldr	r3, [r0, #4]
 8012118:	8819      	ldrh	r1, [r3, #0]
 801211a:	b179      	cbz	r1, 801213c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 801211c:	1c9a      	adds	r2, r3, #2
 801211e:	2902      	cmp	r1, #2
 8012120:	6042      	str	r2, [r0, #4]
 8012122:	d1f5      	bne.n	8012110 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012124:	6883      	ldr	r3, [r0, #8]
 8012126:	1d1a      	adds	r2, r3, #4
 8012128:	6082      	str	r2, [r0, #8]
 801212a:	681b      	ldr	r3, [r3, #0]
 801212c:	60c3      	str	r3, [r0, #12]
 801212e:	2b00      	cmp	r3, #0
 8012130:	d0e1      	beq.n	80120f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012132:	881b      	ldrh	r3, [r3, #0]
 8012134:	2b00      	cmp	r3, #0
 8012136:	d0de      	beq.n	80120f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012138:	7404      	strb	r4, [r0, #16]
 801213a:	e7dc      	b.n	80120f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801213c:	2000      	movs	r0, #0
 801213e:	e7e8      	b.n	8012112 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012140 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 8012140:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012142:	2300      	movs	r3, #0
 8012144:	6082      	str	r2, [r0, #8]
 8012146:	6001      	str	r1, [r0, #0]
 8012148:	6043      	str	r3, [r0, #4]
 801214a:	60c3      	str	r3, [r0, #12]
 801214c:	7403      	strb	r3, [r0, #16]
 801214e:	8603      	strh	r3, [r0, #48]	; 0x30
 8012150:	8303      	strh	r3, [r0, #24]
 8012152:	8703      	strh	r3, [r0, #56]	; 0x38
 8012154:	b410      	push	{r4}
 8012156:	f85d 4b04 	ldr.w	r4, [sp], #4
 801215a:	f7f1 bd4f 	b.w	8003bfc <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801215e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801215e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012160:	4605      	mov	r5, r0
 8012162:	4608      	mov	r0, r1
 8012164:	b1f1      	cbz	r1, 80121a4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8012166:	f105 0440 	add.w	r4, r5, #64	; 0x40
 801216a:	460b      	mov	r3, r1
 801216c:	f101 0708 	add.w	r7, r1, #8
 8012170:	4622      	mov	r2, r4
 8012172:	6818      	ldr	r0, [r3, #0]
 8012174:	3308      	adds	r3, #8
 8012176:	f853 1c04 	ldr.w	r1, [r3, #-4]
 801217a:	4626      	mov	r6, r4
 801217c:	42bb      	cmp	r3, r7
 801217e:	c603      	stmia	r6!, {r0, r1}
 8012180:	4634      	mov	r4, r6
 8012182:	d1f6      	bne.n	8012172 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012184:	6818      	ldr	r0, [r3, #0]
 8012186:	6030      	str	r0, [r6, #0]
 8012188:	4610      	mov	r0, r2
 801218a:	889b      	ldrh	r3, [r3, #4]
 801218c:	80b3      	strh	r3, [r6, #4]
 801218e:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 8012192:	015b      	lsls	r3, r3, #5
 8012194:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012198:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 801219c:	430b      	orrs	r3, r1
 801219e:	425b      	negs	r3, r3
 80121a0:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 80121a4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080121a6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80121a6:	b538      	push	{r3, r4, r5, lr}
 80121a8:	460c      	mov	r4, r1
 80121aa:	6811      	ldr	r1, [r2, #0]
 80121ac:	4610      	mov	r0, r2
 80121ae:	68cd      	ldr	r5, [r1, #12]
 80121b0:	4619      	mov	r1, r3
 80121b2:	47a8      	blx	r5
 80121b4:	2800      	cmp	r0, #0
 80121b6:	bf08      	it	eq
 80121b8:	4620      	moveq	r0, r4
 80121ba:	bd38      	pop	{r3, r4, r5, pc}

080121bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80121bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80121be:	4604      	mov	r4, r0
 80121c0:	4615      	mov	r5, r2
 80121c2:	4608      	mov	r0, r1
 80121c4:	b93a      	cbnz	r2, 80121d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80121c6:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 80121ca:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 80121ce:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80121d2:	4628      	mov	r0, r5
 80121d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80121d6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80121da:	8893      	ldrh	r3, [r2, #4]
 80121dc:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80121e0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80121e4:	79ee      	ldrb	r6, [r5, #7]
 80121e6:	4316      	orrs	r6, r2
 80121e8:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 80121ec:	189a      	adds	r2, r3, r2
 80121ee:	b2b7      	uxth	r7, r6
 80121f0:	b291      	uxth	r1, r2
 80121f2:	291d      	cmp	r1, #29
 80121f4:	f200 8084 	bhi.w	8012300 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 80121f8:	2201      	movs	r2, #1
 80121fa:	10f6      	asrs	r6, r6, #3
 80121fc:	408a      	lsls	r2, r1
 80121fe:	4978      	ldr	r1, [pc, #480]	; (80123e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 8012200:	420a      	tst	r2, r1
 8012202:	d12e      	bne.n	8012262 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 8012204:	f412 7f60 	tst.w	r2, #896	; 0x380
 8012208:	d07a      	beq.n	8012300 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801220a:	f104 0240 	add.w	r2, r4, #64	; 0x40
 801220e:	462b      	mov	r3, r5
 8012210:	f105 0e08 	add.w	lr, r5, #8
 8012214:	4615      	mov	r5, r2
 8012216:	6818      	ldr	r0, [r3, #0]
 8012218:	3308      	adds	r3, #8
 801221a:	f853 1c04 	ldr.w	r1, [r3, #-4]
 801221e:	4694      	mov	ip, r2
 8012220:	4573      	cmp	r3, lr
 8012222:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012226:	4662      	mov	r2, ip
 8012228:	d1f5      	bne.n	8012216 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801222a:	6818      	ldr	r0, [r3, #0]
 801222c:	f8cc 0000 	str.w	r0, [ip]
 8012230:	889b      	ldrh	r3, [r3, #4]
 8012232:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012236:	b2b3      	uxth	r3, r6
 8012238:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 801223c:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 8012240:	1aca      	subs	r2, r1, r3
 8012242:	1bcf      	subs	r7, r1, r7
 8012244:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8012248:	b292      	uxth	r2, r2
 801224a:	1afb      	subs	r3, r7, r3
 801224c:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 8012250:	10d2      	asrs	r2, r2, #3
 8012252:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8012256:	4302      	orrs	r2, r0
 8012258:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 801225c:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 8012260:	e7b7      	b.n	80121d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012262:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8012264:	b92b      	cbnz	r3, 8012272 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 8012266:	4b5f      	ldr	r3, [pc, #380]	; (80123e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 8012268:	21c0      	movs	r1, #192	; 0xc0
 801226a:	4a5f      	ldr	r2, [pc, #380]	; (80123e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 801226c:	485f      	ldr	r0, [pc, #380]	; (80123ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 801226e:	f00e fd7f 	bl	8020d70 <__assert_func>
 8012272:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8012274:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012278:	8b59      	ldrh	r1, [r3, #26]
 801227a:	f640 6333 	movw	r3, #3635	; 0xe33
 801227e:	4299      	cmp	r1, r3
 8012280:	d110      	bne.n	80122a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 8012282:	6803      	ldr	r3, [r0, #0]
 8012284:	68db      	ldr	r3, [r3, #12]
 8012286:	4798      	blx	r3
 8012288:	7b41      	ldrb	r1, [r0, #13]
 801228a:	00cb      	lsls	r3, r1, #3
 801228c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012290:	7a03      	ldrb	r3, [r0, #8]
 8012292:	0648      	lsls	r0, r1, #25
 8012294:	ea43 0302 	orr.w	r3, r3, r2
 8012298:	bf44      	itt	mi
 801229a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801229e:	b21b      	sxthmi	r3, r3
 80122a0:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 80122a4:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 80122a8:	462a      	mov	r2, r5
 80122aa:	f105 0c08 	add.w	ip, r5, #8
 80122ae:	443b      	add	r3, r7
 80122b0:	4433      	add	r3, r6
 80122b2:	f104 0640 	add.w	r6, r4, #64	; 0x40
 80122b6:	b29b      	uxth	r3, r3
 80122b8:	4635      	mov	r5, r6
 80122ba:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 80122be:	6810      	ldr	r0, [r2, #0]
 80122c0:	3208      	adds	r2, #8
 80122c2:	f852 1c04 	ldr.w	r1, [r2, #-4]
 80122c6:	4637      	mov	r7, r6
 80122c8:	4562      	cmp	r2, ip
 80122ca:	c703      	stmia	r7!, {r0, r1}
 80122cc:	463e      	mov	r6, r7
 80122ce:	d1f6      	bne.n	80122be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 80122d0:	6810      	ldr	r0, [r2, #0]
 80122d2:	6038      	str	r0, [r7, #0]
 80122d4:	8892      	ldrh	r2, [r2, #4]
 80122d6:	80ba      	strh	r2, [r7, #4]
 80122d8:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 80122dc:	10db      	asrs	r3, r3, #3
 80122de:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 80122e2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80122e6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80122ea:	4313      	orrs	r3, r2
 80122ec:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 80122f0:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 80122f4:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 80122f8:	1a9b      	subs	r3, r3, r2
 80122fa:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 80122fe:	e768      	b.n	80121d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012300:	f023 0204 	bic.w	r2, r3, #4
 8012304:	f640 611b 	movw	r1, #3611	; 0xe1b
 8012308:	428a      	cmp	r2, r1
 801230a:	d003      	beq.n	8012314 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 801230c:	f640 621d 	movw	r2, #3613	; 0xe1d
 8012310:	4293      	cmp	r3, r2
 8012312:	d120      	bne.n	8012356 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x19a>
 8012314:	3b01      	subs	r3, #1
 8012316:	4602      	mov	r2, r0
 8012318:	4629      	mov	r1, r5
 801231a:	4620      	mov	r0, r4
 801231c:	b29b      	uxth	r3, r3
 801231e:	f7ff ff42 	bl	80121a6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012322:	7b41      	ldrb	r1, [r0, #13]
 8012324:	00cb      	lsls	r3, r1, #3
 8012326:	0649      	lsls	r1, r1, #25
 8012328:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801232c:	7a03      	ldrb	r3, [r0, #8]
 801232e:	ea43 0302 	orr.w	r3, r3, r2
 8012332:	bf44      	itt	mi
 8012334:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012338:	b21b      	sxthmi	r3, r3
 801233a:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 801233e:	7b6b      	ldrb	r3, [r5, #13]
 8012340:	7aaa      	ldrb	r2, [r5, #10]
 8012342:	005b      	lsls	r3, r3, #1
 8012344:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012348:	4313      	orrs	r3, r2
 801234a:	115a      	asrs	r2, r3, #5
 801234c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8012350:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8012354:	e035      	b.n	80123c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 8012356:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801235a:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801235e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8012362:	7a2a      	ldrb	r2, [r5, #8]
 8012364:	ea42 0201 	orr.w	r2, r2, r1
 8012368:	f640 6109 	movw	r1, #3593	; 0xe09
 801236c:	bf1c      	itt	ne
 801236e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8012372:	b212      	sxthne	r2, r2
 8012374:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 8012378:	f023 0210 	bic.w	r2, r3, #16
 801237c:	428a      	cmp	r2, r1
 801237e:	d003      	beq.n	8012388 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1cc>
 8012380:	f640 6213 	movw	r2, #3603	; 0xe13
 8012384:	4293      	cmp	r3, r2
 8012386:	d129      	bne.n	80123dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 8012388:	7b6e      	ldrb	r6, [r5, #13]
 801238a:	4629      	mov	r1, r5
 801238c:	0076      	lsls	r6, r6, #1
 801238e:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012392:	7aae      	ldrb	r6, [r5, #10]
 8012394:	4316      	orrs	r6, r2
 8012396:	f640 6213 	movw	r2, #3603	; 0xe13
 801239a:	4293      	cmp	r3, r2
 801239c:	4602      	mov	r2, r0
 801239e:	4620      	mov	r0, r4
 80123a0:	bf16      	itet	ne
 80123a2:	f103 33ff 	addne.w	r3, r3, #4294967295
 80123a6:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80123aa:	b29b      	uxthne	r3, r3
 80123ac:	f7ff fefb 	bl	80121a6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80123b0:	7b43      	ldrb	r3, [r0, #13]
 80123b2:	7a82      	ldrb	r2, [r0, #10]
 80123b4:	005b      	lsls	r3, r3, #1
 80123b6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80123ba:	4313      	orrs	r3, r2
 80123bc:	1af6      	subs	r6, r6, r3
 80123be:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 80123c2:	7b69      	ldrb	r1, [r5, #13]
 80123c4:	00cb      	lsls	r3, r1, #3
 80123c6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80123ca:	7a2b      	ldrb	r3, [r5, #8]
 80123cc:	4313      	orrs	r3, r2
 80123ce:	064a      	lsls	r2, r1, #25
 80123d0:	bf44      	itt	mi
 80123d2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80123d6:	b21b      	sxthmi	r3, r3
 80123d8:	1bdb      	subs	r3, r3, r7
 80123da:	e73f      	b.n	801225c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 80123dc:	2300      	movs	r3, #0
 80123de:	e7b7      	b.n	8012350 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x194>
 80123e0:	3fc00079 	.word	0x3fc00079
 80123e4:	08022c60 	.word	0x08022c60
 80123e8:	080249f3 	.word	0x080249f3
 80123ec:	08022c87 	.word	0x08022c87

080123f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80123f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80123f4:	4604      	mov	r4, r0
 80123f6:	b942      	cbnz	r2, 801240a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80123f8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80123fc:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 8012400:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 8012404:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8012408:	e046      	b.n	8012498 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 801240a:	7b51      	ldrb	r1, [r2, #13]
 801240c:	8893      	ldrh	r3, [r2, #4]
 801240e:	010f      	lsls	r7, r1, #4
 8012410:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8012414:	79d7      	ldrb	r7, [r2, #7]
 8012416:	4307      	orrs	r7, r0
 8012418:	2f04      	cmp	r7, #4
 801241a:	b2bd      	uxth	r5, r7
 801241c:	bfcc      	ite	gt
 801241e:	08bf      	lsrgt	r7, r7, #2
 8012420:	2701      	movle	r7, #1
 8012422:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8012426:	f200 80ab 	bhi.w	8012580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 801242a:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801242e:	4283      	cmp	r3, r0
 8012430:	d216      	bcs.n	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012432:	f240 605b 	movw	r0, #1627	; 0x65b
 8012436:	4283      	cmp	r3, r0
 8012438:	d859      	bhi.n	80124ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 801243a:	f240 6057 	movw	r0, #1623	; 0x657
 801243e:	4283      	cmp	r3, r0
 8012440:	d20e      	bcs.n	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012442:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012446:	d24a      	bcs.n	80124de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 8012448:	f240 604e 	movw	r0, #1614	; 0x64e
 801244c:	4283      	cmp	r3, r0
 801244e:	d207      	bcs.n	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012450:	f240 601a 	movw	r0, #1562	; 0x61a
 8012454:	4283      	cmp	r3, r0
 8012456:	d02a      	beq.n	80124ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8012458:	d821      	bhi.n	801249e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 801245a:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801245e:	d35b      	bcc.n	8012518 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012460:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 8012464:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012468:	f040 80d0 	bne.w	801260c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 801246c:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 8012470:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012474:	f040 80ca 	bne.w	801260c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8012478:	00cb      	lsls	r3, r1, #3
 801247a:	0649      	lsls	r1, r1, #25
 801247c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012480:	7a13      	ldrb	r3, [r2, #8]
 8012482:	ea43 0300 	orr.w	r3, r3, r0
 8012486:	bf44      	itt	mi
 8012488:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801248c:	b21b      	sxthmi	r3, r3
 801248e:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8012492:	1b5d      	subs	r5, r3, r5
 8012494:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 8012498:	4610      	mov	r0, r2
 801249a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801249e:	f240 604b 	movw	r0, #1611	; 0x64b
 80124a2:	4283      	cmp	r3, r0
 80124a4:	d338      	bcc.n	8012518 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80124a6:	f240 604c 	movw	r0, #1612	; 0x64c
 80124aa:	4283      	cmp	r3, r0
 80124ac:	d9d8      	bls.n	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80124ae:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 80124b2:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 80124b6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80124ba:	f040 80f2 	bne.w	80126a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>
 80124be:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80124c2:	f040 80ee 	bne.w	80126a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>
 80124c6:	00cb      	lsls	r3, r1, #3
 80124c8:	064e      	lsls	r6, r1, #25
 80124ca:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80124ce:	7a13      	ldrb	r3, [r2, #8]
 80124d0:	ea43 0300 	orr.w	r3, r3, r0
 80124d4:	bf44      	itt	mi
 80124d6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80124da:	b21b      	sxthmi	r3, r3
 80124dc:	e7d9      	b.n	8012492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 80124de:	f240 6054 	movw	r0, #1620	; 0x654
 80124e2:	4283      	cmp	r3, r0
 80124e4:	d8e3      	bhi.n	80124ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80124e6:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80124ea:	d9e0      	bls.n	80124ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80124ec:	e7b8      	b.n	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80124ee:	f240 6074 	movw	r0, #1652	; 0x674
 80124f2:	4283      	cmp	r3, r0
 80124f4:	d0b4      	beq.n	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80124f6:	d82d      	bhi.n	8012554 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 80124f8:	f240 605e 	movw	r0, #1630	; 0x65e
 80124fc:	4283      	cmp	r3, r0
 80124fe:	d804      	bhi.n	801250a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 8012500:	f240 605d 	movw	r0, #1629	; 0x65d
 8012504:	4283      	cmp	r3, r0
 8012506:	d3d2      	bcc.n	80124ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8012508:	e7aa      	b.n	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801250a:	f240 605f 	movw	r0, #1631	; 0x65f
 801250e:	4283      	cmp	r3, r0
 8012510:	d0cd      	beq.n	80124ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8012512:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8012516:	d0a3      	beq.n	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012518:	00cb      	lsls	r3, r1, #3
 801251a:	0649      	lsls	r1, r1, #25
 801251c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012520:	7a13      	ldrb	r3, [r2, #8]
 8012522:	ea43 0300 	orr.w	r3, r3, r0
 8012526:	bf44      	itt	mi
 8012528:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801252c:	b21b      	sxthmi	r3, r3
 801252e:	1b5d      	subs	r5, r3, r5
 8012530:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8012534:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 8012538:	7b53      	ldrb	r3, [r2, #13]
 801253a:	015b      	lsls	r3, r3, #5
 801253c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012540:	7993      	ldrb	r3, [r2, #6]
 8012542:	430b      	orrs	r3, r1
 8012544:	2105      	movs	r1, #5
 8012546:	005b      	lsls	r3, r3, #1
 8012548:	fb93 f3f1 	sdiv	r3, r3, r1
 801254c:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012550:	440b      	add	r3, r1
 8012552:	e757      	b.n	8012404 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012554:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8012558:	4283      	cmp	r3, r0
 801255a:	d809      	bhi.n	8012570 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 801255c:	f240 60df 	movw	r0, #1759	; 0x6df
 8012560:	4283      	cmp	r3, r0
 8012562:	f4bf af7d 	bcs.w	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012566:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801256a:	2b05      	cmp	r3, #5
 801256c:	d8d4      	bhi.n	8012518 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801256e:	e777      	b.n	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012570:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8012574:	4283      	cmp	r3, r0
 8012576:	d09a      	beq.n	80124ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8012578:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801257c:	4283      	cmp	r3, r0
 801257e:	e7ca      	b.n	8012516 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 8012580:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012584:	d22b      	bcs.n	80125de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 8012586:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801258a:	4283      	cmp	r3, r0
 801258c:	d28f      	bcs.n	80124ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801258e:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8012592:	4283      	cmp	r3, r0
 8012594:	d816      	bhi.n	80125c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 8012596:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801259a:	4283      	cmp	r3, r0
 801259c:	f4bf af60 	bcs.w	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80125a0:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80125a4:	4283      	cmp	r3, r0
 80125a6:	d80a      	bhi.n	80125be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 80125a8:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80125ac:	4283      	cmp	r3, r0
 80125ae:	f4bf af57 	bcs.w	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80125b2:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80125b6:	4283      	cmp	r3, r0
 80125b8:	f43f af79 	beq.w	80124ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80125bc:	e7ac      	b.n	8012518 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80125be:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80125c2:	e7f8      	b.n	80125b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 80125c4:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80125c8:	4283      	cmp	r3, r0
 80125ca:	d802      	bhi.n	80125d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 80125cc:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80125d0:	e798      	b.n	8012504 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 80125d2:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80125d6:	4283      	cmp	r3, r0
 80125d8:	f47f af42 	bne.w	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80125dc:	e767      	b.n	80124ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80125de:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80125e2:	4283      	cmp	r3, r0
 80125e4:	f43f af63 	beq.w	80124ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80125e8:	d802      	bhi.n	80125f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 80125ea:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80125ee:	e7f2      	b.n	80125d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 80125f0:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80125f4:	4283      	cmp	r3, r0
 80125f6:	d805      	bhi.n	8012604 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 80125f8:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80125fc:	4283      	cmp	r3, r0
 80125fe:	f4ff af2f 	bcc.w	8012460 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012602:	e754      	b.n	80124ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8012604:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8012608:	4283      	cmp	r3, r0
 801260a:	e7af      	b.n	801256c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 801260c:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8012610:	4617      	mov	r7, r2
 8012612:	f102 0808 	add.w	r8, r2, #8
 8012616:	4666      	mov	r6, ip
 8012618:	6838      	ldr	r0, [r7, #0]
 801261a:	3708      	adds	r7, #8
 801261c:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8012620:	46e6      	mov	lr, ip
 8012622:	4547      	cmp	r7, r8
 8012624:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8012628:	46f4      	mov	ip, lr
 801262a:	d1f5      	bne.n	8012618 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 801262c:	6838      	ldr	r0, [r7, #0]
 801262e:	f8ce 0000 	str.w	r0, [lr]
 8012632:	88b9      	ldrh	r1, [r7, #4]
 8012634:	f8ae 1004 	strh.w	r1, [lr, #4]
 8012638:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 801263c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012640:	d009      	beq.n	8012656 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8012642:	7b51      	ldrb	r1, [r2, #13]
 8012644:	7992      	ldrb	r2, [r2, #6]
 8012646:	0149      	lsls	r1, r1, #5
 8012648:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801264c:	4311      	orrs	r1, r2
 801264e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012652:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 8012656:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801265a:	d00d      	beq.n	8012678 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x288>
 801265c:	442b      	add	r3, r5
 801265e:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 8012662:	b29b      	uxth	r3, r3
 8012664:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012668:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 801266c:	10db      	asrs	r3, r3, #3
 801266e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012672:	4313      	orrs	r3, r2
 8012674:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 8012678:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 801267c:	00cb      	lsls	r3, r1, #3
 801267e:	064f      	lsls	r7, r1, #25
 8012680:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012684:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8012688:	ea43 0302 	orr.w	r3, r3, r2
 801268c:	bf44      	itt	mi
 801268e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012692:	b21b      	sxthmi	r3, r3
 8012694:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8012698:	1b5d      	subs	r5, r3, r5
 801269a:	4632      	mov	r2, r6
 801269c:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 80126a0:	e6fa      	b.n	8012498 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 80126a2:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 80126a6:	4694      	mov	ip, r2
 80126a8:	f102 0908 	add.w	r9, r2, #8
 80126ac:	4676      	mov	r6, lr
 80126ae:	f8dc 0000 	ldr.w	r0, [ip]
 80126b2:	f10c 0c08 	add.w	ip, ip, #8
 80126b6:	f85c 1c04 	ldr.w	r1, [ip, #-4]
 80126ba:	46f0      	mov	r8, lr
 80126bc:	45cc      	cmp	ip, r9
 80126be:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80126c2:	46c6      	mov	lr, r8
 80126c4:	d1f3      	bne.n	80126ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2be>
 80126c6:	f8dc 0000 	ldr.w	r0, [ip]
 80126ca:	f8c8 0000 	str.w	r0, [r8]
 80126ce:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 80126d2:	f8a8 1004 	strh.w	r1, [r8, #4]
 80126d6:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 80126da:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80126de:	d009      	beq.n	80126f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x304>
 80126e0:	7b51      	ldrb	r1, [r2, #13]
 80126e2:	7992      	ldrb	r2, [r2, #6]
 80126e4:	0149      	lsls	r1, r1, #5
 80126e6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80126ea:	4311      	orrs	r1, r2
 80126ec:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80126f0:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 80126f4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80126f8:	d00d      	beq.n	8012716 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x326>
 80126fa:	1bdb      	subs	r3, r3, r7
 80126fc:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 8012700:	b29b      	uxth	r3, r3
 8012702:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012706:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 801270a:	10db      	asrs	r3, r3, #3
 801270c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012710:	4313      	orrs	r3, r2
 8012712:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 8012716:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 801271a:	00cb      	lsls	r3, r1, #3
 801271c:	0648      	lsls	r0, r1, #25
 801271e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012722:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8012726:	ea43 0302 	orr.w	r3, r3, r2
 801272a:	bf44      	itt	mi
 801272c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012730:	b21b      	sxthmi	r3, r3
 8012732:	e7b1      	b.n	8012698 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a8>

08012734 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012734:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012738:	461e      	mov	r6, r3
 801273a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801273c:	4604      	mov	r4, r0
 801273e:	4617      	mov	r7, r2
 8012740:	b92b      	cbnz	r3, 801274e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 8012742:	4b25      	ldr	r3, [pc, #148]	; (80127d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 8012744:	21c0      	movs	r1, #192	; 0xc0
 8012746:	4a25      	ldr	r2, [pc, #148]	; (80127dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 8012748:	4825      	ldr	r0, [pc, #148]	; (80127e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 801274a:	f00e fb11 	bl	8020d70 <__assert_func>
 801274e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8012750:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012754:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 8012758:	f7f1 fa0e 	bl	8003b78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801275c:	4605      	mov	r5, r0
 801275e:	b918      	cbnz	r0, 8012768 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 8012760:	6030      	str	r0, [r6, #0]
 8012762:	4628      	mov	r0, r5
 8012764:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012768:	683b      	ldr	r3, [r7, #0]
 801276a:	4601      	mov	r1, r0
 801276c:	4638      	mov	r0, r7
 801276e:	68db      	ldr	r3, [r3, #12]
 8012770:	4798      	blx	r3
 8012772:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012776:	4602      	mov	r2, r0
 8012778:	6030      	str	r0, [r6, #0]
 801277a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801277e:	d213      	bcs.n	80127a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 8012780:	4643      	mov	r3, r8
 8012782:	4639      	mov	r1, r7
 8012784:	4620      	mov	r0, r4
 8012786:	f7ff fe33 	bl	80123f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801278a:	6030      	str	r0, [r6, #0]
 801278c:	6833      	ldr	r3, [r6, #0]
 801278e:	b143      	cbz	r3, 80127a2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 8012790:	7b5a      	ldrb	r2, [r3, #13]
 8012792:	7a9b      	ldrb	r3, [r3, #10]
 8012794:	0052      	lsls	r2, r2, #1
 8012796:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801279a:	4313      	orrs	r3, r2
 801279c:	bf0c      	ite	eq
 801279e:	2301      	moveq	r3, #1
 80127a0:	2300      	movne	r3, #0
 80127a2:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80127a6:	e7dc      	b.n	8012762 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 80127a8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80127ac:	b29b      	uxth	r3, r3
 80127ae:	2b7f      	cmp	r3, #127	; 0x7f
 80127b0:	d804      	bhi.n	80127bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 80127b2:	4639      	mov	r1, r7
 80127b4:	4620      	mov	r0, r4
 80127b6:	f7ff fd01 	bl	80121bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80127ba:	e7e6      	b.n	801278a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 80127bc:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80127c0:	2b00      	cmp	r3, #0
 80127c2:	d0e3      	beq.n	801278c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 80127c4:	f640 1302 	movw	r3, #2306	; 0x902
 80127c8:	429d      	cmp	r5, r3
 80127ca:	d1df      	bne.n	801278c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 80127cc:	4601      	mov	r1, r0
 80127ce:	4620      	mov	r0, r4
 80127d0:	f7ff fcc5 	bl	801215e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80127d4:	e7d9      	b.n	801278a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 80127d6:	bf00      	nop
 80127d8:	08022c60 	.word	0x08022c60
 80127dc:	080249f3 	.word	0x080249f3
 80127e0:	08022c87 	.word	0x08022c87

080127e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80127e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80127e8:	461e      	mov	r6, r3
 80127ea:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80127ec:	4604      	mov	r4, r0
 80127ee:	4617      	mov	r7, r2
 80127f0:	b92b      	cbnz	r3, 80127fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 80127f2:	4b26      	ldr	r3, [pc, #152]	; (801288c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 80127f4:	21c0      	movs	r1, #192	; 0xc0
 80127f6:	4a26      	ldr	r2, [pc, #152]	; (8012890 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 80127f8:	4826      	ldr	r0, [pc, #152]	; (8012894 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 80127fa:	f00e fab9 	bl	8020d70 <__assert_func>
 80127fe:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8012800:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012804:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 8012808:	f7f1 f9b6 	bl	8003b78 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801280c:	4605      	mov	r5, r0
 801280e:	b918      	cbnz	r0, 8012818 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 8012810:	6030      	str	r0, [r6, #0]
 8012812:	4628      	mov	r0, r5
 8012814:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012818:	683b      	ldr	r3, [r7, #0]
 801281a:	4601      	mov	r1, r0
 801281c:	4638      	mov	r0, r7
 801281e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8012822:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8012826:	47c8      	blx	r9
 8012828:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801282c:	4602      	mov	r2, r0
 801282e:	6030      	str	r0, [r6, #0]
 8012830:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012834:	d213      	bcs.n	801285e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 8012836:	4643      	mov	r3, r8
 8012838:	4639      	mov	r1, r7
 801283a:	4620      	mov	r0, r4
 801283c:	f7ff fdd8 	bl	80123f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012840:	6030      	str	r0, [r6, #0]
 8012842:	6833      	ldr	r3, [r6, #0]
 8012844:	b143      	cbz	r3, 8012858 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 8012846:	7b5a      	ldrb	r2, [r3, #13]
 8012848:	7a9b      	ldrb	r3, [r3, #10]
 801284a:	0052      	lsls	r2, r2, #1
 801284c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012850:	4313      	orrs	r3, r2
 8012852:	bf0c      	ite	eq
 8012854:	2301      	moveq	r3, #1
 8012856:	2300      	movne	r3, #0
 8012858:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801285c:	e7d9      	b.n	8012812 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 801285e:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8012862:	b29b      	uxth	r3, r3
 8012864:	2b7f      	cmp	r3, #127	; 0x7f
 8012866:	d804      	bhi.n	8012872 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 8012868:	4639      	mov	r1, r7
 801286a:	4620      	mov	r0, r4
 801286c:	f7ff fca6 	bl	80121bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012870:	e7e6      	b.n	8012840 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8012872:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012876:	2b00      	cmp	r3, #0
 8012878:	d0e3      	beq.n	8012842 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801287a:	f640 1302 	movw	r3, #2306	; 0x902
 801287e:	429d      	cmp	r5, r3
 8012880:	d1df      	bne.n	8012842 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8012882:	4601      	mov	r1, r0
 8012884:	4620      	mov	r0, r4
 8012886:	f7ff fc6a 	bl	801215e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801288a:	e7d9      	b.n	8012840 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801288c:	08022c60 	.word	0x08022c60
 8012890:	080249f3 	.word	0x080249f3
 8012894:	08022c87 	.word	0x08022c87

08012898 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8012898:	b510      	push	{r4, lr}
 801289a:	4604      	mov	r4, r0
 801289c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 801289e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 80128a0:	b9d9      	cbnz	r1, 80128da <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 80128a2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 80128a4:	2b0a      	cmp	r3, #10
 80128a6:	d036      	beq.n	8012916 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 80128a8:	4620      	mov	r0, r4
 80128aa:	f7ff fc21 	bl	80120f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80128ae:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 80128b0:	2b09      	cmp	r3, #9
 80128b2:	d906      	bls.n	80128c2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 80128b4:	4b18      	ldr	r3, [pc, #96]	; (8012918 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 80128b6:	f44f 7182 	mov.w	r1, #260	; 0x104
 80128ba:	4a18      	ldr	r2, [pc, #96]	; (801291c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 80128bc:	4818      	ldr	r0, [pc, #96]	; (8012920 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 80128be:	f00e fa57 	bl	8020d70 <__assert_func>
 80128c2:	1c5a      	adds	r2, r3, #1
 80128c4:	8622      	strh	r2, [r4, #48]	; 0x30
 80128c6:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 80128c8:	4413      	add	r3, r2
 80128ca:	b29b      	uxth	r3, r3
 80128cc:	2b09      	cmp	r3, #9
 80128ce:	bf88      	it	hi
 80128d0:	3b0a      	subhi	r3, #10
 80128d2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80128d6:	8358      	strh	r0, [r3, #26]
 80128d8:	e7e3      	b.n	80128a2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 80128da:	2b0a      	cmp	r3, #10
 80128dc:	d01b      	beq.n	8012916 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 80128de:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80128e0:	3901      	subs	r1, #1
 80128e2:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80128e6:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 80128e8:	8721      	strh	r1, [r4, #56]	; 0x38
 80128ea:	1c51      	adds	r1, r2, #1
 80128ec:	b289      	uxth	r1, r1
 80128ee:	2901      	cmp	r1, #1
 80128f0:	bf8a      	itet	hi
 80128f2:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80128f6:	86e1      	strhls	r1, [r4, #54]	; 0x36
 80128f8:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 80128fa:	2b09      	cmp	r3, #9
 80128fc:	d8da      	bhi.n	80128b4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 80128fe:	1c5a      	adds	r2, r3, #1
 8012900:	8622      	strh	r2, [r4, #48]	; 0x30
 8012902:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8012904:	4413      	add	r3, r2
 8012906:	b29b      	uxth	r3, r3
 8012908:	2b09      	cmp	r3, #9
 801290a:	bf88      	it	hi
 801290c:	3b0a      	subhi	r3, #10
 801290e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012912:	8358      	strh	r0, [r3, #26]
 8012914:	e7c2      	b.n	801289c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012916:	bd10      	pop	{r4, pc}
 8012918:	080247c4 	.word	0x080247c4
 801291c:	08024b49 	.word	0x08024b49
 8012920:	08022c87 	.word	0x08022c87

08012924 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012924:	b538      	push	{r3, r4, r5, lr}
 8012926:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8012928:	4604      	mov	r4, r0
 801292a:	b92a      	cbnz	r2, 8012938 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 801292c:	4b13      	ldr	r3, [pc, #76]	; (801297c <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 801292e:	21d5      	movs	r1, #213	; 0xd5
 8012930:	4a13      	ldr	r2, [pc, #76]	; (8012980 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 8012932:	4814      	ldr	r0, [pc, #80]	; (8012984 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 8012934:	f00e fa1c 	bl	8020d70 <__assert_func>
 8012938:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801293a:	3a01      	subs	r2, #1
 801293c:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 8012940:	8b4d      	ldrh	r5, [r1, #26]
 8012942:	8602      	strh	r2, [r0, #48]	; 0x30
 8012944:	1c5a      	adds	r2, r3, #1
 8012946:	b292      	uxth	r2, r2
 8012948:	2a09      	cmp	r2, #9
 801294a:	bf8a      	itet	hi
 801294c:	3b09      	subhi	r3, #9
 801294e:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 8012950:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 8012952:	f7ff ffa1 	bl	8012898 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012956:	8b23      	ldrh	r3, [r4, #24]
 8012958:	2b01      	cmp	r3, #1
 801295a:	bf9c      	itt	ls
 801295c:	3301      	addls	r3, #1
 801295e:	8323      	strhls	r3, [r4, #24]
 8012960:	8ae3      	ldrh	r3, [r4, #22]
 8012962:	b90b      	cbnz	r3, 8012968 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 8012964:	2302      	movs	r3, #2
 8012966:	82e3      	strh	r3, [r4, #22]
 8012968:	8ae3      	ldrh	r3, [r4, #22]
 801296a:	4628      	mov	r0, r5
 801296c:	3b01      	subs	r3, #1
 801296e:	b29b      	uxth	r3, r3
 8012970:	82e3      	strh	r3, [r4, #22]
 8012972:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012976:	8265      	strh	r5, [r4, #18]
 8012978:	bd38      	pop	{r3, r4, r5, pc}
 801297a:	bf00      	nop
 801297c:	08022c60 	.word	0x08022c60
 8012980:	08024a9e 	.word	0x08024a9e
 8012984:	08022c87 	.word	0x08022c87

08012988 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8012988:	428a      	cmp	r2, r1
 801298a:	b538      	push	{r3, r4, r5, lr}
 801298c:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 801298e:	d90c      	bls.n	80129aa <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 8012990:	b92c      	cbnz	r4, 801299e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 8012992:	4b1c      	ldr	r3, [pc, #112]	; (8012a04 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 8012994:	21e1      	movs	r1, #225	; 0xe1
 8012996:	4a1c      	ldr	r2, [pc, #112]	; (8012a08 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 8012998:	481c      	ldr	r0, [pc, #112]	; (8012a0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 801299a:	f00e f9e9 	bl	8020d70 <__assert_func>
 801299e:	3c01      	subs	r4, #1
 80129a0:	4b1b      	ldr	r3, [pc, #108]	; (8012a10 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 80129a2:	4a1c      	ldr	r2, [pc, #112]	; (8012a14 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 80129a4:	21c5      	movs	r1, #197	; 0xc5
 80129a6:	8604      	strh	r4, [r0, #48]	; 0x30
 80129a8:	e7f6      	b.n	8012998 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 80129aa:	428c      	cmp	r4, r1
 80129ac:	d203      	bcs.n	80129b6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 80129ae:	4b1a      	ldr	r3, [pc, #104]	; (8012a18 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 80129b0:	21cb      	movs	r1, #203	; 0xcb
 80129b2:	4a1a      	ldr	r2, [pc, #104]	; (8012a1c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 80129b4:	e7f0      	b.n	8012998 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 80129b6:	1a64      	subs	r4, r4, r1
 80129b8:	250a      	movs	r5, #10
 80129ba:	8604      	strh	r4, [r0, #48]	; 0x30
 80129bc:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 80129be:	4421      	add	r1, r4
 80129c0:	b289      	uxth	r1, r1
 80129c2:	2909      	cmp	r1, #9
 80129c4:	bf88      	it	hi
 80129c6:	390a      	subhi	r1, #10
 80129c8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80129ca:	b1ba      	cbz	r2, 80129fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 80129cc:	3a01      	subs	r2, #1
 80129ce:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 80129d0:	b292      	uxth	r2, r2
 80129d2:	2909      	cmp	r1, #9
 80129d4:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80129d8:	d903      	bls.n	80129e2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 80129da:	4b11      	ldr	r3, [pc, #68]	; (8012a20 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 80129dc:	21e6      	movs	r1, #230	; 0xe6
 80129de:	4a11      	ldr	r2, [pc, #68]	; (8012a24 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 80129e0:	e7da      	b.n	8012998 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 80129e2:	3101      	adds	r1, #1
 80129e4:	8601      	strh	r1, [r0, #48]	; 0x30
 80129e6:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 80129e8:	b901      	cbnz	r1, 80129ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 80129ea:	85c5      	strh	r5, [r0, #46]	; 0x2e
 80129ec:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 80129ee:	3901      	subs	r1, #1
 80129f0:	b289      	uxth	r1, r1
 80129f2:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80129f4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80129f8:	834c      	strh	r4, [r1, #26]
 80129fa:	e7e6      	b.n	80129ca <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 80129fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012a00:	f7ff bf4a 	b.w	8012898 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012a04:	08022c60 	.word	0x08022c60
 8012a08:	08024877 	.word	0x08024877
 8012a0c:	08022c87 	.word	0x08022c87
 8012a10:	08022cb3 	.word	0x08022cb3
 8012a14:	08024921 	.word	0x08024921
 8012a18:	080247d0 	.word	0x080247d0
 8012a1c:	08024bf8 	.word	0x08024bf8
 8012a20:	080247dc 	.word	0x080247dc
 8012a24:	080247ef 	.word	0x080247ef

08012a28 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8012a28:	3a01      	subs	r2, #1
 8012a2a:	b570      	push	{r4, r5, r6, lr}
 8012a2c:	b292      	uxth	r2, r2
 8012a2e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8012a32:	42b2      	cmp	r2, r6
 8012a34:	d019      	beq.n	8012a6a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 8012a36:	8b04      	ldrh	r4, [r0, #24]
 8012a38:	f831 5b02 	ldrh.w	r5, [r1], #2
 8012a3c:	4294      	cmp	r4, r2
 8012a3e:	d805      	bhi.n	8012a4c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 8012a40:	4b19      	ldr	r3, [pc, #100]	; (8012aa8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8012a42:	4a1a      	ldr	r2, [pc, #104]	; (8012aac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 8012a44:	21c5      	movs	r1, #197	; 0xc5
 8012a46:	481a      	ldr	r0, [pc, #104]	; (8012ab0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 8012a48:	f00e f992 	bl	8020d70 <__assert_func>
 8012a4c:	8ac4      	ldrh	r4, [r0, #22]
 8012a4e:	4414      	add	r4, r2
 8012a50:	3a01      	subs	r2, #1
 8012a52:	b2a4      	uxth	r4, r4
 8012a54:	b292      	uxth	r2, r2
 8012a56:	2c01      	cmp	r4, #1
 8012a58:	bf88      	it	hi
 8012a5a:	3c02      	subhi	r4, #2
 8012a5c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012a60:	8a64      	ldrh	r4, [r4, #18]
 8012a62:	42ac      	cmp	r4, r5
 8012a64:	d0e5      	beq.n	8012a32 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 8012a66:	2000      	movs	r0, #0
 8012a68:	bd70      	pop	{r4, r5, r6, pc}
 8012a6a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012a6e:	2400      	movs	r4, #0
 8012a70:	4413      	add	r3, r2
 8012a72:	b2a2      	uxth	r2, r4
 8012a74:	429a      	cmp	r2, r3
 8012a76:	da14      	bge.n	8012aa2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 8012a78:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 8012a7a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8012a7e:	4296      	cmp	r6, r2
 8012a80:	d802      	bhi.n	8012a88 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 8012a82:	4b09      	ldr	r3, [pc, #36]	; (8012aa8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8012a84:	4a0b      	ldr	r2, [pc, #44]	; (8012ab4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 8012a86:	e7dd      	b.n	8012a44 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 8012a88:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 8012a8a:	3401      	adds	r4, #1
 8012a8c:	4432      	add	r2, r6
 8012a8e:	b292      	uxth	r2, r2
 8012a90:	2a09      	cmp	r2, #9
 8012a92:	bf88      	it	hi
 8012a94:	3a0a      	subhi	r2, #10
 8012a96:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012a9a:	8b52      	ldrh	r2, [r2, #26]
 8012a9c:	42aa      	cmp	r2, r5
 8012a9e:	d0e8      	beq.n	8012a72 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 8012aa0:	e7e1      	b.n	8012a66 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 8012aa2:	2001      	movs	r0, #1
 8012aa4:	e7e0      	b.n	8012a68 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 8012aa6:	bf00      	nop
 8012aa8:	08022cb3 	.word	0x08022cb3
 8012aac:	08024c7c 	.word	0x08024c7c
 8012ab0:	08022c87 	.word	0x08022c87
 8012ab4:	08024921 	.word	0x08024921

08012ab8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8012ab8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012abc:	4605      	mov	r5, r0
 8012abe:	4616      	mov	r6, r2
 8012ac0:	1c8c      	adds	r4, r1, #2
 8012ac2:	8809      	ldrh	r1, [r1, #0]
 8012ac4:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8012ac8:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8012acc:	42b3      	cmp	r3, r6
 8012ace:	d124      	bne.n	8012b1a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8012ad0:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8012ad4:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8012ad8:	f001 070f 	and.w	r7, r1, #15
 8012adc:	4652      	mov	r2, sl
 8012ade:	f8cd 8000 	str.w	r8, [sp]
 8012ae2:	464b      	mov	r3, r9
 8012ae4:	4621      	mov	r1, r4
 8012ae6:	4628      	mov	r0, r5
 8012ae8:	f7ff ff9e 	bl	8012a28 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8012aec:	4683      	mov	fp, r0
 8012aee:	b168      	cbz	r0, 8012b0c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8012af0:	eb0a 0109 	add.w	r1, sl, r9
 8012af4:	463a      	mov	r2, r7
 8012af6:	4628      	mov	r0, r5
 8012af8:	4441      	add	r1, r8
 8012afa:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8012afe:	4649      	mov	r1, r9
 8012b00:	f7ff ff42 	bl	8012988 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012b04:	4658      	mov	r0, fp
 8012b06:	b003      	add	sp, #12
 8012b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b0c:	eb07 010a 	add.w	r1, r7, sl
 8012b10:	4449      	add	r1, r9
 8012b12:	4441      	add	r1, r8
 8012b14:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012b18:	e7d2      	b.n	8012ac0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012b1a:	f04f 0b00 	mov.w	fp, #0
 8012b1e:	e7f1      	b.n	8012b04 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08012b20 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8012b20:	b570      	push	{r4, r5, r6, lr}
 8012b22:	8810      	ldrh	r0, [r2, #0]
 8012b24:	4298      	cmp	r0, r3
 8012b26:	d817      	bhi.n	8012b58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012b28:	1e48      	subs	r0, r1, #1
 8012b2a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8012b2e:	4298      	cmp	r0, r3
 8012b30:	d312      	bcc.n	8012b58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012b32:	2400      	movs	r4, #0
 8012b34:	428c      	cmp	r4, r1
 8012b36:	d20f      	bcs.n	8012b58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012b38:	1860      	adds	r0, r4, r1
 8012b3a:	1040      	asrs	r0, r0, #1
 8012b3c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012b40:	0085      	lsls	r5, r0, #2
 8012b42:	42b3      	cmp	r3, r6
 8012b44:	d902      	bls.n	8012b4c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012b46:	3001      	adds	r0, #1
 8012b48:	b284      	uxth	r4, r0
 8012b4a:	e7f3      	b.n	8012b34 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012b4c:	d201      	bcs.n	8012b52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8012b4e:	b281      	uxth	r1, r0
 8012b50:	e7f0      	b.n	8012b34 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012b52:	442a      	add	r2, r5
 8012b54:	8850      	ldrh	r0, [r2, #2]
 8012b56:	bd70      	pop	{r4, r5, r6, pc}
 8012b58:	2000      	movs	r0, #0
 8012b5a:	e7fc      	b.n	8012b56 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08012b5c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8012b5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b60:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 8012b62:	4604      	mov	r4, r0
 8012b64:	260b      	movs	r6, #11
 8012b66:	886f      	ldrh	r7, [r5, #2]
 8012b68:	087f      	lsrs	r7, r7, #1
 8012b6a:	3e01      	subs	r6, #1
 8012b6c:	d01b      	beq.n	8012ba6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8012b6e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8012b70:	b92b      	cbnz	r3, 8012b7e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 8012b72:	4b0e      	ldr	r3, [pc, #56]	; (8012bac <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 8012b74:	21c0      	movs	r1, #192	; 0xc0
 8012b76:	4a0e      	ldr	r2, [pc, #56]	; (8012bb0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 8012b78:	480e      	ldr	r0, [pc, #56]	; (8012bb4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 8012b7a:	f00e f8f9 	bl	8020d70 <__assert_func>
 8012b7e:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8012b80:	462a      	mov	r2, r5
 8012b82:	4639      	mov	r1, r7
 8012b84:	4620      	mov	r0, r4
 8012b86:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012b8a:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 8012b8e:	4643      	mov	r3, r8
 8012b90:	f7ff ffc6 	bl	8012b20 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012b94:	b138      	cbz	r0, 8012ba6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8012b96:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8012b9a:	4642      	mov	r2, r8
 8012b9c:	4620      	mov	r0, r4
 8012b9e:	f7ff ff8b 	bl	8012ab8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012ba2:	2800      	cmp	r0, #0
 8012ba4:	d1e1      	bne.n	8012b6a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012ba6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012baa:	bf00      	nop
 8012bac:	08022c60 	.word	0x08022c60
 8012bb0:	080249f3 	.word	0x080249f3
 8012bb4:	08022c87 	.word	0x08022c87

08012bb8 <_ZN8touchgfx8ceil28_4El>:
 8012bb8:	f110 030f 	adds.w	r3, r0, #15
 8012bbc:	d401      	bmi.n	8012bc2 <_ZN8touchgfx8ceil28_4El+0xa>
 8012bbe:	1118      	asrs	r0, r3, #4
 8012bc0:	4770      	bx	lr
 8012bc2:	2210      	movs	r2, #16
 8012bc4:	f1c0 0001 	rsb	r0, r0, #1
 8012bc8:	fb93 f3f2 	sdiv	r3, r3, r2
 8012bcc:	f010 000f 	ands.w	r0, r0, #15
 8012bd0:	bf18      	it	ne
 8012bd2:	2001      	movne	r0, #1
 8012bd4:	1a18      	subs	r0, r3, r0
 8012bd6:	4770      	bx	lr

08012bd8 <_ZN8touchgfx11floorDivModEllRlS0_>:
 8012bd8:	2900      	cmp	r1, #0
 8012bda:	b538      	push	{r3, r4, r5, lr}
 8012bdc:	dc05      	bgt.n	8012bea <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 8012bde:	4b0f      	ldr	r3, [pc, #60]	; (8012c1c <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 8012be0:	21fa      	movs	r1, #250	; 0xfa
 8012be2:	4a0f      	ldr	r2, [pc, #60]	; (8012c20 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 8012be4:	480f      	ldr	r0, [pc, #60]	; (8012c24 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 8012be6:	f00e f8c3 	bl	8020d70 <__assert_func>
 8012bea:	2800      	cmp	r0, #0
 8012bec:	db06      	blt.n	8012bfc <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 8012bee:	fb90 f4f1 	sdiv	r4, r0, r1
 8012bf2:	fb01 0114 	mls	r1, r1, r4, r0
 8012bf6:	6014      	str	r4, [r2, #0]
 8012bf8:	6019      	str	r1, [r3, #0]
 8012bfa:	bd38      	pop	{r3, r4, r5, pc}
 8012bfc:	4240      	negs	r0, r0
 8012bfe:	fb90 f4f1 	sdiv	r4, r0, r1
 8012c02:	4265      	negs	r5, r4
 8012c04:	fb01 0014 	mls	r0, r1, r4, r0
 8012c08:	6015      	str	r5, [r2, #0]
 8012c0a:	6018      	str	r0, [r3, #0]
 8012c0c:	2800      	cmp	r0, #0
 8012c0e:	d0f4      	beq.n	8012bfa <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 8012c10:	6810      	ldr	r0, [r2, #0]
 8012c12:	3801      	subs	r0, #1
 8012c14:	6010      	str	r0, [r2, #0]
 8012c16:	6818      	ldr	r0, [r3, #0]
 8012c18:	1a09      	subs	r1, r1, r0
 8012c1a:	e7ed      	b.n	8012bf8 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 8012c1c:	08024d4d 	.word	0x08024d4d
 8012c20:	08024d8c 	.word	0x08024d8c
 8012c24:	08024d5d 	.word	0x08024d5d

08012c28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8012c28:	b570      	push	{r4, r5, r6, lr}
 8012c2a:	694a      	ldr	r2, [r1, #20]
 8012c2c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012c2e:	684b      	ldr	r3, [r1, #4]
 8012c30:	1b54      	subs	r4, r2, r5
 8012c32:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8012c34:	f000 8106 	beq.w	8012e44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8012c38:	1b9b      	subs	r3, r3, r6
 8012c3a:	d003      	beq.n	8012c44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012c3c:	4363      	muls	r3, r4
 8012c3e:	2210      	movs	r2, #16
 8012c40:	fb93 f3f2 	sdiv	r3, r3, r2
 8012c44:	680c      	ldr	r4, [r1, #0]
 8012c46:	698a      	ldr	r2, [r1, #24]
 8012c48:	1b65      	subs	r5, r4, r5
 8012c4a:	f000 80fd 	beq.w	8012e48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8012c4e:	1b92      	subs	r2, r2, r6
 8012c50:	d003      	beq.n	8012c5a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012c52:	436a      	muls	r2, r5
 8012c54:	2410      	movs	r4, #16
 8012c56:	fb92 f2f4 	sdiv	r2, r2, r4
 8012c5a:	1a9b      	subs	r3, r3, r2
 8012c5c:	ed9f 4a89 	vldr	s8, [pc, #548]	; 8012e84 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8012c60:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012c64:	460a      	mov	r2, r1
 8012c66:	ee07 3a90 	vmov	s15, r3
 8012c6a:	f100 040c 	add.w	r4, r0, #12
 8012c6e:	4603      	mov	r3, r0
 8012c70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012c74:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012c78:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8012c7c:	eeb1 6a43 	vneg.f32	s12, s6
 8012c80:	edd2 7a02 	vldr	s15, [r2, #8]
 8012c84:	3214      	adds	r2, #20
 8012c86:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012c8a:	ece3 6a01 	vstmia	r3!, {s13}
 8012c8e:	429c      	cmp	r4, r3
 8012c90:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012c94:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012c98:	edc3 7a02 	vstr	s15, [r3, #8]
 8012c9c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012ca0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012ca4:	edc3 7a05 	vstr	s15, [r3, #20]
 8012ca8:	d1ea      	bne.n	8012c80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8012caa:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012cac:	698b      	ldr	r3, [r1, #24]
 8012cae:	edd0 4a02 	vldr	s9, [r0, #8]
 8012cb2:	1a9b      	subs	r3, r3, r2
 8012cb4:	edd0 3a00 	vldr	s7, [r0]
 8012cb8:	edd0 6a01 	vldr	s13, [r0, #4]
 8012cbc:	ee07 3a90 	vmov	s15, r3
 8012cc0:	684b      	ldr	r3, [r1, #4]
 8012cc2:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012cc6:	ed90 5a05 	vldr	s10, [r0, #20]
 8012cca:	1a9b      	subs	r3, r3, r2
 8012ccc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012cd0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012cd4:	ed90 2a03 	vldr	s4, [r0, #12]
 8012cd8:	ee07 3a10 	vmov	s14, r3
 8012cdc:	edd0 5a04 	vldr	s11, [r0, #16]
 8012ce0:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012ce4:	ed90 1a07 	vldr	s2, [r0, #28]
 8012ce8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012cec:	edd0 2a06 	vldr	s5, [r0, #24]
 8012cf0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8012cf4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012cf8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012cfc:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012d00:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012d04:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012d08:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8012d0c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012d0e:	694a      	ldr	r2, [r1, #20]
 8012d10:	1b13      	subs	r3, r2, r4
 8012d12:	ee07 3a10 	vmov	s14, r3
 8012d16:	680b      	ldr	r3, [r1, #0]
 8012d18:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d1c:	1b1b      	subs	r3, r3, r4
 8012d1e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012d22:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8012d26:	ee07 3a10 	vmov	s14, r3
 8012d2a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d2e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012d32:	eee6 4a87 	vfma.f32	s9, s13, s14
 8012d36:	ee64 4a86 	vmul.f32	s9, s9, s12
 8012d3a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8012d3e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012d40:	698b      	ldr	r3, [r1, #24]
 8012d42:	1a9b      	subs	r3, r3, r2
 8012d44:	ee06 3a90 	vmov	s13, r3
 8012d48:	684b      	ldr	r3, [r1, #4]
 8012d4a:	1a9b      	subs	r3, r3, r2
 8012d4c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012d50:	ee07 3a10 	vmov	s14, r3
 8012d54:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012d58:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d5c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012d60:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012d64:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012d68:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012d6c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8012d70:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012d72:	694a      	ldr	r2, [r1, #20]
 8012d74:	1b13      	subs	r3, r2, r4
 8012d76:	ee07 3a10 	vmov	s14, r3
 8012d7a:	680b      	ldr	r3, [r1, #0]
 8012d7c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d80:	1b1b      	subs	r3, r3, r4
 8012d82:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012d86:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012d8a:	ee07 3a10 	vmov	s14, r3
 8012d8e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d92:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012d96:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012d9a:	edd0 5a08 	vldr	s11, [r0, #32]
 8012d9e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012da2:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012da6:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012daa:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8012dae:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012db0:	698b      	ldr	r3, [r1, #24]
 8012db2:	1a9b      	subs	r3, r3, r2
 8012db4:	ee07 3a10 	vmov	s14, r3
 8012db8:	684b      	ldr	r3, [r1, #4]
 8012dba:	1a9b      	subs	r3, r3, r2
 8012dbc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012dc0:	ee01 3a90 	vmov	s3, r3
 8012dc4:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012dc8:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012dcc:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012dd0:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012dd4:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012dd8:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012ddc:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8012de0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012de2:	694a      	ldr	r2, [r1, #20]
 8012de4:	1b13      	subs	r3, r2, r4
 8012de6:	ee03 3a10 	vmov	s6, r3
 8012dea:	680b      	ldr	r3, [r1, #0]
 8012dec:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012df0:	1b1b      	subs	r3, r3, r4
 8012df2:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012df6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8012dfa:	ee03 3a10 	vmov	s6, r3
 8012dfe:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012e02:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012e06:	eee1 5a04 	vfma.f32	s11, s2, s8
 8012e0a:	ee25 6a86 	vmul.f32	s12, s11, s12
 8012e0e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012e12:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8012e16:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8012e1a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8012e1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e22:	dd13      	ble.n	8012e4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012e24:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012e28:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8012e2c:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012e2e:	eee3 7a87 	vfma.f32	s15, s7, s14
 8012e32:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012e36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e3a:	dd15      	ble.n	8012e68 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8012e3c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012e40:	6403      	str	r3, [r0, #64]	; 0x40
 8012e42:	bd70      	pop	{r4, r5, r6, pc}
 8012e44:	4623      	mov	r3, r4
 8012e46:	e6fd      	b.n	8012c44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012e48:	462a      	mov	r2, r5
 8012e4a:	e706      	b.n	8012c5a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012e4c:	d502      	bpl.n	8012e54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8012e4e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8012e52:	e7e9      	b.n	8012e28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8012e54:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012e58:	eea3 2a85 	vfma.f32	s4, s7, s10
 8012e5c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8012e60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e64:	dade      	bge.n	8012e24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8012e66:	e7f2      	b.n	8012e4e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012e68:	d502      	bpl.n	8012e70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8012e6a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8012e6e:	e7e7      	b.n	8012e40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8012e70:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012e74:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012e78:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012e7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e80:	dadc      	bge.n	8012e3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8012e82:	e7f2      	b.n	8012e6a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012e84:	3d800000 	.word	0x3d800000

08012e88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012e88:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e8c:	f04f 0814 	mov.w	r8, #20
 8012e90:	4604      	mov	r4, r0
 8012e92:	4617      	mov	r7, r2
 8012e94:	460d      	mov	r5, r1
 8012e96:	fb08 f903 	mul.w	r9, r8, r3
 8012e9a:	461e      	mov	r6, r3
 8012e9c:	eb02 0a09 	add.w	sl, r2, r9
 8012ea0:	f8da 0004 	ldr.w	r0, [sl, #4]
 8012ea4:	f7ff fe88 	bl	8012bb8 <_ZN8touchgfx8ceil28_4El>
 8012ea8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012eaa:	6160      	str	r0, [r4, #20]
 8012eac:	fb08 f803 	mul.w	r8, r8, r3
 8012eb0:	9001      	str	r0, [sp, #4]
 8012eb2:	eb07 0b08 	add.w	fp, r7, r8
 8012eb6:	f8db 0004 	ldr.w	r0, [fp, #4]
 8012eba:	f7ff fe7d 	bl	8012bb8 <_ZN8touchgfx8ceil28_4El>
 8012ebe:	9a01      	ldr	r2, [sp, #4]
 8012ec0:	1a80      	subs	r0, r0, r2
 8012ec2:	61a0      	str	r0, [r4, #24]
 8012ec4:	2800      	cmp	r0, #0
 8012ec6:	f000 8088 	beq.w	8012fda <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 8012eca:	f857 3009 	ldr.w	r3, [r7, r9]
 8012ece:	f857 c008 	ldr.w	ip, [r7, r8]
 8012ed2:	f8db 0004 	ldr.w	r0, [fp, #4]
 8012ed6:	ebac 0c03 	sub.w	ip, ip, r3
 8012eda:	f8da 1004 	ldr.w	r1, [sl, #4]
 8012ede:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 8012ee2:	1a40      	subs	r0, r0, r1
 8012ee4:	fb0b f202 	mul.w	r2, fp, r2
 8012ee8:	ea4f 1800 	mov.w	r8, r0, lsl #4
 8012eec:	fb0c 2211 	mls	r2, ip, r1, r2
 8012ef0:	4641      	mov	r1, r8
 8012ef2:	fb00 2003 	mla	r0, r0, r3, r2
 8012ef6:	f104 0310 	add.w	r3, r4, #16
 8012efa:	4622      	mov	r2, r4
 8012efc:	3801      	subs	r0, #1
 8012efe:	4440      	add	r0, r8
 8012f00:	f7ff fe6a 	bl	8012bd8 <_ZN8touchgfx11floorDivModEllRlS0_>
 8012f04:	f104 0308 	add.w	r3, r4, #8
 8012f08:	1d22      	adds	r2, r4, #4
 8012f0a:	4641      	mov	r1, r8
 8012f0c:	4658      	mov	r0, fp
 8012f0e:	f7ff fe63 	bl	8012bd8 <_ZN8touchgfx11floorDivModEllRlS0_>
 8012f12:	f8c4 800c 	str.w	r8, [r4, #12]
 8012f16:	6962      	ldr	r2, [r4, #20]
 8012f18:	f8da 3004 	ldr.w	r3, [sl, #4]
 8012f1c:	eddf 6a31 	vldr	s13, [pc, #196]	; 8012fe4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012f20:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 8012f24:	6822      	ldr	r2, [r4, #0]
 8012f26:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 8012f2a:	ee07 3a10 	vmov	s14, r3
 8012f2e:	f857 3009 	ldr.w	r3, [r7, r9]
 8012f32:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 8012f36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012f3a:	ee07 3a90 	vmov	s15, r3
 8012f3e:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 8012f42:	ee27 7a26 	vmul.f32	s14, s14, s13
 8012f46:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012f4a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012f4e:	edd3 6a00 	vldr	s13, [r3]
 8012f52:	eee6 6a07 	vfma.f32	s13, s12, s14
 8012f56:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8012f5a:	eee6 6a27 	vfma.f32	s13, s12, s15
 8012f5e:	edc4 6a07 	vstr	s13, [r4, #28]
 8012f62:	edd4 6a01 	vldr	s13, [r4, #4]
 8012f66:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 8012f6a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012f6e:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 8012f72:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012f76:	ed84 6a08 	vstr	s12, [r4, #32]
 8012f7a:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8012f7c:	6262      	str	r2, [r4, #36]	; 0x24
 8012f7e:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 8012f82:	ed93 6a03 	vldr	s12, [r3, #12]
 8012f86:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012f8a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 8012f8e:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012f92:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 8012f96:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 8012f9a:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 8012f9e:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012fa2:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 8012fa6:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 8012fa8:	6322      	str	r2, [r4, #48]	; 0x30
 8012faa:	ed93 6a06 	vldr	s12, [r3, #24]
 8012fae:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 8012fb2:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012fb6:	eeb0 7a46 	vmov.f32	s14, s12
 8012fba:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 8012fbe:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012fc2:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 8012fc6:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 8012fca:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 8012fce:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012fd2:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 8012fd6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8012fd8:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012fda:	4620      	mov	r0, r4
 8012fdc:	b003      	add	sp, #12
 8012fde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012fe2:	bf00      	nop
 8012fe4:	3d800000 	.word	0x3d800000

08012fe8 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8012fe8:	4602      	mov	r2, r0
 8012fea:	b148      	cbz	r0, 8013000 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8012fec:	2300      	movs	r3, #0
 8012fee:	b298      	uxth	r0, r3
 8012ff0:	3301      	adds	r3, #1
 8012ff2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8012ff6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8012ffa:	2900      	cmp	r1, #0
 8012ffc:	d1f7      	bne.n	8012fee <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8012ffe:	4770      	bx	lr
 8013000:	4770      	bx	lr

08013002 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8013002:	b530      	push	{r4, r5, lr}
 8013004:	4604      	mov	r4, r0
 8013006:	b159      	cbz	r1, 8013020 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013008:	b148      	cbz	r0, 801301e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801300a:	2300      	movs	r3, #0
 801300c:	b298      	uxth	r0, r3
 801300e:	4282      	cmp	r2, r0
 8013010:	d905      	bls.n	801301e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013012:	5ccd      	ldrb	r5, [r1, r3]
 8013014:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013018:	3301      	adds	r3, #1
 801301a:	2d00      	cmp	r5, #0
 801301c:	d1f6      	bne.n	801300c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801301e:	bd30      	pop	{r4, r5, pc}
 8013020:	4608      	mov	r0, r1
 8013022:	e7fc      	b.n	801301e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08013024 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8013024:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013026:	468c      	mov	ip, r1
 8013028:	b08b      	sub	sp, #44	; 0x2c
 801302a:	2100      	movs	r1, #0
 801302c:	ae01      	add	r6, sp, #4
 801302e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013032:	211f      	movs	r1, #31
 8013034:	fbb0 f7f3 	udiv	r7, r0, r3
 8013038:	fb03 0517 	mls	r5, r3, r7, r0
 801303c:	4638      	mov	r0, r7
 801303e:	b2ec      	uxtb	r4, r5
 8013040:	2d09      	cmp	r5, #9
 8013042:	bfd4      	ite	le
 8013044:	3430      	addle	r4, #48	; 0x30
 8013046:	3457      	addgt	r4, #87	; 0x57
 8013048:	b2e4      	uxtb	r4, r4
 801304a:	558c      	strb	r4, [r1, r6]
 801304c:	1e4c      	subs	r4, r1, #1
 801304e:	b92f      	cbnz	r7, 801305c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8013050:	4431      	add	r1, r6
 8013052:	4660      	mov	r0, ip
 8013054:	f7ff ffd5 	bl	8013002 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013058:	b00b      	add	sp, #44	; 0x2c
 801305a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801305c:	4621      	mov	r1, r4
 801305e:	e7e9      	b.n	8013034 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08013060 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8013060:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013062:	4607      	mov	r7, r0
 8013064:	b08b      	sub	sp, #44	; 0x2c
 8013066:	4608      	mov	r0, r1
 8013068:	b341      	cbz	r1, 80130bc <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801306a:	1e99      	subs	r1, r3, #2
 801306c:	2922      	cmp	r1, #34	; 0x22
 801306e:	d825      	bhi.n	80130bc <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013070:	2100      	movs	r1, #0
 8013072:	463c      	mov	r4, r7
 8013074:	261f      	movs	r6, #31
 8013076:	f10d 0c04 	add.w	ip, sp, #4
 801307a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801307e:	1e71      	subs	r1, r6, #1
 8013080:	fb94 fef3 	sdiv	lr, r4, r3
 8013084:	fb03 441e 	mls	r4, r3, lr, r4
 8013088:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801308c:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8013090:	b2ec      	uxtb	r4, r5
 8013092:	2d09      	cmp	r5, #9
 8013094:	bfd4      	ite	le
 8013096:	3430      	addle	r4, #48	; 0x30
 8013098:	3457      	addgt	r4, #87	; 0x57
 801309a:	b2e4      	uxtb	r4, r4
 801309c:	f80c 4006 	strb.w	r4, [ip, r6]
 80130a0:	4674      	mov	r4, lr
 80130a2:	b96c      	cbnz	r4, 80130c0 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 80130a4:	2f00      	cmp	r7, #0
 80130a6:	da05      	bge.n	80130b4 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80130a8:	ab0a      	add	r3, sp, #40	; 0x28
 80130aa:	4419      	add	r1, r3
 80130ac:	232d      	movs	r3, #45	; 0x2d
 80130ae:	f801 3c24 	strb.w	r3, [r1, #-36]
 80130b2:	1eb1      	subs	r1, r6, #2
 80130b4:	3101      	adds	r1, #1
 80130b6:	4461      	add	r1, ip
 80130b8:	f7ff ffa3 	bl	8013002 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80130bc:	b00b      	add	sp, #44	; 0x2c
 80130be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80130c0:	460e      	mov	r6, r1
 80130c2:	e7dc      	b.n	801307e <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

080130c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80130c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130c8:	b085      	sub	sp, #20
 80130ca:	4691      	mov	r9, r2
 80130cc:	6802      	ldr	r2, [r0, #0]
 80130ce:	4688      	mov	r8, r1
 80130d0:	461c      	mov	r4, r3
 80130d2:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80130d6:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80130da:	4683      	mov	fp, r0
 80130dc:	4610      	mov	r0, r2
 80130de:	9103      	str	r1, [sp, #12]
 80130e0:	9302      	str	r3, [sp, #8]
 80130e2:	9201      	str	r2, [sp, #4]
 80130e4:	f7ff ff80 	bl	8012fe8 <_ZN8touchgfx7Unicode6strlenEPKt>
 80130e8:	f1b8 0f00 	cmp.w	r8, #0
 80130ec:	bf0c      	ite	eq
 80130ee:	4684      	moveq	ip, r0
 80130f0:	f100 0c01 	addne.w	ip, r0, #1
 80130f4:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80130f8:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80130fc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80130fe:	fa1f fc8c 	uxth.w	ip, ip
 8013102:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013104:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8013108:	9903      	ldr	r1, [sp, #12]
 801310a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801310e:	d041      	beq.n	8013194 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013110:	d834      	bhi.n	801317c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8013112:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8013116:	d059      	beq.n	80131cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013118:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801311c:	d03a      	beq.n	8013194 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801311e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8013122:	d034      	beq.n	801318e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013124:	2400      	movs	r4, #0
 8013126:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801312a:	3a01      	subs	r2, #1
 801312c:	b169      	cbz	r1, 801314a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801312e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013130:	458c      	cmp	ip, r1
 8013132:	da09      	bge.n	8013148 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013134:	eba1 010c 	sub.w	r1, r1, ip
 8013138:	b289      	uxth	r1, r1
 801313a:	b933      	cbnz	r3, 801314a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801313c:	2e00      	cmp	r6, #0
 801313e:	d051      	beq.n	80131e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013140:	2800      	cmp	r0, #0
 8013142:	d04f      	beq.n	80131e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013144:	440c      	add	r4, r1
 8013146:	b2a4      	uxth	r4, r4
 8013148:	2100      	movs	r1, #0
 801314a:	682b      	ldr	r3, [r5, #0]
 801314c:	4293      	cmp	r3, r2
 801314e:	da07      	bge.n	8013160 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013150:	f1b8 0f00 	cmp.w	r8, #0
 8013154:	d004      	beq.n	8013160 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013156:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801315a:	682b      	ldr	r3, [r5, #0]
 801315c:	3301      	adds	r3, #1
 801315e:	602b      	str	r3, [r5, #0]
 8013160:	2730      	movs	r7, #48	; 0x30
 8013162:	2c00      	cmp	r4, #0
 8013164:	d04e      	beq.n	8013204 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013166:	682e      	ldr	r6, [r5, #0]
 8013168:	3c01      	subs	r4, #1
 801316a:	42b2      	cmp	r2, r6
 801316c:	b2a4      	uxth	r4, r4
 801316e:	dd49      	ble.n	8013204 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013170:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013174:	682b      	ldr	r3, [r5, #0]
 8013176:	3301      	adds	r3, #1
 8013178:	602b      	str	r3, [r5, #0]
 801317a:	e7f2      	b.n	8013162 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801317c:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013180:	d01d      	beq.n	80131be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8013182:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8013186:	d002      	beq.n	801318e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013188:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801318c:	e7c9      	b.n	8013122 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801318e:	4684      	mov	ip, r0
 8013190:	f04f 0800 	mov.w	r8, #0
 8013194:	2c00      	cmp	r4, #0
 8013196:	d0c6      	beq.n	8013126 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013198:	b947      	cbnz	r7, 80131ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801319a:	2801      	cmp	r0, #1
 801319c:	d106      	bne.n	80131ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801319e:	8814      	ldrh	r4, [r2, #0]
 80131a0:	2c30      	cmp	r4, #48	; 0x30
 80131a2:	bf02      	ittt	eq
 80131a4:	3202      	addeq	r2, #2
 80131a6:	4638      	moveq	r0, r7
 80131a8:	f8cb 2000 	streq.w	r2, [fp]
 80131ac:	45bc      	cmp	ip, r7
 80131ae:	da14      	bge.n	80131da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80131b0:	b2bf      	uxth	r7, r7
 80131b2:	eba7 040c 	sub.w	r4, r7, ip
 80131b6:	46bc      	mov	ip, r7
 80131b8:	b2a4      	uxth	r4, r4
 80131ba:	2600      	movs	r6, #0
 80131bc:	e7b3      	b.n	8013126 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80131be:	4684      	mov	ip, r0
 80131c0:	b16c      	cbz	r4, 80131de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80131c2:	42b8      	cmp	r0, r7
 80131c4:	dd00      	ble.n	80131c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80131c6:	b2b8      	uxth	r0, r7
 80131c8:	2400      	movs	r4, #0
 80131ca:	e003      	b.n	80131d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80131cc:	f04f 0c01 	mov.w	ip, #1
 80131d0:	2400      	movs	r4, #0
 80131d2:	4660      	mov	r0, ip
 80131d4:	4626      	mov	r6, r4
 80131d6:	46a0      	mov	r8, r4
 80131d8:	e7a5      	b.n	8013126 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80131da:	2400      	movs	r4, #0
 80131dc:	e7ed      	b.n	80131ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80131de:	4626      	mov	r6, r4
 80131e0:	46a0      	mov	r8, r4
 80131e2:	e7a0      	b.n	8013126 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80131e4:	2900      	cmp	r1, #0
 80131e6:	d0b0      	beq.n	801314a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80131e8:	2720      	movs	r7, #32
 80131ea:	682e      	ldr	r6, [r5, #0]
 80131ec:	2900      	cmp	r1, #0
 80131ee:	d0ac      	beq.n	801314a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80131f0:	3901      	subs	r1, #1
 80131f2:	4296      	cmp	r6, r2
 80131f4:	b289      	uxth	r1, r1
 80131f6:	daa7      	bge.n	8013148 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80131f8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80131fc:	682b      	ldr	r3, [r5, #0]
 80131fe:	3301      	adds	r3, #1
 8013200:	602b      	str	r3, [r5, #0]
 8013202:	e7f2      	b.n	80131ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8013204:	b188      	cbz	r0, 801322a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013206:	682b      	ldr	r3, [r5, #0]
 8013208:	3801      	subs	r0, #1
 801320a:	429a      	cmp	r2, r3
 801320c:	b280      	uxth	r0, r0
 801320e:	dd0c      	ble.n	801322a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013210:	f8db 3000 	ldr.w	r3, [fp]
 8013214:	1c9c      	adds	r4, r3, #2
 8013216:	f8cb 4000 	str.w	r4, [fp]
 801321a:	881c      	ldrh	r4, [r3, #0]
 801321c:	682b      	ldr	r3, [r5, #0]
 801321e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8013222:	682b      	ldr	r3, [r5, #0]
 8013224:	3301      	adds	r3, #1
 8013226:	602b      	str	r3, [r5, #0]
 8013228:	e7ec      	b.n	8013204 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801322a:	2620      	movs	r6, #32
 801322c:	b151      	cbz	r1, 8013244 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801322e:	6828      	ldr	r0, [r5, #0]
 8013230:	3901      	subs	r1, #1
 8013232:	4282      	cmp	r2, r0
 8013234:	b289      	uxth	r1, r1
 8013236:	dd05      	ble.n	8013244 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013238:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801323c:	682b      	ldr	r3, [r5, #0]
 801323e:	3301      	adds	r3, #1
 8013240:	602b      	str	r3, [r5, #0]
 8013242:	e7f3      	b.n	801322c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8013244:	b005      	add	sp, #20
 8013246:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801324a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801324a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801324e:	2400      	movs	r4, #0
 8013250:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8013254:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8013258:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801325c:	8014      	strh	r4, [r2, #0]
 801325e:	701c      	strb	r4, [r3, #0]
 8013260:	f888 4000 	strb.w	r4, [r8]
 8013264:	f88c 4000 	strb.w	r4, [ip]
 8013268:	f88e 4000 	strb.w	r4, [lr]
 801326c:	703c      	strb	r4, [r7, #0]
 801326e:	6804      	ldr	r4, [r0, #0]
 8013270:	b1a4      	cbz	r4, 801329c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8013272:	8824      	ldrh	r4, [r4, #0]
 8013274:	f04f 0901 	mov.w	r9, #1
 8013278:	b314      	cbz	r4, 80132c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801327a:	2c2b      	cmp	r4, #43	; 0x2b
 801327c:	d001      	beq.n	8013282 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801327e:	2c20      	cmp	r4, #32
 8013280:	d110      	bne.n	80132a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8013282:	8014      	strh	r4, [r2, #0]
 8013284:	6804      	ldr	r4, [r0, #0]
 8013286:	b10c      	cbz	r4, 801328c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013288:	3402      	adds	r4, #2
 801328a:	6004      	str	r4, [r0, #0]
 801328c:	680c      	ldr	r4, [r1, #0]
 801328e:	b10c      	cbz	r4, 8013294 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013290:	3401      	adds	r4, #1
 8013292:	600c      	str	r4, [r1, #0]
 8013294:	6804      	ldr	r4, [r0, #0]
 8013296:	b17c      	cbz	r4, 80132b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013298:	8824      	ldrh	r4, [r4, #0]
 801329a:	e7ed      	b.n	8013278 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801329c:	680c      	ldr	r4, [r1, #0]
 801329e:	b17c      	cbz	r4, 80132c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80132a0:	7824      	ldrb	r4, [r4, #0]
 80132a2:	e7e7      	b.n	8013274 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80132a4:	2c2d      	cmp	r4, #45	; 0x2d
 80132a6:	d102      	bne.n	80132ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80132a8:	f883 9000 	strb.w	r9, [r3]
 80132ac:	e7ea      	b.n	8013284 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80132ae:	2c23      	cmp	r4, #35	; 0x23
 80132b0:	d107      	bne.n	80132c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80132b2:	f888 9000 	strb.w	r9, [r8]
 80132b6:	e7e5      	b.n	8013284 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80132b8:	680c      	ldr	r4, [r1, #0]
 80132ba:	b10c      	cbz	r4, 80132c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80132bc:	7824      	ldrb	r4, [r4, #0]
 80132be:	e7db      	b.n	8013278 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80132c0:	2400      	movs	r4, #0
 80132c2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80132c6:	2b09      	cmp	r3, #9
 80132c8:	d901      	bls.n	80132ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80132ca:	2c2a      	cmp	r4, #42	; 0x2a
 80132cc:	d122      	bne.n	8013314 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80132ce:	2301      	movs	r3, #1
 80132d0:	2c30      	cmp	r4, #48	; 0x30
 80132d2:	f88e 3000 	strb.w	r3, [lr]
 80132d6:	d10d      	bne.n	80132f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80132d8:	f88c 3000 	strb.w	r3, [ip]
 80132dc:	6803      	ldr	r3, [r0, #0]
 80132de:	b10b      	cbz	r3, 80132e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80132e0:	3302      	adds	r3, #2
 80132e2:	6003      	str	r3, [r0, #0]
 80132e4:	680b      	ldr	r3, [r1, #0]
 80132e6:	b10b      	cbz	r3, 80132ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80132e8:	3301      	adds	r3, #1
 80132ea:	600b      	str	r3, [r1, #0]
 80132ec:	6803      	ldr	r3, [r0, #0]
 80132ee:	2b00      	cmp	r3, #0
 80132f0:	d02f      	beq.n	8013352 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80132f2:	881c      	ldrh	r4, [r3, #0]
 80132f4:	2c2a      	cmp	r4, #42	; 0x2a
 80132f6:	d135      	bne.n	8013364 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80132f8:	f04f 33ff 	mov.w	r3, #4294967295
 80132fc:	6033      	str	r3, [r6, #0]
 80132fe:	6803      	ldr	r3, [r0, #0]
 8013300:	b10b      	cbz	r3, 8013306 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8013302:	3302      	adds	r3, #2
 8013304:	6003      	str	r3, [r0, #0]
 8013306:	680b      	ldr	r3, [r1, #0]
 8013308:	b10b      	cbz	r3, 801330e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801330a:	3301      	adds	r3, #1
 801330c:	600b      	str	r3, [r1, #0]
 801330e:	6803      	ldr	r3, [r0, #0]
 8013310:	b31b      	cbz	r3, 801335a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8013312:	881c      	ldrh	r4, [r3, #0]
 8013314:	2c2e      	cmp	r4, #46	; 0x2e
 8013316:	d11a      	bne.n	801334e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013318:	2301      	movs	r3, #1
 801331a:	703b      	strb	r3, [r7, #0]
 801331c:	6803      	ldr	r3, [r0, #0]
 801331e:	b10b      	cbz	r3, 8013324 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8013320:	3302      	adds	r3, #2
 8013322:	6003      	str	r3, [r0, #0]
 8013324:	680b      	ldr	r3, [r1, #0]
 8013326:	b10b      	cbz	r3, 801332c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8013328:	3301      	adds	r3, #1
 801332a:	600b      	str	r3, [r1, #0]
 801332c:	6803      	ldr	r3, [r0, #0]
 801332e:	2b00      	cmp	r3, #0
 8013330:	d036      	beq.n	80133a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8013332:	881b      	ldrh	r3, [r3, #0]
 8013334:	2b2a      	cmp	r3, #42	; 0x2a
 8013336:	d137      	bne.n	80133a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013338:	f04f 33ff 	mov.w	r3, #4294967295
 801333c:	602b      	str	r3, [r5, #0]
 801333e:	6803      	ldr	r3, [r0, #0]
 8013340:	b10b      	cbz	r3, 8013346 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8013342:	3302      	adds	r3, #2
 8013344:	6003      	str	r3, [r0, #0]
 8013346:	680b      	ldr	r3, [r1, #0]
 8013348:	b10b      	cbz	r3, 801334e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801334a:	3301      	adds	r3, #1
 801334c:	600b      	str	r3, [r1, #0]
 801334e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013352:	680c      	ldr	r4, [r1, #0]
 8013354:	b134      	cbz	r4, 8013364 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013356:	7824      	ldrb	r4, [r4, #0]
 8013358:	e7cc      	b.n	80132f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801335a:	680b      	ldr	r3, [r1, #0]
 801335c:	2b00      	cmp	r3, #0
 801335e:	d0f6      	beq.n	801334e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013360:	781c      	ldrb	r4, [r3, #0]
 8013362:	e7d7      	b.n	8013314 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013364:	2300      	movs	r3, #0
 8013366:	220a      	movs	r2, #10
 8013368:	6033      	str	r3, [r6, #0]
 801336a:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801336e:	fa1f f38c 	uxth.w	r3, ip
 8013372:	2b09      	cmp	r3, #9
 8013374:	d8ce      	bhi.n	8013314 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013376:	6833      	ldr	r3, [r6, #0]
 8013378:	fb02 c303 	mla	r3, r2, r3, ip
 801337c:	6033      	str	r3, [r6, #0]
 801337e:	6803      	ldr	r3, [r0, #0]
 8013380:	b10b      	cbz	r3, 8013386 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8013382:	3302      	adds	r3, #2
 8013384:	6003      	str	r3, [r0, #0]
 8013386:	680b      	ldr	r3, [r1, #0]
 8013388:	b10b      	cbz	r3, 801338e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801338a:	3301      	adds	r3, #1
 801338c:	600b      	str	r3, [r1, #0]
 801338e:	6803      	ldr	r3, [r0, #0]
 8013390:	b10b      	cbz	r3, 8013396 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8013392:	881c      	ldrh	r4, [r3, #0]
 8013394:	e7e9      	b.n	801336a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013396:	680c      	ldr	r4, [r1, #0]
 8013398:	2c00      	cmp	r4, #0
 801339a:	d0e6      	beq.n	801336a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801339c:	7824      	ldrb	r4, [r4, #0]
 801339e:	e7e4      	b.n	801336a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80133a0:	680b      	ldr	r3, [r1, #0]
 80133a2:	b10b      	cbz	r3, 80133a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80133a4:	781b      	ldrb	r3, [r3, #0]
 80133a6:	e7c5      	b.n	8013334 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80133a8:	2200      	movs	r2, #0
 80133aa:	240a      	movs	r4, #10
 80133ac:	602a      	str	r2, [r5, #0]
 80133ae:	3b30      	subs	r3, #48	; 0x30
 80133b0:	682a      	ldr	r2, [r5, #0]
 80133b2:	b29e      	uxth	r6, r3
 80133b4:	2e09      	cmp	r6, #9
 80133b6:	d813      	bhi.n	80133e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80133b8:	fb04 3302 	mla	r3, r4, r2, r3
 80133bc:	602b      	str	r3, [r5, #0]
 80133be:	6803      	ldr	r3, [r0, #0]
 80133c0:	b10b      	cbz	r3, 80133c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80133c2:	3302      	adds	r3, #2
 80133c4:	6003      	str	r3, [r0, #0]
 80133c6:	680b      	ldr	r3, [r1, #0]
 80133c8:	b10b      	cbz	r3, 80133ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80133ca:	3301      	adds	r3, #1
 80133cc:	600b      	str	r3, [r1, #0]
 80133ce:	6803      	ldr	r3, [r0, #0]
 80133d0:	b10b      	cbz	r3, 80133d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80133d2:	881b      	ldrh	r3, [r3, #0]
 80133d4:	e7eb      	b.n	80133ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80133d6:	680b      	ldr	r3, [r1, #0]
 80133d8:	2b00      	cmp	r3, #0
 80133da:	d0e8      	beq.n	80133ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80133dc:	781b      	ldrb	r3, [r3, #0]
 80133de:	e7e6      	b.n	80133ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80133e0:	2a06      	cmp	r2, #6
 80133e2:	bfa8      	it	ge
 80133e4:	2206      	movge	r2, #6
 80133e6:	602a      	str	r2, [r5, #0]
 80133e8:	e7b1      	b.n	801334e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080133ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80133ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133ee:	b0a3      	sub	sp, #140	; 0x8c
 80133f0:	2600      	movs	r6, #0
 80133f2:	4607      	mov	r7, r0
 80133f4:	4688      	mov	r8, r1
 80133f6:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 80133fa:	4631      	mov	r1, r6
 80133fc:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80133fe:	4648      	mov	r0, r9
 8013400:	960d      	str	r6, [sp, #52]	; 0x34
 8013402:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013406:	2242      	movs	r2, #66	; 0x42
 8013408:	f7fe fa2e 	bl	8011868 <_ZN8touchgfx6memsetEPvhm>
 801340c:	b15f      	cbz	r7, 8013426 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801340e:	f108 3aff 	add.w	sl, r8, #4294967295
 8013412:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013414:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013416:	b152      	cbz	r2, 801342e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8013418:	8812      	ldrh	r2, [r2, #0]
 801341a:	b10a      	cbz	r2, 8013420 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801341c:	459a      	cmp	sl, r3
 801341e:	dc2e      	bgt.n	801347e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013420:	2200      	movs	r2, #0
 8013422:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013426:	4638      	mov	r0, r7
 8013428:	b023      	add	sp, #140	; 0x8c
 801342a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801342e:	9a08      	ldr	r2, [sp, #32]
 8013430:	2a00      	cmp	r2, #0
 8013432:	d0f5      	beq.n	8013420 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013434:	7812      	ldrb	r2, [r2, #0]
 8013436:	e7f0      	b.n	801341a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013438:	2d00      	cmp	r5, #0
 801343a:	d0ea      	beq.n	8013412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801343c:	782a      	ldrb	r2, [r5, #0]
 801343e:	b142      	cbz	r2, 8013452 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013440:	2a25      	cmp	r2, #37	; 0x25
 8013442:	d001      	beq.n	8013448 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013444:	459a      	cmp	sl, r3
 8013446:	dc08      	bgt.n	801345a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013448:	f1bb 0f00 	cmp.w	fp, #0
 801344c:	d121      	bne.n	8013492 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801344e:	2d00      	cmp	r5, #0
 8013450:	d0df      	beq.n	8013412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013452:	782a      	ldrb	r2, [r5, #0]
 8013454:	f04f 0b00 	mov.w	fp, #0
 8013458:	e01d      	b.n	8013496 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801345a:	f1bb 0f00 	cmp.w	fp, #0
 801345e:	d077      	beq.n	8013550 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 8013460:	f8bb 2000 	ldrh.w	r2, [fp]
 8013464:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013468:	f1bb 0f00 	cmp.w	fp, #0
 801346c:	d002      	beq.n	8013474 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801346e:	f10b 0202 	add.w	r2, fp, #2
 8013472:	9209      	str	r2, [sp, #36]	; 0x24
 8013474:	b10d      	cbz	r5, 801347a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013476:	3501      	adds	r5, #1
 8013478:	9508      	str	r5, [sp, #32]
 801347a:	3301      	adds	r3, #1
 801347c:	930d      	str	r3, [sp, #52]	; 0x34
 801347e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013480:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013484:	f1bb 0f00 	cmp.w	fp, #0
 8013488:	d0d6      	beq.n	8013438 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801348a:	f8bb 2000 	ldrh.w	r2, [fp]
 801348e:	2a00      	cmp	r2, #0
 8013490:	d1d6      	bne.n	8013440 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013492:	f8bb 2000 	ldrh.w	r2, [fp]
 8013496:	2a00      	cmp	r2, #0
 8013498:	d0bb      	beq.n	8013412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801349a:	459a      	cmp	sl, r3
 801349c:	ddb9      	ble.n	8013412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801349e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80134a2:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80134a6:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80134aa:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80134ae:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80134b2:	960e      	str	r6, [sp, #56]	; 0x38
 80134b4:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80134b8:	960f      	str	r6, [sp, #60]	; 0x3c
 80134ba:	f1bb 0f00 	cmp.w	fp, #0
 80134be:	d002      	beq.n	80134c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80134c0:	f10b 0302 	add.w	r3, fp, #2
 80134c4:	9309      	str	r3, [sp, #36]	; 0x24
 80134c6:	b10d      	cbz	r5, 80134cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80134c8:	1c6b      	adds	r3, r5, #1
 80134ca:	9308      	str	r3, [sp, #32]
 80134cc:	ab0f      	add	r3, sp, #60	; 0x3c
 80134ce:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80134d2:	a908      	add	r1, sp, #32
 80134d4:	a809      	add	r0, sp, #36	; 0x24
 80134d6:	9305      	str	r3, [sp, #20]
 80134d8:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80134dc:	9304      	str	r3, [sp, #16]
 80134de:	ab0e      	add	r3, sp, #56	; 0x38
 80134e0:	9303      	str	r3, [sp, #12]
 80134e2:	ab0c      	add	r3, sp, #48	; 0x30
 80134e4:	9302      	str	r3, [sp, #8]
 80134e6:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80134ea:	9301      	str	r3, [sp, #4]
 80134ec:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80134f0:	9300      	str	r3, [sp, #0]
 80134f2:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80134f6:	f7ff fea8 	bl	801324a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80134fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80134fc:	2b00      	cmp	r3, #0
 80134fe:	bfbf      	itttt	lt
 8013500:	6823      	ldrlt	r3, [r4, #0]
 8013502:	3404      	addlt	r4, #4
 8013504:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013508:	930e      	strlt	r3, [sp, #56]	; 0x38
 801350a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801350c:	2b00      	cmp	r3, #0
 801350e:	bfbe      	ittt	lt
 8013510:	6823      	ldrlt	r3, [r4, #0]
 8013512:	3404      	addlt	r4, #4
 8013514:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013518:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801351c:	bfb8      	it	lt
 801351e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8013520:	b1d9      	cbz	r1, 801355a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 8013522:	880b      	ldrh	r3, [r1, #0]
 8013524:	2b69      	cmp	r3, #105	; 0x69
 8013526:	d01f      	beq.n	8013568 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8013528:	d82f      	bhi.n	801358a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 801352a:	2b58      	cmp	r3, #88	; 0x58
 801352c:	d01c      	beq.n	8013568 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 801352e:	d818      	bhi.n	8013562 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 8013530:	2b25      	cmp	r3, #37	; 0x25
 8013532:	d034      	beq.n	801359e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 8013534:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013536:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801353a:	f1bb 0f00 	cmp.w	fp, #0
 801353e:	f000 80b7 	beq.w	80136b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 8013542:	f8bb 5000 	ldrh.w	r5, [fp]
 8013546:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801354a:	3301      	adds	r3, #1
 801354c:	930d      	str	r3, [sp, #52]	; 0x34
 801354e:	e029      	b.n	80135a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8013550:	b10d      	cbz	r5, 8013556 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 8013552:	782a      	ldrb	r2, [r5, #0]
 8013554:	e786      	b.n	8013464 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013556:	462a      	mov	r2, r5
 8013558:	e784      	b.n	8013464 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801355a:	2a00      	cmp	r2, #0
 801355c:	d0ea      	beq.n	8013534 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 801355e:	7813      	ldrb	r3, [r2, #0]
 8013560:	e7e0      	b.n	8013524 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 8013562:	3b63      	subs	r3, #99	; 0x63
 8013564:	2b01      	cmp	r3, #1
 8013566:	d8e5      	bhi.n	8013534 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8013568:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801356c:	b329      	cbz	r1, 80135ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 801356e:	880b      	ldrh	r3, [r1, #0]
 8013570:	2b69      	cmp	r3, #105	; 0x69
 8013572:	d063      	beq.n	801363c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8013574:	d825      	bhi.n	80135c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 8013576:	2b63      	cmp	r3, #99	; 0x63
 8013578:	d038      	beq.n	80135ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 801357a:	2b64      	cmp	r3, #100	; 0x64
 801357c:	d05e      	beq.n	801363c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 801357e:	2b58      	cmp	r3, #88	; 0x58
 8013580:	d07a      	beq.n	8013678 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 8013582:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013586:	4625      	mov	r5, r4
 8013588:	e036      	b.n	80135f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 801358a:	2b73      	cmp	r3, #115	; 0x73
 801358c:	d0ec      	beq.n	8013568 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 801358e:	d802      	bhi.n	8013596 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 8013590:	2b6f      	cmp	r3, #111	; 0x6f
 8013592:	d1cf      	bne.n	8013534 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8013594:	e7e8      	b.n	8013568 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8013596:	2b75      	cmp	r3, #117	; 0x75
 8013598:	d0e6      	beq.n	8013568 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 801359a:	2b78      	cmp	r3, #120	; 0x78
 801359c:	e7f9      	b.n	8013592 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 801359e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80135a0:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80135a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80135a6:	b10b      	cbz	r3, 80135ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 80135a8:	3302      	adds	r3, #2
 80135aa:	9309      	str	r3, [sp, #36]	; 0x24
 80135ac:	9b08      	ldr	r3, [sp, #32]
 80135ae:	2b00      	cmp	r3, #0
 80135b0:	f43f af2f 	beq.w	8013412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80135b4:	3301      	adds	r3, #1
 80135b6:	9308      	str	r3, [sp, #32]
 80135b8:	e72b      	b.n	8013412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80135ba:	2a00      	cmp	r2, #0
 80135bc:	d0e1      	beq.n	8013582 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 80135be:	7813      	ldrb	r3, [r2, #0]
 80135c0:	e7d6      	b.n	8013570 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 80135c2:	2b73      	cmp	r3, #115	; 0x73
 80135c4:	d036      	beq.n	8013634 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 80135c6:	d807      	bhi.n	80135d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 80135c8:	2b6f      	cmp	r3, #111	; 0x6f
 80135ca:	d1da      	bne.n	8013582 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 80135cc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80135ce:	1d25      	adds	r5, r4, #4
 80135d0:	2308      	movs	r3, #8
 80135d2:	eba8 0202 	sub.w	r2, r8, r2
 80135d6:	e049      	b.n	801366c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 80135d8:	2b75      	cmp	r3, #117	; 0x75
 80135da:	d042      	beq.n	8013662 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 80135dc:	2b78      	cmp	r3, #120	; 0x78
 80135de:	d1d0      	bne.n	8013582 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 80135e0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80135e2:	1d25      	adds	r5, r4, #4
 80135e4:	2310      	movs	r3, #16
 80135e6:	eba8 0202 	sub.w	r2, r8, r2
 80135ea:	e03f      	b.n	801366c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 80135ec:	7823      	ldrb	r3, [r4, #0]
 80135ee:	1d25      	adds	r5, r4, #4
 80135f0:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 80135f4:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80135f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80135fa:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80135fe:	2b00      	cmp	r3, #0
 8013600:	d051      	beq.n	80136a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 8013602:	881a      	ldrh	r2, [r3, #0]
 8013604:	a80d      	add	r0, sp, #52	; 0x34
 8013606:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801360a:	462c      	mov	r4, r5
 801360c:	9005      	str	r0, [sp, #20]
 801360e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8013612:	9004      	str	r0, [sp, #16]
 8013614:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013616:	9003      	str	r0, [sp, #12]
 8013618:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801361c:	9002      	str	r0, [sp, #8]
 801361e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013620:	9001      	str	r0, [sp, #4]
 8013622:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8013626:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801362a:	9000      	str	r0, [sp, #0]
 801362c:	a810      	add	r0, sp, #64	; 0x40
 801362e:	f7ff fd49 	bl	80130c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013632:	e7b7      	b.n	80135a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8013634:	1d25      	adds	r5, r4, #4
 8013636:	6823      	ldr	r3, [r4, #0]
 8013638:	9310      	str	r3, [sp, #64]	; 0x40
 801363a:	e7dd      	b.n	80135f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 801363c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801363e:	230a      	movs	r3, #10
 8013640:	4649      	mov	r1, r9
 8013642:	6820      	ldr	r0, [r4, #0]
 8013644:	eba8 0202 	sub.w	r2, r8, r2
 8013648:	1d25      	adds	r5, r4, #4
 801364a:	b292      	uxth	r2, r2
 801364c:	f7ff fd08 	bl	8013060 <_ZN8touchgfx7Unicode4itoaElPtti>
 8013650:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013654:	2b2d      	cmp	r3, #45	; 0x2d
 8013656:	d1cf      	bne.n	80135f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8013658:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801365c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801365e:	3302      	adds	r3, #2
 8013660:	e7ea      	b.n	8013638 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 8013662:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013664:	1d25      	adds	r5, r4, #4
 8013666:	230a      	movs	r3, #10
 8013668:	eba8 0202 	sub.w	r2, r8, r2
 801366c:	b292      	uxth	r2, r2
 801366e:	4649      	mov	r1, r9
 8013670:	6820      	ldr	r0, [r4, #0]
 8013672:	f7ff fcd7 	bl	8013024 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013676:	e7bf      	b.n	80135f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8013678:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801367a:	2310      	movs	r3, #16
 801367c:	4649      	mov	r1, r9
 801367e:	6820      	ldr	r0, [r4, #0]
 8013680:	eba8 0202 	sub.w	r2, r8, r2
 8013684:	1d25      	adds	r5, r4, #4
 8013686:	b292      	uxth	r2, r2
 8013688:	f7ff fccc 	bl	8013024 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801368c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8013690:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8013694:	2b00      	cmp	r3, #0
 8013696:	d0af      	beq.n	80135f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8013698:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801369c:	2919      	cmp	r1, #25
 801369e:	d8f7      	bhi.n	8013690 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 80136a0:	3b20      	subs	r3, #32
 80136a2:	8013      	strh	r3, [r2, #0]
 80136a4:	e7f4      	b.n	8013690 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 80136a6:	9a08      	ldr	r2, [sp, #32]
 80136a8:	2a00      	cmp	r2, #0
 80136aa:	d0ab      	beq.n	8013604 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 80136ac:	7812      	ldrb	r2, [r2, #0]
 80136ae:	e7a9      	b.n	8013604 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 80136b0:	2d00      	cmp	r5, #0
 80136b2:	f43f af48 	beq.w	8013546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 80136b6:	782d      	ldrb	r5, [r5, #0]
 80136b8:	e745      	b.n	8013546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

080136ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80136ba:	b507      	push	{r0, r1, r2, lr}
 80136bc:	9300      	str	r3, [sp, #0]
 80136be:	4613      	mov	r3, r2
 80136c0:	2200      	movs	r2, #0
 80136c2:	f7ff fe92 	bl	80133ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80136c6:	b003      	add	sp, #12
 80136c8:	f85d fb04 	ldr.w	pc, [sp], #4

080136cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80136cc:	b40c      	push	{r2, r3}
 80136ce:	b507      	push	{r0, r1, r2, lr}
 80136d0:	ab04      	add	r3, sp, #16
 80136d2:	f853 2b04 	ldr.w	r2, [r3], #4
 80136d6:	9301      	str	r3, [sp, #4]
 80136d8:	f7ff ffef 	bl	80136ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80136dc:	b003      	add	sp, #12
 80136de:	f85d eb04 	ldr.w	lr, [sp], #4
 80136e2:	b002      	add	sp, #8
 80136e4:	4770      	bx	lr
	...

080136e8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80136e8:	4b01      	ldr	r3, [pc, #4]	; (80136f0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80136ea:	6018      	str	r0, [r3, #0]
 80136ec:	4770      	bx	lr
 80136ee:	bf00      	nop
 80136f0:	20012610 	.word	0x20012610

080136f4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80136f4:	4b06      	ldr	r3, [pc, #24]	; (8013710 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80136f6:	881a      	ldrh	r2, [r3, #0]
 80136f8:	4282      	cmp	r2, r0
 80136fa:	d807      	bhi.n	801370c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80136fc:	4b05      	ldr	r3, [pc, #20]	; (8013714 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80136fe:	881b      	ldrh	r3, [r3, #0]
 8013700:	4413      	add	r3, r2
 8013702:	4298      	cmp	r0, r3
 8013704:	bfac      	ite	ge
 8013706:	2000      	movge	r0, #0
 8013708:	2001      	movlt	r0, #1
 801370a:	4770      	bx	lr
 801370c:	2000      	movs	r0, #0
 801370e:	4770      	bx	lr
 8013710:	20012630 	.word	0x20012630
 8013714:	20012634 	.word	0x20012634

08013718 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8013718:	b508      	push	{r3, lr}
 801371a:	4601      	mov	r1, r0
 801371c:	f7ff ffea 	bl	80136f4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8013720:	b118      	cbz	r0, 801372a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8013722:	4b02      	ldr	r3, [pc, #8]	; (801372c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8013724:	681b      	ldr	r3, [r3, #0]
 8013726:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801372a:	bd08      	pop	{r3, pc}
 801372c:	20012614 	.word	0x20012614

08013730 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8013730:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013734:	4d28      	ldr	r5, [pc, #160]	; (80137d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8013736:	682b      	ldr	r3, [r5, #0]
 8013738:	2b00      	cmp	r3, #0
 801373a:	d04a      	beq.n	80137d2 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 801373c:	4a27      	ldr	r2, [pc, #156]	; (80137dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801373e:	4e28      	ldr	r6, [pc, #160]	; (80137e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8013740:	8810      	ldrh	r0, [r2, #0]
 8013742:	f8b6 8000 	ldrh.w	r8, [r6]
 8013746:	4c27      	ldr	r4, [pc, #156]	; (80137e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8013748:	4440      	add	r0, r8
 801374a:	4f27      	ldr	r7, [pc, #156]	; (80137e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801374c:	1c41      	adds	r1, r0, #1
 801374e:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 8013752:	f021 0101 	bic.w	r1, r1, #1
 8013756:	eb03 020e 	add.w	r2, r3, lr
 801375a:	0409      	lsls	r1, r1, #16
 801375c:	6022      	str	r2, [r4, #0]
 801375e:	0c09      	lsrs	r1, r1, #16
 8013760:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8013764:	eb0e 010c 	add.w	r1, lr, ip
 8013768:	185a      	adds	r2, r3, r1
 801376a:	603a      	str	r2, [r7, #0]
 801376c:	220e      	movs	r2, #14
 801376e:	fb02 f208 	mul.w	r2, r2, r8
 8013772:	3203      	adds	r2, #3
 8013774:	f022 0203 	bic.w	r2, r2, #3
 8013778:	4411      	add	r1, r2
 801377a:	440b      	add	r3, r1
 801377c:	491b      	ldr	r1, [pc, #108]	; (80137ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 801377e:	600b      	str	r3, [r1, #0]
 8013780:	2300      	movs	r3, #0
 8013782:	491b      	ldr	r1, [pc, #108]	; (80137f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 8013784:	800b      	strh	r3, [r1, #0]
 8013786:	491b      	ldr	r1, [pc, #108]	; (80137f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 8013788:	6809      	ldr	r1, [r1, #0]
 801378a:	eba1 010e 	sub.w	r1, r1, lr
 801378e:	eba1 010c 	sub.w	r1, r1, ip
 8013792:	469c      	mov	ip, r3
 8013794:	1a8a      	subs	r2, r1, r2
 8013796:	4918      	ldr	r1, [pc, #96]	; (80137f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 8013798:	600a      	str	r2, [r1, #0]
 801379a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801379e:	4a17      	ldr	r2, [pc, #92]	; (80137fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 80137a0:	8013      	strh	r3, [r2, #0]
 80137a2:	4283      	cmp	r3, r0
 80137a4:	d10d      	bne.n	80137c2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 80137a6:	8835      	ldrh	r5, [r6, #0]
 80137a8:	2300      	movs	r3, #0
 80137aa:	6838      	ldr	r0, [r7, #0]
 80137ac:	240e      	movs	r4, #14
 80137ae:	429d      	cmp	r5, r3
 80137b0:	d90f      	bls.n	80137d2 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 80137b2:	fb04 0203 	mla	r2, r4, r3, r0
 80137b6:	3301      	adds	r3, #1
 80137b8:	7b11      	ldrb	r1, [r2, #12]
 80137ba:	f36f 1145 	bfc	r1, #5, #1
 80137be:	7311      	strb	r1, [r2, #12]
 80137c0:	e7f5      	b.n	80137ae <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 80137c2:	682a      	ldr	r2, [r5, #0]
 80137c4:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80137c8:	6822      	ldr	r2, [r4, #0]
 80137ca:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 80137ce:	3301      	adds	r3, #1
 80137d0:	e7e7      	b.n	80137a2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 80137d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80137d6:	bf00      	nop
 80137d8:	20012614 	.word	0x20012614
 80137dc:	20012630 	.word	0x20012630
 80137e0:	20012634 	.word	0x20012634
 80137e4:	20012628 	.word	0x20012628
 80137e8:	20012618 	.word	0x20012618
 80137ec:	20012620 	.word	0x20012620
 80137f0:	20012632 	.word	0x20012632
 80137f4:	2001261c 	.word	0x2001261c
 80137f8:	2001262c 	.word	0x2001262c
 80137fc:	20012624 	.word	0x20012624

08013800 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8013800:	4b10      	ldr	r3, [pc, #64]	; (8013844 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 8013802:	b510      	push	{r4, lr}
 8013804:	681b      	ldr	r3, [r3, #0]
 8013806:	b9db      	cbnz	r3, 8013840 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8013808:	b1d1      	cbz	r1, 8013840 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801380a:	4b0f      	ldr	r3, [pc, #60]	; (8013848 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 801380c:	240e      	movs	r4, #14
 801380e:	801a      	strh	r2, [r3, #0]
 8013810:	b292      	uxth	r2, r2
 8013812:	4b0e      	ldr	r3, [pc, #56]	; (801384c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 8013814:	881b      	ldrh	r3, [r3, #0]
 8013816:	4413      	add	r3, r2
 8013818:	4362      	muls	r2, r4
 801381a:	2406      	movs	r4, #6
 801381c:	fb04 2203 	mla	r2, r4, r3, r2
 8013820:	428a      	cmp	r2, r1
 8013822:	d305      	bcc.n	8013830 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 8013824:	4b0a      	ldr	r3, [pc, #40]	; (8013850 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 8013826:	2137      	movs	r1, #55	; 0x37
 8013828:	4a0a      	ldr	r2, [pc, #40]	; (8013854 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 801382a:	480b      	ldr	r0, [pc, #44]	; (8013858 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 801382c:	f00d faa0 	bl	8020d70 <__assert_func>
 8013830:	4b0a      	ldr	r3, [pc, #40]	; (801385c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 8013832:	6019      	str	r1, [r3, #0]
 8013834:	4b0a      	ldr	r3, [pc, #40]	; (8013860 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 8013836:	6018      	str	r0, [r3, #0]
 8013838:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801383c:	f7ff bf78 	b.w	8013730 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8013840:	bd10      	pop	{r4, pc}
 8013842:	bf00      	nop
 8013844:	20012620 	.word	0x20012620
 8013848:	20012634 	.word	0x20012634
 801384c:	20012630 	.word	0x20012630
 8013850:	08024e2a 	.word	0x08024e2a
 8013854:	08024ebf 	.word	0x08024ebf
 8013858:	08024e05 	.word	0x08024e05
 801385c:	2001261c 	.word	0x2001261c
 8013860:	20012614 	.word	0x20012614

08013864 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8013864:	b470      	push	{r4, r5, r6}
 8013866:	4c07      	ldr	r4, [pc, #28]	; (8013884 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8013868:	4605      	mov	r5, r0
 801386a:	4610      	mov	r0, r2
 801386c:	9a03      	ldr	r2, [sp, #12]
 801386e:	6826      	ldr	r6, [r4, #0]
 8013870:	b936      	cbnz	r6, 8013880 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8013872:	6025      	str	r5, [r4, #0]
 8013874:	4c04      	ldr	r4, [pc, #16]	; (8013888 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8013876:	8021      	strh	r1, [r4, #0]
 8013878:	4619      	mov	r1, r3
 801387a:	bc70      	pop	{r4, r5, r6}
 801387c:	f7ff bfc0 	b.w	8013800 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8013880:	bc70      	pop	{r4, r5, r6}
 8013882:	4770      	bx	lr
 8013884:	20012638 	.word	0x20012638
 8013888:	20012630 	.word	0x20012630

0801388c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801388c:	b508      	push	{r3, lr}
 801388e:	4b14      	ldr	r3, [pc, #80]	; (80138e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8013890:	6819      	ldr	r1, [r3, #0]
 8013892:	b931      	cbnz	r1, 80138a2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 8013894:	4b13      	ldr	r3, [pc, #76]	; (80138e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8013896:	f240 3187 	movw	r1, #903	; 0x387
 801389a:	4a13      	ldr	r2, [pc, #76]	; (80138e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801389c:	4813      	ldr	r0, [pc, #76]	; (80138ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801389e:	f00d fa67 	bl	8020d70 <__assert_func>
 80138a2:	4a13      	ldr	r2, [pc, #76]	; (80138f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80138a4:	8803      	ldrh	r3, [r0, #0]
 80138a6:	8812      	ldrh	r2, [r2, #0]
 80138a8:	4293      	cmp	r3, r2
 80138aa:	d204      	bcs.n	80138b6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 80138ac:	2214      	movs	r2, #20
 80138ae:	fb02 1303 	mla	r3, r2, r3, r1
 80138b2:	8918      	ldrh	r0, [r3, #8]
 80138b4:	bd08      	pop	{r3, pc}
 80138b6:	490f      	ldr	r1, [pc, #60]	; (80138f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 80138b8:	8809      	ldrh	r1, [r1, #0]
 80138ba:	4411      	add	r1, r2
 80138bc:	428b      	cmp	r3, r1
 80138be:	da06      	bge.n	80138ce <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 80138c0:	1a9b      	subs	r3, r3, r2
 80138c2:	4a0d      	ldr	r2, [pc, #52]	; (80138f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 80138c4:	210e      	movs	r1, #14
 80138c6:	6812      	ldr	r2, [r2, #0]
 80138c8:	fb01 2303 	mla	r3, r1, r3, r2
 80138cc:	e7f1      	b.n	80138b2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 80138ce:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80138d2:	4293      	cmp	r3, r2
 80138d4:	bf0a      	itet	eq
 80138d6:	4b09      	ldreq	r3, [pc, #36]	; (80138fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 80138d8:	2000      	movne	r0, #0
 80138da:	8818      	ldrheq	r0, [r3, #0]
 80138dc:	e7ea      	b.n	80138b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 80138de:	bf00      	nop
 80138e0:	20012638 	.word	0x20012638
 80138e4:	08024e83 	.word	0x08024e83
 80138e8:	08024f6c 	.word	0x08024f6c
 80138ec:	08024e05 	.word	0x08024e05
 80138f0:	20012630 	.word	0x20012630
 80138f4:	20012634 	.word	0x20012634
 80138f8:	20012618 	.word	0x20012618
 80138fc:	200125a4 	.word	0x200125a4

08013900 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8013900:	b508      	push	{r3, lr}
 8013902:	4b14      	ldr	r3, [pc, #80]	; (8013954 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8013904:	6819      	ldr	r1, [r3, #0]
 8013906:	b931      	cbnz	r1, 8013916 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8013908:	4b13      	ldr	r3, [pc, #76]	; (8013958 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801390a:	f240 319b 	movw	r1, #923	; 0x39b
 801390e:	4a13      	ldr	r2, [pc, #76]	; (801395c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8013910:	4813      	ldr	r0, [pc, #76]	; (8013960 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8013912:	f00d fa2d 	bl	8020d70 <__assert_func>
 8013916:	4a13      	ldr	r2, [pc, #76]	; (8013964 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8013918:	8803      	ldrh	r3, [r0, #0]
 801391a:	8812      	ldrh	r2, [r2, #0]
 801391c:	4293      	cmp	r3, r2
 801391e:	d204      	bcs.n	801392a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 8013920:	2214      	movs	r2, #20
 8013922:	fb02 1303 	mla	r3, r2, r3, r1
 8013926:	8958      	ldrh	r0, [r3, #10]
 8013928:	bd08      	pop	{r3, pc}
 801392a:	490f      	ldr	r1, [pc, #60]	; (8013968 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 801392c:	8809      	ldrh	r1, [r1, #0]
 801392e:	4411      	add	r1, r2
 8013930:	428b      	cmp	r3, r1
 8013932:	da06      	bge.n	8013942 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8013934:	1a9b      	subs	r3, r3, r2
 8013936:	4a0d      	ldr	r2, [pc, #52]	; (801396c <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 8013938:	210e      	movs	r1, #14
 801393a:	6812      	ldr	r2, [r2, #0]
 801393c:	fb01 2303 	mla	r3, r1, r3, r2
 8013940:	e7f1      	b.n	8013926 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 8013942:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013946:	4293      	cmp	r3, r2
 8013948:	bf0a      	itet	eq
 801394a:	4b09      	ldreq	r3, [pc, #36]	; (8013970 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 801394c:	2000      	movne	r0, #0
 801394e:	8818      	ldrheq	r0, [r3, #0]
 8013950:	e7ea      	b.n	8013928 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8013952:	bf00      	nop
 8013954:	20012638 	.word	0x20012638
 8013958:	08024e83 	.word	0x08024e83
 801395c:	08024f98 	.word	0x08024f98
 8013960:	08024e05 	.word	0x08024e05
 8013964:	20012630 	.word	0x20012630
 8013968:	20012634 	.word	0x20012634
 801396c:	20012618 	.word	0x20012618
 8013970:	200125a6 	.word	0x200125a6

08013974 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8013974:	4b23      	ldr	r3, [pc, #140]	; (8013a04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8013976:	b510      	push	{r4, lr}
 8013978:	681c      	ldr	r4, [r3, #0]
 801397a:	b934      	cbnz	r4, 801398a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 801397c:	4b22      	ldr	r3, [pc, #136]	; (8013a08 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801397e:	f240 31af 	movw	r1, #943	; 0x3af
 8013982:	4a22      	ldr	r2, [pc, #136]	; (8013a0c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8013984:	4822      	ldr	r0, [pc, #136]	; (8013a10 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8013986:	f00d f9f3 	bl	8020d70 <__assert_func>
 801398a:	4a22      	ldr	r2, [pc, #136]	; (8013a14 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801398c:	880b      	ldrh	r3, [r1, #0]
 801398e:	8812      	ldrh	r2, [r2, #0]
 8013990:	4293      	cmp	r3, r2
 8013992:	d211      	bcs.n	80139b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8013994:	2214      	movs	r2, #20
 8013996:	fb02 4303 	mla	r3, r2, r3, r4
 801399a:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801399e:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80139a2:	8a1a      	ldrh	r2, [r3, #16]
 80139a4:	8a5b      	ldrh	r3, [r3, #18]
 80139a6:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80139aa:	8004      	strh	r4, [r0, #0]
 80139ac:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80139b0:	8041      	strh	r1, [r0, #2]
 80139b2:	8082      	strh	r2, [r0, #4]
 80139b4:	80c3      	strh	r3, [r0, #6]
 80139b6:	e00e      	b.n	80139d6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 80139b8:	4917      	ldr	r1, [pc, #92]	; (8013a18 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 80139ba:	8809      	ldrh	r1, [r1, #0]
 80139bc:	4411      	add	r1, r2
 80139be:	428b      	cmp	r3, r1
 80139c0:	da0a      	bge.n	80139d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 80139c2:	1a9b      	subs	r3, r3, r2
 80139c4:	4a15      	ldr	r2, [pc, #84]	; (8013a1c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 80139c6:	210e      	movs	r1, #14
 80139c8:	6812      	ldr	r2, [r2, #0]
 80139ca:	fb01 2303 	mla	r3, r1, r3, r2
 80139ce:	681a      	ldr	r2, [r3, #0]
 80139d0:	6002      	str	r2, [r0, #0]
 80139d2:	685a      	ldr	r2, [r3, #4]
 80139d4:	6042      	str	r2, [r0, #4]
 80139d6:	bd10      	pop	{r4, pc}
 80139d8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80139dc:	4293      	cmp	r3, r2
 80139de:	d10b      	bne.n	80139f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 80139e0:	4b0f      	ldr	r3, [pc, #60]	; (8013a20 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 80139e2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80139e6:	4b0f      	ldr	r3, [pc, #60]	; (8013a24 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 80139e8:	8081      	strh	r1, [r0, #4]
 80139ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 80139ee:	2300      	movs	r3, #0
 80139f0:	80c2      	strh	r2, [r0, #6]
 80139f2:	8003      	strh	r3, [r0, #0]
 80139f4:	8043      	strh	r3, [r0, #2]
 80139f6:	e7ee      	b.n	80139d6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 80139f8:	2300      	movs	r3, #0
 80139fa:	8003      	strh	r3, [r0, #0]
 80139fc:	8043      	strh	r3, [r0, #2]
 80139fe:	8083      	strh	r3, [r0, #4]
 8013a00:	e7d8      	b.n	80139b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 8013a02:	bf00      	nop
 8013a04:	20012638 	.word	0x20012638
 8013a08:	08024e83 	.word	0x08024e83
 8013a0c:	08024f05 	.word	0x08024f05
 8013a10:	08024e05 	.word	0x08024e05
 8013a14:	20012630 	.word	0x20012630
 8013a18:	20012634 	.word	0x20012634
 8013a1c:	20012618 	.word	0x20012618
 8013a20:	200125a4 	.word	0x200125a4
 8013a24:	200125a6 	.word	0x200125a6

08013a28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8013a28:	4b18      	ldr	r3, [pc, #96]	; (8013a8c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8013a2a:	681b      	ldr	r3, [r3, #0]
 8013a2c:	b34b      	cbz	r3, 8013a82 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8013a2e:	4a18      	ldr	r2, [pc, #96]	; (8013a90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8013a30:	8800      	ldrh	r0, [r0, #0]
 8013a32:	8812      	ldrh	r2, [r2, #0]
 8013a34:	4290      	cmp	r0, r2
 8013a36:	d211      	bcs.n	8013a5c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 8013a38:	2214      	movs	r2, #20
 8013a3a:	fb02 3300 	mla	r3, r2, r0, r3
 8013a3e:	8a1a      	ldrh	r2, [r3, #16]
 8013a40:	8919      	ldrh	r1, [r3, #8]
 8013a42:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013a46:	428a      	cmp	r2, r1
 8013a48:	db1d      	blt.n	8013a86 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8013a4a:	8a58      	ldrh	r0, [r3, #18]
 8013a4c:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8013a50:	895b      	ldrh	r3, [r3, #10]
 8013a52:	4298      	cmp	r0, r3
 8013a54:	bfac      	ite	ge
 8013a56:	2000      	movge	r0, #0
 8013a58:	2001      	movlt	r0, #1
 8013a5a:	4770      	bx	lr
 8013a5c:	4b0d      	ldr	r3, [pc, #52]	; (8013a94 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8013a5e:	881b      	ldrh	r3, [r3, #0]
 8013a60:	4413      	add	r3, r2
 8013a62:	4298      	cmp	r0, r3
 8013a64:	da0d      	bge.n	8013a82 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8013a66:	4b0c      	ldr	r3, [pc, #48]	; (8013a98 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 8013a68:	1a80      	subs	r0, r0, r2
 8013a6a:	220e      	movs	r2, #14
 8013a6c:	681b      	ldr	r3, [r3, #0]
 8013a6e:	fb02 3300 	mla	r3, r2, r0, r3
 8013a72:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8013a76:	891a      	ldrh	r2, [r3, #8]
 8013a78:	4291      	cmp	r1, r2
 8013a7a:	db04      	blt.n	8013a86 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8013a7c:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8013a80:	e7e6      	b.n	8013a50 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 8013a82:	2000      	movs	r0, #0
 8013a84:	4770      	bx	lr
 8013a86:	2001      	movs	r0, #1
 8013a88:	4770      	bx	lr
 8013a8a:	bf00      	nop
 8013a8c:	20012638 	.word	0x20012638
 8013a90:	20012630 	.word	0x20012630
 8013a94:	20012634 	.word	0x20012634
 8013a98:	20012618 	.word	0x20012618

08013a9c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013a9c:	b508      	push	{r3, lr}
 8013a9e:	4b12      	ldr	r3, [pc, #72]	; (8013ae8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013aa0:	6819      	ldr	r1, [r3, #0]
 8013aa2:	b931      	cbnz	r1, 8013ab2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013aa4:	4b11      	ldr	r3, [pc, #68]	; (8013aec <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013aa6:	f240 31d3 	movw	r1, #979	; 0x3d3
 8013aaa:	4a11      	ldr	r2, [pc, #68]	; (8013af0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8013aac:	4811      	ldr	r0, [pc, #68]	; (8013af4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8013aae:	f00d f95f 	bl	8020d70 <__assert_func>
 8013ab2:	8803      	ldrh	r3, [r0, #0]
 8013ab4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8013ab8:	4293      	cmp	r3, r2
 8013aba:	d012      	beq.n	8013ae2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8013abc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013ac0:	4293      	cmp	r3, r2
 8013ac2:	d103      	bne.n	8013acc <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 8013ac4:	4b0c      	ldr	r3, [pc, #48]	; (8013af8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8013ac6:	681b      	ldr	r3, [r3, #0]
 8013ac8:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8013aca:	bd08      	pop	{r3, pc}
 8013acc:	4a0b      	ldr	r2, [pc, #44]	; (8013afc <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 8013ace:	6812      	ldr	r2, [r2, #0]
 8013ad0:	b11a      	cbz	r2, 8013ada <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 8013ad2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013ad6:	2800      	cmp	r0, #0
 8013ad8:	d1f7      	bne.n	8013aca <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8013ada:	2214      	movs	r2, #20
 8013adc:	4353      	muls	r3, r2
 8013ade:	58c8      	ldr	r0, [r1, r3]
 8013ae0:	e7f3      	b.n	8013aca <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8013ae2:	2000      	movs	r0, #0
 8013ae4:	e7f1      	b.n	8013aca <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8013ae6:	bf00      	nop
 8013ae8:	20012638 	.word	0x20012638
 8013aec:	08024e83 	.word	0x08024e83
 8013af0:	08024f3b 	.word	0x08024f3b
 8013af4:	08024e05 	.word	0x08024e05
 8013af8:	200125b0 	.word	0x200125b0
 8013afc:	20012614 	.word	0x20012614

08013b00 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8013b00:	8802      	ldrh	r2, [r0, #0]
 8013b02:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 8013b06:	429a      	cmp	r2, r3
 8013b08:	d845      	bhi.n	8013b96 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8013b0a:	4b24      	ldr	r3, [pc, #144]	; (8013b9c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013b0c:	8818      	ldrh	r0, [r3, #0]
 8013b0e:	4282      	cmp	r2, r0
 8013b10:	d221      	bcs.n	8013b56 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 8013b12:	4b23      	ldr	r3, [pc, #140]	; (8013ba0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8013b14:	6819      	ldr	r1, [r3, #0]
 8013b16:	2314      	movs	r3, #20
 8013b18:	fb03 1302 	mla	r3, r3, r2, r1
 8013b1c:	6858      	ldr	r0, [r3, #4]
 8013b1e:	2800      	cmp	r0, #0
 8013b20:	d03a      	beq.n	8013b98 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8013b22:	4920      	ldr	r1, [pc, #128]	; (8013ba4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8013b24:	6809      	ldr	r1, [r1, #0]
 8013b26:	2900      	cmp	r1, #0
 8013b28:	d036      	beq.n	8013b98 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8013b2a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8013b2e:	2900      	cmp	r1, #0
 8013b30:	d032      	beq.n	8013b98 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8013b32:	891a      	ldrh	r2, [r3, #8]
 8013b34:	8958      	ldrh	r0, [r3, #10]
 8013b36:	4350      	muls	r0, r2
 8013b38:	7c5a      	ldrb	r2, [r3, #17]
 8013b3a:	7cdb      	ldrb	r3, [r3, #19]
 8013b3c:	0952      	lsrs	r2, r2, #5
 8013b3e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8013b42:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8013b46:	2b0b      	cmp	r3, #11
 8013b48:	bf18      	it	ne
 8013b4a:	0040      	lslne	r0, r0, #1
 8013b4c:	3003      	adds	r0, #3
 8013b4e:	f020 0003 	bic.w	r0, r0, #3
 8013b52:	4408      	add	r0, r1
 8013b54:	4770      	bx	lr
 8013b56:	4b14      	ldr	r3, [pc, #80]	; (8013ba8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 8013b58:	881b      	ldrh	r3, [r3, #0]
 8013b5a:	4403      	add	r3, r0
 8013b5c:	429a      	cmp	r2, r3
 8013b5e:	da1a      	bge.n	8013b96 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8013b60:	4b12      	ldr	r3, [pc, #72]	; (8013bac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 8013b62:	1a10      	subs	r0, r2, r0
 8013b64:	210e      	movs	r1, #14
 8013b66:	681b      	ldr	r3, [r3, #0]
 8013b68:	fb01 3000 	mla	r0, r1, r0, r3
 8013b6c:	7b03      	ldrb	r3, [r0, #12]
 8013b6e:	f003 031f 	and.w	r3, r3, #31
 8013b72:	2b0b      	cmp	r3, #11
 8013b74:	d10b      	bne.n	8013b8e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8013b76:	8903      	ldrh	r3, [r0, #8]
 8013b78:	8940      	ldrh	r0, [r0, #10]
 8013b7a:	4358      	muls	r0, r3
 8013b7c:	4b09      	ldr	r3, [pc, #36]	; (8013ba4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8013b7e:	3003      	adds	r0, #3
 8013b80:	6819      	ldr	r1, [r3, #0]
 8013b82:	f020 0303 	bic.w	r3, r0, #3
 8013b86:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8013b8a:	4418      	add	r0, r3
 8013b8c:	4770      	bx	lr
 8013b8e:	2b0d      	cmp	r3, #13
 8013b90:	d101      	bne.n	8013b96 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8013b92:	300d      	adds	r0, #13
 8013b94:	4770      	bx	lr
 8013b96:	2000      	movs	r0, #0
 8013b98:	4770      	bx	lr
 8013b9a:	bf00      	nop
 8013b9c:	20012630 	.word	0x20012630
 8013ba0:	20012638 	.word	0x20012638
 8013ba4:	20012614 	.word	0x20012614
 8013ba8:	20012634 	.word	0x20012634
 8013bac:	20012618 	.word	0x20012618

08013bb0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8013bb0:	4b19      	ldr	r3, [pc, #100]	; (8013c18 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8013bb2:	6819      	ldr	r1, [r3, #0]
 8013bb4:	8803      	ldrh	r3, [r0, #0]
 8013bb6:	b1e9      	cbz	r1, 8013bf4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8013bb8:	4a18      	ldr	r2, [pc, #96]	; (8013c1c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8013bba:	8812      	ldrh	r2, [r2, #0]
 8013bbc:	429a      	cmp	r2, r3
 8013bbe:	d90a      	bls.n	8013bd6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8013bc0:	2214      	movs	r2, #20
 8013bc2:	fb02 1303 	mla	r3, r2, r3, r1
 8013bc6:	7c58      	ldrb	r0, [r3, #17]
 8013bc8:	0942      	lsrs	r2, r0, #5
 8013bca:	7cd8      	ldrb	r0, [r3, #19]
 8013bcc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8013bd0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8013bd4:	4770      	bx	lr
 8013bd6:	4912      	ldr	r1, [pc, #72]	; (8013c20 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 8013bd8:	8809      	ldrh	r1, [r1, #0]
 8013bda:	4411      	add	r1, r2
 8013bdc:	428b      	cmp	r3, r1
 8013bde:	da09      	bge.n	8013bf4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8013be0:	1a9b      	subs	r3, r3, r2
 8013be2:	4a10      	ldr	r2, [pc, #64]	; (8013c24 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 8013be4:	210e      	movs	r1, #14
 8013be6:	6812      	ldr	r2, [r2, #0]
 8013be8:	fb01 2303 	mla	r3, r1, r3, r2
 8013bec:	7b18      	ldrb	r0, [r3, #12]
 8013bee:	f000 001f 	and.w	r0, r0, #31
 8013bf2:	4770      	bx	lr
 8013bf4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013bf8:	4293      	cmp	r3, r2
 8013bfa:	d10a      	bne.n	8013c12 <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 8013bfc:	4b0a      	ldr	r3, [pc, #40]	; (8013c28 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 8013bfe:	681b      	ldr	r3, [r3, #0]
 8013c00:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8013c04:	b10a      	cbz	r2, 8013c0a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8013c06:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013c08:	b900      	cbnz	r0, 8013c0c <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 8013c0a:	6898      	ldr	r0, [r3, #8]
 8013c0c:	6803      	ldr	r3, [r0, #0]
 8013c0e:	6a1b      	ldr	r3, [r3, #32]
 8013c10:	4718      	bx	r3
 8013c12:	2000      	movs	r0, #0
 8013c14:	4770      	bx	lr
 8013c16:	bf00      	nop
 8013c18:	20012638 	.word	0x20012638
 8013c1c:	20012630 	.word	0x20012630
 8013c20:	20012634 	.word	0x20012634
 8013c24:	20012618 	.word	0x20012618
 8013c28:	200125b0 	.word	0x200125b0

08013c2c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8013c2c:	2010      	movs	r0, #16
 8013c2e:	4770      	bx	lr

08013c30 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8013c30:	2000      	movs	r0, #0
 8013c32:	4770      	bx	lr

08013c34 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 8013c34:	00d2      	lsls	r2, r2, #3
 8013c36:	0209      	lsls	r1, r1, #8
 8013c38:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013c3c:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8013c40:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 8013c44:	4310      	orrs	r0, r2
 8013c46:	4770      	bx	lr

08013c48 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 8013c48:	0a09      	lsrs	r1, r1, #8
 8013c4a:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 8013c4e:	4770      	bx	lr

08013c50 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 8013c50:	08c9      	lsrs	r1, r1, #3
 8013c52:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 8013c56:	4770      	bx	lr

08013c58 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 8013c58:	00c9      	lsls	r1, r1, #3
 8013c5a:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 8013c5e:	4770      	bx	lr

08013c60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013c60:	2bff      	cmp	r3, #255	; 0xff
 8013c62:	d050      	beq.n	8013d06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8013c64:	2a0b      	cmp	r2, #11
 8013c66:	d04a      	beq.n	8013cfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8013c68:	d80e      	bhi.n	8013c88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8013c6a:	2a03      	cmp	r2, #3
 8013c6c:	d03f      	beq.n	8013cee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8013c6e:	d804      	bhi.n	8013c7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8013c70:	2a01      	cmp	r2, #1
 8013c72:	d03e      	beq.n	8013cf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8013c74:	d93f      	bls.n	8013cf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8013c76:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8013c78:	4770      	bx	lr
 8013c7a:	2a09      	cmp	r2, #9
 8013c7c:	d03f      	beq.n	8013cfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8013c7e:	d83c      	bhi.n	8013cfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8013c80:	2a08      	cmp	r2, #8
 8013c82:	d03a      	beq.n	8013cfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8013c84:	2000      	movs	r0, #0
 8013c86:	4770      	bx	lr
 8013c88:	2a2f      	cmp	r2, #47	; 0x2f
 8013c8a:	d024      	beq.n	8013cd6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8013c8c:	d80d      	bhi.n	8013caa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8013c8e:	2a2d      	cmp	r2, #45	; 0x2d
 8013c90:	d014      	beq.n	8013cbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8013c92:	d826      	bhi.n	8013ce2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8013c94:	2a2c      	cmp	r2, #44	; 0x2c
 8013c96:	d1f5      	bne.n	8013c84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013c98:	684b      	ldr	r3, [r1, #4]
 8013c9a:	781b      	ldrb	r3, [r3, #0]
 8013c9c:	2b01      	cmp	r3, #1
 8013c9e:	d018      	beq.n	8013cd2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8013ca0:	d323      	bcc.n	8013cea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8013ca2:	2b02      	cmp	r3, #2
 8013ca4:	d1ee      	bne.n	8013c84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013ca6:	6880      	ldr	r0, [r0, #8]
 8013ca8:	4770      	bx	lr
 8013caa:	2a31      	cmp	r2, #49	; 0x31
 8013cac:	d004      	beq.n	8013cb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8013cae:	d328      	bcc.n	8013d02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8013cb0:	2a32      	cmp	r2, #50	; 0x32
 8013cb2:	d026      	beq.n	8013d02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8013cb4:	2a33      	cmp	r2, #51	; 0x33
 8013cb6:	d1e5      	bne.n	8013c84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013cb8:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8013cba:	4770      	bx	lr
 8013cbc:	684b      	ldr	r3, [r1, #4]
 8013cbe:	781b      	ldrb	r3, [r3, #0]
 8013cc0:	2b01      	cmp	r3, #1
 8013cc2:	d004      	beq.n	8013cce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8013cc4:	d30b      	bcc.n	8013cde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013cc6:	2b02      	cmp	r3, #2
 8013cc8:	d1dc      	bne.n	8013c84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013cca:	6900      	ldr	r0, [r0, #16]
 8013ccc:	4770      	bx	lr
 8013cce:	6a00      	ldr	r0, [r0, #32]
 8013cd0:	4770      	bx	lr
 8013cd2:	6980      	ldr	r0, [r0, #24]
 8013cd4:	4770      	bx	lr
 8013cd6:	684b      	ldr	r3, [r1, #4]
 8013cd8:	781b      	ldrb	r3, [r3, #0]
 8013cda:	2b00      	cmp	r3, #0
 8013cdc:	d1d2      	bne.n	8013c84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013cde:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8013ce0:	4770      	bx	lr
 8013ce2:	684b      	ldr	r3, [r1, #4]
 8013ce4:	781b      	ldrb	r3, [r3, #0]
 8013ce6:	2b00      	cmp	r3, #0
 8013ce8:	d1cc      	bne.n	8013c84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013cea:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013cec:	4770      	bx	lr
 8013cee:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8013cf0:	4770      	bx	lr
 8013cf2:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8013cf4:	4770      	bx	lr
 8013cf6:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8013cf8:	4770      	bx	lr
 8013cfa:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8013cfc:	4770      	bx	lr
 8013cfe:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8013d00:	4770      	bx	lr
 8013d02:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8013d04:	4770      	bx	lr
 8013d06:	2a0b      	cmp	r2, #11
 8013d08:	d049      	beq.n	8013d9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8013d0a:	d80e      	bhi.n	8013d2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8013d0c:	2a03      	cmp	r2, #3
 8013d0e:	d040      	beq.n	8013d92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8013d10:	d804      	bhi.n	8013d1c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8013d12:	2a01      	cmp	r2, #1
 8013d14:	d03f      	beq.n	8013d96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8013d16:	d940      	bls.n	8013d9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8013d18:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8013d1a:	4770      	bx	lr
 8013d1c:	2a09      	cmp	r2, #9
 8013d1e:	d03e      	beq.n	8013d9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8013d20:	d801      	bhi.n	8013d26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8013d22:	2a08      	cmp	r2, #8
 8013d24:	d1ae      	bne.n	8013c84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013d26:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8013d28:	4770      	bx	lr
 8013d2a:	2a2f      	cmp	r2, #47	; 0x2f
 8013d2c:	d024      	beq.n	8013d78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8013d2e:	d80d      	bhi.n	8013d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8013d30:	2a2d      	cmp	r2, #45	; 0x2d
 8013d32:	d014      	beq.n	8013d5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8013d34:	d826      	bhi.n	8013d84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8013d36:	2a2c      	cmp	r2, #44	; 0x2c
 8013d38:	d1a4      	bne.n	8013c84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013d3a:	684b      	ldr	r3, [r1, #4]
 8013d3c:	781b      	ldrb	r3, [r3, #0]
 8013d3e:	2b01      	cmp	r3, #1
 8013d40:	d018      	beq.n	8013d74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8013d42:	d324      	bcc.n	8013d8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8013d44:	2b02      	cmp	r3, #2
 8013d46:	d19d      	bne.n	8013c84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013d48:	68c0      	ldr	r0, [r0, #12]
 8013d4a:	4770      	bx	lr
 8013d4c:	2a31      	cmp	r2, #49	; 0x31
 8013d4e:	d004      	beq.n	8013d5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8013d50:	d327      	bcc.n	8013da2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013d52:	2a32      	cmp	r2, #50	; 0x32
 8013d54:	d025      	beq.n	8013da2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013d56:	2a33      	cmp	r2, #51	; 0x33
 8013d58:	d194      	bne.n	8013c84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013d5a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8013d5c:	4770      	bx	lr
 8013d5e:	684b      	ldr	r3, [r1, #4]
 8013d60:	781b      	ldrb	r3, [r3, #0]
 8013d62:	2b01      	cmp	r3, #1
 8013d64:	d004      	beq.n	8013d70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8013d66:	d30b      	bcc.n	8013d80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8013d68:	2b02      	cmp	r3, #2
 8013d6a:	d18b      	bne.n	8013c84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013d6c:	6940      	ldr	r0, [r0, #20]
 8013d6e:	4770      	bx	lr
 8013d70:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8013d72:	4770      	bx	lr
 8013d74:	69c0      	ldr	r0, [r0, #28]
 8013d76:	4770      	bx	lr
 8013d78:	684b      	ldr	r3, [r1, #4]
 8013d7a:	781b      	ldrb	r3, [r3, #0]
 8013d7c:	2b00      	cmp	r3, #0
 8013d7e:	d181      	bne.n	8013c84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013d80:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8013d82:	4770      	bx	lr
 8013d84:	684b      	ldr	r3, [r1, #4]
 8013d86:	781b      	ldrb	r3, [r3, #0]
 8013d88:	2b00      	cmp	r3, #0
 8013d8a:	f47f af7b 	bne.w	8013c84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013d8e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8013d90:	4770      	bx	lr
 8013d92:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8013d94:	4770      	bx	lr
 8013d96:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8013d98:	4770      	bx	lr
 8013d9a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8013d9c:	4770      	bx	lr
 8013d9e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8013da0:	4770      	bx	lr
 8013da2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8013da4:	4770      	bx	lr

08013da6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013da6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013daa:	b087      	sub	sp, #28
 8013dac:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013dae:	9205      	str	r2, [sp, #20]
 8013db0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013db4:	9101      	str	r1, [sp, #4]
 8013db6:	9202      	str	r2, [sp, #8]
 8013db8:	6841      	ldr	r1, [r0, #4]
 8013dba:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8013dbe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013dc2:	fb01 2404 	mla	r4, r1, r4, r2
 8013dc6:	6802      	ldr	r2, [r0, #0]
 8013dc8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013dcc:	f8de 2000 	ldr.w	r2, [lr]
 8013dd0:	9203      	str	r2, [sp, #12]
 8013dd2:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013dd6:	3204      	adds	r2, #4
 8013dd8:	9204      	str	r2, [sp, #16]
 8013dda:	9a02      	ldr	r2, [sp, #8]
 8013ddc:	43d6      	mvns	r6, r2
 8013dde:	b2f6      	uxtb	r6, r6
 8013de0:	9a01      	ldr	r2, [sp, #4]
 8013de2:	2a00      	cmp	r2, #0
 8013de4:	dc03      	bgt.n	8013dee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013de6:	9a05      	ldr	r2, [sp, #20]
 8013de8:	2a00      	cmp	r2, #0
 8013dea:	f340 8129 	ble.w	8014040 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013dee:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013df0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013df4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013df8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013dfa:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013dfe:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013e02:	2b00      	cmp	r3, #0
 8013e04:	dd0e      	ble.n	8013e24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013e06:	1408      	asrs	r0, r1, #16
 8013e08:	d405      	bmi.n	8013e16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013e0a:	4560      	cmp	r0, ip
 8013e0c:	da03      	bge.n	8013e16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013e0e:	1410      	asrs	r0, r2, #16
 8013e10:	d401      	bmi.n	8013e16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013e12:	42b8      	cmp	r0, r7
 8013e14:	db07      	blt.n	8013e26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013e16:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013e18:	3b01      	subs	r3, #1
 8013e1a:	3402      	adds	r4, #2
 8013e1c:	4401      	add	r1, r0
 8013e1e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013e20:	4402      	add	r2, r0
 8013e22:	e7ee      	b.n	8013e02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013e24:	d071      	beq.n	8013f0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013e26:	1e58      	subs	r0, r3, #1
 8013e28:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013e2a:	fb05 1500 	mla	r5, r5, r0, r1
 8013e2e:	142d      	asrs	r5, r5, #16
 8013e30:	d45f      	bmi.n	8013ef2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013e32:	4565      	cmp	r5, ip
 8013e34:	da5d      	bge.n	8013ef2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013e36:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013e38:	fb05 2000 	mla	r0, r5, r0, r2
 8013e3c:	1400      	asrs	r0, r0, #16
 8013e3e:	d458      	bmi.n	8013ef2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013e40:	42b8      	cmp	r0, r7
 8013e42:	da56      	bge.n	8013ef2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013e44:	4699      	mov	r9, r3
 8013e46:	46a2      	mov	sl, r4
 8013e48:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8013e4c:	f1b9 0f00 	cmp.w	r9, #0
 8013e50:	dd57      	ble.n	8013f02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8013e52:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8013e56:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013e5a:	9803      	ldr	r0, [sp, #12]
 8013e5c:	140d      	asrs	r5, r1, #16
 8013e5e:	f109 39ff 	add.w	r9, r9, #4294967295
 8013e62:	fb07 000c 	mla	r0, r7, ip, r0
 8013e66:	5d40      	ldrb	r0, [r0, r5]
 8013e68:	9d04      	ldr	r5, [sp, #16]
 8013e6a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013e6e:	f8ba 5000 	ldrh.w	r5, [sl]
 8013e72:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013e76:	122f      	asrs	r7, r5, #8
 8013e78:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013e7c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013e80:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013e84:	00ed      	lsls	r5, r5, #3
 8013e86:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8013e8a:	fb17 f706 	smulbb	r7, r7, r6
 8013e8e:	b2ed      	uxtb	r5, r5
 8013e90:	fb18 f806 	smulbb	r8, r8, r6
 8013e94:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8013e98:	10c7      	asrs	r7, r0, #3
 8013e9a:	fb15 f506 	smulbb	r5, r5, r6
 8013e9e:	00c0      	lsls	r0, r0, #3
 8013ea0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013ea4:	fa1f fc8c 	uxth.w	ip, ip
 8013ea8:	b2c0      	uxtb	r0, r0
 8013eaa:	fb07 870b 	mla	r7, r7, fp, r8
 8013eae:	fb00 500b 	mla	r0, r0, fp, r5
 8013eb2:	f10c 0501 	add.w	r5, ip, #1
 8013eb6:	b2bf      	uxth	r7, r7
 8013eb8:	b280      	uxth	r0, r0
 8013eba:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013ebe:	f107 0801 	add.w	r8, r7, #1
 8013ec2:	1c45      	adds	r5, r0, #1
 8013ec4:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8013ec8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013ecc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013ed0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013ed2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013ed6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013eda:	4401      	add	r1, r0
 8013edc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013ee0:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013ee2:	ea4c 0c05 	orr.w	ip, ip, r5
 8013ee6:	4402      	add	r2, r0
 8013ee8:	ea4c 0c08 	orr.w	ip, ip, r8
 8013eec:	f82a cb02 	strh.w	ip, [sl], #2
 8013ef0:	e7ac      	b.n	8013e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013ef2:	f04f 0800 	mov.w	r8, #0
 8013ef6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8013efa:	eb03 0008 	add.w	r0, r3, r8
 8013efe:	2800      	cmp	r0, #0
 8013f00:	dc41      	bgt.n	8013f86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8013f02:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013f06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013f0a:	9b01      	ldr	r3, [sp, #4]
 8013f0c:	2b00      	cmp	r3, #0
 8013f0e:	f340 8097 	ble.w	8014040 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013f12:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013f16:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f18:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013f1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013f20:	eef0 6a62 	vmov.f32	s13, s5
 8013f24:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013f28:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013f2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013f30:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8013f34:	eef0 6a43 	vmov.f32	s13, s6
 8013f38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013f3c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8013f40:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013f44:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013f48:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013f4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013f50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013f54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013f58:	ee12 2a90 	vmov	r2, s5
 8013f5c:	eef0 2a47 	vmov.f32	s5, s14
 8013f60:	fb92 f3f3 	sdiv	r3, r2, r3
 8013f64:	ee13 2a10 	vmov	r2, s6
 8013f68:	9313      	str	r3, [sp, #76]	; 0x4c
 8013f6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f6c:	eeb0 3a67 	vmov.f32	s6, s15
 8013f70:	fb92 f3f3 	sdiv	r3, r2, r3
 8013f74:	9314      	str	r3, [sp, #80]	; 0x50
 8013f76:	9b01      	ldr	r3, [sp, #4]
 8013f78:	9a05      	ldr	r2, [sp, #20]
 8013f7a:	3b01      	subs	r3, #1
 8013f7c:	9301      	str	r3, [sp, #4]
 8013f7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f80:	bf08      	it	eq
 8013f82:	4613      	moveq	r3, r2
 8013f84:	e72c      	b.n	8013de0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013f86:	140f      	asrs	r7, r1, #16
 8013f88:	d453      	bmi.n	8014032 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013f8a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013f8e:	42bd      	cmp	r5, r7
 8013f90:	dd4f      	ble.n	8014032 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013f92:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013f96:	d44c      	bmi.n	8014032 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013f98:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013f9c:	4560      	cmp	r0, ip
 8013f9e:	dd48      	ble.n	8014032 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013fa0:	9803      	ldr	r0, [sp, #12]
 8013fa2:	b22d      	sxth	r5, r5
 8013fa4:	fb0c 0505 	mla	r5, ip, r5, r0
 8013fa8:	5de8      	ldrb	r0, [r5, r7]
 8013faa:	9d04      	ldr	r5, [sp, #16]
 8013fac:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013fb0:	f06f 0501 	mvn.w	r5, #1
 8013fb4:	fb05 fb08 	mul.w	fp, r5, r8
 8013fb8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013fbc:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013fc0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013fc4:	122f      	asrs	r7, r5, #8
 8013fc6:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013fca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013fce:	00ed      	lsls	r5, r5, #3
 8013fd0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013fd4:	fb17 f706 	smulbb	r7, r7, r6
 8013fd8:	b2ed      	uxtb	r5, r5
 8013fda:	fb19 f906 	smulbb	r9, r9, r6
 8013fde:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013fe2:	10c7      	asrs	r7, r0, #3
 8013fe4:	fb15 f506 	smulbb	r5, r5, r6
 8013fe8:	00c0      	lsls	r0, r0, #3
 8013fea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013fee:	fa1f fc8c 	uxth.w	ip, ip
 8013ff2:	b2c0      	uxtb	r0, r0
 8013ff4:	fb07 970a 	mla	r7, r7, sl, r9
 8013ff8:	fb00 500a 	mla	r0, r0, sl, r5
 8013ffc:	f10c 0501 	add.w	r5, ip, #1
 8014000:	b2bf      	uxth	r7, r7
 8014002:	b280      	uxth	r0, r0
 8014004:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014008:	f107 0901 	add.w	r9, r7, #1
 801400c:	1c45      	adds	r5, r0, #1
 801400e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014012:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014016:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801401a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801401e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014022:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014026:	ea4c 0c05 	orr.w	ip, ip, r5
 801402a:	ea4c 0c09 	orr.w	ip, ip, r9
 801402e:	f824 c00b 	strh.w	ip, [r4, fp]
 8014032:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014034:	f108 38ff 	add.w	r8, r8, #4294967295
 8014038:	4401      	add	r1, r0
 801403a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801403c:	4402      	add	r2, r0
 801403e:	e75c      	b.n	8013efa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014040:	b007      	add	sp, #28
 8014042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014046 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014046:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801404a:	b085      	sub	sp, #20
 801404c:	4693      	mov	fp, r2
 801404e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014052:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014054:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014056:	6870      	ldr	r0, [r6, #4]
 8014058:	9100      	str	r1, [sp, #0]
 801405a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801405e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014062:	fb00 2404 	mla	r4, r0, r4, r2
 8014066:	6832      	ldr	r2, [r6, #0]
 8014068:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801406c:	682a      	ldr	r2, [r5, #0]
 801406e:	9201      	str	r2, [sp, #4]
 8014070:	686a      	ldr	r2, [r5, #4]
 8014072:	3204      	adds	r2, #4
 8014074:	9202      	str	r2, [sp, #8]
 8014076:	9a00      	ldr	r2, [sp, #0]
 8014078:	2a00      	cmp	r2, #0
 801407a:	dc03      	bgt.n	8014084 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801407c:	f1bb 0f00 	cmp.w	fp, #0
 8014080:	f340 80a0 	ble.w	80141c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014084:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014086:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801408a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801408e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014090:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014094:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014098:	2b00      	cmp	r3, #0
 801409a:	dd0c      	ble.n	80140b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801409c:	1406      	asrs	r6, r0, #16
 801409e:	d405      	bmi.n	80140ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80140a0:	454e      	cmp	r6, r9
 80140a2:	da03      	bge.n	80140ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80140a4:	1416      	asrs	r6, r2, #16
 80140a6:	d401      	bmi.n	80140ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80140a8:	4546      	cmp	r6, r8
 80140aa:	db05      	blt.n	80140b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80140ac:	4470      	add	r0, lr
 80140ae:	4462      	add	r2, ip
 80140b0:	3b01      	subs	r3, #1
 80140b2:	3402      	adds	r4, #2
 80140b4:	e7f0      	b.n	8014098 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80140b6:	d00f      	beq.n	80140d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80140b8:	1e5e      	subs	r6, r3, #1
 80140ba:	fb0e 0706 	mla	r7, lr, r6, r0
 80140be:	143f      	asrs	r7, r7, #16
 80140c0:	d541      	bpl.n	8014146 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80140c2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80140c6:	4698      	mov	r8, r3
 80140c8:	9603      	str	r6, [sp, #12]
 80140ca:	f1b8 0f00 	cmp.w	r8, #0
 80140ce:	dc59      	bgt.n	8014184 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80140d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80140d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80140d8:	9b00      	ldr	r3, [sp, #0]
 80140da:	2b00      	cmp	r3, #0
 80140dc:	dd72      	ble.n	80141c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80140de:	ee30 0a04 	vadd.f32	s0, s0, s8
 80140e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80140e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80140e8:	eeb0 6a62 	vmov.f32	s12, s5
 80140ec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80140f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80140f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80140f8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80140fc:	eeb0 6a43 	vmov.f32	s12, s6
 8014100:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014104:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014108:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801410c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014110:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014114:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014118:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801411c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014120:	ee12 2a90 	vmov	r2, s5
 8014124:	eef0 2a47 	vmov.f32	s5, s14
 8014128:	fb92 fef3 	sdiv	lr, r2, r3
 801412c:	ee13 2a10 	vmov	r2, s6
 8014130:	eeb0 3a67 	vmov.f32	s6, s15
 8014134:	fb92 fcf3 	sdiv	ip, r2, r3
 8014138:	9b00      	ldr	r3, [sp, #0]
 801413a:	3b01      	subs	r3, #1
 801413c:	9300      	str	r3, [sp, #0]
 801413e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014140:	bf08      	it	eq
 8014142:	465b      	moveq	r3, fp
 8014144:	e797      	b.n	8014076 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014146:	454f      	cmp	r7, r9
 8014148:	dabb      	bge.n	80140c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801414a:	fb0c 2606 	mla	r6, ip, r6, r2
 801414e:	1436      	asrs	r6, r6, #16
 8014150:	d4b7      	bmi.n	80140c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014152:	4546      	cmp	r6, r8
 8014154:	dab5      	bge.n	80140c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014156:	461e      	mov	r6, r3
 8014158:	46a0      	mov	r8, r4
 801415a:	2e00      	cmp	r6, #0
 801415c:	ddb8      	ble.n	80140d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801415e:	1417      	asrs	r7, r2, #16
 8014160:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014164:	9901      	ldr	r1, [sp, #4]
 8014166:	ea4f 4920 	mov.w	r9, r0, asr #16
 801416a:	4462      	add	r2, ip
 801416c:	4470      	add	r0, lr
 801416e:	fb0a 1707 	mla	r7, sl, r7, r1
 8014172:	9902      	ldr	r1, [sp, #8]
 8014174:	3e01      	subs	r6, #1
 8014176:	f817 7009 	ldrb.w	r7, [r7, r9]
 801417a:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801417e:	f828 7b02 	strh.w	r7, [r8], #2
 8014182:	e7ea      	b.n	801415a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014184:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014188:	d417      	bmi.n	80141ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801418a:	68ae      	ldr	r6, [r5, #8]
 801418c:	454e      	cmp	r6, r9
 801418e:	dd14      	ble.n	80141ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014190:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014194:	d411      	bmi.n	80141ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014196:	68ef      	ldr	r7, [r5, #12]
 8014198:	4557      	cmp	r7, sl
 801419a:	dd0e      	ble.n	80141ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801419c:	9f01      	ldr	r7, [sp, #4]
 801419e:	b236      	sxth	r6, r6
 80141a0:	f06f 0101 	mvn.w	r1, #1
 80141a4:	fb0a 7606 	mla	r6, sl, r6, r7
 80141a8:	9f02      	ldr	r7, [sp, #8]
 80141aa:	f816 6009 	ldrb.w	r6, [r6, r9]
 80141ae:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80141b2:	fb01 f608 	mul.w	r6, r1, r8
 80141b6:	9903      	ldr	r1, [sp, #12]
 80141b8:	538f      	strh	r7, [r1, r6]
 80141ba:	4470      	add	r0, lr
 80141bc:	4462      	add	r2, ip
 80141be:	f108 38ff 	add.w	r8, r8, #4294967295
 80141c2:	e782      	b.n	80140ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80141c4:	b005      	add	sp, #20
 80141c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080141ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80141ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141ce:	b087      	sub	sp, #28
 80141d0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80141d2:	9205      	str	r2, [sp, #20]
 80141d4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80141d8:	9102      	str	r1, [sp, #8]
 80141da:	9203      	str	r2, [sp, #12]
 80141dc:	6861      	ldr	r1, [r4, #4]
 80141de:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80141e2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80141e6:	fb01 2000 	mla	r0, r1, r0, r2
 80141ea:	6822      	ldr	r2, [r4, #0]
 80141ec:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80141f0:	9200      	str	r2, [sp, #0]
 80141f2:	f8dc 2000 	ldr.w	r2, [ip]
 80141f6:	9204      	str	r2, [sp, #16]
 80141f8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80141fc:	3204      	adds	r2, #4
 80141fe:	9201      	str	r2, [sp, #4]
 8014200:	9a03      	ldr	r2, [sp, #12]
 8014202:	43d5      	mvns	r5, r2
 8014204:	b2ed      	uxtb	r5, r5
 8014206:	9a02      	ldr	r2, [sp, #8]
 8014208:	2a00      	cmp	r2, #0
 801420a:	dc03      	bgt.n	8014214 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801420c:	9a05      	ldr	r2, [sp, #20]
 801420e:	2a00      	cmp	r2, #0
 8014210:	f340 812c 	ble.w	801446c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014214:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014216:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801421a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801421e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014220:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014224:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014228:	2b00      	cmp	r3, #0
 801422a:	dd10      	ble.n	801424e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801422c:	140c      	asrs	r4, r1, #16
 801422e:	d405      	bmi.n	801423c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014230:	4574      	cmp	r4, lr
 8014232:	da03      	bge.n	801423c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014234:	1414      	asrs	r4, r2, #16
 8014236:	d401      	bmi.n	801423c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014238:	42bc      	cmp	r4, r7
 801423a:	db09      	blt.n	8014250 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801423c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801423e:	3b01      	subs	r3, #1
 8014240:	9800      	ldr	r0, [sp, #0]
 8014242:	4421      	add	r1, r4
 8014244:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014246:	3002      	adds	r0, #2
 8014248:	4422      	add	r2, r4
 801424a:	9000      	str	r0, [sp, #0]
 801424c:	e7ec      	b.n	8014228 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801424e:	d071      	beq.n	8014334 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014250:	1e5c      	subs	r4, r3, #1
 8014252:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014254:	fb06 1604 	mla	r6, r6, r4, r1
 8014258:	1436      	asrs	r6, r6, #16
 801425a:	d45d      	bmi.n	8014318 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801425c:	4576      	cmp	r6, lr
 801425e:	da5b      	bge.n	8014318 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014260:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8014262:	fb06 2404 	mla	r4, r6, r4, r2
 8014266:	1424      	asrs	r4, r4, #16
 8014268:	d456      	bmi.n	8014318 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801426a:	42bc      	cmp	r4, r7
 801426c:	da54      	bge.n	8014318 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801426e:	4698      	mov	r8, r3
 8014270:	f8dd 9000 	ldr.w	r9, [sp]
 8014274:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014278:	f1b8 0f00 	cmp.w	r8, #0
 801427c:	dd54      	ble.n	8014328 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801427e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014282:	1414      	asrs	r4, r2, #16
 8014284:	9804      	ldr	r0, [sp, #16]
 8014286:	140e      	asrs	r6, r1, #16
 8014288:	f108 38ff 	add.w	r8, r8, #4294967295
 801428c:	fb07 0404 	mla	r4, r7, r4, r0
 8014290:	9801      	ldr	r0, [sp, #4]
 8014292:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014296:	f8b9 4000 	ldrh.w	r4, [r9]
 801429a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801429e:	1227      	asrs	r7, r4, #8
 80142a0:	eb00 0b0e 	add.w	fp, r0, lr
 80142a4:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80142a8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80142ac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80142ae:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80142b2:	f89b b001 	ldrb.w	fp, [fp, #1]
 80142b6:	4401      	add	r1, r0
 80142b8:	fb16 f60a 	smulbb	r6, r6, sl
 80142bc:	9814      	ldr	r0, [sp, #80]	; 0x50
 80142be:	fb1b fb0a 	smulbb	fp, fp, sl
 80142c2:	fb07 6705 	mla	r7, r7, r5, r6
 80142c6:	10e6      	asrs	r6, r4, #3
 80142c8:	00e4      	lsls	r4, r4, #3
 80142ca:	4402      	add	r2, r0
 80142cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80142d0:	b2bf      	uxth	r7, r7
 80142d2:	b2e4      	uxtb	r4, r4
 80142d4:	fb06 b605 	mla	r6, r6, r5, fp
 80142d8:	fb14 f405 	smulbb	r4, r4, r5
 80142dc:	b2b6      	uxth	r6, r6
 80142de:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80142e2:	1c7c      	adds	r4, r7, #1
 80142e4:	f106 0b01 	add.w	fp, r6, #1
 80142e8:	fa1f fe8e 	uxth.w	lr, lr
 80142ec:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80142f0:	f10e 0401 	add.w	r4, lr, #1
 80142f4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80142f8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80142fc:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8014300:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014304:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014308:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801430c:	4327      	orrs	r7, r4
 801430e:	ea47 070b 	orr.w	r7, r7, fp
 8014312:	f829 7b02 	strh.w	r7, [r9], #2
 8014316:	e7af      	b.n	8014278 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8014318:	f04f 0e00 	mov.w	lr, #0
 801431c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014320:	eb03 040e 	add.w	r4, r3, lr
 8014324:	2c00      	cmp	r4, #0
 8014326:	dc43      	bgt.n	80143b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8014328:	9a00      	ldr	r2, [sp, #0]
 801432a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801432e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014332:	9300      	str	r3, [sp, #0]
 8014334:	9b02      	ldr	r3, [sp, #8]
 8014336:	2b00      	cmp	r3, #0
 8014338:	f340 8098 	ble.w	801446c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801433c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014340:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014342:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014346:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801434a:	eef0 6a62 	vmov.f32	s13, s5
 801434e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014352:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014356:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801435a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801435e:	eef0 6a43 	vmov.f32	s13, s6
 8014362:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014366:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801436a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801436e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014372:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014376:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801437a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801437e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014382:	ee12 2a90 	vmov	r2, s5
 8014386:	eef0 2a47 	vmov.f32	s5, s14
 801438a:	fb92 f3f3 	sdiv	r3, r2, r3
 801438e:	ee13 2a10 	vmov	r2, s6
 8014392:	9313      	str	r3, [sp, #76]	; 0x4c
 8014394:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014396:	eeb0 3a67 	vmov.f32	s6, s15
 801439a:	fb92 f3f3 	sdiv	r3, r2, r3
 801439e:	9314      	str	r3, [sp, #80]	; 0x50
 80143a0:	9b02      	ldr	r3, [sp, #8]
 80143a2:	9a05      	ldr	r2, [sp, #20]
 80143a4:	3b01      	subs	r3, #1
 80143a6:	9302      	str	r3, [sp, #8]
 80143a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80143aa:	bf08      	it	eq
 80143ac:	4613      	moveq	r3, r2
 80143ae:	e72a      	b.n	8014206 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80143b0:	140f      	asrs	r7, r1, #16
 80143b2:	d454      	bmi.n	801445e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80143b4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80143b8:	42be      	cmp	r6, r7
 80143ba:	dd50      	ble.n	801445e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80143bc:	ea5f 4822 	movs.w	r8, r2, asr #16
 80143c0:	d44d      	bmi.n	801445e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80143c2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80143c6:	4544      	cmp	r4, r8
 80143c8:	dd49      	ble.n	801445e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80143ca:	9c04      	ldr	r4, [sp, #16]
 80143cc:	b236      	sxth	r6, r6
 80143ce:	f06f 0001 	mvn.w	r0, #1
 80143d2:	fb08 4606 	mla	r6, r8, r6, r4
 80143d6:	9c01      	ldr	r4, [sp, #4]
 80143d8:	fb00 fa0e 	mul.w	sl, r0, lr
 80143dc:	9800      	ldr	r0, [sp, #0]
 80143de:	f816 8007 	ldrb.w	r8, [r6, r7]
 80143e2:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80143e6:	eb04 0b08 	add.w	fp, r4, r8
 80143ea:	f830 400a 	ldrh.w	r4, [r0, sl]
 80143ee:	9801      	ldr	r0, [sp, #4]
 80143f0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80143f4:	1227      	asrs	r7, r4, #8
 80143f6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80143fa:	fb16 f609 	smulbb	r6, r6, r9
 80143fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014402:	f810 8008 	ldrb.w	r8, [r0, r8]
 8014406:	fb1b fb09 	smulbb	fp, fp, r9
 801440a:	fb07 6705 	mla	r7, r7, r5, r6
 801440e:	10e6      	asrs	r6, r4, #3
 8014410:	00e4      	lsls	r4, r4, #3
 8014412:	9800      	ldr	r0, [sp, #0]
 8014414:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014418:	b2bf      	uxth	r7, r7
 801441a:	b2e4      	uxtb	r4, r4
 801441c:	fb06 b605 	mla	r6, r6, r5, fp
 8014420:	fb14 f405 	smulbb	r4, r4, r5
 8014424:	b2b6      	uxth	r6, r6
 8014426:	fb08 4809 	mla	r8, r8, r9, r4
 801442a:	1c7c      	adds	r4, r7, #1
 801442c:	f106 0b01 	add.w	fp, r6, #1
 8014430:	fa1f f888 	uxth.w	r8, r8
 8014434:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014438:	f108 0401 	add.w	r4, r8, #1
 801443c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014440:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014444:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8014448:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801444c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014450:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014454:	4327      	orrs	r7, r4
 8014456:	ea47 070b 	orr.w	r7, r7, fp
 801445a:	f820 700a 	strh.w	r7, [r0, sl]
 801445e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014460:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014464:	4401      	add	r1, r0
 8014466:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014468:	4402      	add	r2, r0
 801446a:	e759      	b.n	8014320 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801446c:	b007      	add	sp, #28
 801446e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014474 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014474:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014478:	b085      	sub	sp, #20
 801447a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801447e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014480:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014482:	9203      	str	r2, [sp, #12]
 8014484:	6870      	ldr	r0, [r6, #4]
 8014486:	686f      	ldr	r7, [r5, #4]
 8014488:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801448c:	3704      	adds	r7, #4
 801448e:	9101      	str	r1, [sp, #4]
 8014490:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014494:	fb00 2404 	mla	r4, r0, r4, r2
 8014498:	6832      	ldr	r2, [r6, #0]
 801449a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801449e:	682a      	ldr	r2, [r5, #0]
 80144a0:	9202      	str	r2, [sp, #8]
 80144a2:	9a01      	ldr	r2, [sp, #4]
 80144a4:	2a00      	cmp	r2, #0
 80144a6:	dc03      	bgt.n	80144b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80144a8:	9a03      	ldr	r2, [sp, #12]
 80144aa:	2a00      	cmp	r2, #0
 80144ac:	f340 80cc 	ble.w	8014648 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80144b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80144b2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80144b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80144ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80144bc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80144c0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80144c4:	2b00      	cmp	r3, #0
 80144c6:	dd0d      	ble.n	80144e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80144c8:	1406      	asrs	r6, r0, #16
 80144ca:	d405      	bmi.n	80144d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80144cc:	454e      	cmp	r6, r9
 80144ce:	da03      	bge.n	80144d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80144d0:	1416      	asrs	r6, r2, #16
 80144d2:	d401      	bmi.n	80144d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80144d4:	4546      	cmp	r6, r8
 80144d6:	db06      	blt.n	80144e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80144d8:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80144da:	4460      	add	r0, ip
 80144dc:	3b01      	subs	r3, #1
 80144de:	3402      	adds	r4, #2
 80144e0:	4432      	add	r2, r6
 80144e2:	e7ef      	b.n	80144c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80144e4:	d00f      	beq.n	8014506 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80144e6:	1e5e      	subs	r6, r3, #1
 80144e8:	fb0c 0e06 	mla	lr, ip, r6, r0
 80144ec:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80144f0:	d543      	bpl.n	801457a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80144f2:	4698      	mov	r8, r3
 80144f4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80144f8:	f1b8 0f00 	cmp.w	r8, #0
 80144fc:	dc71      	bgt.n	80145e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80144fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014502:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014506:	9b01      	ldr	r3, [sp, #4]
 8014508:	2b00      	cmp	r3, #0
 801450a:	f340 809d 	ble.w	8014648 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801450e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014512:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014514:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014518:	eeb0 6a62 	vmov.f32	s12, s5
 801451c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014520:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014524:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014528:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801452c:	eeb0 6a43 	vmov.f32	s12, s6
 8014530:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014534:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014538:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801453c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014540:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014544:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014548:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801454c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014550:	ee12 2a90 	vmov	r2, s5
 8014554:	eef0 2a47 	vmov.f32	s5, s14
 8014558:	fb92 fcf3 	sdiv	ip, r2, r3
 801455c:	ee13 2a10 	vmov	r2, s6
 8014560:	eeb0 3a67 	vmov.f32	s6, s15
 8014564:	fb92 f3f3 	sdiv	r3, r2, r3
 8014568:	9312      	str	r3, [sp, #72]	; 0x48
 801456a:	9b01      	ldr	r3, [sp, #4]
 801456c:	9a03      	ldr	r2, [sp, #12]
 801456e:	3b01      	subs	r3, #1
 8014570:	9301      	str	r3, [sp, #4]
 8014572:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014574:	bf08      	it	eq
 8014576:	4613      	moveq	r3, r2
 8014578:	e793      	b.n	80144a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801457a:	45ce      	cmp	lr, r9
 801457c:	dab9      	bge.n	80144f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801457e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014580:	fb01 2606 	mla	r6, r1, r6, r2
 8014584:	1436      	asrs	r6, r6, #16
 8014586:	d4b4      	bmi.n	80144f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014588:	4546      	cmp	r6, r8
 801458a:	dab2      	bge.n	80144f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801458c:	4698      	mov	r8, r3
 801458e:	46a2      	mov	sl, r4
 8014590:	f1b8 0f00 	cmp.w	r8, #0
 8014594:	ddb3      	ble.n	80144fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014596:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801459a:	1416      	asrs	r6, r2, #16
 801459c:	9902      	ldr	r1, [sp, #8]
 801459e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80145a2:	f108 38ff 	add.w	r8, r8, #4294967295
 80145a6:	4460      	add	r0, ip
 80145a8:	fb09 1606 	mla	r6, r9, r6, r1
 80145ac:	4928      	ldr	r1, [pc, #160]	; (8014650 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80145ae:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80145b2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80145b6:	eb07 0b0e 	add.w	fp, r7, lr
 80145ba:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80145be:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80145c2:	00f6      	lsls	r6, r6, #3
 80145c4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80145c8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80145ca:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80145ce:	440a      	add	r2, r1
 80145d0:	ea49 0606 	orr.w	r6, r9, r6
 80145d4:	f817 900e 	ldrb.w	r9, [r7, lr]
 80145d8:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80145dc:	f82a 6b02 	strh.w	r6, [sl], #2
 80145e0:	e7d6      	b.n	8014590 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80145e2:	ea5f 4920 	movs.w	r9, r0, asr #16
 80145e6:	d429      	bmi.n	801463c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80145e8:	68ae      	ldr	r6, [r5, #8]
 80145ea:	454e      	cmp	r6, r9
 80145ec:	dd26      	ble.n	801463c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80145ee:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80145f2:	d423      	bmi.n	801463c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80145f4:	68e9      	ldr	r1, [r5, #12]
 80145f6:	4559      	cmp	r1, fp
 80145f8:	dd20      	ble.n	801463c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80145fa:	fa0f fe86 	sxth.w	lr, r6
 80145fe:	9902      	ldr	r1, [sp, #8]
 8014600:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8014604:	f06f 0101 	mvn.w	r1, #1
 8014608:	f81e e009 	ldrb.w	lr, [lr, r9]
 801460c:	fb01 f908 	mul.w	r9, r1, r8
 8014610:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8014614:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014618:	eb07 060e 	add.w	r6, r7, lr
 801461c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014620:	7876      	ldrb	r6, [r6, #1]
 8014622:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8014626:	00f6      	lsls	r6, r6, #3
 8014628:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801462c:	ea4b 0606 	orr.w	r6, fp, r6
 8014630:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8014634:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8014638:	f82a 6009 	strh.w	r6, [sl, r9]
 801463c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801463e:	4460      	add	r0, ip
 8014640:	f108 38ff 	add.w	r8, r8, #4294967295
 8014644:	440a      	add	r2, r1
 8014646:	e757      	b.n	80144f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014648:	b005      	add	sp, #20
 801464a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801464e:	bf00      	nop
 8014650:	fffff800 	.word	0xfffff800

08014654 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014658:	b087      	sub	sp, #28
 801465a:	468b      	mov	fp, r1
 801465c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014660:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014662:	9204      	str	r2, [sp, #16]
 8014664:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014668:	6841      	ldr	r1, [r0, #4]
 801466a:	9205      	str	r2, [sp, #20]
 801466c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014670:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014674:	fb01 2404 	mla	r4, r1, r4, r2
 8014678:	6802      	ldr	r2, [r0, #0]
 801467a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801467e:	f8dc 2000 	ldr.w	r2, [ip]
 8014682:	9201      	str	r2, [sp, #4]
 8014684:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014688:	3204      	adds	r2, #4
 801468a:	9202      	str	r2, [sp, #8]
 801468c:	f1bb 0f00 	cmp.w	fp, #0
 8014690:	dc03      	bgt.n	801469a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8014692:	9a04      	ldr	r2, [sp, #16]
 8014694:	2a00      	cmp	r2, #0
 8014696:	f340 8138 	ble.w	801490a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801469a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801469c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80146a0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80146a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80146a6:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80146aa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80146ae:	2b00      	cmp	r3, #0
 80146b0:	dd0e      	ble.n	80146d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80146b2:	1402      	asrs	r2, r0, #16
 80146b4:	d405      	bmi.n	80146c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80146b6:	42ba      	cmp	r2, r7
 80146b8:	da03      	bge.n	80146c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80146ba:	140a      	asrs	r2, r1, #16
 80146bc:	d401      	bmi.n	80146c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80146be:	42b2      	cmp	r2, r6
 80146c0:	db07      	blt.n	80146d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80146c2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80146c4:	3b01      	subs	r3, #1
 80146c6:	3402      	adds	r4, #2
 80146c8:	4410      	add	r0, r2
 80146ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80146cc:	4411      	add	r1, r2
 80146ce:	e7ee      	b.n	80146ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80146d0:	d019      	beq.n	8014706 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80146d2:	1e5a      	subs	r2, r3, #1
 80146d4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80146d6:	fb05 0502 	mla	r5, r5, r2, r0
 80146da:	142d      	asrs	r5, r5, #16
 80146dc:	d409      	bmi.n	80146f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80146de:	42bd      	cmp	r5, r7
 80146e0:	da07      	bge.n	80146f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80146e2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80146e4:	fb05 1202 	mla	r2, r5, r2, r1
 80146e8:	1412      	asrs	r2, r2, #16
 80146ea:	d402      	bmi.n	80146f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80146ec:	42b2      	cmp	r2, r6
 80146ee:	f2c0 80ac 	blt.w	801484a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80146f2:	f04f 0e00 	mov.w	lr, #0
 80146f6:	eb03 020e 	add.w	r2, r3, lr
 80146fa:	2a00      	cmp	r2, #0
 80146fc:	dc3e      	bgt.n	801477c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80146fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014702:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014706:	f1bb 0f00 	cmp.w	fp, #0
 801470a:	f340 80fe 	ble.w	801490a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801470e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014712:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014714:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014718:	f1bb 0b01 	subs.w	fp, fp, #1
 801471c:	eeb0 6a62 	vmov.f32	s12, s5
 8014720:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014724:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014728:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801472c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014730:	eeb0 6a43 	vmov.f32	s12, s6
 8014734:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014738:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801473c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014740:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014744:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014748:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801474c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014750:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014754:	ee12 2a90 	vmov	r2, s5
 8014758:	eef0 2a47 	vmov.f32	s5, s14
 801475c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014760:	ee13 2a10 	vmov	r2, s6
 8014764:	9313      	str	r3, [sp, #76]	; 0x4c
 8014766:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014768:	eeb0 3a67 	vmov.f32	s6, s15
 801476c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014770:	9a04      	ldr	r2, [sp, #16]
 8014772:	9314      	str	r3, [sp, #80]	; 0x50
 8014774:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014776:	bf08      	it	eq
 8014778:	4613      	moveq	r3, r2
 801477a:	e787      	b.n	801468c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801477c:	1406      	asrs	r6, r0, #16
 801477e:	d45d      	bmi.n	801483c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014780:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8014784:	42b5      	cmp	r5, r6
 8014786:	dd59      	ble.n	801483c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014788:	140f      	asrs	r7, r1, #16
 801478a:	d457      	bmi.n	801483c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801478c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8014790:	42ba      	cmp	r2, r7
 8014792:	dd53      	ble.n	801483c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014794:	9a01      	ldr	r2, [sp, #4]
 8014796:	b22d      	sxth	r5, r5
 8014798:	fb07 2505 	mla	r5, r7, r5, r2
 801479c:	5daa      	ldrb	r2, [r5, r6]
 801479e:	9d02      	ldr	r5, [sp, #8]
 80147a0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80147a4:	0e2e      	lsrs	r6, r5, #24
 80147a6:	d049      	beq.n	801483c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80147a8:	f06f 0201 	mvn.w	r2, #1
 80147ac:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80147b0:	fb02 f20e 	mul.w	r2, r2, lr
 80147b4:	f834 8002 	ldrh.w	r8, [r4, r2]
 80147b8:	9203      	str	r2, [sp, #12]
 80147ba:	9a05      	ldr	r2, [sp, #20]
 80147bc:	ea4f 2728 	mov.w	r7, r8, asr #8
 80147c0:	4356      	muls	r6, r2
 80147c2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80147c6:	1c72      	adds	r2, r6, #1
 80147c8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80147cc:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80147d0:	b2ed      	uxtb	r5, r5
 80147d2:	1212      	asrs	r2, r2, #8
 80147d4:	fa1f f982 	uxth.w	r9, r2
 80147d8:	43d2      	mvns	r2, r2
 80147da:	fb16 f609 	smulbb	r6, r6, r9
 80147de:	b2d2      	uxtb	r2, r2
 80147e0:	fb15 f509 	smulbb	r5, r5, r9
 80147e4:	fb07 6702 	mla	r7, r7, r2, r6
 80147e8:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80147ec:	fb1a fa09 	smulbb	sl, sl, r9
 80147f0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80147f4:	b2bf      	uxth	r7, r7
 80147f6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80147fa:	fa5f f888 	uxtb.w	r8, r8
 80147fe:	fb06 a602 	mla	r6, r6, r2, sl
 8014802:	fb08 5502 	mla	r5, r8, r2, r5
 8014806:	1c7a      	adds	r2, r7, #1
 8014808:	b2b6      	uxth	r6, r6
 801480a:	b2ad      	uxth	r5, r5
 801480c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014810:	9a03      	ldr	r2, [sp, #12]
 8014812:	f105 0a01 	add.w	sl, r5, #1
 8014816:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801481a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801481e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014822:	ea47 070a 	orr.w	r7, r7, sl
 8014826:	f106 0a01 	add.w	sl, r6, #1
 801482a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801482e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014832:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014836:	ea47 070a 	orr.w	r7, r7, sl
 801483a:	52a7      	strh	r7, [r4, r2]
 801483c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801483e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014842:	4410      	add	r0, r2
 8014844:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014846:	4411      	add	r1, r2
 8014848:	e755      	b.n	80146f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801484a:	f04f 0800 	mov.w	r8, #0
 801484e:	eba3 0208 	sub.w	r2, r3, r8
 8014852:	2a00      	cmp	r2, #0
 8014854:	f77f af53 	ble.w	80146fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014858:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801485c:	140a      	asrs	r2, r1, #16
 801485e:	9f01      	ldr	r7, [sp, #4]
 8014860:	1405      	asrs	r5, r0, #16
 8014862:	fb06 7202 	mla	r2, r6, r2, r7
 8014866:	5d52      	ldrb	r2, [r2, r5]
 8014868:	9d02      	ldr	r5, [sp, #8]
 801486a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801486e:	0e2e      	lsrs	r6, r5, #24
 8014870:	d044      	beq.n	80148fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8014872:	9a05      	ldr	r2, [sp, #20]
 8014874:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014878:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801487c:	4356      	muls	r6, r2
 801487e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8014882:	1c72      	adds	r2, r6, #1
 8014884:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014888:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801488c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014890:	b2ed      	uxtb	r5, r5
 8014892:	1212      	asrs	r2, r2, #8
 8014894:	fa1f f982 	uxth.w	r9, r2
 8014898:	43d2      	mvns	r2, r2
 801489a:	fb16 f609 	smulbb	r6, r6, r9
 801489e:	b2d2      	uxtb	r2, r2
 80148a0:	fb15 f509 	smulbb	r5, r5, r9
 80148a4:	fb07 6702 	mla	r7, r7, r2, r6
 80148a8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80148ac:	fb1a fa09 	smulbb	sl, sl, r9
 80148b0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80148b4:	b2bf      	uxth	r7, r7
 80148b6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80148ba:	fa5f fe8e 	uxtb.w	lr, lr
 80148be:	fb06 a602 	mla	r6, r6, r2, sl
 80148c2:	fb0e 5502 	mla	r5, lr, r2, r5
 80148c6:	1c7a      	adds	r2, r7, #1
 80148c8:	b2b6      	uxth	r6, r6
 80148ca:	b2ad      	uxth	r5, r5
 80148cc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80148d0:	f105 0a01 	add.w	sl, r5, #1
 80148d4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80148d8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80148dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80148e0:	ea47 070a 	orr.w	r7, r7, sl
 80148e4:	f106 0a01 	add.w	sl, r6, #1
 80148e8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80148ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80148f0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80148f4:	ea47 070a 	orr.w	r7, r7, sl
 80148f8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80148fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80148fe:	f108 0801 	add.w	r8, r8, #1
 8014902:	4410      	add	r0, r2
 8014904:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014906:	4411      	add	r1, r2
 8014908:	e7a1      	b.n	801484e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801490a:	b007      	add	sp, #28
 801490c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014910 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014914:	b085      	sub	sp, #20
 8014916:	468b      	mov	fp, r1
 8014918:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801491c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801491e:	9203      	str	r2, [sp, #12]
 8014920:	6841      	ldr	r1, [r0, #4]
 8014922:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8014926:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801492a:	fb01 2404 	mla	r4, r1, r4, r2
 801492e:	6802      	ldr	r2, [r0, #0]
 8014930:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014934:	f8de 2000 	ldr.w	r2, [lr]
 8014938:	9200      	str	r2, [sp, #0]
 801493a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801493e:	3204      	adds	r2, #4
 8014940:	9201      	str	r2, [sp, #4]
 8014942:	f1bb 0f00 	cmp.w	fp, #0
 8014946:	dc03      	bgt.n	8014950 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014948:	9a03      	ldr	r2, [sp, #12]
 801494a:	2a00      	cmp	r2, #0
 801494c:	f340 8153 	ble.w	8014bf6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014950:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014952:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014956:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801495a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801495c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014960:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014964:	2b00      	cmp	r3, #0
 8014966:	dd0e      	ble.n	8014986 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014968:	1408      	asrs	r0, r1, #16
 801496a:	d405      	bmi.n	8014978 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801496c:	42b8      	cmp	r0, r7
 801496e:	da03      	bge.n	8014978 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014970:	1410      	asrs	r0, r2, #16
 8014972:	d401      	bmi.n	8014978 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014974:	42b0      	cmp	r0, r6
 8014976:	db07      	blt.n	8014988 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014978:	9811      	ldr	r0, [sp, #68]	; 0x44
 801497a:	3b01      	subs	r3, #1
 801497c:	3402      	adds	r4, #2
 801497e:	4401      	add	r1, r0
 8014980:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014982:	4402      	add	r2, r0
 8014984:	e7ee      	b.n	8014964 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014986:	d017      	beq.n	80149b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014988:	1e58      	subs	r0, r3, #1
 801498a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801498c:	fb05 1500 	mla	r5, r5, r0, r1
 8014990:	142d      	asrs	r5, r5, #16
 8014992:	d409      	bmi.n	80149a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014994:	42bd      	cmp	r5, r7
 8014996:	da07      	bge.n	80149a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014998:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801499a:	fb05 2000 	mla	r0, r5, r0, r2
 801499e:	1400      	asrs	r0, r0, #16
 80149a0:	d402      	bmi.n	80149a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80149a2:	42b0      	cmp	r0, r6
 80149a4:	f2c0 80bc 	blt.w	8014b20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80149a8:	2600      	movs	r6, #0
 80149aa:	1998      	adds	r0, r3, r6
 80149ac:	2800      	cmp	r0, #0
 80149ae:	dc3e      	bgt.n	8014a2e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80149b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80149b4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80149b8:	f1bb 0f00 	cmp.w	fp, #0
 80149bc:	f340 811b 	ble.w	8014bf6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80149c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80149c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80149c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80149ca:	f1bb 0b01 	subs.w	fp, fp, #1
 80149ce:	eeb0 6a62 	vmov.f32	s12, s5
 80149d2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80149d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80149da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80149de:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80149e2:	eeb0 6a43 	vmov.f32	s12, s6
 80149e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80149ea:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80149ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80149f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80149f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80149fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80149fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014a02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014a06:	ee12 2a90 	vmov	r2, s5
 8014a0a:	eef0 2a47 	vmov.f32	s5, s14
 8014a0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a12:	ee13 2a10 	vmov	r2, s6
 8014a16:	9311      	str	r3, [sp, #68]	; 0x44
 8014a18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a1a:	eeb0 3a67 	vmov.f32	s6, s15
 8014a1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a22:	9a03      	ldr	r2, [sp, #12]
 8014a24:	9312      	str	r3, [sp, #72]	; 0x48
 8014a26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a28:	bf08      	it	eq
 8014a2a:	4613      	moveq	r3, r2
 8014a2c:	e789      	b.n	8014942 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014a2e:	140f      	asrs	r7, r1, #16
 8014a30:	d45e      	bmi.n	8014af0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014a32:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014a36:	42bd      	cmp	r5, r7
 8014a38:	dd5a      	ble.n	8014af0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014a3a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014a3e:	d457      	bmi.n	8014af0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014a40:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014a44:	4560      	cmp	r0, ip
 8014a46:	dd53      	ble.n	8014af0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014a48:	9800      	ldr	r0, [sp, #0]
 8014a4a:	b22d      	sxth	r5, r5
 8014a4c:	fb0c 0505 	mla	r5, ip, r5, r0
 8014a50:	5de8      	ldrb	r0, [r5, r7]
 8014a52:	9d01      	ldr	r5, [sp, #4]
 8014a54:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8014a58:	0e07      	lsrs	r7, r0, #24
 8014a5a:	2fff      	cmp	r7, #255	; 0xff
 8014a5c:	d04e      	beq.n	8014afc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8014a5e:	b2fd      	uxtb	r5, r7
 8014a60:	2f00      	cmp	r7, #0
 8014a62:	d045      	beq.n	8014af0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014a64:	f06f 0701 	mvn.w	r7, #1
 8014a68:	fa1f f985 	uxth.w	r9, r5
 8014a6c:	43ed      	mvns	r5, r5
 8014a6e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014a72:	4377      	muls	r7, r6
 8014a74:	fb1a fa09 	smulbb	sl, sl, r9
 8014a78:	b2ed      	uxtb	r5, r5
 8014a7a:	f834 8007 	ldrh.w	r8, [r4, r7]
 8014a7e:	9702      	str	r7, [sp, #8]
 8014a80:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014a84:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014a88:	fb17 f709 	smulbb	r7, r7, r9
 8014a8c:	b2c0      	uxtb	r0, r0
 8014a8e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014a92:	fb10 f009 	smulbb	r0, r0, r9
 8014a96:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014a9a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8014a9e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014aa2:	fa1f fc8c 	uxth.w	ip, ip
 8014aa6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014aaa:	fa5f f888 	uxtb.w	r8, r8
 8014aae:	fb07 a705 	mla	r7, r7, r5, sl
 8014ab2:	fb08 0005 	mla	r0, r8, r5, r0
 8014ab6:	f10c 0501 	add.w	r5, ip, #1
 8014aba:	b2bf      	uxth	r7, r7
 8014abc:	b280      	uxth	r0, r0
 8014abe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014ac2:	f100 0a01 	add.w	sl, r0, #1
 8014ac6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014aca:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014ace:	9802      	ldr	r0, [sp, #8]
 8014ad0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014ad4:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014ad8:	f107 0a01 	add.w	sl, r7, #1
 8014adc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014ae0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014ae4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014ae8:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014aec:	f824 c000 	strh.w	ip, [r4, r0]
 8014af0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014af2:	3e01      	subs	r6, #1
 8014af4:	4401      	add	r1, r0
 8014af6:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014af8:	4402      	add	r2, r0
 8014afa:	e756      	b.n	80149aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8014afc:	f06f 0501 	mvn.w	r5, #1
 8014b00:	fb05 f706 	mul.w	r7, r5, r6
 8014b04:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8014b08:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014b0c:	0945      	lsrs	r5, r0, #5
 8014b0e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014b12:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014b16:	ea4c 0505 	orr.w	r5, ip, r5
 8014b1a:	4305      	orrs	r5, r0
 8014b1c:	53e5      	strh	r5, [r4, r7]
 8014b1e:	e7e7      	b.n	8014af0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014b20:	f04f 0800 	mov.w	r8, #0
 8014b24:	eba3 0008 	sub.w	r0, r3, r8
 8014b28:	2800      	cmp	r0, #0
 8014b2a:	f77f af41 	ble.w	80149b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014b2e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014b32:	1410      	asrs	r0, r2, #16
 8014b34:	9f00      	ldr	r7, [sp, #0]
 8014b36:	140d      	asrs	r5, r1, #16
 8014b38:	fb06 7000 	mla	r0, r6, r0, r7
 8014b3c:	5d40      	ldrb	r0, [r0, r5]
 8014b3e:	9d01      	ldr	r5, [sp, #4]
 8014b40:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8014b44:	0e06      	lsrs	r6, r0, #24
 8014b46:	2eff      	cmp	r6, #255	; 0xff
 8014b48:	d048      	beq.n	8014bdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8014b4a:	b2f5      	uxtb	r5, r6
 8014b4c:	2e00      	cmp	r6, #0
 8014b4e:	d03e      	beq.n	8014bce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8014b50:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8014b54:	fa1f f985 	uxth.w	r9, r5
 8014b58:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8014b5c:	43ed      	mvns	r5, r5
 8014b5e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014b62:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014b66:	fb16 f609 	smulbb	r6, r6, r9
 8014b6a:	b2ed      	uxtb	r5, r5
 8014b6c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014b70:	b2c0      	uxtb	r0, r0
 8014b72:	fb1a fa09 	smulbb	sl, sl, r9
 8014b76:	fb07 6705 	mla	r7, r7, r5, r6
 8014b7a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014b7e:	fb10 f009 	smulbb	r0, r0, r9
 8014b82:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014b86:	b2bf      	uxth	r7, r7
 8014b88:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014b8c:	fa5f fc8c 	uxtb.w	ip, ip
 8014b90:	fb06 a605 	mla	r6, r6, r5, sl
 8014b94:	fb0c 0005 	mla	r0, ip, r5, r0
 8014b98:	1c7d      	adds	r5, r7, #1
 8014b9a:	b2b6      	uxth	r6, r6
 8014b9c:	b280      	uxth	r0, r0
 8014b9e:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8014ba2:	f100 0a01 	add.w	sl, r0, #1
 8014ba6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014baa:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014bae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014bb2:	ea47 070a 	orr.w	r7, r7, sl
 8014bb6:	f106 0a01 	add.w	sl, r6, #1
 8014bba:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014bbe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014bc2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014bc6:	ea47 070a 	orr.w	r7, r7, sl
 8014bca:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014bce:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014bd0:	f108 0801 	add.w	r8, r8, #1
 8014bd4:	4401      	add	r1, r0
 8014bd6:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014bd8:	4402      	add	r2, r0
 8014bda:	e7a3      	b.n	8014b24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014bdc:	4d07      	ldr	r5, [pc, #28]	; (8014bfc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8014bde:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8014be2:	0945      	lsrs	r5, r0, #5
 8014be4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014be8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014bec:	4335      	orrs	r5, r6
 8014bee:	4305      	orrs	r5, r0
 8014bf0:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8014bf4:	e7eb      	b.n	8014bce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8014bf6:	b005      	add	sp, #20
 8014bf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014bfc:	fffff800 	.word	0xfffff800

08014c00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c04:	b087      	sub	sp, #28
 8014c06:	468b      	mov	fp, r1
 8014c08:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014c0c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014c0e:	9204      	str	r2, [sp, #16]
 8014c10:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014c14:	6861      	ldr	r1, [r4, #4]
 8014c16:	9205      	str	r2, [sp, #20]
 8014c18:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014c1c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014c20:	fb01 2000 	mla	r0, r1, r0, r2
 8014c24:	6822      	ldr	r2, [r4, #0]
 8014c26:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014c2a:	f8de 2000 	ldr.w	r2, [lr]
 8014c2e:	9201      	str	r2, [sp, #4]
 8014c30:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014c34:	9202      	str	r2, [sp, #8]
 8014c36:	f1bb 0f00 	cmp.w	fp, #0
 8014c3a:	dc03      	bgt.n	8014c44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8014c3c:	9a04      	ldr	r2, [sp, #16]
 8014c3e:	2a00      	cmp	r2, #0
 8014c40:	f340 8142 	ble.w	8014ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014c44:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014c46:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014c4a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014c4e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014c50:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014c54:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014c58:	2b00      	cmp	r3, #0
 8014c5a:	dd0e      	ble.n	8014c7a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014c5c:	140c      	asrs	r4, r1, #16
 8014c5e:	d405      	bmi.n	8014c6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014c60:	42bc      	cmp	r4, r7
 8014c62:	da03      	bge.n	8014c6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014c64:	1414      	asrs	r4, r2, #16
 8014c66:	d401      	bmi.n	8014c6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014c68:	42b4      	cmp	r4, r6
 8014c6a:	db07      	blt.n	8014c7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014c6c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014c6e:	3b01      	subs	r3, #1
 8014c70:	3002      	adds	r0, #2
 8014c72:	4421      	add	r1, r4
 8014c74:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014c76:	4422      	add	r2, r4
 8014c78:	e7ee      	b.n	8014c58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8014c7a:	d019      	beq.n	8014cb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014c7c:	1e5c      	subs	r4, r3, #1
 8014c7e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014c80:	fb05 1504 	mla	r5, r5, r4, r1
 8014c84:	142d      	asrs	r5, r5, #16
 8014c86:	d409      	bmi.n	8014c9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014c88:	42bd      	cmp	r5, r7
 8014c8a:	da07      	bge.n	8014c9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014c8c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014c8e:	fb05 2404 	mla	r4, r5, r4, r2
 8014c92:	1424      	asrs	r4, r4, #16
 8014c94:	d402      	bmi.n	8014c9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014c96:	42b4      	cmp	r4, r6
 8014c98:	f2c0 80b1 	blt.w	8014dfe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8014c9c:	f04f 0800 	mov.w	r8, #0
 8014ca0:	eb03 0408 	add.w	r4, r3, r8
 8014ca4:	2c00      	cmp	r4, #0
 8014ca6:	dc3e      	bgt.n	8014d26 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8014ca8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014cac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014cb0:	f1bb 0f00 	cmp.w	fp, #0
 8014cb4:	f340 8108 	ble.w	8014ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014cb8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014cbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014cbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014cc2:	f1bb 0b01 	subs.w	fp, fp, #1
 8014cc6:	eeb0 6a62 	vmov.f32	s12, s5
 8014cca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014cce:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014cd2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014cd6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014cda:	eeb0 6a43 	vmov.f32	s12, s6
 8014cde:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ce2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014ce6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014cea:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014cee:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014cf2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014cf6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014cfa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014cfe:	ee12 2a90 	vmov	r2, s5
 8014d02:	eef0 2a47 	vmov.f32	s5, s14
 8014d06:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d0a:	ee13 2a10 	vmov	r2, s6
 8014d0e:	9313      	str	r3, [sp, #76]	; 0x4c
 8014d10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d12:	eeb0 3a67 	vmov.f32	s6, s15
 8014d16:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d1a:	9a04      	ldr	r2, [sp, #16]
 8014d1c:	9314      	str	r3, [sp, #80]	; 0x50
 8014d1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d20:	bf08      	it	eq
 8014d22:	4613      	moveq	r3, r2
 8014d24:	e787      	b.n	8014c36 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8014d26:	140e      	asrs	r6, r1, #16
 8014d28:	d462      	bmi.n	8014df0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014d2a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014d2e:	42b5      	cmp	r5, r6
 8014d30:	dd5e      	ble.n	8014df0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014d32:	1417      	asrs	r7, r2, #16
 8014d34:	d45c      	bmi.n	8014df0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014d36:	f8de 400c 	ldr.w	r4, [lr, #12]
 8014d3a:	42bc      	cmp	r4, r7
 8014d3c:	dd58      	ble.n	8014df0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014d3e:	b22d      	sxth	r5, r5
 8014d40:	9c02      	ldr	r4, [sp, #8]
 8014d42:	fb07 6505 	mla	r5, r7, r5, r6
 8014d46:	5d66      	ldrb	r6, [r4, r5]
 8014d48:	2e00      	cmp	r6, #0
 8014d4a:	d051      	beq.n	8014df0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014d4c:	9c01      	ldr	r4, [sp, #4]
 8014d4e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8014d52:	f06f 0401 	mvn.w	r4, #1
 8014d56:	fb04 f408 	mul.w	r4, r4, r8
 8014d5a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8014d5e:	5b05      	ldrh	r5, [r0, r4]
 8014d60:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014d64:	9403      	str	r4, [sp, #12]
 8014d66:	9c05      	ldr	r4, [sp, #20]
 8014d68:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014d6c:	4366      	muls	r6, r4
 8014d6e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014d72:	1c74      	adds	r4, r6, #1
 8014d74:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014d78:	122e      	asrs	r6, r5, #8
 8014d7a:	1224      	asrs	r4, r4, #8
 8014d7c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014d80:	00ed      	lsls	r5, r5, #3
 8014d82:	b2a7      	uxth	r7, r4
 8014d84:	43e4      	mvns	r4, r4
 8014d86:	b2ed      	uxtb	r5, r5
 8014d88:	b2e4      	uxtb	r4, r4
 8014d8a:	fb16 f604 	smulbb	r6, r6, r4
 8014d8e:	fb15 f504 	smulbb	r5, r5, r4
 8014d92:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014d96:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8014d9a:	fb1a fa04 	smulbb	sl, sl, r4
 8014d9e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014da2:	fa1f fc8c 	uxth.w	ip, ip
 8014da6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014daa:	fa5f f989 	uxtb.w	r9, r9
 8014dae:	fb06 a607 	mla	r6, r6, r7, sl
 8014db2:	f10c 0401 	add.w	r4, ip, #1
 8014db6:	fb09 5507 	mla	r5, r9, r7, r5
 8014dba:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014dbe:	9c03      	ldr	r4, [sp, #12]
 8014dc0:	b2ad      	uxth	r5, r5
 8014dc2:	b2b6      	uxth	r6, r6
 8014dc4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014dc8:	f105 0a01 	add.w	sl, r5, #1
 8014dcc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014dd0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014dd4:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014dd8:	f106 0a01 	add.w	sl, r6, #1
 8014ddc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014de0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014de4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014de8:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014dec:	f820 c004 	strh.w	ip, [r0, r4]
 8014df0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014df2:	f108 38ff 	add.w	r8, r8, #4294967295
 8014df6:	4421      	add	r1, r4
 8014df8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014dfa:	4422      	add	r2, r4
 8014dfc:	e750      	b.n	8014ca0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014dfe:	f04f 0900 	mov.w	r9, #0
 8014e02:	eba3 0409 	sub.w	r4, r3, r9
 8014e06:	2c00      	cmp	r4, #0
 8014e08:	f77f af4e 	ble.w	8014ca8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014e0c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014e10:	140d      	asrs	r5, r1, #16
 8014e12:	1414      	asrs	r4, r2, #16
 8014e14:	fb06 5404 	mla	r4, r6, r4, r5
 8014e18:	9d02      	ldr	r5, [sp, #8]
 8014e1a:	5d2e      	ldrb	r6, [r5, r4]
 8014e1c:	2e00      	cmp	r6, #0
 8014e1e:	d04c      	beq.n	8014eba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8014e20:	9d01      	ldr	r5, [sp, #4]
 8014e22:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8014e26:	9c05      	ldr	r4, [sp, #20]
 8014e28:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014e2c:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014e30:	4366      	muls	r6, r4
 8014e32:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014e36:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014e3a:	1c74      	adds	r4, r6, #1
 8014e3c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014e40:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014e44:	122e      	asrs	r6, r5, #8
 8014e46:	1224      	asrs	r4, r4, #8
 8014e48:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014e4c:	00ed      	lsls	r5, r5, #3
 8014e4e:	b2a7      	uxth	r7, r4
 8014e50:	43e4      	mvns	r4, r4
 8014e52:	b2ed      	uxtb	r5, r5
 8014e54:	b2e4      	uxtb	r4, r4
 8014e56:	fb16 f604 	smulbb	r6, r6, r4
 8014e5a:	fb15 f504 	smulbb	r5, r5, r4
 8014e5e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014e62:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8014e66:	fb1a fa04 	smulbb	sl, sl, r4
 8014e6a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014e6e:	fa1f fc8c 	uxth.w	ip, ip
 8014e72:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014e76:	fa5f f888 	uxtb.w	r8, r8
 8014e7a:	fb06 a607 	mla	r6, r6, r7, sl
 8014e7e:	f10c 0401 	add.w	r4, ip, #1
 8014e82:	fb08 5507 	mla	r5, r8, r7, r5
 8014e86:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014e8a:	b2ad      	uxth	r5, r5
 8014e8c:	b2b6      	uxth	r6, r6
 8014e8e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014e92:	f105 0a01 	add.w	sl, r5, #1
 8014e96:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014e9a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014e9e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014ea2:	f106 0a01 	add.w	sl, r6, #1
 8014ea6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014eaa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014eae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014eb2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014eb6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014eba:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014ebc:	f109 0901 	add.w	r9, r9, #1
 8014ec0:	4421      	add	r1, r4
 8014ec2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014ec4:	4422      	add	r2, r4
 8014ec6:	e79c      	b.n	8014e02 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8014ec8:	b007      	add	sp, #28
 8014eca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014ece <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014ece:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ed2:	b085      	sub	sp, #20
 8014ed4:	468b      	mov	fp, r1
 8014ed6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014eda:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014edc:	9203      	str	r2, [sp, #12]
 8014ede:	6861      	ldr	r1, [r4, #4]
 8014ee0:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8014ee4:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8014ee8:	fb01 2000 	mla	r0, r1, r0, r2
 8014eec:	6822      	ldr	r2, [r4, #0]
 8014eee:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014ef2:	f8d8 2000 	ldr.w	r2, [r8]
 8014ef6:	9200      	str	r2, [sp, #0]
 8014ef8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8014efc:	9201      	str	r2, [sp, #4]
 8014efe:	f1bb 0f00 	cmp.w	fp, #0
 8014f02:	dc03      	bgt.n	8014f0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014f04:	9a03      	ldr	r2, [sp, #12]
 8014f06:	2a00      	cmp	r2, #0
 8014f08:	f340 8146 	ble.w	8015198 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014f0c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014f0e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014f12:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014f16:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014f18:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014f1c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014f20:	2b00      	cmp	r3, #0
 8014f22:	dd0e      	ble.n	8014f42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014f24:	140c      	asrs	r4, r1, #16
 8014f26:	d405      	bmi.n	8014f34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014f28:	42bc      	cmp	r4, r7
 8014f2a:	da03      	bge.n	8014f34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014f2c:	1414      	asrs	r4, r2, #16
 8014f2e:	d401      	bmi.n	8014f34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014f30:	42b4      	cmp	r4, r6
 8014f32:	db07      	blt.n	8014f44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014f34:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014f36:	3b01      	subs	r3, #1
 8014f38:	3002      	adds	r0, #2
 8014f3a:	4421      	add	r1, r4
 8014f3c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014f3e:	4422      	add	r2, r4
 8014f40:	e7ee      	b.n	8014f20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014f42:	d017      	beq.n	8014f74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014f44:	1e5c      	subs	r4, r3, #1
 8014f46:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014f48:	fb05 1504 	mla	r5, r5, r4, r1
 8014f4c:	142d      	asrs	r5, r5, #16
 8014f4e:	d409      	bmi.n	8014f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014f50:	42bd      	cmp	r5, r7
 8014f52:	da07      	bge.n	8014f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014f54:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014f56:	fb05 2404 	mla	r4, r5, r4, r2
 8014f5a:	1424      	asrs	r4, r4, #16
 8014f5c:	d402      	bmi.n	8014f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014f5e:	42b4      	cmp	r4, r6
 8014f60:	f2c0 80b3 	blt.w	80150ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8014f64:	2600      	movs	r6, #0
 8014f66:	199c      	adds	r4, r3, r6
 8014f68:	2c00      	cmp	r4, #0
 8014f6a:	dc3e      	bgt.n	8014fea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014f6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014f70:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014f74:	f1bb 0f00 	cmp.w	fp, #0
 8014f78:	f340 810e 	ble.w	8015198 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014f7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014f80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014f86:	f1bb 0b01 	subs.w	fp, fp, #1
 8014f8a:	eeb0 6a62 	vmov.f32	s12, s5
 8014f8e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014f92:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014f96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f9a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014f9e:	eeb0 6a43 	vmov.f32	s12, s6
 8014fa2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014fa6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014faa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014fae:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014fb2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014fb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014fba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014fbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014fc2:	ee12 2a90 	vmov	r2, s5
 8014fc6:	eef0 2a47 	vmov.f32	s5, s14
 8014fca:	fb92 f3f3 	sdiv	r3, r2, r3
 8014fce:	ee13 2a10 	vmov	r2, s6
 8014fd2:	9311      	str	r3, [sp, #68]	; 0x44
 8014fd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014fd6:	eeb0 3a67 	vmov.f32	s6, s15
 8014fda:	fb92 f3f3 	sdiv	r3, r2, r3
 8014fde:	9a03      	ldr	r2, [sp, #12]
 8014fe0:	9312      	str	r3, [sp, #72]	; 0x48
 8014fe2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014fe4:	bf08      	it	eq
 8014fe6:	4613      	moveq	r3, r2
 8014fe8:	e789      	b.n	8014efe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014fea:	140f      	asrs	r7, r1, #16
 8014fec:	d45f      	bmi.n	80150ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014fee:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014ff2:	42bd      	cmp	r5, r7
 8014ff4:	dd5b      	ble.n	80150ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014ff6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014ffa:	d458      	bmi.n	80150ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014ffc:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8015000:	4564      	cmp	r4, ip
 8015002:	dd54      	ble.n	80150ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8015004:	b22d      	sxth	r5, r5
 8015006:	9c01      	ldr	r4, [sp, #4]
 8015008:	fb0c 7505 	mla	r5, ip, r5, r7
 801500c:	5d64      	ldrb	r4, [r4, r5]
 801500e:	2cff      	cmp	r4, #255	; 0xff
 8015010:	d053      	beq.n	80150ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8015012:	2c00      	cmp	r4, #0
 8015014:	d04b      	beq.n	80150ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8015016:	9f00      	ldr	r7, [sp, #0]
 8015018:	fa1f fc84 	uxth.w	ip, r4
 801501c:	43e4      	mvns	r4, r4
 801501e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8015022:	f06f 0501 	mvn.w	r5, #1
 8015026:	b2e4      	uxtb	r4, r4
 8015028:	4375      	muls	r5, r6
 801502a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801502e:	9502      	str	r5, [sp, #8]
 8015030:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015034:	5b45      	ldrh	r5, [r0, r5]
 8015036:	122f      	asrs	r7, r5, #8
 8015038:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801503c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015040:	00ed      	lsls	r5, r5, #3
 8015042:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015046:	fb17 f704 	smulbb	r7, r7, r4
 801504a:	b2ed      	uxtb	r5, r5
 801504c:	fb1a fa04 	smulbb	sl, sl, r4
 8015050:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015054:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8015058:	fb15 f504 	smulbb	r5, r5, r4
 801505c:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015060:	fa1f fe8e 	uxth.w	lr, lr
 8015064:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015068:	fa5f f989 	uxtb.w	r9, r9
 801506c:	fb07 a70c 	mla	r7, r7, ip, sl
 8015070:	f10e 0401 	add.w	r4, lr, #1
 8015074:	fb09 550c 	mla	r5, r9, ip, r5
 8015078:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801507c:	9c02      	ldr	r4, [sp, #8]
 801507e:	b2ad      	uxth	r5, r5
 8015080:	b2bf      	uxth	r7, r7
 8015082:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015086:	f105 0a01 	add.w	sl, r5, #1
 801508a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801508e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015092:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015096:	f107 0a01 	add.w	sl, r7, #1
 801509a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801509e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80150a2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80150a6:	ea4e 0e0a 	orr.w	lr, lr, sl
 80150aa:	f820 e004 	strh.w	lr, [r0, r4]
 80150ae:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80150b0:	3e01      	subs	r6, #1
 80150b2:	4421      	add	r1, r4
 80150b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80150b6:	4422      	add	r2, r4
 80150b8:	e755      	b.n	8014f66 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80150ba:	9c00      	ldr	r4, [sp, #0]
 80150bc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80150c0:	f06f 0401 	mvn.w	r4, #1
 80150c4:	4374      	muls	r4, r6
 80150c6:	5305      	strh	r5, [r0, r4]
 80150c8:	e7f1      	b.n	80150ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80150ca:	f04f 0900 	mov.w	r9, #0
 80150ce:	eba3 0409 	sub.w	r4, r3, r9
 80150d2:	2c00      	cmp	r4, #0
 80150d4:	f77f af4a 	ble.w	8014f6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80150d8:	1414      	asrs	r4, r2, #16
 80150da:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80150de:	140d      	asrs	r5, r1, #16
 80150e0:	fb06 5504 	mla	r5, r6, r4, r5
 80150e4:	9c01      	ldr	r4, [sp, #4]
 80150e6:	5d64      	ldrb	r4, [r4, r5]
 80150e8:	2cff      	cmp	r4, #255	; 0xff
 80150ea:	d04f      	beq.n	801518c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 80150ec:	2c00      	cmp	r4, #0
 80150ee:	d046      	beq.n	801517e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80150f0:	9e00      	ldr	r6, [sp, #0]
 80150f2:	b2a7      	uxth	r7, r4
 80150f4:	43e4      	mvns	r4, r4
 80150f6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80150fa:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80150fe:	b2e4      	uxtb	r4, r4
 8015100:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015104:	122e      	asrs	r6, r5, #8
 8015106:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801510a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801510e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015112:	00ed      	lsls	r5, r5, #3
 8015114:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015118:	fb16 f604 	smulbb	r6, r6, r4
 801511c:	b2ed      	uxtb	r5, r5
 801511e:	fb1a fa04 	smulbb	sl, sl, r4
 8015122:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015126:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801512a:	fb15 f504 	smulbb	r5, r5, r4
 801512e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015132:	fa1f fc8c 	uxth.w	ip, ip
 8015136:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801513a:	fa5f fe8e 	uxtb.w	lr, lr
 801513e:	fb06 a607 	mla	r6, r6, r7, sl
 8015142:	f10c 0401 	add.w	r4, ip, #1
 8015146:	fb0e 5507 	mla	r5, lr, r7, r5
 801514a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801514e:	b2ad      	uxth	r5, r5
 8015150:	b2b6      	uxth	r6, r6
 8015152:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015156:	f105 0a01 	add.w	sl, r5, #1
 801515a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801515e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015162:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015166:	f106 0a01 	add.w	sl, r6, #1
 801516a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801516e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015172:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015176:	ea4c 0c0a 	orr.w	ip, ip, sl
 801517a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801517e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015180:	f109 0901 	add.w	r9, r9, #1
 8015184:	4421      	add	r1, r4
 8015186:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015188:	4422      	add	r2, r4
 801518a:	e7a0      	b.n	80150ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801518c:	9c00      	ldr	r4, [sp, #0]
 801518e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8015192:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015196:	e7f2      	b.n	801517e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8015198:	b005      	add	sp, #20
 801519a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801519e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801519e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151a2:	b085      	sub	sp, #20
 80151a4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80151a6:	9203      	str	r2, [sp, #12]
 80151a8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80151ac:	9100      	str	r1, [sp, #0]
 80151ae:	9201      	str	r2, [sp, #4]
 80151b0:	6841      	ldr	r1, [r0, #4]
 80151b2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80151b6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80151ba:	fb01 2404 	mla	r4, r1, r4, r2
 80151be:	6802      	ldr	r2, [r0, #0]
 80151c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80151c4:	f8de 2000 	ldr.w	r2, [lr]
 80151c8:	9202      	str	r2, [sp, #8]
 80151ca:	9a01      	ldr	r2, [sp, #4]
 80151cc:	43d6      	mvns	r6, r2
 80151ce:	b2f6      	uxtb	r6, r6
 80151d0:	9a00      	ldr	r2, [sp, #0]
 80151d2:	2a00      	cmp	r2, #0
 80151d4:	dc03      	bgt.n	80151de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80151d6:	9a03      	ldr	r2, [sp, #12]
 80151d8:	2a00      	cmp	r2, #0
 80151da:	f340 8124 	ble.w	8015426 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80151de:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80151e0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80151e4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80151e8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80151ea:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80151ee:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80151f2:	2b00      	cmp	r3, #0
 80151f4:	dd0e      	ble.n	8015214 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80151f6:	1408      	asrs	r0, r1, #16
 80151f8:	d405      	bmi.n	8015206 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80151fa:	4560      	cmp	r0, ip
 80151fc:	da03      	bge.n	8015206 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80151fe:	1410      	asrs	r0, r2, #16
 8015200:	d401      	bmi.n	8015206 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015202:	42b8      	cmp	r0, r7
 8015204:	db07      	blt.n	8015216 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015206:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015208:	3b01      	subs	r3, #1
 801520a:	3402      	adds	r4, #2
 801520c:	4401      	add	r1, r0
 801520e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015210:	4402      	add	r2, r0
 8015212:	e7ee      	b.n	80151f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015214:	d06e      	beq.n	80152f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015216:	1e58      	subs	r0, r3, #1
 8015218:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801521a:	fb05 1500 	mla	r5, r5, r0, r1
 801521e:	142d      	asrs	r5, r5, #16
 8015220:	d45c      	bmi.n	80152dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015222:	4565      	cmp	r5, ip
 8015224:	da5a      	bge.n	80152dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015226:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015228:	fb05 2000 	mla	r0, r5, r0, r2
 801522c:	1400      	asrs	r0, r0, #16
 801522e:	d455      	bmi.n	80152dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015230:	42b8      	cmp	r0, r7
 8015232:	da53      	bge.n	80152dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015234:	4699      	mov	r9, r3
 8015236:	46a2      	mov	sl, r4
 8015238:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801523c:	f1b9 0f00 	cmp.w	r9, #0
 8015240:	dd54      	ble.n	80152ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015242:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015246:	140d      	asrs	r5, r1, #16
 8015248:	1410      	asrs	r0, r2, #16
 801524a:	f109 39ff 	add.w	r9, r9, #4294967295
 801524e:	fb07 5000 	mla	r0, r7, r0, r5
 8015252:	9d02      	ldr	r5, [sp, #8]
 8015254:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015258:	f8ba 5000 	ldrh.w	r5, [sl]
 801525c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015260:	122f      	asrs	r7, r5, #8
 8015262:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015266:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801526a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801526e:	00ed      	lsls	r5, r5, #3
 8015270:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015274:	fb17 f706 	smulbb	r7, r7, r6
 8015278:	b2ed      	uxtb	r5, r5
 801527a:	fb18 f806 	smulbb	r8, r8, r6
 801527e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015282:	10c7      	asrs	r7, r0, #3
 8015284:	fb15 f506 	smulbb	r5, r5, r6
 8015288:	00c0      	lsls	r0, r0, #3
 801528a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801528e:	fa1f fc8c 	uxth.w	ip, ip
 8015292:	b2c0      	uxtb	r0, r0
 8015294:	fb07 870b 	mla	r7, r7, fp, r8
 8015298:	fb00 500b 	mla	r0, r0, fp, r5
 801529c:	f10c 0501 	add.w	r5, ip, #1
 80152a0:	b2bf      	uxth	r7, r7
 80152a2:	b280      	uxth	r0, r0
 80152a4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80152a8:	f107 0801 	add.w	r8, r7, #1
 80152ac:	1c45      	adds	r5, r0, #1
 80152ae:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80152b2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80152b6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80152ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 80152bc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80152c0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80152c4:	4401      	add	r1, r0
 80152c6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80152ca:	9812      	ldr	r0, [sp, #72]	; 0x48
 80152cc:	ea4c 0c05 	orr.w	ip, ip, r5
 80152d0:	4402      	add	r2, r0
 80152d2:	ea4c 0c08 	orr.w	ip, ip, r8
 80152d6:	f82a cb02 	strh.w	ip, [sl], #2
 80152da:	e7af      	b.n	801523c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80152dc:	f04f 0800 	mov.w	r8, #0
 80152e0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80152e4:	eb03 0008 	add.w	r0, r3, r8
 80152e8:	2800      	cmp	r0, #0
 80152ea:	dc41      	bgt.n	8015370 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80152ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80152f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80152f4:	9b00      	ldr	r3, [sp, #0]
 80152f6:	2b00      	cmp	r3, #0
 80152f8:	f340 8095 	ble.w	8015426 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80152fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015300:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015302:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015306:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801530a:	eef0 6a62 	vmov.f32	s13, s5
 801530e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015312:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015316:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801531a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801531e:	eef0 6a43 	vmov.f32	s13, s6
 8015322:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015326:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801532a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801532e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015332:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015336:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801533a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801533e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015342:	ee12 2a90 	vmov	r2, s5
 8015346:	eef0 2a47 	vmov.f32	s5, s14
 801534a:	fb92 f3f3 	sdiv	r3, r2, r3
 801534e:	ee13 2a10 	vmov	r2, s6
 8015352:	9311      	str	r3, [sp, #68]	; 0x44
 8015354:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015356:	eeb0 3a67 	vmov.f32	s6, s15
 801535a:	fb92 f3f3 	sdiv	r3, r2, r3
 801535e:	9312      	str	r3, [sp, #72]	; 0x48
 8015360:	9b00      	ldr	r3, [sp, #0]
 8015362:	9a03      	ldr	r2, [sp, #12]
 8015364:	3b01      	subs	r3, #1
 8015366:	9300      	str	r3, [sp, #0]
 8015368:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801536a:	bf08      	it	eq
 801536c:	4613      	moveq	r3, r2
 801536e:	e72f      	b.n	80151d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015370:	140f      	asrs	r7, r1, #16
 8015372:	d451      	bmi.n	8015418 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015374:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015378:	42bd      	cmp	r5, r7
 801537a:	dd4d      	ble.n	8015418 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801537c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015380:	d44a      	bmi.n	8015418 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015382:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015386:	4560      	cmp	r0, ip
 8015388:	dd46      	ble.n	8015418 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801538a:	b22d      	sxth	r5, r5
 801538c:	9802      	ldr	r0, [sp, #8]
 801538e:	fb0c 7505 	mla	r5, ip, r5, r7
 8015392:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8015396:	f06f 0501 	mvn.w	r5, #1
 801539a:	fb05 fb08 	mul.w	fp, r5, r8
 801539e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80153a2:	f834 500b 	ldrh.w	r5, [r4, fp]
 80153a6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80153aa:	122f      	asrs	r7, r5, #8
 80153ac:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80153b0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80153b4:	00ed      	lsls	r5, r5, #3
 80153b6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80153ba:	fb17 f706 	smulbb	r7, r7, r6
 80153be:	b2ed      	uxtb	r5, r5
 80153c0:	fb19 f906 	smulbb	r9, r9, r6
 80153c4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80153c8:	10c7      	asrs	r7, r0, #3
 80153ca:	fb15 f506 	smulbb	r5, r5, r6
 80153ce:	00c0      	lsls	r0, r0, #3
 80153d0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80153d4:	fa1f fc8c 	uxth.w	ip, ip
 80153d8:	b2c0      	uxtb	r0, r0
 80153da:	fb07 970a 	mla	r7, r7, sl, r9
 80153de:	fb00 500a 	mla	r0, r0, sl, r5
 80153e2:	f10c 0501 	add.w	r5, ip, #1
 80153e6:	b2bf      	uxth	r7, r7
 80153e8:	b280      	uxth	r0, r0
 80153ea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80153ee:	f107 0901 	add.w	r9, r7, #1
 80153f2:	1c45      	adds	r5, r0, #1
 80153f4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80153f8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80153fc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015400:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015404:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015408:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801540c:	ea4c 0c05 	orr.w	ip, ip, r5
 8015410:	ea4c 0c09 	orr.w	ip, ip, r9
 8015414:	f824 c00b 	strh.w	ip, [r4, fp]
 8015418:	9811      	ldr	r0, [sp, #68]	; 0x44
 801541a:	f108 38ff 	add.w	r8, r8, #4294967295
 801541e:	4401      	add	r1, r0
 8015420:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015422:	4402      	add	r2, r0
 8015424:	e75e      	b.n	80152e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8015426:	b005      	add	sp, #20
 8015428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801542c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801542c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015430:	b085      	sub	sp, #20
 8015432:	4693      	mov	fp, r2
 8015434:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015438:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801543a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801543c:	6870      	ldr	r0, [r6, #4]
 801543e:	9101      	str	r1, [sp, #4]
 8015440:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015444:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8015448:	fb00 2404 	mla	r4, r0, r4, r2
 801544c:	6832      	ldr	r2, [r6, #0]
 801544e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015452:	682a      	ldr	r2, [r5, #0]
 8015454:	9202      	str	r2, [sp, #8]
 8015456:	9a01      	ldr	r2, [sp, #4]
 8015458:	2a00      	cmp	r2, #0
 801545a:	dc03      	bgt.n	8015464 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801545c:	f1bb 0f00 	cmp.w	fp, #0
 8015460:	f340 809a 	ble.w	8015598 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015464:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015466:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801546a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801546e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015470:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015474:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015478:	2b00      	cmp	r3, #0
 801547a:	dd0c      	ble.n	8015496 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801547c:	1406      	asrs	r6, r0, #16
 801547e:	d405      	bmi.n	801548c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015480:	454e      	cmp	r6, r9
 8015482:	da03      	bge.n	801548c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015484:	1416      	asrs	r6, r2, #16
 8015486:	d401      	bmi.n	801548c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015488:	4546      	cmp	r6, r8
 801548a:	db05      	blt.n	8015498 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801548c:	4470      	add	r0, lr
 801548e:	4462      	add	r2, ip
 8015490:	3b01      	subs	r3, #1
 8015492:	3402      	adds	r4, #2
 8015494:	e7f0      	b.n	8015478 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015496:	d00f      	beq.n	80154b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015498:	1e5e      	subs	r6, r3, #1
 801549a:	fb0e 0706 	mla	r7, lr, r6, r0
 801549e:	143f      	asrs	r7, r7, #16
 80154a0:	d541      	bpl.n	8015526 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80154a2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80154a6:	4698      	mov	r8, r3
 80154a8:	9603      	str	r6, [sp, #12]
 80154aa:	f1b8 0f00 	cmp.w	r8, #0
 80154ae:	dc56      	bgt.n	801555e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80154b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80154b4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80154b8:	9b01      	ldr	r3, [sp, #4]
 80154ba:	2b00      	cmp	r3, #0
 80154bc:	dd6c      	ble.n	8015598 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80154be:	ee30 0a04 	vadd.f32	s0, s0, s8
 80154c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80154c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80154c8:	eeb0 6a62 	vmov.f32	s12, s5
 80154cc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80154d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80154d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80154d8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80154dc:	eeb0 6a43 	vmov.f32	s12, s6
 80154e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80154e4:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80154e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80154ec:	ee61 7a27 	vmul.f32	s15, s2, s15
 80154f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80154f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80154f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80154fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015500:	ee12 2a90 	vmov	r2, s5
 8015504:	eef0 2a47 	vmov.f32	s5, s14
 8015508:	fb92 fef3 	sdiv	lr, r2, r3
 801550c:	ee13 2a10 	vmov	r2, s6
 8015510:	eeb0 3a67 	vmov.f32	s6, s15
 8015514:	fb92 fcf3 	sdiv	ip, r2, r3
 8015518:	9b01      	ldr	r3, [sp, #4]
 801551a:	3b01      	subs	r3, #1
 801551c:	9301      	str	r3, [sp, #4]
 801551e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015520:	bf08      	it	eq
 8015522:	465b      	moveq	r3, fp
 8015524:	e797      	b.n	8015456 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015526:	454f      	cmp	r7, r9
 8015528:	dabb      	bge.n	80154a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801552a:	fb0c 2606 	mla	r6, ip, r6, r2
 801552e:	1436      	asrs	r6, r6, #16
 8015530:	d4b7      	bmi.n	80154a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015532:	4546      	cmp	r6, r8
 8015534:	dab5      	bge.n	80154a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015536:	461e      	mov	r6, r3
 8015538:	46a0      	mov	r8, r4
 801553a:	2e00      	cmp	r6, #0
 801553c:	ddb8      	ble.n	80154b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801553e:	1417      	asrs	r7, r2, #16
 8015540:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015544:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015548:	9902      	ldr	r1, [sp, #8]
 801554a:	4470      	add	r0, lr
 801554c:	4462      	add	r2, ip
 801554e:	fb0a 9707 	mla	r7, sl, r7, r9
 8015552:	3e01      	subs	r6, #1
 8015554:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015558:	f828 7b02 	strh.w	r7, [r8], #2
 801555c:	e7ed      	b.n	801553a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801555e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015562:	d414      	bmi.n	801558e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015564:	68ae      	ldr	r6, [r5, #8]
 8015566:	454e      	cmp	r6, r9
 8015568:	dd11      	ble.n	801558e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801556a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801556e:	d40e      	bmi.n	801558e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015570:	68ef      	ldr	r7, [r5, #12]
 8015572:	4557      	cmp	r7, sl
 8015574:	dd0b      	ble.n	801558e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015576:	b236      	sxth	r6, r6
 8015578:	f06f 0101 	mvn.w	r1, #1
 801557c:	9f02      	ldr	r7, [sp, #8]
 801557e:	fb0a 9606 	mla	r6, sl, r6, r9
 8015582:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015586:	fb01 f608 	mul.w	r6, r1, r8
 801558a:	9903      	ldr	r1, [sp, #12]
 801558c:	538f      	strh	r7, [r1, r6]
 801558e:	4470      	add	r0, lr
 8015590:	4462      	add	r2, ip
 8015592:	f108 38ff 	add.w	r8, r8, #4294967295
 8015596:	e788      	b.n	80154aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015598:	b005      	add	sp, #20
 801559a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801559e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801559e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155a2:	b085      	sub	sp, #20
 80155a4:	468b      	mov	fp, r1
 80155a6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80155aa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80155ac:	9202      	str	r2, [sp, #8]
 80155ae:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80155b2:	6841      	ldr	r1, [r0, #4]
 80155b4:	9203      	str	r2, [sp, #12]
 80155b6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80155ba:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80155be:	fb01 2404 	mla	r4, r1, r4, r2
 80155c2:	6802      	ldr	r2, [r0, #0]
 80155c4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80155c8:	f8d8 2000 	ldr.w	r2, [r8]
 80155cc:	9200      	str	r2, [sp, #0]
 80155ce:	f1bb 0f00 	cmp.w	fp, #0
 80155d2:	dc03      	bgt.n	80155dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80155d4:	9a02      	ldr	r2, [sp, #8]
 80155d6:	2a00      	cmp	r2, #0
 80155d8:	f340 8134 	ble.w	8015844 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80155dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80155de:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80155e2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80155e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80155e8:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80155ec:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80155f0:	2b00      	cmp	r3, #0
 80155f2:	dd0e      	ble.n	8015612 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80155f4:	1402      	asrs	r2, r0, #16
 80155f6:	d405      	bmi.n	8015604 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80155f8:	42ba      	cmp	r2, r7
 80155fa:	da03      	bge.n	8015604 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80155fc:	140a      	asrs	r2, r1, #16
 80155fe:	d401      	bmi.n	8015604 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015600:	42b2      	cmp	r2, r6
 8015602:	db07      	blt.n	8015614 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015604:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015606:	3b01      	subs	r3, #1
 8015608:	3402      	adds	r4, #2
 801560a:	4410      	add	r0, r2
 801560c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801560e:	4411      	add	r1, r2
 8015610:	e7ee      	b.n	80155f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015612:	d019      	beq.n	8015648 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015614:	1e5a      	subs	r2, r3, #1
 8015616:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015618:	fb05 0502 	mla	r5, r5, r2, r0
 801561c:	142d      	asrs	r5, r5, #16
 801561e:	d409      	bmi.n	8015634 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015620:	42bd      	cmp	r5, r7
 8015622:	da07      	bge.n	8015634 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015624:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015626:	fb05 1202 	mla	r2, r5, r2, r1
 801562a:	1412      	asrs	r2, r2, #16
 801562c:	d402      	bmi.n	8015634 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801562e:	42b2      	cmp	r2, r6
 8015630:	f2c0 80aa 	blt.w	8015788 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8015634:	f04f 0c00 	mov.w	ip, #0
 8015638:	eb03 020c 	add.w	r2, r3, ip
 801563c:	2a00      	cmp	r2, #0
 801563e:	dc3e      	bgt.n	80156be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8015640:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015644:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015648:	f1bb 0f00 	cmp.w	fp, #0
 801564c:	f340 80fa 	ble.w	8015844 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8015650:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015654:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015656:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801565a:	f1bb 0b01 	subs.w	fp, fp, #1
 801565e:	eeb0 6a62 	vmov.f32	s12, s5
 8015662:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015666:	ee31 1a05 	vadd.f32	s2, s2, s10
 801566a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801566e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015672:	eeb0 6a43 	vmov.f32	s12, s6
 8015676:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801567a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801567e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015682:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015686:	ee77 2a62 	vsub.f32	s5, s14, s5
 801568a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801568e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015692:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015696:	ee12 2a90 	vmov	r2, s5
 801569a:	eef0 2a47 	vmov.f32	s5, s14
 801569e:	fb92 f3f3 	sdiv	r3, r2, r3
 80156a2:	ee13 2a10 	vmov	r2, s6
 80156a6:	9311      	str	r3, [sp, #68]	; 0x44
 80156a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80156aa:	eeb0 3a67 	vmov.f32	s6, s15
 80156ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80156b2:	9a02      	ldr	r2, [sp, #8]
 80156b4:	9312      	str	r3, [sp, #72]	; 0x48
 80156b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80156b8:	bf08      	it	eq
 80156ba:	4613      	moveq	r3, r2
 80156bc:	e787      	b.n	80155ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80156be:	1406      	asrs	r6, r0, #16
 80156c0:	d45b      	bmi.n	801577a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80156c2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80156c6:	42b5      	cmp	r5, r6
 80156c8:	dd57      	ble.n	801577a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80156ca:	140f      	asrs	r7, r1, #16
 80156cc:	d455      	bmi.n	801577a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80156ce:	f8d8 200c 	ldr.w	r2, [r8, #12]
 80156d2:	42ba      	cmp	r2, r7
 80156d4:	dd51      	ble.n	801577a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80156d6:	b22d      	sxth	r5, r5
 80156d8:	9a00      	ldr	r2, [sp, #0]
 80156da:	fb07 6505 	mla	r5, r7, r5, r6
 80156de:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 80156e2:	0e2e      	lsrs	r6, r5, #24
 80156e4:	d049      	beq.n	801577a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80156e6:	f06f 0201 	mvn.w	r2, #1
 80156ea:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80156ee:	fb02 f20c 	mul.w	r2, r2, ip
 80156f2:	f834 e002 	ldrh.w	lr, [r4, r2]
 80156f6:	9201      	str	r2, [sp, #4]
 80156f8:	9a03      	ldr	r2, [sp, #12]
 80156fa:	ea4f 272e 	mov.w	r7, lr, asr #8
 80156fe:	4356      	muls	r6, r2
 8015700:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015704:	1c72      	adds	r2, r6, #1
 8015706:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801570a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801570e:	b2ed      	uxtb	r5, r5
 8015710:	1212      	asrs	r2, r2, #8
 8015712:	fa1f f982 	uxth.w	r9, r2
 8015716:	43d2      	mvns	r2, r2
 8015718:	fb16 f609 	smulbb	r6, r6, r9
 801571c:	b2d2      	uxtb	r2, r2
 801571e:	fb15 f509 	smulbb	r5, r5, r9
 8015722:	fb07 6702 	mla	r7, r7, r2, r6
 8015726:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801572a:	fb1a fa09 	smulbb	sl, sl, r9
 801572e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015732:	b2bf      	uxth	r7, r7
 8015734:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015738:	fa5f fe8e 	uxtb.w	lr, lr
 801573c:	fb06 a602 	mla	r6, r6, r2, sl
 8015740:	fb0e 5502 	mla	r5, lr, r2, r5
 8015744:	1c7a      	adds	r2, r7, #1
 8015746:	b2b6      	uxth	r6, r6
 8015748:	b2ad      	uxth	r5, r5
 801574a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801574e:	9a01      	ldr	r2, [sp, #4]
 8015750:	f105 0a01 	add.w	sl, r5, #1
 8015754:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015758:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801575c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015760:	ea47 070a 	orr.w	r7, r7, sl
 8015764:	f106 0a01 	add.w	sl, r6, #1
 8015768:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801576c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015770:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015774:	ea47 070a 	orr.w	r7, r7, sl
 8015778:	52a7      	strh	r7, [r4, r2]
 801577a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801577c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8015780:	4410      	add	r0, r2
 8015782:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015784:	4411      	add	r1, r2
 8015786:	e757      	b.n	8015638 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015788:	f04f 0e00 	mov.w	lr, #0
 801578c:	eba3 020e 	sub.w	r2, r3, lr
 8015790:	2a00      	cmp	r2, #0
 8015792:	f77f af55 	ble.w	8015640 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015796:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801579a:	1405      	asrs	r5, r0, #16
 801579c:	140a      	asrs	r2, r1, #16
 801579e:	fb06 5202 	mla	r2, r6, r2, r5
 80157a2:	9d00      	ldr	r5, [sp, #0]
 80157a4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80157a8:	0e2e      	lsrs	r6, r5, #24
 80157aa:	d044      	beq.n	8015836 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80157ac:	9a03      	ldr	r2, [sp, #12]
 80157ae:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80157b2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80157b6:	4356      	muls	r6, r2
 80157b8:	ea4f 272c 	mov.w	r7, ip, asr #8
 80157bc:	1c72      	adds	r2, r6, #1
 80157be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80157c2:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80157c6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80157ca:	b2ed      	uxtb	r5, r5
 80157cc:	1212      	asrs	r2, r2, #8
 80157ce:	fa1f f982 	uxth.w	r9, r2
 80157d2:	43d2      	mvns	r2, r2
 80157d4:	fb16 f609 	smulbb	r6, r6, r9
 80157d8:	b2d2      	uxtb	r2, r2
 80157da:	fb15 f509 	smulbb	r5, r5, r9
 80157de:	fb07 6702 	mla	r7, r7, r2, r6
 80157e2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80157e6:	fb1a fa09 	smulbb	sl, sl, r9
 80157ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80157ee:	b2bf      	uxth	r7, r7
 80157f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80157f4:	fa5f fc8c 	uxtb.w	ip, ip
 80157f8:	fb06 a602 	mla	r6, r6, r2, sl
 80157fc:	fb0c 5502 	mla	r5, ip, r2, r5
 8015800:	1c7a      	adds	r2, r7, #1
 8015802:	b2b6      	uxth	r6, r6
 8015804:	b2ad      	uxth	r5, r5
 8015806:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801580a:	f105 0a01 	add.w	sl, r5, #1
 801580e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015812:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015816:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801581a:	ea47 070a 	orr.w	r7, r7, sl
 801581e:	f106 0a01 	add.w	sl, r6, #1
 8015822:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015826:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801582a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801582e:	ea47 070a 	orr.w	r7, r7, sl
 8015832:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8015836:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015838:	f10e 0e01 	add.w	lr, lr, #1
 801583c:	4410      	add	r0, r2
 801583e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015840:	4411      	add	r1, r2
 8015842:	e7a3      	b.n	801578c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8015844:	b005      	add	sp, #20
 8015846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801584c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801584c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015850:	b085      	sub	sp, #20
 8015852:	468b      	mov	fp, r1
 8015854:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015858:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801585a:	9203      	str	r2, [sp, #12]
 801585c:	6861      	ldr	r1, [r4, #4]
 801585e:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 8015862:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8015866:	fb01 2000 	mla	r0, r1, r0, r2
 801586a:	6822      	ldr	r2, [r4, #0]
 801586c:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015870:	f8d9 2000 	ldr.w	r2, [r9]
 8015874:	9200      	str	r2, [sp, #0]
 8015876:	f1bb 0f00 	cmp.w	fp, #0
 801587a:	dc03      	bgt.n	8015884 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801587c:	9a03      	ldr	r2, [sp, #12]
 801587e:	2a00      	cmp	r2, #0
 8015880:	f340 8154 	ble.w	8015b2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8015884:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015886:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801588a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801588e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015890:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015894:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015898:	2b00      	cmp	r3, #0
 801589a:	dd0e      	ble.n	80158ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801589c:	140c      	asrs	r4, r1, #16
 801589e:	d405      	bmi.n	80158ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80158a0:	42bc      	cmp	r4, r7
 80158a2:	da03      	bge.n	80158ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80158a4:	1414      	asrs	r4, r2, #16
 80158a6:	d401      	bmi.n	80158ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80158a8:	42b4      	cmp	r4, r6
 80158aa:	db07      	blt.n	80158bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80158ac:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80158ae:	3b01      	subs	r3, #1
 80158b0:	3002      	adds	r0, #2
 80158b2:	4421      	add	r1, r4
 80158b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80158b6:	4422      	add	r2, r4
 80158b8:	e7ee      	b.n	8015898 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80158ba:	d017      	beq.n	80158ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80158bc:	1e5c      	subs	r4, r3, #1
 80158be:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80158c0:	fb05 1504 	mla	r5, r5, r4, r1
 80158c4:	142d      	asrs	r5, r5, #16
 80158c6:	d409      	bmi.n	80158dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80158c8:	42bd      	cmp	r5, r7
 80158ca:	da07      	bge.n	80158dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80158cc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80158ce:	fb05 2404 	mla	r4, r5, r4, r2
 80158d2:	1424      	asrs	r4, r4, #16
 80158d4:	d402      	bmi.n	80158dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80158d6:	42b4      	cmp	r4, r6
 80158d8:	f2c0 80c0 	blt.w	8015a5c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80158dc:	2700      	movs	r7, #0
 80158de:	19dc      	adds	r4, r3, r7
 80158e0:	2c00      	cmp	r4, #0
 80158e2:	dc3e      	bgt.n	8015962 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80158e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80158e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80158ec:	f1bb 0f00 	cmp.w	fp, #0
 80158f0:	f340 811c 	ble.w	8015b2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80158f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80158f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80158fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80158fe:	f1bb 0b01 	subs.w	fp, fp, #1
 8015902:	eeb0 6a62 	vmov.f32	s12, s5
 8015906:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801590a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801590e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015912:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015916:	eeb0 6a43 	vmov.f32	s12, s6
 801591a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801591e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015922:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015926:	ee61 7a27 	vmul.f32	s15, s2, s15
 801592a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801592e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015932:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015936:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801593a:	ee12 2a90 	vmov	r2, s5
 801593e:	eef0 2a47 	vmov.f32	s5, s14
 8015942:	fb92 f3f3 	sdiv	r3, r2, r3
 8015946:	ee13 2a10 	vmov	r2, s6
 801594a:	9311      	str	r3, [sp, #68]	; 0x44
 801594c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801594e:	eeb0 3a67 	vmov.f32	s6, s15
 8015952:	fb92 f3f3 	sdiv	r3, r2, r3
 8015956:	9a03      	ldr	r2, [sp, #12]
 8015958:	9312      	str	r3, [sp, #72]	; 0x48
 801595a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801595c:	bf08      	it	eq
 801595e:	4613      	moveq	r3, r2
 8015960:	e789      	b.n	8015876 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015962:	140e      	asrs	r6, r1, #16
 8015964:	d461      	bmi.n	8015a2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8015966:	f8d9 5008 	ldr.w	r5, [r9, #8]
 801596a:	42b5      	cmp	r5, r6
 801596c:	dd5d      	ble.n	8015a2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801596e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015972:	d45a      	bmi.n	8015a2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8015974:	f8d9 400c 	ldr.w	r4, [r9, #12]
 8015978:	4564      	cmp	r4, ip
 801597a:	dd56      	ble.n	8015a2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801597c:	b22d      	sxth	r5, r5
 801597e:	9c00      	ldr	r4, [sp, #0]
 8015980:	fb0c 6505 	mla	r5, ip, r5, r6
 8015984:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
 8015988:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 801598c:	d04d      	beq.n	8015a2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801598e:	0a26      	lsrs	r6, r4, #8
 8015990:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015994:	fa5f f58e 	uxtb.w	r5, lr
 8015998:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 801599c:	9601      	str	r6, [sp, #4]
 801599e:	d04a      	beq.n	8015a36 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80159a0:	f06f 0601 	mvn.w	r6, #1
 80159a4:	fa1f fa85 	uxth.w	sl, r5
 80159a8:	fa5f fc8c 	uxtb.w	ip, ip
 80159ac:	43ed      	mvns	r5, r5
 80159ae:	437e      	muls	r6, r7
 80159b0:	b2e4      	uxtb	r4, r4
 80159b2:	fb1c fc0a 	smulbb	ip, ip, sl
 80159b6:	b2ed      	uxtb	r5, r5
 80159b8:	f830 8006 	ldrh.w	r8, [r0, r6]
 80159bc:	fb14 f40a 	smulbb	r4, r4, sl
 80159c0:	9602      	str	r6, [sp, #8]
 80159c2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80159c6:	f89d 6004 	ldrb.w	r6, [sp, #4]
 80159ca:	fb16 f60a 	smulbb	r6, r6, sl
 80159ce:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80159d2:	fb0e cc05 	mla	ip, lr, r5, ip
 80159d6:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 80159da:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80159de:	fa1f fc8c 	uxth.w	ip, ip
 80159e2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80159e6:	fa5f f888 	uxtb.w	r8, r8
 80159ea:	fb0e 6e05 	mla	lr, lr, r5, r6
 80159ee:	fb08 4405 	mla	r4, r8, r5, r4
 80159f2:	f10c 0501 	add.w	r5, ip, #1
 80159f6:	fa1f fe8e 	uxth.w	lr, lr
 80159fa:	b2a4      	uxth	r4, r4
 80159fc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015a00:	1c66      	adds	r6, r4, #1
 8015a02:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015a06:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015a0a:	9c02      	ldr	r4, [sp, #8]
 8015a0c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015a10:	ea4c 0c06 	orr.w	ip, ip, r6
 8015a14:	f10e 0601 	add.w	r6, lr, #1
 8015a18:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 8015a1c:	0976      	lsrs	r6, r6, #5
 8015a1e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015a22:	ea4c 0c06 	orr.w	ip, ip, r6
 8015a26:	f820 c004 	strh.w	ip, [r0, r4]
 8015a2a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015a2c:	3f01      	subs	r7, #1
 8015a2e:	4421      	add	r1, r4
 8015a30:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015a32:	4422      	add	r2, r4
 8015a34:	e753      	b.n	80158de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015a36:	4e3f      	ldr	r6, [pc, #252]	; (8015b34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 8015a38:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015a3c:	f06f 0501 	mvn.w	r5, #1
 8015a40:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 8015a44:	437d      	muls	r5, r7
 8015a46:	ea4c 0c04 	orr.w	ip, ip, r4
 8015a4a:	9c01      	ldr	r4, [sp, #4]
 8015a4c:	00e6      	lsls	r6, r4, #3
 8015a4e:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8015a52:	ea4c 0c04 	orr.w	ip, ip, r4
 8015a56:	f820 c005 	strh.w	ip, [r0, r5]
 8015a5a:	e7e6      	b.n	8015a2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8015a5c:	f04f 0800 	mov.w	r8, #0
 8015a60:	eba3 0408 	sub.w	r4, r3, r8
 8015a64:	2c00      	cmp	r4, #0
 8015a66:	f77f af3d 	ble.w	80158e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015a6a:	140d      	asrs	r5, r1, #16
 8015a6c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8015a70:	1414      	asrs	r4, r2, #16
 8015a72:	fb06 5404 	mla	r4, r6, r4, r5
 8015a76:	9d00      	ldr	r5, [sp, #0]
 8015a78:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8015a7c:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8015a80:	d042      	beq.n	8015b08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8015a82:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015a86:	fa5f f58c 	uxtb.w	r5, ip
 8015a8a:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8015a8e:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8015a92:	d040      	beq.n	8015b16 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015a94:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 8015a98:	fa1f fa85 	uxth.w	sl, r5
 8015a9c:	b2ff      	uxtb	r7, r7
 8015a9e:	43ed      	mvns	r5, r5
 8015aa0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015aa4:	fb17 f70a 	smulbb	r7, r7, sl
 8015aa8:	b2ed      	uxtb	r5, r5
 8015aaa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015aae:	b2e4      	uxtb	r4, r4
 8015ab0:	b2f6      	uxtb	r6, r6
 8015ab2:	fb0c 7705 	mla	r7, ip, r5, r7
 8015ab6:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8015aba:	fb14 f40a 	smulbb	r4, r4, sl
 8015abe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015ac2:	b2bf      	uxth	r7, r7
 8015ac4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8015ac8:	fb16 f60a 	smulbb	r6, r6, sl
 8015acc:	fa5f fe8e 	uxtb.w	lr, lr
 8015ad0:	fb0e 4405 	mla	r4, lr, r5, r4
 8015ad4:	fb0c 6c05 	mla	ip, ip, r5, r6
 8015ad8:	1c7d      	adds	r5, r7, #1
 8015ada:	b2a4      	uxth	r4, r4
 8015adc:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8015ae0:	1c66      	adds	r6, r4, #1
 8015ae2:	fa1f fc8c 	uxth.w	ip, ip
 8015ae6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015aea:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015aee:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015af2:	4337      	orrs	r7, r6
 8015af4:	f10c 0601 	add.w	r6, ip, #1
 8015af8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015afc:	0976      	lsrs	r6, r6, #5
 8015afe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015b02:	4337      	orrs	r7, r6
 8015b04:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 8015b08:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015b0a:	f108 0801 	add.w	r8, r8, #1
 8015b0e:	4421      	add	r1, r4
 8015b10:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015b12:	4422      	add	r2, r4
 8015b14:	e7a4      	b.n	8015a60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015b16:	4d07      	ldr	r5, [pc, #28]	; (8015b34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 8015b18:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015b1c:	00f6      	lsls	r6, r6, #3
 8015b1e:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 8015b22:	4327      	orrs	r7, r4
 8015b24:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8015b28:	4327      	orrs	r7, r4
 8015b2a:	e7eb      	b.n	8015b04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
 8015b2c:	b005      	add	sp, #20
 8015b2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b32:	bf00      	nop
 8015b34:	fffff800 	.word	0xfffff800

08015b38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015b38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b3c:	b087      	sub	sp, #28
 8015b3e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015b42:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015b44:	9204      	str	r2, [sp, #16]
 8015b46:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015b4a:	9101      	str	r1, [sp, #4]
 8015b4c:	9205      	str	r2, [sp, #20]
 8015b4e:	6841      	ldr	r1, [r0, #4]
 8015b50:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8015b54:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015b58:	fb01 2404 	mla	r4, r1, r4, r2
 8015b5c:	6802      	ldr	r2, [r0, #0]
 8015b5e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015b62:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8015b66:	3201      	adds	r2, #1
 8015b68:	f022 0201 	bic.w	r2, r2, #1
 8015b6c:	9202      	str	r2, [sp, #8]
 8015b6e:	f8d8 2000 	ldr.w	r2, [r8]
 8015b72:	9203      	str	r2, [sp, #12]
 8015b74:	9a01      	ldr	r2, [sp, #4]
 8015b76:	2a00      	cmp	r2, #0
 8015b78:	dc03      	bgt.n	8015b82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8015b7a:	9a04      	ldr	r2, [sp, #16]
 8015b7c:	2a00      	cmp	r2, #0
 8015b7e:	f340 814d 	ble.w	8015e1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8015b82:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015b84:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015b88:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015b8c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015b8e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015b92:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015b96:	2b00      	cmp	r3, #0
 8015b98:	dd0e      	ble.n	8015bb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015b9a:	1402      	asrs	r2, r0, #16
 8015b9c:	d405      	bmi.n	8015baa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015b9e:	42ba      	cmp	r2, r7
 8015ba0:	da03      	bge.n	8015baa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015ba2:	140a      	asrs	r2, r1, #16
 8015ba4:	d401      	bmi.n	8015baa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015ba6:	42b2      	cmp	r2, r6
 8015ba8:	db07      	blt.n	8015bba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8015baa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015bac:	3b01      	subs	r3, #1
 8015bae:	3402      	adds	r4, #2
 8015bb0:	4410      	add	r0, r2
 8015bb2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015bb4:	4411      	add	r1, r2
 8015bb6:	e7ee      	b.n	8015b96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015bb8:	d019      	beq.n	8015bee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015bba:	1e5a      	subs	r2, r3, #1
 8015bbc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015bbe:	fb05 0502 	mla	r5, r5, r2, r0
 8015bc2:	142d      	asrs	r5, r5, #16
 8015bc4:	d409      	bmi.n	8015bda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015bc6:	42bd      	cmp	r5, r7
 8015bc8:	da07      	bge.n	8015bda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015bca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015bcc:	fb05 1202 	mla	r2, r5, r2, r1
 8015bd0:	1412      	asrs	r2, r2, #16
 8015bd2:	d402      	bmi.n	8015bda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015bd4:	42b2      	cmp	r2, r6
 8015bd6:	f2c0 80b7 	blt.w	8015d48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8015bda:	f04f 0c00 	mov.w	ip, #0
 8015bde:	eb03 020c 	add.w	r2, r3, ip
 8015be2:	2a00      	cmp	r2, #0
 8015be4:	dc3f      	bgt.n	8015c66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 8015be6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015bea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015bee:	9b01      	ldr	r3, [sp, #4]
 8015bf0:	2b00      	cmp	r3, #0
 8015bf2:	f340 8113 	ble.w	8015e1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8015bf6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015bfa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015bfc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015c00:	eeb0 6a62 	vmov.f32	s12, s5
 8015c04:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015c08:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015c0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015c10:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015c14:	eeb0 6a43 	vmov.f32	s12, s6
 8015c18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015c1c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015c20:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015c24:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015c28:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015c2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015c30:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015c34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015c38:	ee12 2a90 	vmov	r2, s5
 8015c3c:	eef0 2a47 	vmov.f32	s5, s14
 8015c40:	fb92 f3f3 	sdiv	r3, r2, r3
 8015c44:	ee13 2a10 	vmov	r2, s6
 8015c48:	9313      	str	r3, [sp, #76]	; 0x4c
 8015c4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015c4c:	eeb0 3a67 	vmov.f32	s6, s15
 8015c50:	fb92 f3f3 	sdiv	r3, r2, r3
 8015c54:	9314      	str	r3, [sp, #80]	; 0x50
 8015c56:	9b01      	ldr	r3, [sp, #4]
 8015c58:	9a04      	ldr	r2, [sp, #16]
 8015c5a:	3b01      	subs	r3, #1
 8015c5c:	9301      	str	r3, [sp, #4]
 8015c5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015c60:	bf08      	it	eq
 8015c62:	4613      	moveq	r3, r2
 8015c64:	e786      	b.n	8015b74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015c66:	1405      	asrs	r5, r0, #16
 8015c68:	d467      	bmi.n	8015d3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015c6a:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8015c6e:	42aa      	cmp	r2, r5
 8015c70:	dd63      	ble.n	8015d3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015c72:	140e      	asrs	r6, r1, #16
 8015c74:	d461      	bmi.n	8015d3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015c76:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8015c7a:	42b2      	cmp	r2, r6
 8015c7c:	dd5d      	ble.n	8015d3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015c7e:	9a02      	ldr	r2, [sp, #8]
 8015c80:	fb06 5502 	mla	r5, r6, r2, r5
 8015c84:	9e03      	ldr	r6, [sp, #12]
 8015c86:	086a      	lsrs	r2, r5, #1
 8015c88:	5cb2      	ldrb	r2, [r6, r2]
 8015c8a:	07ee      	lsls	r6, r5, #31
 8015c8c:	bf54      	ite	pl
 8015c8e:	f002 020f 	andpl.w	r2, r2, #15
 8015c92:	1112      	asrmi	r2, r2, #4
 8015c94:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015c98:	b2d2      	uxtb	r2, r2
 8015c9a:	2a00      	cmp	r2, #0
 8015c9c:	d04d      	beq.n	8015d3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015c9e:	f06f 0601 	mvn.w	r6, #1
 8015ca2:	4d60      	ldr	r5, [pc, #384]	; (8015e24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015ca4:	fb06 fb0c 	mul.w	fp, r6, ip
 8015ca8:	9e05      	ldr	r6, [sp, #20]
 8015caa:	682d      	ldr	r5, [r5, #0]
 8015cac:	4372      	muls	r2, r6
 8015cae:	f834 e00b 	ldrh.w	lr, [r4, fp]
 8015cb2:	0a2f      	lsrs	r7, r5, #8
 8015cb4:	1c56      	adds	r6, r2, #1
 8015cb6:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 8015cba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015cbe:	00ed      	lsls	r5, r5, #3
 8015cc0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015cc4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015cc8:	ea4f 262e 	mov.w	r6, lr, asr #8
 8015ccc:	1212      	asrs	r2, r2, #8
 8015cce:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015cd2:	b2ed      	uxtb	r5, r5
 8015cd4:	fa1f fa82 	uxth.w	sl, r2
 8015cd8:	43d2      	mvns	r2, r2
 8015cda:	fb17 f70a 	smulbb	r7, r7, sl
 8015cde:	b2d2      	uxtb	r2, r2
 8015ce0:	fb19 f90a 	smulbb	r9, r9, sl
 8015ce4:	fb06 7602 	mla	r6, r6, r2, r7
 8015ce8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015cec:	fb15 f50a 	smulbb	r5, r5, sl
 8015cf0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015cf4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015cf8:	b2b6      	uxth	r6, r6
 8015cfa:	fa5f fe8e 	uxtb.w	lr, lr
 8015cfe:	fb07 9702 	mla	r7, r7, r2, r9
 8015d02:	fb0e 5502 	mla	r5, lr, r2, r5
 8015d06:	b2bf      	uxth	r7, r7
 8015d08:	b2ad      	uxth	r5, r5
 8015d0a:	f107 0901 	add.w	r9, r7, #1
 8015d0e:	f105 0e01 	add.w	lr, r5, #1
 8015d12:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8015d16:	f106 0901 	add.w	r9, r6, #1
 8015d1a:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 8015d1e:	097f      	lsrs	r7, r7, #5
 8015d20:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8015d24:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8015d28:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015d2c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015d30:	4337      	orrs	r7, r6
 8015d32:	ea47 070e 	orr.w	r7, r7, lr
 8015d36:	f824 700b 	strh.w	r7, [r4, fp]
 8015d3a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015d3c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8015d40:	4410      	add	r0, r2
 8015d42:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015d44:	4411      	add	r1, r2
 8015d46:	e74a      	b.n	8015bde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015d48:	f04f 0e00 	mov.w	lr, #0
 8015d4c:	eba3 020e 	sub.w	r2, r3, lr
 8015d50:	2a00      	cmp	r2, #0
 8015d52:	f77f af48 	ble.w	8015be6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8015d56:	1402      	asrs	r2, r0, #16
 8015d58:	9e02      	ldr	r6, [sp, #8]
 8015d5a:	140d      	asrs	r5, r1, #16
 8015d5c:	fb06 2505 	mla	r5, r6, r5, r2
 8015d60:	9e03      	ldr	r6, [sp, #12]
 8015d62:	086a      	lsrs	r2, r5, #1
 8015d64:	07ed      	lsls	r5, r5, #31
 8015d66:	5cb2      	ldrb	r2, [r6, r2]
 8015d68:	bf54      	ite	pl
 8015d6a:	f002 020f 	andpl.w	r2, r2, #15
 8015d6e:	1112      	asrmi	r2, r2, #4
 8015d70:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015d74:	b2d2      	uxtb	r2, r2
 8015d76:	2a00      	cmp	r2, #0
 8015d78:	d049      	beq.n	8015e0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015d7a:	9e05      	ldr	r6, [sp, #20]
 8015d7c:	4d29      	ldr	r5, [pc, #164]	; (8015e24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015d7e:	4372      	muls	r2, r6
 8015d80:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015d84:	682d      	ldr	r5, [r5, #0]
 8015d86:	1c56      	adds	r6, r2, #1
 8015d88:	0a2f      	lsrs	r7, r5, #8
 8015d8a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015d8e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015d92:	ea4f 262c 	mov.w	r6, ip, asr #8
 8015d96:	1212      	asrs	r2, r2, #8
 8015d98:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 8015d9c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015da0:	fa1f fa82 	uxth.w	sl, r2
 8015da4:	43d2      	mvns	r2, r2
 8015da6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015daa:	00ed      	lsls	r5, r5, #3
 8015dac:	fb17 f70a 	smulbb	r7, r7, sl
 8015db0:	b2d2      	uxtb	r2, r2
 8015db2:	fb19 f90a 	smulbb	r9, r9, sl
 8015db6:	b2ed      	uxtb	r5, r5
 8015db8:	fb06 7602 	mla	r6, r6, r2, r7
 8015dbc:	ea4f 07ec 	mov.w	r7, ip, asr #3
 8015dc0:	fb15 f50a 	smulbb	r5, r5, sl
 8015dc4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015dc8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015dcc:	b2b6      	uxth	r6, r6
 8015dce:	fa5f fc8c 	uxtb.w	ip, ip
 8015dd2:	fb07 9702 	mla	r7, r7, r2, r9
 8015dd6:	f106 0b01 	add.w	fp, r6, #1
 8015dda:	fb0c 5502 	mla	r5, ip, r2, r5
 8015dde:	b2bf      	uxth	r7, r7
 8015de0:	b2ad      	uxth	r5, r5
 8015de2:	f107 0901 	add.w	r9, r7, #1
 8015de6:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8015dea:	f105 0c01 	add.w	ip, r5, #1
 8015dee:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8015df2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015df6:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8015dfa:	097f      	lsrs	r7, r7, #5
 8015dfc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015e00:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015e04:	4337      	orrs	r7, r6
 8015e06:	ea47 070c 	orr.w	r7, r7, ip
 8015e0a:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8015e0e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015e10:	f10e 0e01 	add.w	lr, lr, #1
 8015e14:	4410      	add	r0, r2
 8015e16:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015e18:	4411      	add	r1, r2
 8015e1a:	e797      	b.n	8015d4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015e1c:	b007      	add	sp, #28
 8015e1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e22:	bf00      	nop
 8015e24:	200125b8 	.word	0x200125b8

08015e28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015e28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e2c:	b087      	sub	sp, #28
 8015e2e:	468b      	mov	fp, r1
 8015e30:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015e34:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015e36:	9205      	str	r2, [sp, #20]
 8015e38:	6841      	ldr	r1, [r0, #4]
 8015e3a:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8015e3e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015e42:	fb01 2404 	mla	r4, r1, r4, r2
 8015e46:	6802      	ldr	r2, [r0, #0]
 8015e48:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015e4c:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8015e50:	3201      	adds	r2, #1
 8015e52:	f022 0201 	bic.w	r2, r2, #1
 8015e56:	9201      	str	r2, [sp, #4]
 8015e58:	f8d8 2000 	ldr.w	r2, [r8]
 8015e5c:	9202      	str	r2, [sp, #8]
 8015e5e:	f1bb 0f00 	cmp.w	fp, #0
 8015e62:	dc03      	bgt.n	8015e6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015e64:	9a05      	ldr	r2, [sp, #20]
 8015e66:	2a00      	cmp	r2, #0
 8015e68:	f340 8158 	ble.w	801611c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8015e6c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015e6e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015e72:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015e76:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015e78:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015e7c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015e80:	2b00      	cmp	r3, #0
 8015e82:	dd0e      	ble.n	8015ea2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015e84:	1402      	asrs	r2, r0, #16
 8015e86:	d405      	bmi.n	8015e94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015e88:	42ba      	cmp	r2, r7
 8015e8a:	da03      	bge.n	8015e94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015e8c:	140a      	asrs	r2, r1, #16
 8015e8e:	d401      	bmi.n	8015e94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015e90:	42b2      	cmp	r2, r6
 8015e92:	db07      	blt.n	8015ea4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015e94:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015e96:	3b01      	subs	r3, #1
 8015e98:	3402      	adds	r4, #2
 8015e9a:	4410      	add	r0, r2
 8015e9c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015e9e:	4411      	add	r1, r2
 8015ea0:	e7ee      	b.n	8015e80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015ea2:	d017      	beq.n	8015ed4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8015ea4:	1e5a      	subs	r2, r3, #1
 8015ea6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015ea8:	fb05 0502 	mla	r5, r5, r2, r0
 8015eac:	142d      	asrs	r5, r5, #16
 8015eae:	d409      	bmi.n	8015ec4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015eb0:	42bd      	cmp	r5, r7
 8015eb2:	da07      	bge.n	8015ec4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015eb4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015eb6:	fb05 1202 	mla	r2, r5, r2, r1
 8015eba:	1412      	asrs	r2, r2, #16
 8015ebc:	d402      	bmi.n	8015ec4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015ebe:	42b2      	cmp	r2, r6
 8015ec0:	f2c0 80c0 	blt.w	8016044 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21c>
 8015ec4:	2600      	movs	r6, #0
 8015ec6:	199a      	adds	r2, r3, r6
 8015ec8:	2a00      	cmp	r2, #0
 8015eca:	dc3e      	bgt.n	8015f4a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8015ecc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015ed0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015ed4:	f1bb 0f00 	cmp.w	fp, #0
 8015ed8:	f340 8120 	ble.w	801611c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8015edc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015ee0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015ee2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ee6:	f1bb 0b01 	subs.w	fp, fp, #1
 8015eea:	eeb0 6a62 	vmov.f32	s12, s5
 8015eee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015ef2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015ef6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015efa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015efe:	eeb0 6a43 	vmov.f32	s12, s6
 8015f02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015f06:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015f0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015f0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015f12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015f16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015f1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015f1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015f22:	ee12 2a90 	vmov	r2, s5
 8015f26:	eef0 2a47 	vmov.f32	s5, s14
 8015f2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f2e:	ee13 2a10 	vmov	r2, s6
 8015f32:	9313      	str	r3, [sp, #76]	; 0x4c
 8015f34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015f36:	eeb0 3a67 	vmov.f32	s6, s15
 8015f3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f3e:	9a05      	ldr	r2, [sp, #20]
 8015f40:	9314      	str	r3, [sp, #80]	; 0x50
 8015f42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015f44:	bf08      	it	eq
 8015f46:	4613      	moveq	r3, r2
 8015f48:	e789      	b.n	8015e5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8015f4a:	1405      	asrs	r5, r0, #16
 8015f4c:	d467      	bmi.n	801601e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015f4e:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8015f52:	42aa      	cmp	r2, r5
 8015f54:	dd63      	ble.n	801601e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015f56:	140f      	asrs	r7, r1, #16
 8015f58:	d461      	bmi.n	801601e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015f5a:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8015f5e:	42ba      	cmp	r2, r7
 8015f60:	dd5d      	ble.n	801601e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015f62:	9a01      	ldr	r2, [sp, #4]
 8015f64:	fb07 5502 	mla	r5, r7, r2, r5
 8015f68:	9f02      	ldr	r7, [sp, #8]
 8015f6a:	086a      	lsrs	r2, r5, #1
 8015f6c:	5cba      	ldrb	r2, [r7, r2]
 8015f6e:	07ef      	lsls	r7, r5, #31
 8015f70:	bf54      	ite	pl
 8015f72:	f002 020f 	andpl.w	r2, r2, #15
 8015f76:	1112      	asrmi	r2, r2, #4
 8015f78:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015f7c:	b2d2      	uxtb	r2, r2
 8015f7e:	2a00      	cmp	r2, #0
 8015f80:	d04d      	beq.n	801601e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015f82:	4d68      	ldr	r5, [pc, #416]	; (8016124 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 8015f84:	2aff      	cmp	r2, #255	; 0xff
 8015f86:	682f      	ldr	r7, [r5, #0]
 8015f88:	ea4f 05d7 	mov.w	r5, r7, lsr #3
 8015f8c:	ea4f 2917 	mov.w	r9, r7, lsr #8
 8015f90:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015f94:	ea4f 07c7 	mov.w	r7, r7, lsl #3
 8015f98:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8015f9c:	9503      	str	r5, [sp, #12]
 8015f9e:	b2ff      	uxtb	r7, r7
 8015fa0:	d043      	beq.n	801602a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015fa2:	f06f 0501 	mvn.w	r5, #1
 8015fa6:	fa1f fa82 	uxth.w	sl, r2
 8015faa:	43d2      	mvns	r2, r2
 8015fac:	fb19 f90a 	smulbb	r9, r9, sl
 8015fb0:	4375      	muls	r5, r6
 8015fb2:	fb17 f70a 	smulbb	r7, r7, sl
 8015fb6:	b2d2      	uxtb	r2, r2
 8015fb8:	f834 e005 	ldrh.w	lr, [r4, r5]
 8015fbc:	9504      	str	r5, [sp, #16]
 8015fbe:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015fc2:	9d03      	ldr	r5, [sp, #12]
 8015fc4:	fb15 f50a 	smulbb	r5, r5, sl
 8015fc8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015fcc:	fb0c 9c02 	mla	ip, ip, r2, r9
 8015fd0:	ea4f 09ee 	mov.w	r9, lr, asr #3
 8015fd4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015fd8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015fdc:	fa1f fc8c 	uxth.w	ip, ip
 8015fe0:	fa5f fe8e 	uxtb.w	lr, lr
 8015fe4:	fb09 5502 	mla	r5, r9, r2, r5
 8015fe8:	fb0e 7702 	mla	r7, lr, r2, r7
 8015fec:	b2ad      	uxth	r5, r5
 8015fee:	b2bf      	uxth	r7, r7
 8015ff0:	f105 0901 	add.w	r9, r5, #1
 8015ff4:	1c7a      	adds	r2, r7, #1
 8015ff6:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8015ffa:	f10c 0901 	add.w	r9, ip, #1
 8015ffe:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016002:	9a04      	ldr	r2, [sp, #16]
 8016004:	096d      	lsrs	r5, r5, #5
 8016006:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801600a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801600e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016012:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016016:	ea45 050c 	orr.w	r5, r5, ip
 801601a:	433d      	orrs	r5, r7
 801601c:	52a5      	strh	r5, [r4, r2]
 801601e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016020:	3e01      	subs	r6, #1
 8016022:	4410      	add	r0, r2
 8016024:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016026:	4411      	add	r1, r2
 8016028:	e74d      	b.n	8015ec6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801602a:	f06f 0201 	mvn.w	r2, #1
 801602e:	fb02 fe06 	mul.w	lr, r2, r6
 8016032:	9a03      	ldr	r2, [sp, #12]
 8016034:	00d5      	lsls	r5, r2, #3
 8016036:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 801603a:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 801603e:	f824 500e 	strh.w	r5, [r4, lr]
 8016042:	e7ec      	b.n	801601e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8016044:	f04f 0e00 	mov.w	lr, #0
 8016048:	eba3 020e 	sub.w	r2, r3, lr
 801604c:	2a00      	cmp	r2, #0
 801604e:	f77f af3d 	ble.w	8015ecc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8016052:	1402      	asrs	r2, r0, #16
 8016054:	9e01      	ldr	r6, [sp, #4]
 8016056:	140d      	asrs	r5, r1, #16
 8016058:	fb06 2505 	mla	r5, r6, r5, r2
 801605c:	9e02      	ldr	r6, [sp, #8]
 801605e:	086a      	lsrs	r2, r5, #1
 8016060:	07ed      	lsls	r5, r5, #31
 8016062:	5cb2      	ldrb	r2, [r6, r2]
 8016064:	bf54      	ite	pl
 8016066:	f002 020f 	andpl.w	r2, r2, #15
 801606a:	1112      	asrmi	r2, r2, #4
 801606c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016070:	b2d2      	uxtb	r2, r2
 8016072:	2a00      	cmp	r2, #0
 8016074:	d045      	beq.n	8016102 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8016076:	4d2b      	ldr	r5, [pc, #172]	; (8016124 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 8016078:	2aff      	cmp	r2, #255	; 0xff
 801607a:	682e      	ldr	r6, [r5, #0]
 801607c:	ea4f 2916 	mov.w	r9, r6, lsr #8
 8016080:	ea4f 05d6 	mov.w	r5, r6, lsr #3
 8016084:	ea4f 06c6 	mov.w	r6, r6, lsl #3
 8016088:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801608c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016090:	b2f6      	uxtb	r6, r6
 8016092:	d03d      	beq.n	8016110 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8016094:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016098:	fa1f fa82 	uxth.w	sl, r2
 801609c:	43d2      	mvns	r2, r2
 801609e:	fb19 f90a 	smulbb	r9, r9, sl
 80160a2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80160a6:	fb15 f50a 	smulbb	r5, r5, sl
 80160aa:	b2d2      	uxtb	r2, r2
 80160ac:	fb16 f60a 	smulbb	r6, r6, sl
 80160b0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80160b4:	fb07 9702 	mla	r7, r7, r2, r9
 80160b8:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80160bc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80160c0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80160c4:	b2bf      	uxth	r7, r7
 80160c6:	fa5f fc8c 	uxtb.w	ip, ip
 80160ca:	fb09 5502 	mla	r5, r9, r2, r5
 80160ce:	fb0c 6602 	mla	r6, ip, r2, r6
 80160d2:	b2ad      	uxth	r5, r5
 80160d4:	b2b6      	uxth	r6, r6
 80160d6:	f105 0901 	add.w	r9, r5, #1
 80160da:	1c72      	adds	r2, r6, #1
 80160dc:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 80160e0:	f107 0901 	add.w	r9, r7, #1
 80160e4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80160e8:	096d      	lsrs	r5, r5, #5
 80160ea:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80160ee:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80160f2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80160f6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80160fa:	433d      	orrs	r5, r7
 80160fc:	4335      	orrs	r5, r6
 80160fe:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 8016102:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016104:	f10e 0e01 	add.w	lr, lr, #1
 8016108:	4410      	add	r0, r2
 801610a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801610c:	4411      	add	r1, r2
 801610e:	e79b      	b.n	8016048 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x220>
 8016110:	00ed      	lsls	r5, r5, #3
 8016112:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 8016116:	ea45 05d6 	orr.w	r5, r5, r6, lsr #3
 801611a:	e7f0      	b.n	80160fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801611c:	b007      	add	sp, #28
 801611e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016122:	bf00      	nop
 8016124:	200125b8 	.word	0x200125b8

08016128 <_ZN8touchgfx8LCD16bppD1Ev>:
 8016128:	4770      	bx	lr

0801612a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801612a:	4770      	bx	lr

0801612c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801612c:	4770      	bx	lr

0801612e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801612e:	4770      	bx	lr

08016130 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016130:	4770      	bx	lr

08016132 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016132:	4770      	bx	lr

08016134 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016134:	4770      	bx	lr

08016136 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016136:	4770      	bx	lr

08016138 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016138:	4770      	bx	lr

0801613a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801613a:	4770      	bx	lr

0801613c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801613c:	4770      	bx	lr

0801613e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801613e:	4770      	bx	lr

08016140 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016140:	4770      	bx	lr

08016142 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016142:	4770      	bx	lr

08016144 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016144:	4770      	bx	lr

08016146 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016146:	4770      	bx	lr

08016148 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016148:	4770      	bx	lr

0801614a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801614a:	4770      	bx	lr

0801614c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801614c:	4770      	bx	lr

0801614e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801614e:	4770      	bx	lr

08016150 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016150:	4770      	bx	lr

08016152 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016152:	4770      	bx	lr

08016154 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016154:	4770      	bx	lr

08016156 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016156:	4770      	bx	lr

08016158 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016158:	4770      	bx	lr

0801615a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801615a:	4770      	bx	lr

0801615c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801615c:	4770      	bx	lr

0801615e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801615e:	4770      	bx	lr

08016160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016160:	4770      	bx	lr
	...

08016164 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8016164:	b508      	push	{r3, lr}
 8016166:	4b06      	ldr	r3, [pc, #24]	; (8016180 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8016168:	8818      	ldrh	r0, [r3, #0]
 801616a:	b928      	cbnz	r0, 8016178 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 801616c:	4b05      	ldr	r3, [pc, #20]	; (8016184 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801616e:	2154      	movs	r1, #84	; 0x54
 8016170:	4a05      	ldr	r2, [pc, #20]	; (8016188 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8016172:	4806      	ldr	r0, [pc, #24]	; (801618c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8016174:	f00a fdfc 	bl	8020d70 <__assert_func>
 8016178:	0040      	lsls	r0, r0, #1
 801617a:	b280      	uxth	r0, r0
 801617c:	bd08      	pop	{r3, pc}
 801617e:	bf00      	nop
 8016180:	200125aa 	.word	0x200125aa
 8016184:	08025392 	.word	0x08025392
 8016188:	08025917 	.word	0x08025917
 801618c:	080253d4 	.word	0x080253d4

08016190 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8016190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016194:	b08b      	sub	sp, #44	; 0x2c
 8016196:	460f      	mov	r7, r1
 8016198:	4616      	mov	r6, r2
 801619a:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801619e:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80161a2:	f1bb 0f00 	cmp.w	fp, #0
 80161a6:	d046      	beq.n	8016236 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 80161a8:	6810      	ldr	r0, [r2, #0]
 80161aa:	ad06      	add	r5, sp, #24
 80161ac:	6851      	ldr	r1, [r2, #4]
 80161ae:	c503      	stmia	r5!, {r0, r1}
 80161b0:	6818      	ldr	r0, [r3, #0]
 80161b2:	ad08      	add	r5, sp, #32
 80161b4:	6859      	ldr	r1, [r3, #4]
 80161b6:	c503      	stmia	r5!, {r0, r1}
 80161b8:	a806      	add	r0, sp, #24
 80161ba:	f7fa f95d 	bl	8010478 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80161be:	4631      	mov	r1, r6
 80161c0:	a808      	add	r0, sp, #32
 80161c2:	f7fa f941 	bl	8010448 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80161c6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80161ca:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80161ce:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80161d2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80161d6:	fb16 2103 	smlabb	r1, r6, r3, r2
 80161da:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80161de:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80161e2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80161e6:	4f5d      	ldr	r7, [pc, #372]	; (801635c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 80161e8:	440a      	add	r2, r1
 80161ea:	6838      	ldr	r0, [r7, #0]
 80161ec:	46b9      	mov	r9, r7
 80161ee:	f8ad 2020 	strh.w	r2, [sp, #32]
 80161f2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80161f6:	4413      	add	r3, r2
 80161f8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80161fc:	6803      	ldr	r3, [r0, #0]
 80161fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016200:	4798      	blx	r3
 8016202:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016206:	d019      	beq.n	801623c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8016208:	f010 0f04 	tst.w	r0, #4
 801620c:	d01a      	beq.n	8016244 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801620e:	f8d9 0000 	ldr.w	r0, [r9]
 8016212:	b2ad      	uxth	r5, r5
 8016214:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8016218:	6801      	ldr	r1, [r0, #0]
 801621a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801621e:	9501      	str	r5, [sp, #4]
 8016220:	e9cd b403 	strd	fp, r4, [sp, #12]
 8016224:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8016228:	9402      	str	r4, [sp, #8]
 801622a:	fa1f f488 	uxth.w	r4, r8
 801622e:	9400      	str	r4, [sp, #0]
 8016230:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 8016232:	4631      	mov	r1, r6
 8016234:	47a0      	blx	r4
 8016236:	b00b      	add	sp, #44	; 0x2c
 8016238:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801623c:	b914      	cbnz	r4, 8016244 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801623e:	f010 0f01 	tst.w	r0, #1
 8016242:	e7e3      	b.n	801620c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8016244:	f8d9 0000 	ldr.w	r0, [r9]
 8016248:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801624c:	6803      	ldr	r3, [r0, #0]
 801624e:	6a1b      	ldr	r3, [r3, #32]
 8016250:	4798      	blx	r3
 8016252:	4b43      	ldr	r3, [pc, #268]	; (8016360 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 8016254:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8016258:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801625c:	881a      	ldrh	r2, [r3, #0]
 801625e:	469a      	mov	sl, r3
 8016260:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8016264:	fb05 f502 	mul.w	r5, r5, r2
 8016268:	fb02 1404 	mla	r4, r2, r4, r1
 801626c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016270:	d058      	beq.n	8016324 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x194>
 8016272:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8016276:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801627a:	fa1f f28b 	uxth.w	r2, fp
 801627e:	469e      	mov	lr, r3
 8016280:	fa1f f989 	uxth.w	r9, r9
 8016284:	42ac      	cmp	r4, r5
 8016286:	d263      	bcs.n	8016350 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 8016288:	eb04 0a07 	add.w	sl, r4, r7
 801628c:	4554      	cmp	r4, sl
 801628e:	d23c      	bcs.n	801630a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17a>
 8016290:	8821      	ldrh	r1, [r4, #0]
 8016292:	f836 3b02 	ldrh.w	r3, [r6], #2
 8016296:	1208      	asrs	r0, r1, #8
 8016298:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801629c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80162a0:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80162a4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80162a8:	00c9      	lsls	r1, r1, #3
 80162aa:	fb10 f009 	smulbb	r0, r0, r9
 80162ae:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80162b2:	b2c9      	uxtb	r1, r1
 80162b4:	fb0c 0c02 	mla	ip, ip, r2, r0
 80162b8:	10d8      	asrs	r0, r3, #3
 80162ba:	fb11 f109 	smulbb	r1, r1, r9
 80162be:	00db      	lsls	r3, r3, #3
 80162c0:	fa1f fc8c 	uxth.w	ip, ip
 80162c4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80162c8:	fb1b fb09 	smulbb	fp, fp, r9
 80162cc:	b2db      	uxtb	r3, r3
 80162ce:	fb03 1302 	mla	r3, r3, r2, r1
 80162d2:	f10c 0101 	add.w	r1, ip, #1
 80162d6:	fb00 b002 	mla	r0, r0, r2, fp
 80162da:	b29b      	uxth	r3, r3
 80162dc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80162e0:	1c59      	adds	r1, r3, #1
 80162e2:	b280      	uxth	r0, r0
 80162e4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80162e8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80162ec:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80162f0:	ea4c 0c03 	orr.w	ip, ip, r3
 80162f4:	1c43      	adds	r3, r0, #1
 80162f6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80162fa:	0940      	lsrs	r0, r0, #5
 80162fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016300:	ea4c 0c00 	orr.w	ip, ip, r0
 8016304:	f824 cb02 	strh.w	ip, [r4], #2
 8016308:	e7c0      	b.n	801628c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 801630a:	f8be 3000 	ldrh.w	r3, [lr]
 801630e:	eba3 0308 	sub.w	r3, r3, r8
 8016312:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016316:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801631a:	eba3 0308 	sub.w	r3, r3, r8
 801631e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016322:	e7af      	b.n	8016284 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 8016324:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016328:	f8d9 0000 	ldr.w	r0, [r9]
 801632c:	42ac      	cmp	r4, r5
 801632e:	6803      	ldr	r3, [r0, #0]
 8016330:	d20e      	bcs.n	8016350 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 8016332:	f8d3 802c 	ldr.w	r8, [r3, #44]	; 0x2c
 8016336:	4632      	mov	r2, r6
 8016338:	463b      	mov	r3, r7
 801633a:	4621      	mov	r1, r4
 801633c:	47c0      	blx	r8
 801633e:	f8ba 3000 	ldrh.w	r3, [sl]
 8016342:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016346:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801634a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801634e:	e7eb      	b.n	8016328 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x198>
 8016350:	4b02      	ldr	r3, [pc, #8]	; (801635c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 8016352:	6818      	ldr	r0, [r3, #0]
 8016354:	6803      	ldr	r3, [r0, #0]
 8016356:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016358:	4798      	blx	r3
 801635a:	e76c      	b.n	8016236 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 801635c:	200125b0 	.word	0x200125b0
 8016360:	200125aa 	.word	0x200125aa

08016364 <_ZN8touchgfx8LCD16bppD0Ev>:
 8016364:	b510      	push	{r4, lr}
 8016366:	4604      	mov	r4, r0
 8016368:	2178      	movs	r1, #120	; 0x78
 801636a:	f009 f975 	bl	801f658 <_ZdlPvj>
 801636e:	4620      	mov	r0, r4
 8016370:	bd10      	pop	{r4, pc}

08016372 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016372:	b510      	push	{r4, lr}
 8016374:	4604      	mov	r4, r0
 8016376:	2104      	movs	r1, #4
 8016378:	f009 f96e 	bl	801f658 <_ZdlPvj>
 801637c:	4620      	mov	r0, r4
 801637e:	bd10      	pop	{r4, pc}

08016380 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016380:	b510      	push	{r4, lr}
 8016382:	4604      	mov	r4, r0
 8016384:	2104      	movs	r1, #4
 8016386:	f009 f967 	bl	801f658 <_ZdlPvj>
 801638a:	4620      	mov	r0, r4
 801638c:	bd10      	pop	{r4, pc}

0801638e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801638e:	b510      	push	{r4, lr}
 8016390:	4604      	mov	r4, r0
 8016392:	2104      	movs	r1, #4
 8016394:	f009 f960 	bl	801f658 <_ZdlPvj>
 8016398:	4620      	mov	r0, r4
 801639a:	bd10      	pop	{r4, pc}

0801639c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801639c:	b510      	push	{r4, lr}
 801639e:	4604      	mov	r4, r0
 80163a0:	2104      	movs	r1, #4
 80163a2:	f009 f959 	bl	801f658 <_ZdlPvj>
 80163a6:	4620      	mov	r0, r4
 80163a8:	bd10      	pop	{r4, pc}

080163aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80163aa:	b510      	push	{r4, lr}
 80163ac:	4604      	mov	r4, r0
 80163ae:	2104      	movs	r1, #4
 80163b0:	f009 f952 	bl	801f658 <_ZdlPvj>
 80163b4:	4620      	mov	r0, r4
 80163b6:	bd10      	pop	{r4, pc}

080163b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80163b8:	b510      	push	{r4, lr}
 80163ba:	4604      	mov	r4, r0
 80163bc:	2104      	movs	r1, #4
 80163be:	f009 f94b 	bl	801f658 <_ZdlPvj>
 80163c2:	4620      	mov	r0, r4
 80163c4:	bd10      	pop	{r4, pc}

080163c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80163c6:	b510      	push	{r4, lr}
 80163c8:	4604      	mov	r4, r0
 80163ca:	2104      	movs	r1, #4
 80163cc:	f009 f944 	bl	801f658 <_ZdlPvj>
 80163d0:	4620      	mov	r0, r4
 80163d2:	bd10      	pop	{r4, pc}

080163d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80163d4:	b510      	push	{r4, lr}
 80163d6:	4604      	mov	r4, r0
 80163d8:	2104      	movs	r1, #4
 80163da:	f009 f93d 	bl	801f658 <_ZdlPvj>
 80163de:	4620      	mov	r0, r4
 80163e0:	bd10      	pop	{r4, pc}

080163e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80163e2:	b510      	push	{r4, lr}
 80163e4:	4604      	mov	r4, r0
 80163e6:	2104      	movs	r1, #4
 80163e8:	f009 f936 	bl	801f658 <_ZdlPvj>
 80163ec:	4620      	mov	r0, r4
 80163ee:	bd10      	pop	{r4, pc}

080163f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80163f0:	b510      	push	{r4, lr}
 80163f2:	4604      	mov	r4, r0
 80163f4:	2104      	movs	r1, #4
 80163f6:	f009 f92f 	bl	801f658 <_ZdlPvj>
 80163fa:	4620      	mov	r0, r4
 80163fc:	bd10      	pop	{r4, pc}

080163fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80163fe:	b510      	push	{r4, lr}
 8016400:	4604      	mov	r4, r0
 8016402:	2104      	movs	r1, #4
 8016404:	f009 f928 	bl	801f658 <_ZdlPvj>
 8016408:	4620      	mov	r0, r4
 801640a:	bd10      	pop	{r4, pc}

0801640c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801640c:	b510      	push	{r4, lr}
 801640e:	4604      	mov	r4, r0
 8016410:	2104      	movs	r1, #4
 8016412:	f009 f921 	bl	801f658 <_ZdlPvj>
 8016416:	4620      	mov	r0, r4
 8016418:	bd10      	pop	{r4, pc}

0801641a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801641a:	b510      	push	{r4, lr}
 801641c:	4604      	mov	r4, r0
 801641e:	2104      	movs	r1, #4
 8016420:	f009 f91a 	bl	801f658 <_ZdlPvj>
 8016424:	4620      	mov	r0, r4
 8016426:	bd10      	pop	{r4, pc}

08016428 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016428:	b510      	push	{r4, lr}
 801642a:	4604      	mov	r4, r0
 801642c:	2104      	movs	r1, #4
 801642e:	f009 f913 	bl	801f658 <_ZdlPvj>
 8016432:	4620      	mov	r0, r4
 8016434:	bd10      	pop	{r4, pc}

08016436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016436:	b510      	push	{r4, lr}
 8016438:	4604      	mov	r4, r0
 801643a:	2104      	movs	r1, #4
 801643c:	f009 f90c 	bl	801f658 <_ZdlPvj>
 8016440:	4620      	mov	r0, r4
 8016442:	bd10      	pop	{r4, pc}

08016444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016444:	b510      	push	{r4, lr}
 8016446:	4604      	mov	r4, r0
 8016448:	2104      	movs	r1, #4
 801644a:	f009 f905 	bl	801f658 <_ZdlPvj>
 801644e:	4620      	mov	r0, r4
 8016450:	bd10      	pop	{r4, pc}

08016452 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016452:	b510      	push	{r4, lr}
 8016454:	4604      	mov	r4, r0
 8016456:	2104      	movs	r1, #4
 8016458:	f009 f8fe 	bl	801f658 <_ZdlPvj>
 801645c:	4620      	mov	r0, r4
 801645e:	bd10      	pop	{r4, pc}

08016460 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016460:	b510      	push	{r4, lr}
 8016462:	4604      	mov	r4, r0
 8016464:	2104      	movs	r1, #4
 8016466:	f009 f8f7 	bl	801f658 <_ZdlPvj>
 801646a:	4620      	mov	r0, r4
 801646c:	bd10      	pop	{r4, pc}

0801646e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801646e:	b510      	push	{r4, lr}
 8016470:	4604      	mov	r4, r0
 8016472:	2104      	movs	r1, #4
 8016474:	f009 f8f0 	bl	801f658 <_ZdlPvj>
 8016478:	4620      	mov	r0, r4
 801647a:	bd10      	pop	{r4, pc}

0801647c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801647c:	b510      	push	{r4, lr}
 801647e:	4604      	mov	r4, r0
 8016480:	2104      	movs	r1, #4
 8016482:	f009 f8e9 	bl	801f658 <_ZdlPvj>
 8016486:	4620      	mov	r0, r4
 8016488:	bd10      	pop	{r4, pc}

0801648a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801648a:	b510      	push	{r4, lr}
 801648c:	4604      	mov	r4, r0
 801648e:	2104      	movs	r1, #4
 8016490:	f009 f8e2 	bl	801f658 <_ZdlPvj>
 8016494:	4620      	mov	r0, r4
 8016496:	bd10      	pop	{r4, pc}

08016498 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016498:	b510      	push	{r4, lr}
 801649a:	4604      	mov	r4, r0
 801649c:	2104      	movs	r1, #4
 801649e:	f009 f8db 	bl	801f658 <_ZdlPvj>
 80164a2:	4620      	mov	r0, r4
 80164a4:	bd10      	pop	{r4, pc}

080164a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80164a6:	b510      	push	{r4, lr}
 80164a8:	4604      	mov	r4, r0
 80164aa:	2104      	movs	r1, #4
 80164ac:	f009 f8d4 	bl	801f658 <_ZdlPvj>
 80164b0:	4620      	mov	r0, r4
 80164b2:	bd10      	pop	{r4, pc}

080164b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80164b4:	b510      	push	{r4, lr}
 80164b6:	4604      	mov	r4, r0
 80164b8:	2104      	movs	r1, #4
 80164ba:	f009 f8cd 	bl	801f658 <_ZdlPvj>
 80164be:	4620      	mov	r0, r4
 80164c0:	bd10      	pop	{r4, pc}

080164c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80164c2:	b510      	push	{r4, lr}
 80164c4:	4604      	mov	r4, r0
 80164c6:	2104      	movs	r1, #4
 80164c8:	f009 f8c6 	bl	801f658 <_ZdlPvj>
 80164cc:	4620      	mov	r0, r4
 80164ce:	bd10      	pop	{r4, pc}

080164d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80164d0:	b510      	push	{r4, lr}
 80164d2:	4604      	mov	r4, r0
 80164d4:	2104      	movs	r1, #4
 80164d6:	f009 f8bf 	bl	801f658 <_ZdlPvj>
 80164da:	4620      	mov	r0, r4
 80164dc:	bd10      	pop	{r4, pc}

080164de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80164de:	b510      	push	{r4, lr}
 80164e0:	4604      	mov	r4, r0
 80164e2:	2104      	movs	r1, #4
 80164e4:	f009 f8b8 	bl	801f658 <_ZdlPvj>
 80164e8:	4620      	mov	r0, r4
 80164ea:	bd10      	pop	{r4, pc}

080164ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80164ec:	b510      	push	{r4, lr}
 80164ee:	4604      	mov	r4, r0
 80164f0:	2104      	movs	r1, #4
 80164f2:	f009 f8b1 	bl	801f658 <_ZdlPvj>
 80164f6:	4620      	mov	r0, r4
 80164f8:	bd10      	pop	{r4, pc}
	...

080164fc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80164fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016500:	460d      	mov	r5, r1
 8016502:	b087      	sub	sp, #28
 8016504:	4614      	mov	r4, r2
 8016506:	4698      	mov	r8, r3
 8016508:	b333      	cbz	r3, 8016558 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801650a:	4608      	mov	r0, r1
 801650c:	f7f5 f91b 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016510:	bb10      	cbnz	r0, 8016558 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8016512:	6828      	ldr	r0, [r5, #0]
 8016514:	ab04      	add	r3, sp, #16
 8016516:	6869      	ldr	r1, [r5, #4]
 8016518:	4e72      	ldr	r6, [pc, #456]	; (80166e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1e8>)
 801651a:	c303      	stmia	r3!, {r0, r1}
 801651c:	a804      	add	r0, sp, #16
 801651e:	f7f9 ffab 	bl	8010478 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016522:	6830      	ldr	r0, [r6, #0]
 8016524:	6803      	ldr	r3, [r0, #0]
 8016526:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016528:	4798      	blx	r3
 801652a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801652e:	d016      	beq.n	801655e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8016530:	f010 0f08 	tst.w	r0, #8
 8016534:	d016      	beq.n	8016564 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x68>
 8016536:	f8bd 5016 	ldrh.w	r5, [sp, #22]
 801653a:	6830      	ldr	r0, [r6, #0]
 801653c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016540:	6801      	ldr	r1, [r0, #0]
 8016542:	9501      	str	r5, [sp, #4]
 8016544:	f8bd 5014 	ldrh.w	r5, [sp, #20]
 8016548:	f8cd 8008 	str.w	r8, [sp, #8]
 801654c:	9500      	str	r5, [sp, #0]
 801654e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016552:	6c8d      	ldr	r5, [r1, #72]	; 0x48
 8016554:	4621      	mov	r1, r4
 8016556:	47a8      	blx	r5
 8016558:	b007      	add	sp, #28
 801655a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801655e:	f010 0f02 	tst.w	r0, #2
 8016562:	e7e7      	b.n	8016534 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x38>
 8016564:	6830      	ldr	r0, [r6, #0]
 8016566:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801656a:	6803      	ldr	r3, [r0, #0]
 801656c:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8016570:	6a1b      	ldr	r3, [r3, #32]
 8016572:	4798      	blx	r3
 8016574:	495c      	ldr	r1, [pc, #368]	; (80166e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ec>)
 8016576:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 801657a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801657e:	880b      	ldrh	r3, [r1, #0]
 8016580:	468e      	mov	lr, r1
 8016582:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8016586:	fb03 c202 	mla	r2, r3, r2, ip
 801658a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801658e:	fb07 f203 	mul.w	r2, r7, r3
 8016592:	d053      	beq.n	801663c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 8016594:	fa1f f388 	uxth.w	r3, r8
 8016598:	f1c8 07ff 	rsb	r7, r8, #255	; 0xff
 801659c:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 80165a0:	ea4f 2814 	mov.w	r8, r4, lsr #8
 80165a4:	00e4      	lsls	r4, r4, #3
 80165a6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80165aa:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 80165ae:	eb00 0142 	add.w	r1, r0, r2, lsl #1
 80165b2:	b2e4      	uxtb	r4, r4
 80165b4:	fb09 f903 	mul.w	r9, r9, r3
 80165b8:	fb08 f803 	mul.w	r8, r8, r3
 80165bc:	006d      	lsls	r5, r5, #1
 80165be:	4363      	muls	r3, r4
 80165c0:	b2bc      	uxth	r4, r7
 80165c2:	4288      	cmp	r0, r1
 80165c4:	f080 8088 	bcs.w	80166d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 80165c8:	eb00 0a05 	add.w	sl, r0, r5
 80165cc:	4550      	cmp	r0, sl
 80165ce:	d22f      	bcs.n	8016630 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x134>
 80165d0:	8802      	ldrh	r2, [r0, #0]
 80165d2:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80165d6:	10d7      	asrs	r7, r2, #3
 80165d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80165dc:	00d2      	lsls	r2, r2, #3
 80165de:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80165e2:	fb1c fc04 	smulbb	ip, ip, r4
 80165e6:	b2d2      	uxtb	r2, r2
 80165e8:	fb17 f704 	smulbb	r7, r7, r4
 80165ec:	fb12 f204 	smulbb	r2, r2, r4
 80165f0:	44c4      	add	ip, r8
 80165f2:	444f      	add	r7, r9
 80165f4:	fa1f fc8c 	uxth.w	ip, ip
 80165f8:	441a      	add	r2, r3
 80165fa:	b2bf      	uxth	r7, r7
 80165fc:	b292      	uxth	r2, r2
 80165fe:	f10c 0b01 	add.w	fp, ip, #1
 8016602:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8016606:	f102 0b01 	add.w	fp, r2, #1
 801660a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801660e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016612:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016616:	ea4c 0202 	orr.w	r2, ip, r2
 801661a:	f107 0c01 	add.w	ip, r7, #1
 801661e:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8016622:	097f      	lsrs	r7, r7, #5
 8016624:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016628:	433a      	orrs	r2, r7
 801662a:	f820 2b02 	strh.w	r2, [r0], #2
 801662e:	e7cd      	b.n	80165cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd0>
 8016630:	f8be 2000 	ldrh.w	r2, [lr]
 8016634:	ebc5 0242 	rsb	r2, r5, r2, lsl #1
 8016638:	4410      	add	r0, r2
 801663a:	e7c2      	b.n	80165c2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xc6>
 801663c:	07db      	lsls	r3, r3, #31
 801663e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016642:	d50e      	bpl.n	8016662 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x166>
 8016644:	006d      	lsls	r5, r5, #1
 8016646:	4290      	cmp	r0, r2
 8016648:	d246      	bcs.n	80166d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 801664a:	1943      	adds	r3, r0, r5
 801664c:	4298      	cmp	r0, r3
 801664e:	d202      	bcs.n	8016656 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x15a>
 8016650:	f820 4b02 	strh.w	r4, [r0], #2
 8016654:	e7fa      	b.n	801664c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x150>
 8016656:	f8be 3000 	ldrh.w	r3, [lr]
 801665a:	ebc5 0343 	rsb	r3, r5, r3, lsl #1
 801665e:	4418      	add	r0, r3
 8016660:	e7f1      	b.n	8016646 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x14a>
 8016662:	0787      	lsls	r7, r0, #30
 8016664:	462b      	mov	r3, r5
 8016666:	d00a      	beq.n	801667e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x182>
 8016668:	4603      	mov	r3, r0
 801666a:	4293      	cmp	r3, r2
 801666c:	d205      	bcs.n	801667a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x17e>
 801666e:	801c      	strh	r4, [r3, #0]
 8016670:	f8be 1000 	ldrh.w	r1, [lr]
 8016674:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8016678:	e7f7      	b.n	801666a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x16e>
 801667a:	3002      	adds	r0, #2
 801667c:	1e6b      	subs	r3, r5, #1
 801667e:	07dd      	lsls	r5, r3, #31
 8016680:	d50d      	bpl.n	801669e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a2>
 8016682:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8016686:	3901      	subs	r1, #1
 8016688:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801668c:	4291      	cmp	r1, r2
 801668e:	d205      	bcs.n	801669c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a0>
 8016690:	800c      	strh	r4, [r1, #0]
 8016692:	f8be 5000 	ldrh.w	r5, [lr]
 8016696:	eb01 0145 	add.w	r1, r1, r5, lsl #1
 801669a:	e7f7      	b.n	801668c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x190>
 801669c:	3b01      	subs	r3, #1
 801669e:	b1db      	cbz	r3, 80166d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 80166a0:	b2a1      	uxth	r1, r4
 80166a2:	105b      	asrs	r3, r3, #1
 80166a4:	ea41 4404 	orr.w	r4, r1, r4, lsl #16
 80166a8:	009b      	lsls	r3, r3, #2
 80166aa:	4290      	cmp	r0, r2
 80166ac:	d214      	bcs.n	80166d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 80166ae:	0781      	lsls	r1, r0, #30
 80166b0:	d006      	beq.n	80166c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c4>
 80166b2:	4b0e      	ldr	r3, [pc, #56]	; (80166ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f0>)
 80166b4:	f44f 7162 	mov.w	r1, #904	; 0x388
 80166b8:	4a0d      	ldr	r2, [pc, #52]	; (80166f0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f4>)
 80166ba:	480e      	ldr	r0, [pc, #56]	; (80166f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f8>)
 80166bc:	f00a fb58 	bl	8020d70 <__assert_func>
 80166c0:	18c5      	adds	r5, r0, r3
 80166c2:	4601      	mov	r1, r0
 80166c4:	42a9      	cmp	r1, r5
 80166c6:	d202      	bcs.n	80166ce <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1d2>
 80166c8:	f841 4b04 	str.w	r4, [r1], #4
 80166cc:	e7fa      	b.n	80166c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c8>
 80166ce:	f8be 1000 	ldrh.w	r1, [lr]
 80166d2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80166d6:	e7e8      	b.n	80166aa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ae>
 80166d8:	6830      	ldr	r0, [r6, #0]
 80166da:	6803      	ldr	r3, [r0, #0]
 80166dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80166de:	4798      	blx	r3
 80166e0:	e73a      	b.n	8016558 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80166e2:	bf00      	nop
 80166e4:	200125b0 	.word	0x200125b0
 80166e8:	200125aa 	.word	0x200125aa
 80166ec:	08025331 	.word	0x08025331
 80166f0:	08025ae4 	.word	0x08025ae4
 80166f4:	08025360 	.word	0x08025360

080166f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80166f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166fc:	4f97      	ldr	r7, [pc, #604]	; (801695c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 80166fe:	4616      	mov	r6, r2
 8016700:	b08f      	sub	sp, #60	; 0x3c
 8016702:	4604      	mov	r4, r0
 8016704:	683a      	ldr	r2, [r7, #0]
 8016706:	4689      	mov	r9, r1
 8016708:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801670c:	2a02      	cmp	r2, #2
 801670e:	d106      	bne.n	801671e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8016710:	4b93      	ldr	r3, [pc, #588]	; (8016960 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 8016712:	f44f 7132 	mov.w	r1, #712	; 0x2c8
 8016716:	4a93      	ldr	r2, [pc, #588]	; (8016964 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8016718:	4893      	ldr	r0, [pc, #588]	; (8016968 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 801671a:	f00a fb29 	bl	8020d70 <__assert_func>
 801671e:	ad0e      	add	r5, sp, #56	; 0x38
 8016720:	f825 3d24 	strh.w	r3, [r5, #-36]!
 8016724:	4628      	mov	r0, r5
 8016726:	f7fd fa43 	bl	8013bb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801672a:	6823      	ldr	r3, [r4, #0]
 801672c:	4680      	mov	r8, r0
 801672e:	4620      	mov	r0, r4
 8016730:	6a1b      	ldr	r3, [r3, #32]
 8016732:	4798      	blx	r3
 8016734:	4580      	cmp	r8, r0
 8016736:	d004      	beq.n	8016742 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8016738:	4b8c      	ldr	r3, [pc, #560]	; (801696c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 801673a:	f240 21ca 	movw	r1, #714	; 0x2ca
 801673e:	4a89      	ldr	r2, [pc, #548]	; (8016964 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8016740:	e7ea      	b.n	8016718 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8016742:	4628      	mov	r0, r5
 8016744:	f7fd f9aa 	bl	8013a9c <_ZNK8touchgfx6Bitmap7getDataEv>
 8016748:	4680      	mov	r8, r0
 801674a:	b920      	cbnz	r0, 8016756 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801674c:	4b88      	ldr	r3, [pc, #544]	; (8016970 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 801674e:	f44f 7133 	mov.w	r1, #716	; 0x2cc
 8016752:	4a84      	ldr	r2, [pc, #528]	; (8016964 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8016754:	e7e0      	b.n	8016718 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8016756:	6830      	ldr	r0, [r6, #0]
 8016758:	ab06      	add	r3, sp, #24
 801675a:	6871      	ldr	r1, [r6, #4]
 801675c:	f10d 0b20 	add.w	fp, sp, #32
 8016760:	f9b6 a000 	ldrsh.w	sl, [r6]
 8016764:	c303      	stmia	r3!, {r0, r1}
 8016766:	f8d9 1004 	ldr.w	r1, [r9, #4]
 801676a:	ab08      	add	r3, sp, #32
 801676c:	f8d9 0000 	ldr.w	r0, [r9]
 8016770:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8016774:	c303      	stmia	r3!, {r0, r1}
 8016776:	4628      	mov	r0, r5
 8016778:	f7fd f888 	bl	801388c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801677c:	4606      	mov	r6, r0
 801677e:	4628      	mov	r0, r5
 8016780:	4d7c      	ldr	r5, [pc, #496]	; (8016974 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8016782:	f7fd f8bd 	bl	8013900 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016786:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 801678a:	a806      	add	r0, sp, #24
 801678c:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8016790:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8016794:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8016798:	f7f9 fe6e 	bl	8010478 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801679c:	4658      	mov	r0, fp
 801679e:	f7f9 fe6b 	bl	8010478 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80167a2:	a80a      	add	r0, sp, #40	; 0x28
 80167a4:	f7f9 fe68 	bl	8010478 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80167a8:	4b73      	ldr	r3, [pc, #460]	; (8016978 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 80167aa:	2100      	movs	r1, #0
 80167ac:	f9b5 2000 	ldrsh.w	r2, [r5]
 80167b0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80167b4:	4658      	mov	r0, fp
 80167b6:	910c      	str	r1, [sp, #48]	; 0x30
 80167b8:	a90c      	add	r1, sp, #48	; 0x30
 80167ba:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80167be:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80167c2:	f7f4 ff7d 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 80167c6:	4658      	mov	r0, fp
 80167c8:	f7f4 ffbd 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 80167cc:	2800      	cmp	r0, #0
 80167ce:	f040 809a 	bne.w	8016906 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
 80167d2:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 80167d6:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80167da:	4288      	cmp	r0, r1
 80167dc:	db38      	blt.n	8016850 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x158>
 80167de:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 80167e2:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80167e6:	429a      	cmp	r2, r3
 80167e8:	db32      	blt.n	8016850 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x158>
 80167ea:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 80167ee:	4430      	add	r0, r6
 80167f0:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80167f4:	4431      	add	r1, r6
 80167f6:	b200      	sxth	r0, r0
 80167f8:	b209      	sxth	r1, r1
 80167fa:	4288      	cmp	r0, r1
 80167fc:	dc28      	bgt.n	8016850 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x158>
 80167fe:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8016802:	440a      	add	r2, r1
 8016804:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8016808:	440b      	add	r3, r1
 801680a:	b212      	sxth	r2, r2
 801680c:	b21b      	sxth	r3, r3
 801680e:	429a      	cmp	r2, r3
 8016810:	dc1e      	bgt.n	8016850 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x158>
 8016812:	6823      	ldr	r3, [r4, #0]
 8016814:	4620      	mov	r0, r4
 8016816:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016818:	4798      	blx	r3
 801681a:	4682      	mov	sl, r0
 801681c:	6838      	ldr	r0, [r7, #0]
 801681e:	6803      	ldr	r3, [r0, #0]
 8016820:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016822:	4798      	blx	r3
 8016824:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016828:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801682c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8016830:	1a5b      	subs	r3, r3, r1
 8016832:	b29b      	uxth	r3, r3
 8016834:	b21c      	sxth	r4, r3
 8016836:	2c00      	cmp	r4, #0
 8016838:	dc0f      	bgt.n	801685a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x162>
 801683a:	bf18      	it	ne
 801683c:	f8ad 1020 	strhne.w	r1, [sp, #32]
 8016840:	4644      	mov	r4, r8
 8016842:	bf1e      	ittt	ne
 8016844:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 8016848:	185b      	addne	r3, r3, r1
 801684a:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 801684e:	e009      	b.n	8016864 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16c>
 8016850:	4b4a      	ldr	r3, [pc, #296]	; (801697c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8016852:	f240 21da 	movw	r1, #730	; 0x2da
 8016856:	4a43      	ldr	r2, [pc, #268]	; (8016964 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8016858:	e75e      	b.n	8016718 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801685a:	1ad3      	subs	r3, r2, r3
 801685c:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8016860:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8016864:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 8016868:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801686c:	1b9b      	subs	r3, r3, r6
 801686e:	b29b      	uxth	r3, r3
 8016870:	b219      	sxth	r1, r3
 8016872:	2900      	cmp	r1, #0
 8016874:	dd4b      	ble.n	801690e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x216>
 8016876:	4351      	muls	r1, r2
 8016878:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801687c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016880:	1acb      	subs	r3, r1, r3
 8016882:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016886:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801688a:	2e00      	cmp	r6, #0
 801688c:	dd3b      	ble.n	8016906 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
 801688e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8016892:	2b00      	cmp	r3, #0
 8016894:	dd37      	ble.n	8016906 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
 8016896:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801689a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801689e:	fb0a f90c 	mul.w	r9, sl, ip
 80168a2:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 80168a6:	4481      	add	r9, r0
 80168a8:	8828      	ldrh	r0, [r5, #0]
 80168aa:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 80168ae:	1a41      	subs	r1, r0, r1
 80168b0:	42ae      	cmp	r6, r5
 80168b2:	bfa8      	it	ge
 80168b4:	462e      	movge	r6, r5
 80168b6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80168ba:	428e      	cmp	r6, r1
 80168bc:	bfa8      	it	ge
 80168be:	460e      	movge	r6, r1
 80168c0:	429d      	cmp	r5, r3
 80168c2:	bfa8      	it	ge
 80168c4:	461d      	movge	r5, r3
 80168c6:	4b2c      	ldr	r3, [pc, #176]	; (8016978 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 80168c8:	881b      	ldrh	r3, [r3, #0]
 80168ca:	eba3 030c 	sub.w	r3, r3, ip
 80168ce:	429d      	cmp	r5, r3
 80168d0:	bfa8      	it	ge
 80168d2:	461d      	movge	r5, r3
 80168d4:	42b0      	cmp	r0, r6
 80168d6:	d12c      	bne.n	8016932 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x23a>
 80168d8:	4290      	cmp	r0, r2
 80168da:	d12a      	bne.n	8016932 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x23a>
 80168dc:	6838      	ldr	r0, [r7, #0]
 80168de:	9203      	str	r2, [sp, #12]
 80168e0:	6803      	ldr	r3, [r0, #0]
 80168e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80168e4:	4798      	blx	r3
 80168e6:	07c3      	lsls	r3, r0, #31
 80168e8:	d51a      	bpl.n	8016920 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x228>
 80168ea:	9a03      	ldr	r2, [sp, #12]
 80168ec:	6838      	ldr	r0, [r7, #0]
 80168ee:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 80168f2:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80168f6:	6803      	ldr	r3, [r0, #0]
 80168f8:	9200      	str	r2, [sp, #0]
 80168fa:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 80168fc:	4623      	mov	r3, r4
 80168fe:	e89b 0006 	ldmia.w	fp, {r1, r2}
 8016902:	47a8      	blx	r5
 8016904:	4680      	mov	r8, r0
 8016906:	4640      	mov	r0, r8
 8016908:	b00f      	add	sp, #60	; 0x3c
 801690a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801690e:	bf1f      	itttt	ne
 8016910:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 8016914:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 8016918:	185b      	addne	r3, r3, r1
 801691a:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 801691e:	e7b2      	b.n	8016886 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18e>
 8016920:	6838      	ldr	r0, [r7, #0]
 8016922:	464a      	mov	r2, r9
 8016924:	4621      	mov	r1, r4
 8016926:	6803      	ldr	r3, [r0, #0]
 8016928:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 801692a:	fb05 f30a 	mul.w	r3, r5, sl
 801692e:	47b0      	blx	r6
 8016930:	e7e9      	b.n	8016906 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
 8016932:	4355      	muls	r5, r2
 8016934:	0076      	lsls	r6, r6, #1
 8016936:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 801693a:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 801693e:	9303      	str	r3, [sp, #12]
 8016940:	9b03      	ldr	r3, [sp, #12]
 8016942:	429c      	cmp	r4, r3
 8016944:	d2df      	bcs.n	8016906 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
 8016946:	6838      	ldr	r0, [r7, #0]
 8016948:	464a      	mov	r2, r9
 801694a:	4621      	mov	r1, r4
 801694c:	44d1      	add	r9, sl
 801694e:	6803      	ldr	r3, [r0, #0]
 8016950:	445c      	add	r4, fp
 8016952:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016954:	461d      	mov	r5, r3
 8016956:	4633      	mov	r3, r6
 8016958:	47a8      	blx	r5
 801695a:	e7f1      	b.n	8016940 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x248>
 801695c:	200125b0 	.word	0x200125b0
 8016960:	08025157 	.word	0x08025157
 8016964:	080259c7 	.word	0x080259c7
 8016968:	08025360 	.word	0x08025360
 801696c:	08025209 	.word	0x08025209
 8016970:	0802525e 	.word	0x0802525e
 8016974:	200125aa 	.word	0x200125aa
 8016978:	200125ac 	.word	0x200125ac
 801697c:	0802529c 	.word	0x0802529c

08016980 <_ZN8touchgfx8LCD16bppC1Ev>:
 8016980:	2200      	movs	r2, #0
 8016982:	4910      	ldr	r1, [pc, #64]	; (80169c4 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8016984:	6042      	str	r2, [r0, #4]
 8016986:	6001      	str	r1, [r0, #0]
 8016988:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801698c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8016990:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8016994:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8016998:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801699c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80169a0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80169a4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80169a8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80169ac:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80169b0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80169b4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80169b8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80169bc:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80169c0:	4770      	bx	lr
 80169c2:	bf00      	nop
 80169c4:	08025640 	.word	0x08025640

080169c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80169c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80169cc:	b08b      	sub	sp, #44	; 0x2c
 80169ce:	460d      	mov	r5, r1
 80169d0:	4604      	mov	r4, r0
 80169d2:	4699      	mov	r9, r3
 80169d4:	6808      	ldr	r0, [r1, #0]
 80169d6:	ab06      	add	r3, sp, #24
 80169d8:	6849      	ldr	r1, [r1, #4]
 80169da:	c303      	stmia	r3!, {r0, r1}
 80169dc:	6810      	ldr	r0, [r2, #0]
 80169de:	ab08      	add	r3, sp, #32
 80169e0:	6851      	ldr	r1, [r2, #4]
 80169e2:	c303      	stmia	r3!, {r0, r1}
 80169e4:	a806      	add	r0, sp, #24
 80169e6:	f7f9 fd47 	bl	8010478 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80169ea:	4629      	mov	r1, r5
 80169ec:	a808      	add	r0, sp, #32
 80169ee:	4d63      	ldr	r5, [pc, #396]	; (8016b7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 80169f0:	f7f9 fd2a 	bl	8010448 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80169f4:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80169f8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80169fc:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016a00:	6828      	ldr	r0, [r5, #0]
 8016a02:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016a06:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8016a0a:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8016a0e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8016a12:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016a16:	440a      	add	r2, r1
 8016a18:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016a1c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016a20:	4413      	add	r3, r2
 8016a22:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016a26:	6803      	ldr	r3, [r0, #0]
 8016a28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016a2a:	4798      	blx	r3
 8016a2c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016a30:	d118      	bne.n	8016a64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 8016a32:	f010 0f20 	tst.w	r0, #32
 8016a36:	6828      	ldr	r0, [r5, #0]
 8016a38:	d017      	beq.n	8016a6a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 8016a3a:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 8016a3e:	b2b6      	uxth	r6, r6
 8016a40:	6801      	ldr	r1, [r0, #0]
 8016a42:	9502      	str	r5, [sp, #8]
 8016a44:	fa1f f588 	uxth.w	r5, r8
 8016a48:	f8cd 900c 	str.w	r9, [sp, #12]
 8016a4c:	9601      	str	r6, [sp, #4]
 8016a4e:	9500      	str	r5, [sp, #0]
 8016a50:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8016a54:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8016a56:	4621      	mov	r1, r4
 8016a58:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8016a5c:	47a8      	blx	r5
 8016a5e:	b00b      	add	sp, #44	; 0x2c
 8016a60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a64:	f010 0f40 	tst.w	r0, #64	; 0x40
 8016a68:	e7e5      	b.n	8016a36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8016a6a:	6803      	ldr	r3, [r0, #0]
 8016a6c:	6a1b      	ldr	r3, [r3, #32]
 8016a6e:	4798      	blx	r3
 8016a70:	4a43      	ldr	r2, [pc, #268]	; (8016b80 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8016a72:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8016a76:	f8b2 e000 	ldrh.w	lr, [r2]
 8016a7a:	4692      	mov	sl, r2
 8016a7c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8016a80:	fb0e 1303 	mla	r3, lr, r3, r1
 8016a84:	fb0e fe06 	mul.w	lr, lr, r6
 8016a88:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016a8c:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8016a90:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 8016a94:	9305      	str	r3, [sp, #20]
 8016a96:	4570      	cmp	r0, lr
 8016a98:	d26a      	bcs.n	8016b70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1a8>
 8016a9a:	9b05      	ldr	r3, [sp, #20]
 8016a9c:	4621      	mov	r1, r4
 8016a9e:	eb00 0b03 	add.w	fp, r0, r3
 8016aa2:	4558      	cmp	r0, fp
 8016aa4:	d257      	bcs.n	8016b56 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x18e>
 8016aa6:	f851 4b04 	ldr.w	r4, [r1], #4
 8016aaa:	0e22      	lsrs	r2, r4, #24
 8016aac:	d012      	beq.n	8016ad4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 8016aae:	2aff      	cmp	r2, #255	; 0xff
 8016ab0:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8016ab4:	d110      	bne.n	8016ad8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 8016ab6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016aba:	d10d      	bne.n	8016ad8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 8016abc:	0963      	lsrs	r3, r4, #5
 8016abe:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8016ac2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016ac6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016aca:	f027 0707 	bic.w	r7, r7, #7
 8016ace:	431f      	orrs	r7, r3
 8016ad0:	433c      	orrs	r4, r7
 8016ad2:	8004      	strh	r4, [r0, #0]
 8016ad4:	3002      	adds	r0, #2
 8016ad6:	e7e4      	b.n	8016aa2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 8016ad8:	fb09 f302 	mul.w	r3, r9, r2
 8016adc:	f8b0 c000 	ldrh.w	ip, [r0]
 8016ae0:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8016ae4:	b2ff      	uxtb	r7, r7
 8016ae6:	1c5a      	adds	r2, r3, #1
 8016ae8:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016aec:	b2e4      	uxtb	r4, r4
 8016aee:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8016af2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016af6:	1212      	asrs	r2, r2, #8
 8016af8:	b293      	uxth	r3, r2
 8016afa:	43d2      	mvns	r2, r2
 8016afc:	fb15 f503 	smulbb	r5, r5, r3
 8016b00:	b2d2      	uxtb	r2, r2
 8016b02:	fb17 f703 	smulbb	r7, r7, r3
 8016b06:	fb06 5602 	mla	r6, r6, r2, r5
 8016b0a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016b0e:	fb14 f403 	smulbb	r4, r4, r3
 8016b12:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016b16:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016b1a:	b2b6      	uxth	r6, r6
 8016b1c:	fa5f fc8c 	uxtb.w	ip, ip
 8016b20:	fb05 7702 	mla	r7, r5, r2, r7
 8016b24:	1c73      	adds	r3, r6, #1
 8016b26:	fb0c 4202 	mla	r2, ip, r2, r4
 8016b2a:	b2bf      	uxth	r7, r7
 8016b2c:	b292      	uxth	r2, r2
 8016b2e:	1c7d      	adds	r5, r7, #1
 8016b30:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8016b34:	f102 0c01 	add.w	ip, r2, #1
 8016b38:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8016b3c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016b40:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016b44:	097f      	lsrs	r7, r7, #5
 8016b46:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016b4a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016b4e:	4316      	orrs	r6, r2
 8016b50:	433e      	orrs	r6, r7
 8016b52:	8006      	strh	r6, [r0, #0]
 8016b54:	e7be      	b.n	8016ad4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 8016b56:	f8ba 3000 	ldrh.w	r3, [sl]
 8016b5a:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8016b5e:	eba3 0308 	sub.w	r3, r3, r8
 8016b62:	eba4 0408 	sub.w	r4, r4, r8
 8016b66:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016b6a:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8016b6e:	e792      	b.n	8016a96 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8016b70:	4b02      	ldr	r3, [pc, #8]	; (8016b7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 8016b72:	6818      	ldr	r0, [r3, #0]
 8016b74:	6803      	ldr	r3, [r0, #0]
 8016b76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016b78:	4798      	blx	r3
 8016b7a:	e770      	b.n	8016a5e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 8016b7c:	200125b0 	.word	0x200125b0
 8016b80:	200125aa 	.word	0x200125aa

08016b84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8016b84:	b570      	push	{r4, r5, r6, lr}
 8016b86:	9d04      	ldr	r5, [sp, #16]
 8016b88:	460c      	mov	r4, r1
 8016b8a:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8016b8e:	4619      	mov	r1, r3
 8016b90:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016b94:	2a0d      	cmp	r2, #13
 8016b96:	d820      	bhi.n	8016bda <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8016b98:	e8df f002 	tbb	[pc, r2]
 8016b9c:	18121807 	.word	0x18121807
 8016ba0:	18181818 	.word	0x18181818
 8016ba4:	18181818 	.word	0x18181818
 8016ba8:	1818      	.short	0x1818
 8016baa:	6802      	ldr	r2, [r0, #0]
 8016bac:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8016bb0:	68d6      	ldr	r6, [r2, #12]
 8016bb2:	462b      	mov	r3, r5
 8016bb4:	460a      	mov	r2, r1
 8016bb6:	4621      	mov	r1, r4
 8016bb8:	46b4      	mov	ip, r6
 8016bba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016bbe:	4760      	bx	ip
 8016bc0:	462a      	mov	r2, r5
 8016bc2:	4620      	mov	r0, r4
 8016bc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016bc8:	f7ff befe 	b.w	80169c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8016bcc:	4b03      	ldr	r3, [pc, #12]	; (8016bdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8016bce:	f240 21c1 	movw	r1, #705	; 0x2c1
 8016bd2:	4a03      	ldr	r2, [pc, #12]	; (8016be0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8016bd4:	4803      	ldr	r0, [pc, #12]	; (8016be4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8016bd6:	f00a f8cb 	bl	8020d70 <__assert_func>
 8016bda:	bd70      	pop	{r4, r5, r6, pc}
 8016bdc:	080252fc 	.word	0x080252fc
 8016be0:	08025a4d 	.word	0x08025a4d
 8016be4:	08025360 	.word	0x08025360

08016be8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8016be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016bec:	b093      	sub	sp, #76	; 0x4c
 8016bee:	880f      	ldrh	r7, [r1, #0]
 8016bf0:	4604      	mov	r4, r0
 8016bf2:	4688      	mov	r8, r1
 8016bf4:	4616      	mov	r6, r2
 8016bf6:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8016bfa:	b12f      	cbz	r7, 8016c08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8016bfc:	4b6f      	ldr	r3, [pc, #444]	; (8016dbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8016bfe:	21e2      	movs	r1, #226	; 0xe2
 8016c00:	4a6f      	ldr	r2, [pc, #444]	; (8016dc0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8016c02:	4870      	ldr	r0, [pc, #448]	; (8016dc4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8016c04:	f00a f8b4 	bl	8020d70 <__assert_func>
 8016c08:	6810      	ldr	r0, [r2, #0]
 8016c0a:	ad0e      	add	r5, sp, #56	; 0x38
 8016c0c:	6851      	ldr	r1, [r2, #4]
 8016c0e:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8016dcc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>
 8016c12:	c503      	stmia	r5!, {r0, r1}
 8016c14:	6818      	ldr	r0, [r3, #0]
 8016c16:	ad10      	add	r5, sp, #64	; 0x40
 8016c18:	6859      	ldr	r1, [r3, #4]
 8016c1a:	c503      	stmia	r5!, {r0, r1}
 8016c1c:	a80e      	add	r0, sp, #56	; 0x38
 8016c1e:	f7f9 fc2b 	bl	8010478 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016c22:	4631      	mov	r1, r6
 8016c24:	a810      	add	r0, sp, #64	; 0x40
 8016c26:	4e68      	ldr	r6, [pc, #416]	; (8016dc8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8016c28:	f7f9 fc0e 	bl	8010448 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016c2c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8016c30:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8016c34:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8016c38:	f8db 0000 	ldr.w	r0, [fp]
 8016c3c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016c40:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	; 0x44
 8016c44:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8016c48:	440c      	add	r4, r1
 8016c4a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8016c4e:	440a      	add	r2, r1
 8016c50:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8016c54:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8016c58:	4413      	add	r3, r2
 8016c5a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8016c5e:	6803      	ldr	r3, [r0, #0]
 8016c60:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8016c64:	4798      	blx	r3
 8016c66:	2801      	cmp	r0, #1
 8016c68:	d11d      	bne.n	8016ca6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 8016c6a:	220b      	movs	r2, #11
 8016c6c:	9708      	str	r7, [sp, #32]
 8016c6e:	b2ad      	uxth	r5, r5
 8016c70:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8016c74:	9207      	str	r2, [sp, #28]
 8016c76:	4621      	mov	r1, r4
 8016c78:	8832      	ldrh	r2, [r6, #0]
 8016c7a:	f8cd a010 	str.w	sl, [sp, #16]
 8016c7e:	9502      	str	r5, [sp, #8]
 8016c80:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8016c84:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8016c88:	9203      	str	r2, [sp, #12]
 8016c8a:	fa1f f289 	uxth.w	r2, r9
 8016c8e:	9201      	str	r2, [sp, #4]
 8016c90:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8016c94:	9200      	str	r2, [sp, #0]
 8016c96:	4642      	mov	r2, r8
 8016c98:	f8db 0000 	ldr.w	r0, [fp]
 8016c9c:	f7f5 f964 	bl	800bf68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8016ca0:	b013      	add	sp, #76	; 0x4c
 8016ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ca6:	f8db 0000 	ldr.w	r0, [fp]
 8016caa:	6803      	ldr	r3, [r0, #0]
 8016cac:	6a1b      	ldr	r3, [r3, #32]
 8016cae:	4798      	blx	r3
 8016cb0:	8832      	ldrh	r2, [r6, #0]
 8016cb2:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8016cb6:	f04f 0e04 	mov.w	lr, #4
 8016cba:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8016cbe:	4355      	muls	r5, r2
 8016cc0:	960d      	str	r6, [sp, #52]	; 0x34
 8016cc2:	fb02 1303 	mla	r3, r2, r3, r1
 8016cc6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016cca:	eb00 0345 	add.w	r3, r0, r5, lsl #1
 8016cce:	930c      	str	r3, [sp, #48]	; 0x30
 8016cd0:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8016cd4:	930b      	str	r3, [sp, #44]	; 0x2c
 8016cd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016cd8:	4298      	cmp	r0, r3
 8016cda:	d269      	bcs.n	8016db0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>
 8016cdc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016cde:	4621      	mov	r1, r4
 8016ce0:	eb00 0b03 	add.w	fp, r0, r3
 8016ce4:	4558      	cmp	r0, fp
 8016ce6:	460b      	mov	r3, r1
 8016ce8:	d256      	bcs.n	8016d98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b0>
 8016cea:	781b      	ldrb	r3, [r3, #0]
 8016cec:	3101      	adds	r1, #1
 8016cee:	fb1e e303 	smlabb	r3, lr, r3, lr
 8016cf2:	f858 2003 	ldr.w	r2, [r8, r3]
 8016cf6:	0e14      	lsrs	r4, r2, #24
 8016cf8:	d012      	beq.n	8016d20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 8016cfa:	2cff      	cmp	r4, #255	; 0xff
 8016cfc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8016d00:	d110      	bne.n	8016d24 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8016d02:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016d06:	d10d      	bne.n	8016d24 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8016d08:	0953      	lsrs	r3, r2, #5
 8016d0a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016d0e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016d12:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016d16:	f026 0607 	bic.w	r6, r6, #7
 8016d1a:	431e      	orrs	r6, r3
 8016d1c:	4332      	orrs	r2, r6
 8016d1e:	8002      	strh	r2, [r0, #0]
 8016d20:	3002      	adds	r0, #2
 8016d22:	e7df      	b.n	8016ce4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xfc>
 8016d24:	fb0a f404 	mul.w	r4, sl, r4
 8016d28:	8807      	ldrh	r7, [r0, #0]
 8016d2a:	b2f6      	uxtb	r6, r6
 8016d2c:	1c63      	adds	r3, r4, #1
 8016d2e:	123d      	asrs	r5, r7, #8
 8016d30:	eb03 2324 	add.w	r3, r3, r4, asr #8
 8016d34:	f3c2 4407 	ubfx	r4, r2, #16, #8
 8016d38:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016d3c:	b2d2      	uxtb	r2, r2
 8016d3e:	121b      	asrs	r3, r3, #8
 8016d40:	fa1f fc83 	uxth.w	ip, r3
 8016d44:	43db      	mvns	r3, r3
 8016d46:	fb14 f40c 	smulbb	r4, r4, ip
 8016d4a:	b2db      	uxtb	r3, r3
 8016d4c:	fb12 f20c 	smulbb	r2, r2, ip
 8016d50:	fb05 4503 	mla	r5, r5, r3, r4
 8016d54:	10fc      	asrs	r4, r7, #3
 8016d56:	fb16 f60c 	smulbb	r6, r6, ip
 8016d5a:	00ff      	lsls	r7, r7, #3
 8016d5c:	b2ad      	uxth	r5, r5
 8016d5e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8016d62:	b2ff      	uxtb	r7, r7
 8016d64:	fb04 6603 	mla	r6, r4, r3, r6
 8016d68:	fb07 2203 	mla	r2, r7, r3, r2
 8016d6c:	1c6b      	adds	r3, r5, #1
 8016d6e:	b2b6      	uxth	r6, r6
 8016d70:	b292      	uxth	r2, r2
 8016d72:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8016d76:	1c54      	adds	r4, r2, #1
 8016d78:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8016d7c:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8016d80:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8016d84:	4325      	orrs	r5, r4
 8016d86:	1c74      	adds	r4, r6, #1
 8016d88:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8016d8c:	0976      	lsrs	r6, r6, #5
 8016d8e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016d92:	4335      	orrs	r5, r6
 8016d94:	8005      	strh	r5, [r0, #0]
 8016d96:	e7c3      	b.n	8016d20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 8016d98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016d9a:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
 8016d9e:	881b      	ldrh	r3, [r3, #0]
 8016da0:	eba4 0409 	sub.w	r4, r4, r9
 8016da4:	eba3 0309 	sub.w	r3, r3, r9
 8016da8:	440c      	add	r4, r1
 8016daa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016dae:	e792      	b.n	8016cd6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8016db0:	4b06      	ldr	r3, [pc, #24]	; (8016dcc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8016db2:	6818      	ldr	r0, [r3, #0]
 8016db4:	6803      	ldr	r3, [r0, #0]
 8016db6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016db8:	4798      	blx	r3
 8016dba:	e771      	b.n	8016ca0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 8016dbc:	08025107 	.word	0x08025107
 8016dc0:	0802581e 	.word	0x0802581e
 8016dc4:	08025360 	.word	0x08025360
 8016dc8:	200125aa 	.word	0x200125aa
 8016dcc:	200125b0 	.word	0x200125b0

08016dd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8016dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016dd4:	4614      	mov	r4, r2
 8016dd6:	880a      	ldrh	r2, [r1, #0]
 8016dd8:	b091      	sub	sp, #68	; 0x44
 8016dda:	4607      	mov	r7, r0
 8016ddc:	2a02      	cmp	r2, #2
 8016dde:	4689      	mov	r9, r1
 8016de0:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 8016de4:	d006      	beq.n	8016df4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8016de6:	4b77      	ldr	r3, [pc, #476]	; (8016fc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f4>)
 8016de8:	f240 113b 	movw	r1, #315	; 0x13b
 8016dec:	4a76      	ldr	r2, [pc, #472]	; (8016fc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f8>)
 8016dee:	4877      	ldr	r0, [pc, #476]	; (8016fcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1fc>)
 8016df0:	f009 ffbe 	bl	8020d70 <__assert_func>
 8016df4:	2e00      	cmp	r6, #0
 8016df6:	d04b      	beq.n	8016e90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8016df8:	6820      	ldr	r0, [r4, #0]
 8016dfa:	ad0c      	add	r5, sp, #48	; 0x30
 8016dfc:	6861      	ldr	r1, [r4, #4]
 8016dfe:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 8016fd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>
 8016e02:	c503      	stmia	r5!, {r0, r1}
 8016e04:	6818      	ldr	r0, [r3, #0]
 8016e06:	ad0e      	add	r5, sp, #56	; 0x38
 8016e08:	6859      	ldr	r1, [r3, #4]
 8016e0a:	c503      	stmia	r5!, {r0, r1}
 8016e0c:	a80c      	add	r0, sp, #48	; 0x30
 8016e0e:	f7f9 fb33 	bl	8010478 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016e12:	4621      	mov	r1, r4
 8016e14:	a80e      	add	r0, sp, #56	; 0x38
 8016e16:	f7f9 fb17 	bl	8010448 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016e1a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8016e1e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8016e22:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8016e26:	f8da 0000 	ldr.w	r0, [sl]
 8016e2a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016e2e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016e32:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 8016e36:	187c      	adds	r4, r7, r1
 8016e38:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8016e3c:	4f64      	ldr	r7, [pc, #400]	; (8016fd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8016e3e:	440a      	add	r2, r1
 8016e40:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8016e44:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8016e48:	4413      	add	r3, r2
 8016e4a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8016e4e:	6803      	ldr	r3, [r0, #0]
 8016e50:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8016e54:	4798      	blx	r3
 8016e56:	2801      	cmp	r0, #1
 8016e58:	d11d      	bne.n	8016e96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8016e5a:	2200      	movs	r2, #0
 8016e5c:	210b      	movs	r1, #11
 8016e5e:	b2ad      	uxth	r5, r5
 8016e60:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8016e64:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8016e68:	8839      	ldrh	r1, [r7, #0]
 8016e6a:	9604      	str	r6, [sp, #16]
 8016e6c:	9502      	str	r5, [sp, #8]
 8016e6e:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8016e72:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8016e76:	4621      	mov	r1, r4
 8016e78:	9203      	str	r2, [sp, #12]
 8016e7a:	fa1f f288 	uxth.w	r2, r8
 8016e7e:	9201      	str	r2, [sp, #4]
 8016e80:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8016e84:	9200      	str	r2, [sp, #0]
 8016e86:	464a      	mov	r2, r9
 8016e88:	f8da 0000 	ldr.w	r0, [sl]
 8016e8c:	f7f5 f86c 	bl	800bf68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8016e90:	b011      	add	sp, #68	; 0x44
 8016e92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e96:	f8da 0000 	ldr.w	r0, [sl]
 8016e9a:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8016e9e:	6803      	ldr	r3, [r0, #0]
 8016ea0:	6a1b      	ldr	r3, [r3, #32]
 8016ea2:	4798      	blx	r3
 8016ea4:	8839      	ldrh	r1, [r7, #0]
 8016ea6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8016eaa:	2eff      	cmp	r6, #255	; 0xff
 8016eac:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8016eb0:	fb05 f501 	mul.w	r5, r5, r1
 8016eb4:	fb01 2303 	mla	r3, r1, r3, r2
 8016eb8:	f109 0204 	add.w	r2, r9, #4
 8016ebc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016ec0:	d05f      	beq.n	8016f82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b2>
 8016ec2:	f1c6 09ff 	rsb	r9, r6, #255	; 0xff
 8016ec6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8016eca:	b2b6      	uxth	r6, r6
 8016ecc:	970b      	str	r7, [sp, #44]	; 0x2c
 8016ece:	fa1f f989 	uxth.w	r9, r9
 8016ed2:	42a8      	cmp	r0, r5
 8016ed4:	d26f      	bcs.n	8016fb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 8016ed6:	eb00 010b 	add.w	r1, r0, fp
 8016eda:	4288      	cmp	r0, r1
 8016edc:	4623      	mov	r3, r4
 8016ede:	d244      	bcs.n	8016f6a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19a>
 8016ee0:	8807      	ldrh	r7, [r0, #0]
 8016ee2:	3401      	adds	r4, #1
 8016ee4:	781b      	ldrb	r3, [r3, #0]
 8016ee6:	ea4f 2c27 	mov.w	ip, r7, asr #8
 8016eea:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8016eee:	ea4f 0ae7 	mov.w	sl, r7, asr #3
 8016ef2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016ef6:	00ff      	lsls	r7, r7, #3
 8016ef8:	ea4f 2e23 	mov.w	lr, r3, asr #8
 8016efc:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016f00:	fb1c fc09 	smulbb	ip, ip, r9
 8016f04:	b2ff      	uxtb	r7, r7
 8016f06:	fb1a fa09 	smulbb	sl, sl, r9
 8016f0a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016f0e:	fb17 f709 	smulbb	r7, r7, r9
 8016f12:	fb0e ce06 	mla	lr, lr, r6, ip
 8016f16:	ea4f 0ce3 	mov.w	ip, r3, asr #3
 8016f1a:	00db      	lsls	r3, r3, #3
 8016f1c:	fa1f fe8e 	uxth.w	lr, lr
 8016f20:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016f24:	b2db      	uxtb	r3, r3
 8016f26:	fb0c ac06 	mla	ip, ip, r6, sl
 8016f2a:	f10e 0a01 	add.w	sl, lr, #1
 8016f2e:	fb03 7306 	mla	r3, r3, r6, r7
 8016f32:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 8016f36:	b29b      	uxth	r3, r3
 8016f38:	f40e 4a78 	and.w	sl, lr, #63488	; 0xf800
 8016f3c:	fa1f fc8c 	uxth.w	ip, ip
 8016f40:	f103 0e01 	add.w	lr, r3, #1
 8016f44:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 8016f48:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8016f4c:	ea4a 0e03 	orr.w	lr, sl, r3
 8016f50:	f10c 0a01 	add.w	sl, ip, #1
 8016f54:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 8016f58:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016f5c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8016f60:	ea4e 0e0c 	orr.w	lr, lr, ip
 8016f64:	f820 eb02 	strh.w	lr, [r0], #2
 8016f68:	e7b7      	b.n	8016eda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x10a>
 8016f6a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016f6c:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 8016f70:	881b      	ldrh	r3, [r3, #0]
 8016f72:	eba1 0108 	sub.w	r1, r1, r8
 8016f76:	eba3 0308 	sub.w	r3, r3, r8
 8016f7a:	440c      	add	r4, r1
 8016f7c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016f80:	e7a7      	b.n	8016ed2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x102>
 8016f82:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8016f86:	42a8      	cmp	r0, r5
 8016f88:	d215      	bcs.n	8016fb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 8016f8a:	eb00 010b 	add.w	r1, r0, fp
 8016f8e:	4288      	cmp	r0, r1
 8016f90:	d206      	bcs.n	8016fa0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1d0>
 8016f92:	f814 3b01 	ldrb.w	r3, [r4], #1
 8016f96:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8016f9a:	f820 3b02 	strh.w	r3, [r0], #2
 8016f9e:	e7f6      	b.n	8016f8e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1be>
 8016fa0:	883b      	ldrh	r3, [r7, #0]
 8016fa2:	eba3 0308 	sub.w	r3, r3, r8
 8016fa6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016faa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8016fae:	eba3 0308 	sub.w	r3, r3, r8
 8016fb2:	441c      	add	r4, r3
 8016fb4:	e7e7      	b.n	8016f86 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b6>
 8016fb6:	4b07      	ldr	r3, [pc, #28]	; (8016fd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8016fb8:	6818      	ldr	r0, [r3, #0]
 8016fba:	6803      	ldr	r3, [r0, #0]
 8016fbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016fbe:	4798      	blx	r3
 8016fc0:	e766      	b.n	8016e90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8016fc2:	bf00      	nop
 8016fc4:	08024fc5 	.word	0x08024fc5
 8016fc8:	08025688 	.word	0x08025688
 8016fcc:	08025360 	.word	0x08025360
 8016fd0:	200125aa 	.word	0x200125aa
 8016fd4:	200125b0 	.word	0x200125b0

08016fd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8016fd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fdc:	4614      	mov	r4, r2
 8016fde:	880a      	ldrh	r2, [r1, #0]
 8016fe0:	b091      	sub	sp, #68	; 0x44
 8016fe2:	4606      	mov	r6, r0
 8016fe4:	2a01      	cmp	r2, #1
 8016fe6:	4688      	mov	r8, r1
 8016fe8:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 8016fec:	d006      	beq.n	8016ffc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 8016fee:	4b7c      	ldr	r3, [pc, #496]	; (80171e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x208>)
 8016ff0:	f240 1197 	movw	r1, #407	; 0x197
 8016ff4:	4a7b      	ldr	r2, [pc, #492]	; (80171e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20c>)
 8016ff6:	487c      	ldr	r0, [pc, #496]	; (80171e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x210>)
 8016ff8:	f009 feba 	bl	8020d70 <__assert_func>
 8016ffc:	2f00      	cmp	r7, #0
 8016ffe:	d04b      	beq.n	8017098 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8017000:	6820      	ldr	r0, [r4, #0]
 8017002:	ad0c      	add	r5, sp, #48	; 0x30
 8017004:	6861      	ldr	r1, [r4, #4]
 8017006:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 80171f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801700a:	c503      	stmia	r5!, {r0, r1}
 801700c:	6818      	ldr	r0, [r3, #0]
 801700e:	ad0e      	add	r5, sp, #56	; 0x38
 8017010:	6859      	ldr	r1, [r3, #4]
 8017012:	c503      	stmia	r5!, {r0, r1}
 8017014:	a80c      	add	r0, sp, #48	; 0x30
 8017016:	f7f9 fa2f 	bl	8010478 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801701a:	4621      	mov	r1, r4
 801701c:	a80e      	add	r0, sp, #56	; 0x38
 801701e:	f7f9 fa13 	bl	8010448 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017022:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8017026:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801702a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801702e:	f8da 0000 	ldr.w	r0, [sl]
 8017032:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017036:	f9bd 503c 	ldrsh.w	r5, [sp, #60]	; 0x3c
 801703a:	f9bd 903e 	ldrsh.w	r9, [sp, #62]	; 0x3e
 801703e:	1874      	adds	r4, r6, r1
 8017040:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8017044:	4e69      	ldr	r6, [pc, #420]	; (80171ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x214>)
 8017046:	440a      	add	r2, r1
 8017048:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801704c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017050:	4413      	add	r3, r2
 8017052:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8017056:	6803      	ldr	r3, [r0, #0]
 8017058:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801705c:	4798      	blx	r3
 801705e:	2801      	cmp	r0, #1
 8017060:	d11d      	bne.n	801709e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 8017062:	220b      	movs	r2, #11
 8017064:	2100      	movs	r1, #0
 8017066:	b2ad      	uxth	r5, r5
 8017068:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801706c:	e9cd 2107 	strd	r2, r1, [sp, #28]
 8017070:	8832      	ldrh	r2, [r6, #0]
 8017072:	4621      	mov	r1, r4
 8017074:	9704      	str	r7, [sp, #16]
 8017076:	9501      	str	r5, [sp, #4]
 8017078:	e9cd 0205 	strd	r0, r2, [sp, #20]
 801707c:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8017080:	9203      	str	r2, [sp, #12]
 8017082:	fa1f f289 	uxth.w	r2, r9
 8017086:	9202      	str	r2, [sp, #8]
 8017088:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801708c:	9200      	str	r2, [sp, #0]
 801708e:	4642      	mov	r2, r8
 8017090:	f8da 0000 	ldr.w	r0, [sl]
 8017094:	f7f4 ff68 	bl	800bf68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8017098:	b011      	add	sp, #68	; 0x44
 801709a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801709e:	f8da 0000 	ldr.w	r0, [sl]
 80170a2:	6803      	ldr	r3, [r0, #0]
 80170a4:	6a1b      	ldr	r3, [r3, #32]
 80170a6:	4798      	blx	r3
 80170a8:	8832      	ldrh	r2, [r6, #0]
 80170aa:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80170ae:	2fff      	cmp	r7, #255	; 0xff
 80170b0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80170b4:	ea4f 0e45 	mov.w	lr, r5, lsl #1
 80170b8:	fb09 f902 	mul.w	r9, r9, r2
 80170bc:	fb02 1303 	mla	r3, r2, r3, r1
 80170c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80170c4:	d056      	beq.n	8017174 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 80170c6:	ea6f 0c07 	mvn.w	ip, r7
 80170ca:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 80170ce:	b2bb      	uxth	r3, r7
 80170d0:	960b      	str	r6, [sp, #44]	; 0x2c
 80170d2:	fa5f fc8c 	uxtb.w	ip, ip
 80170d6:	4548      	cmp	r0, r9
 80170d8:	d27b      	bcs.n	80171d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 80170da:	eb00 0a0e 	add.w	sl, r0, lr
 80170de:	4550      	cmp	r0, sl
 80170e0:	4622      	mov	r2, r4
 80170e2:	d23d      	bcs.n	8017160 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x188>
 80170e4:	7811      	ldrb	r1, [r2, #0]
 80170e6:	2604      	movs	r6, #4
 80170e8:	2203      	movs	r2, #3
 80170ea:	3401      	adds	r4, #1
 80170ec:	fb12 6101 	smlabb	r1, r2, r1, r6
 80170f0:	8802      	ldrh	r2, [r0, #0]
 80170f2:	eb08 0b01 	add.w	fp, r8, r1
 80170f6:	1217      	asrs	r7, r2, #8
 80170f8:	f818 1001 	ldrb.w	r1, [r8, r1]
 80170fc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8017100:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017104:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017108:	fb16 f603 	smulbb	r6, r6, r3
 801710c:	fb1b fb03 	smulbb	fp, fp, r3
 8017110:	fb07 670c 	mla	r7, r7, ip, r6
 8017114:	10d6      	asrs	r6, r2, #3
 8017116:	00d2      	lsls	r2, r2, #3
 8017118:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801711c:	b2bf      	uxth	r7, r7
 801711e:	b2d2      	uxtb	r2, r2
 8017120:	fb06 b60c 	mla	r6, r6, ip, fp
 8017124:	fb12 f20c 	smulbb	r2, r2, ip
 8017128:	b2b6      	uxth	r6, r6
 801712a:	fb01 2103 	mla	r1, r1, r3, r2
 801712e:	1c7a      	adds	r2, r7, #1
 8017130:	f106 0b01 	add.w	fp, r6, #1
 8017134:	b289      	uxth	r1, r1
 8017136:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801713a:	1c4a      	adds	r2, r1, #1
 801713c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017140:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017144:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8017148:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801714c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017150:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017154:	4317      	orrs	r7, r2
 8017156:	ea47 070b 	orr.w	r7, r7, fp
 801715a:	f820 7b02 	strh.w	r7, [r0], #2
 801715e:	e7be      	b.n	80170de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x106>
 8017160:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017162:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 8017166:	8812      	ldrh	r2, [r2, #0]
 8017168:	1b49      	subs	r1, r1, r5
 801716a:	1b52      	subs	r2, r2, r5
 801716c:	440c      	add	r4, r1
 801716e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017172:	e7b0      	b.n	80170d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xfe>
 8017174:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 8017178:	2203      	movs	r2, #3
 801717a:	2704      	movs	r7, #4
 801717c:	491c      	ldr	r1, [pc, #112]	; (80171f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801717e:	4548      	cmp	r0, r9
 8017180:	d227      	bcs.n	80171d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 8017182:	eb00 0c0e 	add.w	ip, r0, lr
 8017186:	4560      	cmp	r0, ip
 8017188:	4623      	mov	r3, r4
 801718a:	d219      	bcs.n	80171c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1e8>
 801718c:	f893 a000 	ldrb.w	sl, [r3]
 8017190:	3401      	adds	r4, #1
 8017192:	fb12 7a0a 	smlabb	sl, r2, sl, r7
 8017196:	eb08 0b0a 	add.w	fp, r8, sl
 801719a:	f818 a00a 	ldrb.w	sl, [r8, sl]
 801719e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80171a2:	f89b b001 	ldrb.w	fp, [fp, #1]
 80171a6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80171aa:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80171ae:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80171b2:	ea43 030b 	orr.w	r3, r3, fp
 80171b6:	ea43 03da 	orr.w	r3, r3, sl, lsr #3
 80171ba:	f820 3b02 	strh.w	r3, [r0], #2
 80171be:	e7e2      	b.n	8017186 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1ae>
 80171c0:	8833      	ldrh	r3, [r6, #0]
 80171c2:	1b5b      	subs	r3, r3, r5
 80171c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80171c8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80171cc:	1b5b      	subs	r3, r3, r5
 80171ce:	441c      	add	r4, r3
 80171d0:	e7d5      	b.n	801717e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1a6>
 80171d2:	4b08      	ldr	r3, [pc, #32]	; (80171f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80171d4:	6818      	ldr	r0, [r3, #0]
 80171d6:	6803      	ldr	r3, [r0, #0]
 80171d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80171da:	4798      	blx	r3
 80171dc:	e75c      	b.n	8017098 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80171de:	bf00      	nop
 80171e0:	08025013 	.word	0x08025013
 80171e4:	08025711 	.word	0x08025711
 80171e8:	08025360 	.word	0x08025360
 80171ec:	200125aa 	.word	0x200125aa
 80171f0:	fffff800 	.word	0xfffff800
 80171f4:	200125b0 	.word	0x200125b0

080171f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80171f8:	b430      	push	{r4, r5}
 80171fa:	780d      	ldrb	r5, [r1, #0]
 80171fc:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8017200:	2d01      	cmp	r5, #1
 8017202:	d00a      	beq.n	801721a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8017204:	d305      	bcc.n	8017212 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8017206:	2d02      	cmp	r5, #2
 8017208:	d10b      	bne.n	8017222 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801720a:	9402      	str	r4, [sp, #8]
 801720c:	bc30      	pop	{r4, r5}
 801720e:	f7ff bddf 	b.w	8016dd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8017212:	9402      	str	r4, [sp, #8]
 8017214:	bc30      	pop	{r4, r5}
 8017216:	f7ff bce7 	b.w	8016be8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801721a:	9402      	str	r4, [sp, #8]
 801721c:	bc30      	pop	{r4, r5}
 801721e:	f7ff bedb 	b.w	8016fd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8017222:	bc30      	pop	{r4, r5}
 8017224:	4770      	bx	lr
	...

08017228 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8017228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801722c:	b087      	sub	sp, #28
 801722e:	4604      	mov	r4, r0
 8017230:	460e      	mov	r6, r1
 8017232:	6810      	ldr	r0, [r2, #0]
 8017234:	6851      	ldr	r1, [r2, #4]
 8017236:	ad02      	add	r5, sp, #8
 8017238:	4617      	mov	r7, r2
 801723a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801723e:	f8df 9230 	ldr.w	r9, [pc, #560]	; 8017470 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8017242:	c503      	stmia	r5!, {r0, r1}
 8017244:	6818      	ldr	r0, [r3, #0]
 8017246:	ad04      	add	r5, sp, #16
 8017248:	6859      	ldr	r1, [r3, #4]
 801724a:	c503      	stmia	r5!, {r0, r1}
 801724c:	a802      	add	r0, sp, #8
 801724e:	f7f9 f913 	bl	8010478 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017252:	4639      	mov	r1, r7
 8017254:	a804      	add	r0, sp, #16
 8017256:	f7f9 f8f7 	bl	8010448 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801725a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801725e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017262:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8017266:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801726a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801726e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8017272:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8017276:	440e      	add	r6, r1
 8017278:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801727c:	440a      	add	r2, r1
 801727e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017282:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017286:	4413      	add	r3, r2
 8017288:	f8ad 3012 	strh.w	r3, [sp, #18]
 801728c:	4b77      	ldr	r3, [pc, #476]	; (801746c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801728e:	6818      	ldr	r0, [r3, #0]
 8017290:	6803      	ldr	r3, [r0, #0]
 8017292:	6a1b      	ldr	r3, [r3, #32]
 8017294:	4798      	blx	r3
 8017296:	f8b9 b000 	ldrh.w	fp, [r9]
 801729a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801729e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80172a2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80172a6:	fb05 f50b 	mul.w	r5, r5, fp
 80172aa:	fb0b 2303 	mla	r3, fp, r3, r2
 80172ae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80172b2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80172b6:	9300      	str	r3, [sp, #0]
 80172b8:	d068      	beq.n	801738c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x164>
 80172ba:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80172be:	4558      	cmp	r0, fp
 80172c0:	f080 80cc 	bcs.w	801745c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80172c4:	9b00      	ldr	r3, [sp, #0]
 80172c6:	4631      	mov	r1, r6
 80172c8:	18c3      	adds	r3, r0, r3
 80172ca:	9301      	str	r3, [sp, #4]
 80172cc:	9b01      	ldr	r3, [sp, #4]
 80172ce:	4298      	cmp	r0, r3
 80172d0:	d24e      	bcs.n	8017370 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x148>
 80172d2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80172d6:	2a00      	cmp	r2, #0
 80172d8:	d047      	beq.n	801736a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 80172da:	fb0a f202 	mul.w	r2, sl, r2
 80172de:	1c53      	adds	r3, r2, #1
 80172e0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80172e4:	121b      	asrs	r3, r3, #8
 80172e6:	d040      	beq.n	801736a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 80172e8:	8802      	ldrh	r2, [r0, #0]
 80172ea:	b29e      	uxth	r6, r3
 80172ec:	f8b4 c000 	ldrh.w	ip, [r4]
 80172f0:	43db      	mvns	r3, r3
 80172f2:	1215      	asrs	r5, r2, #8
 80172f4:	b2db      	uxtb	r3, r3
 80172f6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80172fa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80172fe:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8017302:	fb15 f503 	smulbb	r5, r5, r3
 8017306:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801730a:	00d2      	lsls	r2, r2, #3
 801730c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8017310:	fb07 5706 	mla	r7, r7, r6, r5
 8017314:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8017318:	b2d2      	uxtb	r2, r2
 801731a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801731e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017322:	fb1e fe03 	smulbb	lr, lr, r3
 8017326:	b2bf      	uxth	r7, r7
 8017328:	fb12 f203 	smulbb	r2, r2, r3
 801732c:	fa5f fc8c 	uxtb.w	ip, ip
 8017330:	fb05 e506 	mla	r5, r5, r6, lr
 8017334:	1c7b      	adds	r3, r7, #1
 8017336:	fb0c 2c06 	mla	ip, ip, r6, r2
 801733a:	b2ad      	uxth	r5, r5
 801733c:	fa1f fc8c 	uxth.w	ip, ip
 8017340:	f105 0e01 	add.w	lr, r5, #1
 8017344:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8017348:	f10c 0601 	add.w	r6, ip, #1
 801734c:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8017350:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017354:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8017358:	096d      	lsrs	r5, r5, #5
 801735a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801735e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017362:	ea47 070c 	orr.w	r7, r7, ip
 8017366:	432f      	orrs	r7, r5
 8017368:	8007      	strh	r7, [r0, #0]
 801736a:	3002      	adds	r0, #2
 801736c:	3402      	adds	r4, #2
 801736e:	e7ad      	b.n	80172cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8017370:	f8b9 3000 	ldrh.w	r3, [r9]
 8017374:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8017378:	eba3 0308 	sub.w	r3, r3, r8
 801737c:	eba6 0608 	sub.w	r6, r6, r8
 8017380:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017384:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8017388:	440e      	add	r6, r1
 801738a:	e798      	b.n	80172be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801738c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8017390:	42a8      	cmp	r0, r5
 8017392:	d263      	bcs.n	801745c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8017394:	9b00      	ldr	r3, [sp, #0]
 8017396:	4631      	mov	r1, r6
 8017398:	eb00 0b03 	add.w	fp, r0, r3
 801739c:	4558      	cmp	r0, fp
 801739e:	d24f      	bcs.n	8017440 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80173a0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80173a4:	b12b      	cbz	r3, 80173b2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 80173a6:	2bff      	cmp	r3, #255	; 0xff
 80173a8:	f8b4 e000 	ldrh.w	lr, [r4]
 80173ac:	d104      	bne.n	80173b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x190>
 80173ae:	f8a0 e000 	strh.w	lr, [r0]
 80173b2:	3002      	adds	r0, #2
 80173b4:	3402      	adds	r4, #2
 80173b6:	e7f1      	b.n	801739c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x174>
 80173b8:	8802      	ldrh	r2, [r0, #0]
 80173ba:	b29f      	uxth	r7, r3
 80173bc:	43db      	mvns	r3, r3
 80173be:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80173c2:	1216      	asrs	r6, r2, #8
 80173c4:	b2db      	uxtb	r3, r3
 80173c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80173ca:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80173ce:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80173d2:	00d2      	lsls	r2, r2, #3
 80173d4:	fb16 f603 	smulbb	r6, r6, r3
 80173d8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80173dc:	b2d2      	uxtb	r2, r2
 80173de:	fb0c 6c07 	mla	ip, ip, r7, r6
 80173e2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80173e6:	fb1a fa03 	smulbb	sl, sl, r3
 80173ea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80173ee:	fb12 f303 	smulbb	r3, r2, r3
 80173f2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80173f6:	fa5f fe8e 	uxtb.w	lr, lr
 80173fa:	fb06 a607 	mla	r6, r6, r7, sl
 80173fe:	fa1f fc8c 	uxth.w	ip, ip
 8017402:	fb0e 3e07 	mla	lr, lr, r7, r3
 8017406:	b2b6      	uxth	r6, r6
 8017408:	f10c 0201 	add.w	r2, ip, #1
 801740c:	fa1f fe8e 	uxth.w	lr, lr
 8017410:	f106 0a01 	add.w	sl, r6, #1
 8017414:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017418:	f10e 0301 	add.w	r3, lr, #1
 801741c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8017420:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017424:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 8017428:	0976      	lsrs	r6, r6, #5
 801742a:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801742e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017432:	ea4c 0c0e 	orr.w	ip, ip, lr
 8017436:	ea4c 0c06 	orr.w	ip, ip, r6
 801743a:	f8a0 c000 	strh.w	ip, [r0]
 801743e:	e7b8      	b.n	80173b2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 8017440:	f8b9 3000 	ldrh.w	r3, [r9]
 8017444:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8017448:	eba3 0308 	sub.w	r3, r3, r8
 801744c:	eba6 0608 	sub.w	r6, r6, r8
 8017450:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017454:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8017458:	440e      	add	r6, r1
 801745a:	e799      	b.n	8017390 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x168>
 801745c:	4b03      	ldr	r3, [pc, #12]	; (801746c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801745e:	6818      	ldr	r0, [r3, #0]
 8017460:	6803      	ldr	r3, [r0, #0]
 8017462:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017464:	4798      	blx	r3
 8017466:	b007      	add	sp, #28
 8017468:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801746c:	200125b0 	.word	0x200125b0
 8017470:	200125aa 	.word	0x200125aa

08017474 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8017474:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017478:	b089      	sub	sp, #36	; 0x24
 801747a:	4682      	mov	sl, r0
 801747c:	460d      	mov	r5, r1
 801747e:	4691      	mov	r9, r2
 8017480:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8017484:	4698      	mov	r8, r3
 8017486:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017488:	b3ae      	cbz	r6, 80174f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801748a:	4608      	mov	r0, r1
 801748c:	f7fc f9fe 	bl	801388c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017490:	4607      	mov	r7, r0
 8017492:	4628      	mov	r0, r5
 8017494:	f7fc fa34 	bl	8013900 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017498:	f8ad 000e 	strh.w	r0, [sp, #14]
 801749c:	4628      	mov	r0, r5
 801749e:	f8ad 9008 	strh.w	r9, [sp, #8]
 80174a2:	f8ad 800a 	strh.w	r8, [sp, #10]
 80174a6:	f8ad 700c 	strh.w	r7, [sp, #12]
 80174aa:	f7fc fb81 	bl	8013bb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80174ae:	b178      	cbz	r0, 80174d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80174b0:	4628      	mov	r0, r5
 80174b2:	f7fc fb7d 	bl	8013bb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80174b6:	2802      	cmp	r0, #2
 80174b8:	d00a      	beq.n	80174d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80174ba:	4628      	mov	r0, r5
 80174bc:	f7fc fb78 	bl	8013bb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80174c0:	280b      	cmp	r0, #11
 80174c2:	d005      	beq.n	80174d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80174c4:	4b69      	ldr	r3, [pc, #420]	; (801766c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 80174c6:	214b      	movs	r1, #75	; 0x4b
 80174c8:	4a69      	ldr	r2, [pc, #420]	; (8017670 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 80174ca:	486a      	ldr	r0, [pc, #424]	; (8017674 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 80174cc:	f009 fc50 	bl	8020d70 <__assert_func>
 80174d0:	4628      	mov	r0, r5
 80174d2:	f7fc fae3 	bl	8013a9c <_ZNK8touchgfx6Bitmap7getDataEv>
 80174d6:	4607      	mov	r7, r0
 80174d8:	4628      	mov	r0, r5
 80174da:	f7fc fb11 	bl	8013b00 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80174de:	4681      	mov	r9, r0
 80174e0:	4628      	mov	r0, r5
 80174e2:	f7fc fb65 	bl	8013bb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80174e6:	2802      	cmp	r0, #2
 80174e8:	d108      	bne.n	80174fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80174ea:	4633      	mov	r3, r6
 80174ec:	4622      	mov	r2, r4
 80174ee:	a902      	add	r1, sp, #8
 80174f0:	4638      	mov	r0, r7
 80174f2:	f7ff fa69 	bl	80169c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80174f6:	b009      	add	sp, #36	; 0x24
 80174f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174fc:	4628      	mov	r0, r5
 80174fe:	f7fc fb57 	bl	8013bb0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017502:	280b      	cmp	r0, #11
 8017504:	d107      	bne.n	8017516 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8017506:	9600      	str	r6, [sp, #0]
 8017508:	4623      	mov	r3, r4
 801750a:	aa02      	add	r2, sp, #8
 801750c:	4649      	mov	r1, r9
 801750e:	4638      	mov	r0, r7
 8017510:	f7ff fe72 	bl	80171f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8017514:	e7ef      	b.n	80174f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8017516:	4628      	mov	r0, r5
 8017518:	f7fc fa86 	bl	8013a28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801751c:	b950      	cbnz	r0, 8017534 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801751e:	f8da 3000 	ldr.w	r3, [sl]
 8017522:	aa02      	add	r2, sp, #8
 8017524:	4639      	mov	r1, r7
 8017526:	e9cd 6000 	strd	r6, r0, [sp]
 801752a:	4650      	mov	r0, sl
 801752c:	68dd      	ldr	r5, [r3, #12]
 801752e:	4623      	mov	r3, r4
 8017530:	47a8      	blx	r5
 8017532:	e7e0      	b.n	80174f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8017534:	f10d 0818 	add.w	r8, sp, #24
 8017538:	4629      	mov	r1, r5
 801753a:	ad04      	add	r5, sp, #16
 801753c:	4640      	mov	r0, r8
 801753e:	f7fc fa19 	bl	8013974 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8017542:	e898 0003 	ldmia.w	r8, {r0, r1}
 8017546:	e885 0003 	stmia.w	r5, {r0, r1}
 801754a:	4628      	mov	r0, r5
 801754c:	4621      	mov	r1, r4
 801754e:	f7f4 f8b7 	bl	800b6c0 <_ZN8touchgfx4RectaNERKS0_>
 8017552:	4628      	mov	r0, r5
 8017554:	f7f4 f8f7 	bl	800b746 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017558:	b138      	cbz	r0, 801756a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 801755a:	4623      	mov	r3, r4
 801755c:	9600      	str	r6, [sp, #0]
 801755e:	aa02      	add	r2, sp, #8
 8017560:	4649      	mov	r1, r9
 8017562:	4638      	mov	r0, r7
 8017564:	f7ff fe60 	bl	8017228 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017568:	e7c5      	b.n	80174f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801756a:	f8da 3000 	ldr.w	r3, [sl]
 801756e:	aa02      	add	r2, sp, #8
 8017570:	4639      	mov	r1, r7
 8017572:	e9cd 6000 	strd	r6, r0, [sp]
 8017576:	4650      	mov	r0, sl
 8017578:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801757c:	462b      	mov	r3, r5
 801757e:	47d8      	blx	fp
 8017580:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017584:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017588:	4293      	cmp	r3, r2
 801758a:	dd13      	ble.n	80175b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 801758c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017590:	1a9b      	subs	r3, r3, r2
 8017592:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017596:	f8ad 0018 	strh.w	r0, [sp, #24]
 801759a:	4638      	mov	r0, r7
 801759c:	f8ad 201a 	strh.w	r2, [sp, #26]
 80175a0:	aa02      	add	r2, sp, #8
 80175a2:	f8ad 101c 	strh.w	r1, [sp, #28]
 80175a6:	4649      	mov	r1, r9
 80175a8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80175ac:	4643      	mov	r3, r8
 80175ae:	9600      	str	r6, [sp, #0]
 80175b0:	f7ff fe3a 	bl	8017228 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80175b4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80175b8:	f9b4 2000 	ldrsh.w	r2, [r4]
 80175bc:	4293      	cmp	r3, r2
 80175be:	dd13      	ble.n	80175e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80175c0:	1a9b      	subs	r3, r3, r2
 80175c2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80175c6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80175ca:	f8ad 2018 	strh.w	r2, [sp, #24]
 80175ce:	aa02      	add	r2, sp, #8
 80175d0:	f8ad 001a 	strh.w	r0, [sp, #26]
 80175d4:	4638      	mov	r0, r7
 80175d6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80175da:	4643      	mov	r3, r8
 80175dc:	f8ad 101e 	strh.w	r1, [sp, #30]
 80175e0:	4649      	mov	r1, r9
 80175e2:	9600      	str	r6, [sp, #0]
 80175e4:	f7ff fe20 	bl	8017228 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80175e8:	88a2      	ldrh	r2, [r4, #4]
 80175ea:	8823      	ldrh	r3, [r4, #0]
 80175ec:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80175f0:	4413      	add	r3, r2
 80175f2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80175f6:	440a      	add	r2, r1
 80175f8:	b29b      	uxth	r3, r3
 80175fa:	b292      	uxth	r2, r2
 80175fc:	b218      	sxth	r0, r3
 80175fe:	b211      	sxth	r1, r2
 8017600:	4288      	cmp	r0, r1
 8017602:	dd13      	ble.n	801762c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8017604:	1a9b      	subs	r3, r3, r2
 8017606:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801760a:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 801760e:	aa02      	add	r2, sp, #8
 8017610:	f8ad 1018 	strh.w	r1, [sp, #24]
 8017614:	4649      	mov	r1, r9
 8017616:	f8ad 301c 	strh.w	r3, [sp, #28]
 801761a:	4643      	mov	r3, r8
 801761c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8017620:	4638      	mov	r0, r7
 8017622:	9600      	str	r6, [sp, #0]
 8017624:	f8ad 501a 	strh.w	r5, [sp, #26]
 8017628:	f7ff fdfe 	bl	8017228 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801762c:	88e2      	ldrh	r2, [r4, #6]
 801762e:	8863      	ldrh	r3, [r4, #2]
 8017630:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8017634:	4413      	add	r3, r2
 8017636:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801763a:	440a      	add	r2, r1
 801763c:	b29b      	uxth	r3, r3
 801763e:	b292      	uxth	r2, r2
 8017640:	b218      	sxth	r0, r3
 8017642:	b211      	sxth	r1, r2
 8017644:	4288      	cmp	r0, r1
 8017646:	f77f af56 	ble.w	80174f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801764a:	f9b4 5000 	ldrsh.w	r5, [r4]
 801764e:	1a9b      	subs	r3, r3, r2
 8017650:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017654:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017658:	4643      	mov	r3, r8
 801765a:	f8ad 5018 	strh.w	r5, [sp, #24]
 801765e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8017662:	f8ad 001c 	strh.w	r0, [sp, #28]
 8017666:	9600      	str	r6, [sp, #0]
 8017668:	e779      	b.n	801755e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 801766a:	bf00      	nop
 801766c:	08025061 	.word	0x08025061
 8017670:	0802579a 	.word	0x0802579a
 8017674:	08025360 	.word	0x08025360

08017678 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8017678:	b508      	push	{r3, lr}
 801767a:	b180      	cbz	r0, 801769e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 801767c:	2902      	cmp	r1, #2
 801767e:	d014      	beq.n	80176aa <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8017680:	2903      	cmp	r1, #3
 8017682:	d01d      	beq.n	80176c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8017684:	2901      	cmp	r1, #1
 8017686:	d101      	bne.n	801768c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8017688:	2001      	movs	r0, #1
 801768a:	bd08      	pop	{r3, pc}
 801768c:	4b0e      	ldr	r3, [pc, #56]	; (80176c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801768e:	8818      	ldrh	r0, [r3, #0]
 8017690:	b990      	cbnz	r0, 80176b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8017692:	4b0e      	ldr	r3, [pc, #56]	; (80176cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8017694:	2154      	movs	r1, #84	; 0x54
 8017696:	4a0e      	ldr	r2, [pc, #56]	; (80176d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8017698:	480e      	ldr	r0, [pc, #56]	; (80176d4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 801769a:	f009 fb69 	bl	8020d70 <__assert_func>
 801769e:	2902      	cmp	r1, #2
 80176a0:	d00e      	beq.n	80176c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80176a2:	2903      	cmp	r1, #3
 80176a4:	d0f2      	beq.n	801768c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80176a6:	2901      	cmp	r1, #1
 80176a8:	d1ee      	bne.n	8017688 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 80176aa:	4b07      	ldr	r3, [pc, #28]	; (80176c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80176ac:	8818      	ldrh	r0, [r3, #0]
 80176ae:	2800      	cmp	r0, #0
 80176b0:	d0ef      	beq.n	8017692 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 80176b2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80176b6:	e7e8      	b.n	801768a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80176b8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80176bc:	4240      	negs	r0, r0
 80176be:	e7e4      	b.n	801768a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80176c0:	f04f 30ff 	mov.w	r0, #4294967295
 80176c4:	e7e1      	b.n	801768a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80176c6:	bf00      	nop
 80176c8:	200125aa 	.word	0x200125aa
 80176cc:	08025392 	.word	0x08025392
 80176d0:	08025917 	.word	0x08025917
 80176d4:	080253d4 	.word	0x080253d4

080176d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80176d8:	b508      	push	{r3, lr}
 80176da:	b180      	cbz	r0, 80176fe <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 80176dc:	2902      	cmp	r1, #2
 80176de:	d014      	beq.n	801770a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 80176e0:	2903      	cmp	r1, #3
 80176e2:	d018      	beq.n	8017716 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80176e4:	2901      	cmp	r1, #1
 80176e6:	d001      	beq.n	80176ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80176e8:	2001      	movs	r0, #1
 80176ea:	e013      	b.n	8017714 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80176ec:	4b0e      	ldr	r3, [pc, #56]	; (8017728 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80176ee:	8818      	ldrh	r0, [r3, #0]
 80176f0:	b970      	cbnz	r0, 8017710 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 80176f2:	4b0e      	ldr	r3, [pc, #56]	; (801772c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 80176f4:	2154      	movs	r1, #84	; 0x54
 80176f6:	4a0e      	ldr	r2, [pc, #56]	; (8017730 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 80176f8:	480e      	ldr	r0, [pc, #56]	; (8017734 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 80176fa:	f009 fb39 	bl	8020d70 <__assert_func>
 80176fe:	2902      	cmp	r1, #2
 8017700:	d009      	beq.n	8017716 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8017702:	2903      	cmp	r1, #3
 8017704:	d0f0      	beq.n	80176e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8017706:	2901      	cmp	r1, #1
 8017708:	d1f0      	bne.n	80176ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801770a:	f04f 30ff 	mov.w	r0, #4294967295
 801770e:	e001      	b.n	8017714 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8017710:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017714:	bd08      	pop	{r3, pc}
 8017716:	4b04      	ldr	r3, [pc, #16]	; (8017728 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8017718:	8818      	ldrh	r0, [r3, #0]
 801771a:	2800      	cmp	r0, #0
 801771c:	d0e9      	beq.n	80176f2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 801771e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017722:	4240      	negs	r0, r0
 8017724:	e7f6      	b.n	8017714 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8017726:	bf00      	nop
 8017728:	200125aa 	.word	0x200125aa
 801772c:	08025392 	.word	0x08025392
 8017730:	08025917 	.word	0x08025917
 8017734:	080253d4 	.word	0x080253d4

08017738 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8017738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801773c:	b099      	sub	sp, #100	; 0x64
 801773e:	910b      	str	r1, [sp, #44]	; 0x2c
 8017740:	a914      	add	r1, sp, #80	; 0x50
 8017742:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8017746:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 801774a:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 801774e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8017752:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8017756:	e881 000c 	stmia.w	r1, {r2, r3}
 801775a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801775e:	f89d 10a4 	ldrb.w	r1, [sp, #164]	; 0xa4
 8017762:	9308      	str	r3, [sp, #32]
 8017764:	910c      	str	r1, [sp, #48]	; 0x30
 8017766:	f89d 10b0 	ldrb.w	r1, [sp, #176]	; 0xb0
 801776a:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
 801776e:	910d      	str	r1, [sp, #52]	; 0x34
 8017770:	f893 b00d 	ldrb.w	fp, [r3, #13]
 8017774:	7998      	ldrb	r0, [r3, #6]
 8017776:	ea4f 114b 	mov.w	r1, fp, lsl #5
 801777a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801777e:	4301      	orrs	r1, r0
 8017780:	9109      	str	r1, [sp, #36]	; 0x24
 8017782:	f000 81e4 	beq.w	8017b4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
 8017786:	ea4f 1b0b 	mov.w	fp, fp, lsl #4
 801778a:	79d9      	ldrb	r1, [r3, #7]
 801778c:	f40b 7b80 	and.w	fp, fp, #256	; 0x100
 8017790:	ea51 0b0b 	orrs.w	fp, r1, fp
 8017794:	f000 81db 	beq.w	8017b4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
 8017798:	f993 3009 	ldrsb.w	r3, [r3, #9]
 801779c:	b29b      	uxth	r3, r3
 801779e:	2e00      	cmp	r6, #0
 80177a0:	f000 80fd 	beq.w	801799e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x266>
 80177a4:	1af6      	subs	r6, r6, r3
 80177a6:	b2b6      	uxth	r6, r6
 80177a8:	0433      	lsls	r3, r6, #16
 80177aa:	d502      	bpl.n	80177b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80177ac:	1bad      	subs	r5, r5, r6
 80177ae:	2600      	movs	r6, #0
 80177b0:	b22d      	sxth	r5, r5
 80177b2:	f9b2 1000 	ldrsh.w	r1, [r2]
 80177b6:	a814      	add	r0, sp, #80	; 0x50
 80177b8:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80177bc:	428d      	cmp	r5, r1
 80177be:	b28b      	uxth	r3, r1
 80177c0:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 80177c4:	bfbf      	itttt	lt
 80177c6:	18f6      	addlt	r6, r6, r3
 80177c8:	1b75      	sublt	r5, r6, r5
 80177ca:	b2ae      	uxthlt	r6, r5
 80177cc:	460d      	movlt	r5, r1
 80177ce:	8891      	ldrh	r1, [r2, #4]
 80177d0:	440b      	add	r3, r1
 80177d2:	4629      	mov	r1, r5
 80177d4:	b21b      	sxth	r3, r3
 80177d6:	9311      	str	r3, [sp, #68]	; 0x44
 80177d8:	8853      	ldrh	r3, [r2, #2]
 80177da:	88d2      	ldrh	r2, [r2, #6]
 80177dc:	4413      	add	r3, r2
 80177de:	9a08      	ldr	r2, [sp, #32]
 80177e0:	b21b      	sxth	r3, r3
 80177e2:	9310      	str	r3, [sp, #64]	; 0x40
 80177e4:	4bb1      	ldr	r3, [pc, #708]	; (8017aac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>)
 80177e6:	f893 9000 	ldrb.w	r9, [r3]
 80177ea:	f109 3cff 	add.w	ip, r9, #4294967295
 80177ee:	f1dc 0300 	rsbs	r3, ip, #0
 80177f2:	eb43 030c 	adc.w	r3, r3, ip
 80177f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80177f8:	4653      	mov	r3, sl
 80177fa:	f7f8 fc96 	bl	801012a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80177fe:	4629      	mov	r1, r5
 8017800:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8017804:	4653      	mov	r3, sl
 8017806:	9a08      	ldr	r2, [sp, #32]
 8017808:	a814      	add	r0, sp, #80	; 0x50
 801780a:	f7f8 fca6 	bl	801015a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801780e:	a918      	add	r1, sp, #96	; 0x60
 8017810:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8017814:	a817      	add	r0, sp, #92	; 0x5c
 8017816:	f7f8 fe01 	bl	801041c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801781a:	f1ba 0f00 	cmp.w	sl, #0
 801781e:	f040 80c1 	bne.w	80179a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26c>
 8017822:	f1b9 0f01 	cmp.w	r9, #1
 8017826:	f040 80c5 	bne.w	80179b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27c>
 801782a:	2301      	movs	r3, #1
 801782c:	f1b8 0f01 	cmp.w	r8, #1
 8017830:	fa03 f308 	lsl.w	r3, r3, r8
 8017834:	f103 33ff 	add.w	r3, r3, #4294967295
 8017838:	b2db      	uxtb	r3, r3
 801783a:	930a      	str	r3, [sp, #40]	; 0x28
 801783c:	f000 80e5 	beq.w	8017a0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d2>
 8017840:	f1b8 0f02 	cmp.w	r8, #2
 8017844:	f000 80e4 	beq.w	8017a10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d8>
 8017848:	f1b8 0f04 	cmp.w	r8, #4
 801784c:	bf15      	itete	ne
 801784e:	46c1      	movne	r9, r8
 8017850:	f04f 0904 	moveq.w	r9, #4
 8017854:	2301      	movne	r3, #1
 8017856:	2311      	moveq	r3, #17
 8017858:	9307      	str	r3, [sp, #28]
 801785a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801785c:	b153      	cbz	r3, 8017874 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 801785e:	2408      	movs	r4, #8
 8017860:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017862:	fb94 f3f9 	sdiv	r3, r4, r9
 8017866:	1e5c      	subs	r4, r3, #1
 8017868:	4414      	add	r4, r2
 801786a:	fb94 f4f3 	sdiv	r4, r4, r3
 801786e:	fb14 f403 	smulbb	r4, r4, r3
 8017872:	b2a4      	uxth	r4, r4
 8017874:	b906      	cbnz	r6, 8017878 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x140>
 8017876:	b16f      	cbz	r7, 8017894 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15c>
 8017878:	fb07 6304 	mla	r3, r7, r4, r6
 801787c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801787e:	4639      	mov	r1, r7
 8017880:	fb08 f303 	mul.w	r3, r8, r3
 8017884:	f003 0707 	and.w	r7, r3, #7
 8017888:	eb02 03d3 	add.w	r3, r2, r3, lsr #3
 801788c:	9328      	str	r3, [sp, #160]	; 0xa0
 801788e:	ebab 0301 	sub.w	r3, fp, r1
 8017892:	930e      	str	r3, [sp, #56]	; 0x38
 8017894:	4651      	mov	r1, sl
 8017896:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017898:	f7ff feee 	bl	8017678 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801789c:	4651      	mov	r1, sl
 801789e:	4683      	mov	fp, r0
 80178a0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80178a2:	f7ff ff19 	bl	80176d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80178a6:	9a08      	ldr	r2, [sp, #32]
 80178a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80178aa:	4682      	mov	sl, r0
 80178ac:	1a9b      	subs	r3, r3, r2
 80178ae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80178b0:	429a      	cmp	r2, r3
 80178b2:	bfa8      	it	ge
 80178b4:	461a      	movge	r2, r3
 80178b6:	2a00      	cmp	r2, #0
 80178b8:	9208      	str	r2, [sp, #32]
 80178ba:	f340 8148 	ble.w	8017b4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
 80178be:	1bad      	subs	r5, r5, r6
 80178c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80178c2:	1b5d      	subs	r5, r3, r5
 80178c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80178c6:	429d      	cmp	r5, r3
 80178c8:	bfd4      	ite	le
 80178ca:	ebc6 0605 	rsble	r6, r6, r5
 80178ce:	ebc6 0603 	rsbgt	r6, r6, r3
 80178d2:	2e00      	cmp	r6, #0
 80178d4:	f340 813b 	ble.w	8017b4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
 80178d8:	1ba4      	subs	r4, r4, r6
 80178da:	fb09 f304 	mul.w	r3, r9, r4
 80178de:	930e      	str	r3, [sp, #56]	; 0x38
 80178e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80178e2:	2b00      	cmp	r3, #0
 80178e4:	f040 809d 	bne.w	8017a22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ea>
 80178e8:	4b71      	ldr	r3, [pc, #452]	; (8017ab0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 80178ea:	6818      	ldr	r0, [r3, #0]
 80178ec:	6803      	ldr	r3, [r0, #0]
 80178ee:	6a1b      	ldr	r3, [r3, #32]
 80178f0:	4798      	blx	r3
 80178f2:	4970      	ldr	r1, [pc, #448]	; (8017ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 80178f4:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 80178f8:	880c      	ldrh	r4, [r1, #0]
 80178fa:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	; 0x5c
 80178fe:	fb04 1303 	mla	r3, r4, r3, r1
 8017902:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017906:	9309      	str	r3, [sp, #36]	; 0x24
 8017908:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801790a:	7819      	ldrb	r1, [r3, #0]
 801790c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801790e:	4139      	asrs	r1, r7
 8017910:	0a1b      	lsrs	r3, r3, #8
 8017912:	b2c9      	uxtb	r1, r1
 8017914:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017918:	930f      	str	r3, [sp, #60]	; 0x3c
 801791a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801791c:	08db      	lsrs	r3, r3, #3
 801791e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017922:	9310      	str	r3, [sp, #64]	; 0x40
 8017924:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017926:	00db      	lsls	r3, r3, #3
 8017928:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801792c:	9311      	str	r3, [sp, #68]	; 0x44
 801792e:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8017932:	fb0b ab16 	mls	fp, fp, r6, sl
 8017936:	fb03 fa06 	mul.w	sl, r3, r6
 801793a:	930c      	str	r3, [sp, #48]	; 0x30
 801793c:	eb0a 034b 	add.w	r3, sl, fp, lsl #1
 8017940:	9312      	str	r3, [sp, #72]	; 0x48
 8017942:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017944:	b29b      	uxth	r3, r3
 8017946:	9313      	str	r3, [sp, #76]	; 0x4c
 8017948:	9b08      	ldr	r3, [sp, #32]
 801794a:	3b01      	subs	r3, #1
 801794c:	9308      	str	r3, [sp, #32]
 801794e:	3301      	adds	r3, #1
 8017950:	f000 80c4 	beq.w	8017adc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 8017954:	46b2      	mov	sl, r6
 8017956:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801795a:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801795e:	f0c0 80ab 	bcc.w	8017ab8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8017962:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017964:	400b      	ands	r3, r1
 8017966:	d00a      	beq.n	801797e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x246>
 8017968:	9807      	ldr	r0, [sp, #28]
 801796a:	fb13 f300 	smulbb	r3, r3, r0
 801796e:	2bfe      	cmp	r3, #254	; 0xfe
 8017970:	dd59      	ble.n	8017a26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ee>
 8017972:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017974:	28ff      	cmp	r0, #255	; 0xff
 8017976:	d156      	bne.n	8017a26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ee>
 8017978:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801797a:	f8ae 4000 	strh.w	r4, [lr]
 801797e:	4447      	add	r7, r8
 8017980:	b2bf      	uxth	r7, r7
 8017982:	2f07      	cmp	r7, #7
 8017984:	bf89      	itett	hi
 8017986:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8017988:	fa41 f109 	asrls.w	r1, r1, r9
 801798c:	2700      	movhi	r7, #0
 801798e:	7859      	ldrbhi	r1, [r3, #1]
 8017990:	bf8a      	itet	hi
 8017992:	3301      	addhi	r3, #1
 8017994:	b2c9      	uxtbls	r1, r1
 8017996:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8017998:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801799a:	449e      	add	lr, r3
 801799c:	e7dd      	b.n	801795a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x222>
 801799e:	441d      	add	r5, r3
 80179a0:	b22d      	sxth	r5, r5
 80179a2:	e706      	b.n	80177b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80179a4:	f1ba 0f01 	cmp.w	sl, #1
 80179a8:	f47f af3f 	bne.w	801782a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80179ac:	f1b9 0f01 	cmp.w	r9, #1
 80179b0:	f47f af3b 	bne.w	801782a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80179b4:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8017ab0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 80179b8:	f8d9 0000 	ldr.w	r0, [r9]
 80179bc:	6803      	ldr	r3, [r0, #0]
 80179be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80179c0:	4798      	blx	r3
 80179c2:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 80179c6:	464a      	mov	r2, r9
 80179c8:	d006      	beq.n	80179d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a0>
 80179ca:	f1b8 0f04 	cmp.w	r8, #4
 80179ce:	d11a      	bne.n	8017a06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80179d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80179d2:	3300      	adds	r3, #0
 80179d4:	bf18      	it	ne
 80179d6:	2301      	movne	r3, #1
 80179d8:	05c0      	lsls	r0, r0, #23
 80179da:	f140 8088 	bpl.w	8017aee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b6>
 80179de:	f1b8 0f08 	cmp.w	r8, #8
 80179e2:	f040 8084 	bne.w	8017aee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b6>
 80179e6:	2b00      	cmp	r3, #0
 80179e8:	bf14      	ite	ne
 80179ea:	2180      	movne	r1, #128	; 0x80
 80179ec:	f44f 7180 	moveq.w	r1, #256	; 0x100
 80179f0:	2e00      	cmp	r6, #0
 80179f2:	f040 80af 	bne.w	8017b54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x41c>
 80179f6:	2f00      	cmp	r7, #0
 80179f8:	f000 8083 	beq.w	8017b02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 80179fc:	23ff      	movs	r3, #255	; 0xff
 80179fe:	46c1      	mov	r9, r8
 8017a00:	930a      	str	r3, [sp, #40]	; 0x28
 8017a02:	2301      	movs	r3, #1
 8017a04:	e728      	b.n	8017858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x120>
 8017a06:	2300      	movs	r3, #0
 8017a08:	e7e6      	b.n	80179d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a0>
 8017a0a:	46c1      	mov	r9, r8
 8017a0c:	23ff      	movs	r3, #255	; 0xff
 8017a0e:	e723      	b.n	8017858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x120>
 8017a10:	46c1      	mov	r9, r8
 8017a12:	2355      	movs	r3, #85	; 0x55
 8017a14:	e720      	b.n	8017858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x120>
 8017a16:	23ff      	movs	r3, #255	; 0xff
 8017a18:	46c1      	mov	r9, r8
 8017a1a:	930a      	str	r3, [sp, #40]	; 0x28
 8017a1c:	2301      	movs	r3, #1
 8017a1e:	9307      	str	r3, [sp, #28]
 8017a20:	e71d      	b.n	801785e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x126>
 8017a22:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017a24:	e765      	b.n	80178f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ba>
 8017a26:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017a28:	f8be 5000 	ldrh.w	r5, [lr]
 8017a2c:	fb10 f303 	smulbb	r3, r0, r3
 8017a30:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017a32:	122c      	asrs	r4, r5, #8
 8017a34:	b29b      	uxth	r3, r3
 8017a36:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8017a3a:	1c58      	adds	r0, r3, #1
 8017a3c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8017a40:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017a42:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017a46:	fa1f fc83 	uxth.w	ip, r3
 8017a4a:	43db      	mvns	r3, r3
 8017a4c:	fb10 f00c 	smulbb	r0, r0, ip
 8017a50:	b2db      	uxtb	r3, r3
 8017a52:	fb1c fb02 	smulbb	fp, ip, r2
 8017a56:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017a58:	fb04 0403 	mla	r4, r4, r3, r0
 8017a5c:	10e8      	asrs	r0, r5, #3
 8017a5e:	fb1c fc02 	smulbb	ip, ip, r2
 8017a62:	00ed      	lsls	r5, r5, #3
 8017a64:	b2a4      	uxth	r4, r4
 8017a66:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017a6a:	b2ed      	uxtb	r5, r5
 8017a6c:	fb00 b003 	mla	r0, r0, r3, fp
 8017a70:	fb05 cc03 	mla	ip, r5, r3, ip
 8017a74:	1c63      	adds	r3, r4, #1
 8017a76:	b280      	uxth	r0, r0
 8017a78:	fa1f fc8c 	uxth.w	ip, ip
 8017a7c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8017a80:	f10c 0b01 	add.w	fp, ip, #1
 8017a84:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017a88:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8017a8c:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8017a90:	ea44 040b 	orr.w	r4, r4, fp
 8017a94:	f100 0b01 	add.w	fp, r0, #1
 8017a98:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8017a9c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017aa0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017aa4:	ea44 040b 	orr.w	r4, r4, fp
 8017aa8:	e767      	b.n	801797a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x242>
 8017aaa:	bf00      	nop
 8017aac:	200125a8 	.word	0x200125a8
 8017ab0:	200125b0 	.word	0x200125b0
 8017ab4:	200125aa 	.word	0x200125aa
 8017ab8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017aba:	b153      	cbz	r3, 8017ad2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 8017abc:	441f      	add	r7, r3
 8017abe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017ac0:	b2bf      	uxth	r7, r7
 8017ac2:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8017ac6:	f007 0707 	and.w	r7, r7, #7
 8017aca:	7819      	ldrb	r1, [r3, #0]
 8017acc:	9328      	str	r3, [sp, #160]	; 0xa0
 8017ace:	4139      	asrs	r1, r7
 8017ad0:	b2c9      	uxtb	r1, r1
 8017ad2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017ad4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017ad6:	441a      	add	r2, r3
 8017ad8:	9209      	str	r2, [sp, #36]	; 0x24
 8017ada:	e735      	b.n	8017948 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x210>
 8017adc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017ade:	2b00      	cmp	r3, #0
 8017ae0:	d135      	bne.n	8017b4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
 8017ae2:	4b21      	ldr	r3, [pc, #132]	; (8017b68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x430>)
 8017ae4:	6818      	ldr	r0, [r3, #0]
 8017ae6:	6803      	ldr	r3, [r0, #0]
 8017ae8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017aea:	4798      	blx	r3
 8017aec:	e02f      	b.n	8017b4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
 8017aee:	2b00      	cmp	r3, #0
 8017af0:	f43f ae9b 	beq.w	801782a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8017af4:	2e00      	cmp	r6, #0
 8017af6:	f47f ae98 	bne.w	801782a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8017afa:	2f00      	cmp	r7, #0
 8017afc:	f47f ae95 	bne.w	801782a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8017b00:	2180      	movs	r1, #128	; 0x80
 8017b02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017b04:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017b06:	18eb      	adds	r3, r5, r3
 8017b08:	4283      	cmp	r3, r0
 8017b0a:	f73f ae8e 	bgt.w	801782a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8017b0e:	9b08      	ldr	r3, [sp, #32]
 8017b10:	9810      	ldr	r0, [sp, #64]	; 0x40
 8017b12:	445b      	add	r3, fp
 8017b14:	4283      	cmp	r3, r0
 8017b16:	f73f ae88 	bgt.w	801782a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8017b1a:	f1b8 0f08 	cmp.w	r8, #8
 8017b1e:	6810      	ldr	r0, [r2, #0]
 8017b20:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8017b24:	bf18      	it	ne
 8017b26:	3401      	addne	r4, #1
 8017b28:	6805      	ldr	r5, [r0, #0]
 8017b2a:	9105      	str	r1, [sp, #20]
 8017b2c:	bf18      	it	ne
 8017b2e:	f024 0401 	bicne.w	r4, r4, #1
 8017b32:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017b34:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8017b38:	bf18      	it	ne
 8017b3a:	b2a4      	uxthne	r4, r4
 8017b3c:	9104      	str	r1, [sp, #16]
 8017b3e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8017b40:	e9cd 4b00 	strd	r4, fp, [sp]
 8017b44:	e9cd 4102 	strd	r4, r1, [sp, #8]
 8017b48:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017b4a:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 8017b4c:	47a0      	blx	r4
 8017b4e:	b019      	add	sp, #100	; 0x64
 8017b50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017b56:	2b00      	cmp	r3, #0
 8017b58:	f47f af5d 	bne.w	8017a16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8017b5c:	23ff      	movs	r3, #255	; 0xff
 8017b5e:	46c1      	mov	r9, r8
 8017b60:	930a      	str	r3, [sp, #40]	; 0x28
 8017b62:	2301      	movs	r3, #1
 8017b64:	9307      	str	r3, [sp, #28]
 8017b66:	e687      	b.n	8017878 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x140>
 8017b68:	200125b0 	.word	0x200125b0

08017b6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8017b6c:	b538      	push	{r3, r4, r5, lr}
 8017b6e:	4c15      	ldr	r4, [pc, #84]	; (8017bc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8017b70:	4605      	mov	r5, r0
 8017b72:	7823      	ldrb	r3, [r4, #0]
 8017b74:	f3bf 8f5b 	dmb	ish
 8017b78:	07da      	lsls	r2, r3, #31
 8017b7a:	d40b      	bmi.n	8017b94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8017b7c:	4620      	mov	r0, r4
 8017b7e:	f007 fd7e 	bl	801f67e <__cxa_guard_acquire>
 8017b82:	b138      	cbz	r0, 8017b94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8017b84:	4620      	mov	r0, r4
 8017b86:	f007 fd86 	bl	801f696 <__cxa_guard_release>
 8017b8a:	4a0f      	ldr	r2, [pc, #60]	; (8017bc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8017b8c:	490f      	ldr	r1, [pc, #60]	; (8017bcc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8017b8e:	4810      	ldr	r0, [pc, #64]	; (8017bd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8017b90:	f007 fd5a 	bl	801f648 <__aeabi_atexit>
 8017b94:	4c0f      	ldr	r4, [pc, #60]	; (8017bd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8017b96:	7823      	ldrb	r3, [r4, #0]
 8017b98:	f3bf 8f5b 	dmb	ish
 8017b9c:	07db      	lsls	r3, r3, #31
 8017b9e:	d40b      	bmi.n	8017bb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8017ba0:	4620      	mov	r0, r4
 8017ba2:	f007 fd6c 	bl	801f67e <__cxa_guard_acquire>
 8017ba6:	b138      	cbz	r0, 8017bb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8017ba8:	4620      	mov	r0, r4
 8017baa:	f007 fd74 	bl	801f696 <__cxa_guard_release>
 8017bae:	4a06      	ldr	r2, [pc, #24]	; (8017bc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8017bb0:	4909      	ldr	r1, [pc, #36]	; (8017bd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8017bb2:	480a      	ldr	r0, [pc, #40]	; (8017bdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8017bb4:	f007 fd48 	bl	801f648 <__aeabi_atexit>
 8017bb8:	4b05      	ldr	r3, [pc, #20]	; (8017bd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8017bba:	612b      	str	r3, [r5, #16]
 8017bbc:	4b07      	ldr	r3, [pc, #28]	; (8017bdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8017bbe:	616b      	str	r3, [r5, #20]
 8017bc0:	bd38      	pop	{r3, r4, r5, pc}
 8017bc2:	bf00      	nop
 8017bc4:	2001267c 	.word	0x2001267c
 8017bc8:	20000000 	.word	0x20000000
 8017bcc:	0801615d 	.word	0x0801615d
 8017bd0:	200000b8 	.word	0x200000b8
 8017bd4:	20012680 	.word	0x20012680
 8017bd8:	0801615b 	.word	0x0801615b
 8017bdc:	200000bc 	.word	0x200000bc

08017be0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8017be0:	b538      	push	{r3, r4, r5, lr}
 8017be2:	4c15      	ldr	r4, [pc, #84]	; (8017c38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8017be4:	4605      	mov	r5, r0
 8017be6:	7823      	ldrb	r3, [r4, #0]
 8017be8:	f3bf 8f5b 	dmb	ish
 8017bec:	07da      	lsls	r2, r3, #31
 8017bee:	d40b      	bmi.n	8017c08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8017bf0:	4620      	mov	r0, r4
 8017bf2:	f007 fd44 	bl	801f67e <__cxa_guard_acquire>
 8017bf6:	b138      	cbz	r0, 8017c08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8017bf8:	4620      	mov	r0, r4
 8017bfa:	f007 fd4c 	bl	801f696 <__cxa_guard_release>
 8017bfe:	4a0f      	ldr	r2, [pc, #60]	; (8017c3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8017c00:	490f      	ldr	r1, [pc, #60]	; (8017c40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8017c02:	4810      	ldr	r0, [pc, #64]	; (8017c44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8017c04:	f007 fd20 	bl	801f648 <__aeabi_atexit>
 8017c08:	4c0f      	ldr	r4, [pc, #60]	; (8017c48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8017c0a:	7823      	ldrb	r3, [r4, #0]
 8017c0c:	f3bf 8f5b 	dmb	ish
 8017c10:	07db      	lsls	r3, r3, #31
 8017c12:	d40b      	bmi.n	8017c2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8017c14:	4620      	mov	r0, r4
 8017c16:	f007 fd32 	bl	801f67e <__cxa_guard_acquire>
 8017c1a:	b138      	cbz	r0, 8017c2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8017c1c:	4620      	mov	r0, r4
 8017c1e:	f007 fd3a 	bl	801f696 <__cxa_guard_release>
 8017c22:	4a06      	ldr	r2, [pc, #24]	; (8017c3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8017c24:	4909      	ldr	r1, [pc, #36]	; (8017c4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8017c26:	480a      	ldr	r0, [pc, #40]	; (8017c50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8017c28:	f007 fd0e 	bl	801f648 <__aeabi_atexit>
 8017c2c:	4b05      	ldr	r3, [pc, #20]	; (8017c44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8017c2e:	60ab      	str	r3, [r5, #8]
 8017c30:	4b07      	ldr	r3, [pc, #28]	; (8017c50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8017c32:	60eb      	str	r3, [r5, #12]
 8017c34:	bd38      	pop	{r3, r4, r5, pc}
 8017c36:	bf00      	nop
 8017c38:	20012654 	.word	0x20012654
 8017c3c:	20000000 	.word	0x20000000
 8017c40:	08016161 	.word	0x08016161
 8017c44:	20000090 	.word	0x20000090
 8017c48:	20012658 	.word	0x20012658
 8017c4c:	0801615f 	.word	0x0801615f
 8017c50:	20000094 	.word	0x20000094

08017c54 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8017c54:	b510      	push	{r4, lr}
 8017c56:	4604      	mov	r4, r0
 8017c58:	f7ff ff88 	bl	8017b6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8017c5c:	4620      	mov	r0, r4
 8017c5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017c62:	f7ff bfbd 	b.w	8017be0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08017c68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8017c68:	b538      	push	{r3, r4, r5, lr}
 8017c6a:	4c15      	ldr	r4, [pc, #84]	; (8017cc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8017c6c:	4605      	mov	r5, r0
 8017c6e:	7823      	ldrb	r3, [r4, #0]
 8017c70:	f3bf 8f5b 	dmb	ish
 8017c74:	07da      	lsls	r2, r3, #31
 8017c76:	d40b      	bmi.n	8017c90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8017c78:	4620      	mov	r0, r4
 8017c7a:	f007 fd00 	bl	801f67e <__cxa_guard_acquire>
 8017c7e:	b138      	cbz	r0, 8017c90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8017c80:	4620      	mov	r0, r4
 8017c82:	f007 fd08 	bl	801f696 <__cxa_guard_release>
 8017c86:	4a0f      	ldr	r2, [pc, #60]	; (8017cc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017c88:	490f      	ldr	r1, [pc, #60]	; (8017cc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8017c8a:	4810      	ldr	r0, [pc, #64]	; (8017ccc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017c8c:	f007 fcdc 	bl	801f648 <__aeabi_atexit>
 8017c90:	4c0f      	ldr	r4, [pc, #60]	; (8017cd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8017c92:	7823      	ldrb	r3, [r4, #0]
 8017c94:	f3bf 8f5b 	dmb	ish
 8017c98:	07db      	lsls	r3, r3, #31
 8017c9a:	d40b      	bmi.n	8017cb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017c9c:	4620      	mov	r0, r4
 8017c9e:	f007 fcee 	bl	801f67e <__cxa_guard_acquire>
 8017ca2:	b138      	cbz	r0, 8017cb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017ca4:	4620      	mov	r0, r4
 8017ca6:	f007 fcf6 	bl	801f696 <__cxa_guard_release>
 8017caa:	4a06      	ldr	r2, [pc, #24]	; (8017cc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017cac:	4909      	ldr	r1, [pc, #36]	; (8017cd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8017cae:	480a      	ldr	r0, [pc, #40]	; (8017cd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8017cb0:	f007 fcca 	bl	801f648 <__aeabi_atexit>
 8017cb4:	4b05      	ldr	r3, [pc, #20]	; (8017ccc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017cb6:	622b      	str	r3, [r5, #32]
 8017cb8:	4b07      	ldr	r3, [pc, #28]	; (8017cd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8017cba:	626b      	str	r3, [r5, #36]	; 0x24
 8017cbc:	bd38      	pop	{r3, r4, r5, pc}
 8017cbe:	bf00      	nop
 8017cc0:	20012684 	.word	0x20012684
 8017cc4:	20000000 	.word	0x20000000
 8017cc8:	08016155 	.word	0x08016155
 8017ccc:	200000c0 	.word	0x200000c0
 8017cd0:	20012688 	.word	0x20012688
 8017cd4:	08016153 	.word	0x08016153
 8017cd8:	200000c4 	.word	0x200000c4

08017cdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8017cdc:	b538      	push	{r3, r4, r5, lr}
 8017cde:	4c15      	ldr	r4, [pc, #84]	; (8017d34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8017ce0:	4605      	mov	r5, r0
 8017ce2:	7823      	ldrb	r3, [r4, #0]
 8017ce4:	f3bf 8f5b 	dmb	ish
 8017ce8:	07da      	lsls	r2, r3, #31
 8017cea:	d40b      	bmi.n	8017d04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017cec:	4620      	mov	r0, r4
 8017cee:	f007 fcc6 	bl	801f67e <__cxa_guard_acquire>
 8017cf2:	b138      	cbz	r0, 8017d04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017cf4:	4620      	mov	r0, r4
 8017cf6:	f007 fcce 	bl	801f696 <__cxa_guard_release>
 8017cfa:	4a0f      	ldr	r2, [pc, #60]	; (8017d38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8017cfc:	490f      	ldr	r1, [pc, #60]	; (8017d3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8017cfe:	4810      	ldr	r0, [pc, #64]	; (8017d40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8017d00:	f007 fca2 	bl	801f648 <__aeabi_atexit>
 8017d04:	4c0f      	ldr	r4, [pc, #60]	; (8017d44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8017d06:	7823      	ldrb	r3, [r4, #0]
 8017d08:	f3bf 8f5b 	dmb	ish
 8017d0c:	07db      	lsls	r3, r3, #31
 8017d0e:	d40b      	bmi.n	8017d28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8017d10:	4620      	mov	r0, r4
 8017d12:	f007 fcb4 	bl	801f67e <__cxa_guard_acquire>
 8017d16:	b138      	cbz	r0, 8017d28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8017d18:	4620      	mov	r0, r4
 8017d1a:	f007 fcbc 	bl	801f696 <__cxa_guard_release>
 8017d1e:	4a06      	ldr	r2, [pc, #24]	; (8017d38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8017d20:	4909      	ldr	r1, [pc, #36]	; (8017d48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8017d22:	480a      	ldr	r0, [pc, #40]	; (8017d4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8017d24:	f007 fc90 	bl	801f648 <__aeabi_atexit>
 8017d28:	4b05      	ldr	r3, [pc, #20]	; (8017d40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8017d2a:	61ab      	str	r3, [r5, #24]
 8017d2c:	4b07      	ldr	r3, [pc, #28]	; (8017d4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8017d2e:	61eb      	str	r3, [r5, #28]
 8017d30:	bd38      	pop	{r3, r4, r5, pc}
 8017d32:	bf00      	nop
 8017d34:	2001265c 	.word	0x2001265c
 8017d38:	20000000 	.word	0x20000000
 8017d3c:	08016159 	.word	0x08016159
 8017d40:	20000098 	.word	0x20000098
 8017d44:	20012660 	.word	0x20012660
 8017d48:	08016157 	.word	0x08016157
 8017d4c:	2000009c 	.word	0x2000009c

08017d50 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8017d50:	b510      	push	{r4, lr}
 8017d52:	4604      	mov	r4, r0
 8017d54:	f7ff ff88 	bl	8017c68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8017d58:	4620      	mov	r0, r4
 8017d5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017d5e:	f7ff bfbd 	b.w	8017cdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08017d64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8017d64:	b538      	push	{r3, r4, r5, lr}
 8017d66:	4c15      	ldr	r4, [pc, #84]	; (8017dbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8017d68:	4605      	mov	r5, r0
 8017d6a:	7823      	ldrb	r3, [r4, #0]
 8017d6c:	f3bf 8f5b 	dmb	ish
 8017d70:	07da      	lsls	r2, r3, #31
 8017d72:	d40b      	bmi.n	8017d8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8017d74:	4620      	mov	r0, r4
 8017d76:	f007 fc82 	bl	801f67e <__cxa_guard_acquire>
 8017d7a:	b138      	cbz	r0, 8017d8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8017d7c:	4620      	mov	r0, r4
 8017d7e:	f007 fc8a 	bl	801f696 <__cxa_guard_release>
 8017d82:	4a0f      	ldr	r2, [pc, #60]	; (8017dc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8017d84:	490f      	ldr	r1, [pc, #60]	; (8017dc4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8017d86:	4810      	ldr	r0, [pc, #64]	; (8017dc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8017d88:	f007 fc5e 	bl	801f648 <__aeabi_atexit>
 8017d8c:	4c0f      	ldr	r4, [pc, #60]	; (8017dcc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8017d8e:	7823      	ldrb	r3, [r4, #0]
 8017d90:	f3bf 8f5b 	dmb	ish
 8017d94:	07db      	lsls	r3, r3, #31
 8017d96:	d40b      	bmi.n	8017db0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8017d98:	4620      	mov	r0, r4
 8017d9a:	f007 fc70 	bl	801f67e <__cxa_guard_acquire>
 8017d9e:	b138      	cbz	r0, 8017db0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8017da0:	4620      	mov	r0, r4
 8017da2:	f007 fc78 	bl	801f696 <__cxa_guard_release>
 8017da6:	4a06      	ldr	r2, [pc, #24]	; (8017dc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8017da8:	4909      	ldr	r1, [pc, #36]	; (8017dd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8017daa:	480a      	ldr	r0, [pc, #40]	; (8017dd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8017dac:	f007 fc4c 	bl	801f648 <__aeabi_atexit>
 8017db0:	4b05      	ldr	r3, [pc, #20]	; (8017dc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8017db2:	632b      	str	r3, [r5, #48]	; 0x30
 8017db4:	4b07      	ldr	r3, [pc, #28]	; (8017dd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8017db6:	636b      	str	r3, [r5, #52]	; 0x34
 8017db8:	bd38      	pop	{r3, r4, r5, pc}
 8017dba:	bf00      	nop
 8017dbc:	20012694 	.word	0x20012694
 8017dc0:	20000000 	.word	0x20000000
 8017dc4:	0801614d 	.word	0x0801614d
 8017dc8:	200000d0 	.word	0x200000d0
 8017dcc:	20012698 	.word	0x20012698
 8017dd0:	0801614b 	.word	0x0801614b
 8017dd4:	200000d4 	.word	0x200000d4

08017dd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8017dd8:	b538      	push	{r3, r4, r5, lr}
 8017dda:	4c15      	ldr	r4, [pc, #84]	; (8017e30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8017ddc:	4605      	mov	r5, r0
 8017dde:	7823      	ldrb	r3, [r4, #0]
 8017de0:	f3bf 8f5b 	dmb	ish
 8017de4:	07da      	lsls	r2, r3, #31
 8017de6:	d40b      	bmi.n	8017e00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8017de8:	4620      	mov	r0, r4
 8017dea:	f007 fc48 	bl	801f67e <__cxa_guard_acquire>
 8017dee:	b138      	cbz	r0, 8017e00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8017df0:	4620      	mov	r0, r4
 8017df2:	f007 fc50 	bl	801f696 <__cxa_guard_release>
 8017df6:	4a0f      	ldr	r2, [pc, #60]	; (8017e34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8017df8:	490f      	ldr	r1, [pc, #60]	; (8017e38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8017dfa:	4810      	ldr	r0, [pc, #64]	; (8017e3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8017dfc:	f007 fc24 	bl	801f648 <__aeabi_atexit>
 8017e00:	4c0f      	ldr	r4, [pc, #60]	; (8017e40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8017e02:	7823      	ldrb	r3, [r4, #0]
 8017e04:	f3bf 8f5b 	dmb	ish
 8017e08:	07db      	lsls	r3, r3, #31
 8017e0a:	d40b      	bmi.n	8017e24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8017e0c:	4620      	mov	r0, r4
 8017e0e:	f007 fc36 	bl	801f67e <__cxa_guard_acquire>
 8017e12:	b138      	cbz	r0, 8017e24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8017e14:	4620      	mov	r0, r4
 8017e16:	f007 fc3e 	bl	801f696 <__cxa_guard_release>
 8017e1a:	4a06      	ldr	r2, [pc, #24]	; (8017e34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8017e1c:	4909      	ldr	r1, [pc, #36]	; (8017e44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8017e1e:	480a      	ldr	r0, [pc, #40]	; (8017e48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8017e20:	f007 fc12 	bl	801f648 <__aeabi_atexit>
 8017e24:	4b05      	ldr	r3, [pc, #20]	; (8017e3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8017e26:	62ab      	str	r3, [r5, #40]	; 0x28
 8017e28:	4b07      	ldr	r3, [pc, #28]	; (8017e48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8017e2a:	62eb      	str	r3, [r5, #44]	; 0x2c
 8017e2c:	bd38      	pop	{r3, r4, r5, pc}
 8017e2e:	bf00      	nop
 8017e30:	20012664 	.word	0x20012664
 8017e34:	20000000 	.word	0x20000000
 8017e38:	08016151 	.word	0x08016151
 8017e3c:	200000a0 	.word	0x200000a0
 8017e40:	20012668 	.word	0x20012668
 8017e44:	0801614f 	.word	0x0801614f
 8017e48:	200000a4 	.word	0x200000a4

08017e4c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8017e4c:	b510      	push	{r4, lr}
 8017e4e:	4604      	mov	r4, r0
 8017e50:	f7ff ff88 	bl	8017d64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8017e54:	4620      	mov	r0, r4
 8017e56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017e5a:	f7ff bfbd 	b.w	8017dd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08017e60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8017e60:	b538      	push	{r3, r4, r5, lr}
 8017e62:	4c15      	ldr	r4, [pc, #84]	; (8017eb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8017e64:	4605      	mov	r5, r0
 8017e66:	7823      	ldrb	r3, [r4, #0]
 8017e68:	f3bf 8f5b 	dmb	ish
 8017e6c:	07da      	lsls	r2, r3, #31
 8017e6e:	d40b      	bmi.n	8017e88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8017e70:	4620      	mov	r0, r4
 8017e72:	f007 fc04 	bl	801f67e <__cxa_guard_acquire>
 8017e76:	b138      	cbz	r0, 8017e88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8017e78:	4620      	mov	r0, r4
 8017e7a:	f007 fc0c 	bl	801f696 <__cxa_guard_release>
 8017e7e:	4a0f      	ldr	r2, [pc, #60]	; (8017ebc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8017e80:	490f      	ldr	r1, [pc, #60]	; (8017ec0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8017e82:	4810      	ldr	r0, [pc, #64]	; (8017ec4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8017e84:	f007 fbe0 	bl	801f648 <__aeabi_atexit>
 8017e88:	4c0f      	ldr	r4, [pc, #60]	; (8017ec8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8017e8a:	7823      	ldrb	r3, [r4, #0]
 8017e8c:	f3bf 8f5b 	dmb	ish
 8017e90:	07db      	lsls	r3, r3, #31
 8017e92:	d40b      	bmi.n	8017eac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8017e94:	4620      	mov	r0, r4
 8017e96:	f007 fbf2 	bl	801f67e <__cxa_guard_acquire>
 8017e9a:	b138      	cbz	r0, 8017eac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8017e9c:	4620      	mov	r0, r4
 8017e9e:	f007 fbfa 	bl	801f696 <__cxa_guard_release>
 8017ea2:	4a06      	ldr	r2, [pc, #24]	; (8017ebc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8017ea4:	4909      	ldr	r1, [pc, #36]	; (8017ecc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8017ea6:	480a      	ldr	r0, [pc, #40]	; (8017ed0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8017ea8:	f007 fbce 	bl	801f648 <__aeabi_atexit>
 8017eac:	4b05      	ldr	r3, [pc, #20]	; (8017ec4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8017eae:	652b      	str	r3, [r5, #80]	; 0x50
 8017eb0:	4b07      	ldr	r3, [pc, #28]	; (8017ed0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8017eb2:	656b      	str	r3, [r5, #84]	; 0x54
 8017eb4:	bd38      	pop	{r3, r4, r5, pc}
 8017eb6:	bf00      	nop
 8017eb8:	2001269c 	.word	0x2001269c
 8017ebc:	20000000 	.word	0x20000000
 8017ec0:	0801613d 	.word	0x0801613d
 8017ec4:	200000d8 	.word	0x200000d8
 8017ec8:	200126a0 	.word	0x200126a0
 8017ecc:	0801613b 	.word	0x0801613b
 8017ed0:	200000dc 	.word	0x200000dc

08017ed4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8017ed4:	b538      	push	{r3, r4, r5, lr}
 8017ed6:	4c15      	ldr	r4, [pc, #84]	; (8017f2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8017ed8:	4605      	mov	r5, r0
 8017eda:	7823      	ldrb	r3, [r4, #0]
 8017edc:	f3bf 8f5b 	dmb	ish
 8017ee0:	07da      	lsls	r2, r3, #31
 8017ee2:	d40b      	bmi.n	8017efc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8017ee4:	4620      	mov	r0, r4
 8017ee6:	f007 fbca 	bl	801f67e <__cxa_guard_acquire>
 8017eea:	b138      	cbz	r0, 8017efc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8017eec:	4620      	mov	r0, r4
 8017eee:	f007 fbd2 	bl	801f696 <__cxa_guard_release>
 8017ef2:	4a0f      	ldr	r2, [pc, #60]	; (8017f30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8017ef4:	490f      	ldr	r1, [pc, #60]	; (8017f34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8017ef6:	4810      	ldr	r0, [pc, #64]	; (8017f38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8017ef8:	f007 fba6 	bl	801f648 <__aeabi_atexit>
 8017efc:	4c0f      	ldr	r4, [pc, #60]	; (8017f3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8017efe:	7823      	ldrb	r3, [r4, #0]
 8017f00:	f3bf 8f5b 	dmb	ish
 8017f04:	07db      	lsls	r3, r3, #31
 8017f06:	d40b      	bmi.n	8017f20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8017f08:	4620      	mov	r0, r4
 8017f0a:	f007 fbb8 	bl	801f67e <__cxa_guard_acquire>
 8017f0e:	b138      	cbz	r0, 8017f20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8017f10:	4620      	mov	r0, r4
 8017f12:	f007 fbc0 	bl	801f696 <__cxa_guard_release>
 8017f16:	4a06      	ldr	r2, [pc, #24]	; (8017f30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8017f18:	4909      	ldr	r1, [pc, #36]	; (8017f40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8017f1a:	480a      	ldr	r0, [pc, #40]	; (8017f44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8017f1c:	f007 fb94 	bl	801f648 <__aeabi_atexit>
 8017f20:	4b05      	ldr	r3, [pc, #20]	; (8017f38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8017f22:	64ab      	str	r3, [r5, #72]	; 0x48
 8017f24:	4b07      	ldr	r3, [pc, #28]	; (8017f44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8017f26:	64eb      	str	r3, [r5, #76]	; 0x4c
 8017f28:	bd38      	pop	{r3, r4, r5, pc}
 8017f2a:	bf00      	nop
 8017f2c:	200126a4 	.word	0x200126a4
 8017f30:	20000000 	.word	0x20000000
 8017f34:	08016141 	.word	0x08016141
 8017f38:	200000e0 	.word	0x200000e0
 8017f3c:	200126a8 	.word	0x200126a8
 8017f40:	0801613f 	.word	0x0801613f
 8017f44:	200000e4 	.word	0x200000e4

08017f48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8017f48:	b538      	push	{r3, r4, r5, lr}
 8017f4a:	4c15      	ldr	r4, [pc, #84]	; (8017fa0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8017f4c:	4605      	mov	r5, r0
 8017f4e:	7823      	ldrb	r3, [r4, #0]
 8017f50:	f3bf 8f5b 	dmb	ish
 8017f54:	07da      	lsls	r2, r3, #31
 8017f56:	d40b      	bmi.n	8017f70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8017f58:	4620      	mov	r0, r4
 8017f5a:	f007 fb90 	bl	801f67e <__cxa_guard_acquire>
 8017f5e:	b138      	cbz	r0, 8017f70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8017f60:	4620      	mov	r0, r4
 8017f62:	f007 fb98 	bl	801f696 <__cxa_guard_release>
 8017f66:	4a0f      	ldr	r2, [pc, #60]	; (8017fa4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8017f68:	490f      	ldr	r1, [pc, #60]	; (8017fa8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8017f6a:	4810      	ldr	r0, [pc, #64]	; (8017fac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8017f6c:	f007 fb6c 	bl	801f648 <__aeabi_atexit>
 8017f70:	4c0f      	ldr	r4, [pc, #60]	; (8017fb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8017f72:	7823      	ldrb	r3, [r4, #0]
 8017f74:	f3bf 8f5b 	dmb	ish
 8017f78:	07db      	lsls	r3, r3, #31
 8017f7a:	d40b      	bmi.n	8017f94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8017f7c:	4620      	mov	r0, r4
 8017f7e:	f007 fb7e 	bl	801f67e <__cxa_guard_acquire>
 8017f82:	b138      	cbz	r0, 8017f94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8017f84:	4620      	mov	r0, r4
 8017f86:	f007 fb86 	bl	801f696 <__cxa_guard_release>
 8017f8a:	4a06      	ldr	r2, [pc, #24]	; (8017fa4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8017f8c:	4909      	ldr	r1, [pc, #36]	; (8017fb4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8017f8e:	480a      	ldr	r0, [pc, #40]	; (8017fb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8017f90:	f007 fb5a 	bl	801f648 <__aeabi_atexit>
 8017f94:	4b05      	ldr	r3, [pc, #20]	; (8017fac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8017f96:	642b      	str	r3, [r5, #64]	; 0x40
 8017f98:	4b07      	ldr	r3, [pc, #28]	; (8017fb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8017f9a:	646b      	str	r3, [r5, #68]	; 0x44
 8017f9c:	bd38      	pop	{r3, r4, r5, pc}
 8017f9e:	bf00      	nop
 8017fa0:	2001266c 	.word	0x2001266c
 8017fa4:	20000000 	.word	0x20000000
 8017fa8:	08016145 	.word	0x08016145
 8017fac:	200000a8 	.word	0x200000a8
 8017fb0:	20012670 	.word	0x20012670
 8017fb4:	08016143 	.word	0x08016143
 8017fb8:	200000ac 	.word	0x200000ac

08017fbc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8017fbc:	b538      	push	{r3, r4, r5, lr}
 8017fbe:	4c15      	ldr	r4, [pc, #84]	; (8018014 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8017fc0:	4605      	mov	r5, r0
 8017fc2:	7823      	ldrb	r3, [r4, #0]
 8017fc4:	f3bf 8f5b 	dmb	ish
 8017fc8:	07da      	lsls	r2, r3, #31
 8017fca:	d40b      	bmi.n	8017fe4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8017fcc:	4620      	mov	r0, r4
 8017fce:	f007 fb56 	bl	801f67e <__cxa_guard_acquire>
 8017fd2:	b138      	cbz	r0, 8017fe4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8017fd4:	4620      	mov	r0, r4
 8017fd6:	f007 fb5e 	bl	801f696 <__cxa_guard_release>
 8017fda:	4a0f      	ldr	r2, [pc, #60]	; (8018018 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8017fdc:	490f      	ldr	r1, [pc, #60]	; (801801c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8017fde:	4810      	ldr	r0, [pc, #64]	; (8018020 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8017fe0:	f007 fb32 	bl	801f648 <__aeabi_atexit>
 8017fe4:	4c0f      	ldr	r4, [pc, #60]	; (8018024 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8017fe6:	7823      	ldrb	r3, [r4, #0]
 8017fe8:	f3bf 8f5b 	dmb	ish
 8017fec:	07db      	lsls	r3, r3, #31
 8017fee:	d40b      	bmi.n	8018008 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8017ff0:	4620      	mov	r0, r4
 8017ff2:	f007 fb44 	bl	801f67e <__cxa_guard_acquire>
 8017ff6:	b138      	cbz	r0, 8018008 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8017ff8:	4620      	mov	r0, r4
 8017ffa:	f007 fb4c 	bl	801f696 <__cxa_guard_release>
 8017ffe:	4a06      	ldr	r2, [pc, #24]	; (8018018 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018000:	4909      	ldr	r1, [pc, #36]	; (8018028 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8018002:	480a      	ldr	r0, [pc, #40]	; (801802c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018004:	f007 fb20 	bl	801f648 <__aeabi_atexit>
 8018008:	4b05      	ldr	r3, [pc, #20]	; (8018020 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801800a:	63ab      	str	r3, [r5, #56]	; 0x38
 801800c:	4b07      	ldr	r3, [pc, #28]	; (801802c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801800e:	63eb      	str	r3, [r5, #60]	; 0x3c
 8018010:	bd38      	pop	{r3, r4, r5, pc}
 8018012:	bf00      	nop
 8018014:	2001268c 	.word	0x2001268c
 8018018:	20000000 	.word	0x20000000
 801801c:	08016149 	.word	0x08016149
 8018020:	200000c8 	.word	0x200000c8
 8018024:	20012690 	.word	0x20012690
 8018028:	08016147 	.word	0x08016147
 801802c:	200000cc 	.word	0x200000cc

08018030 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8018030:	b510      	push	{r4, lr}
 8018032:	4604      	mov	r4, r0
 8018034:	f7ff ff14 	bl	8017e60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8018038:	4620      	mov	r0, r4
 801803a:	f7ff ff85 	bl	8017f48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801803e:	4620      	mov	r0, r4
 8018040:	f7ff ff48 	bl	8017ed4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8018044:	4620      	mov	r0, r4
 8018046:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801804a:	f7ff bfb7 	b.w	8017fbc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08018050 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8018050:	b538      	push	{r3, r4, r5, lr}
 8018052:	4c15      	ldr	r4, [pc, #84]	; (80180a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8018054:	4605      	mov	r5, r0
 8018056:	7823      	ldrb	r3, [r4, #0]
 8018058:	f3bf 8f5b 	dmb	ish
 801805c:	07da      	lsls	r2, r3, #31
 801805e:	d40b      	bmi.n	8018078 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018060:	4620      	mov	r0, r4
 8018062:	f007 fb0c 	bl	801f67e <__cxa_guard_acquire>
 8018066:	b138      	cbz	r0, 8018078 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018068:	4620      	mov	r0, r4
 801806a:	f007 fb14 	bl	801f696 <__cxa_guard_release>
 801806e:	4a0f      	ldr	r2, [pc, #60]	; (80180ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018070:	490f      	ldr	r1, [pc, #60]	; (80180b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8018072:	4810      	ldr	r0, [pc, #64]	; (80180b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018074:	f007 fae8 	bl	801f648 <__aeabi_atexit>
 8018078:	4c0f      	ldr	r4, [pc, #60]	; (80180b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801807a:	7823      	ldrb	r3, [r4, #0]
 801807c:	f3bf 8f5b 	dmb	ish
 8018080:	07db      	lsls	r3, r3, #31
 8018082:	d40b      	bmi.n	801809c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018084:	4620      	mov	r0, r4
 8018086:	f007 fafa 	bl	801f67e <__cxa_guard_acquire>
 801808a:	b138      	cbz	r0, 801809c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801808c:	4620      	mov	r0, r4
 801808e:	f007 fb02 	bl	801f696 <__cxa_guard_release>
 8018092:	4a06      	ldr	r2, [pc, #24]	; (80180ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018094:	4909      	ldr	r1, [pc, #36]	; (80180bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8018096:	480a      	ldr	r0, [pc, #40]	; (80180c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018098:	f007 fad6 	bl	801f648 <__aeabi_atexit>
 801809c:	4b05      	ldr	r3, [pc, #20]	; (80180b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801809e:	662b      	str	r3, [r5, #96]	; 0x60
 80180a0:	4b07      	ldr	r3, [pc, #28]	; (80180c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80180a2:	666b      	str	r3, [r5, #100]	; 0x64
 80180a4:	bd38      	pop	{r3, r4, r5, pc}
 80180a6:	bf00      	nop
 80180a8:	20012674 	.word	0x20012674
 80180ac:	20000000 	.word	0x20000000
 80180b0:	08016135 	.word	0x08016135
 80180b4:	200000b0 	.word	0x200000b0
 80180b8:	20012678 	.word	0x20012678
 80180bc:	08016133 	.word	0x08016133
 80180c0:	200000b4 	.word	0x200000b4

080180c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80180c4:	b538      	push	{r3, r4, r5, lr}
 80180c6:	4c15      	ldr	r4, [pc, #84]	; (801811c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80180c8:	4605      	mov	r5, r0
 80180ca:	7823      	ldrb	r3, [r4, #0]
 80180cc:	f3bf 8f5b 	dmb	ish
 80180d0:	07da      	lsls	r2, r3, #31
 80180d2:	d40b      	bmi.n	80180ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80180d4:	4620      	mov	r0, r4
 80180d6:	f007 fad2 	bl	801f67e <__cxa_guard_acquire>
 80180da:	b138      	cbz	r0, 80180ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80180dc:	4620      	mov	r0, r4
 80180de:	f007 fada 	bl	801f696 <__cxa_guard_release>
 80180e2:	4a0f      	ldr	r2, [pc, #60]	; (8018120 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80180e4:	490f      	ldr	r1, [pc, #60]	; (8018124 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80180e6:	4810      	ldr	r0, [pc, #64]	; (8018128 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80180e8:	f007 faae 	bl	801f648 <__aeabi_atexit>
 80180ec:	4c0f      	ldr	r4, [pc, #60]	; (801812c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80180ee:	7823      	ldrb	r3, [r4, #0]
 80180f0:	f3bf 8f5b 	dmb	ish
 80180f4:	07db      	lsls	r3, r3, #31
 80180f6:	d40b      	bmi.n	8018110 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80180f8:	4620      	mov	r0, r4
 80180fa:	f007 fac0 	bl	801f67e <__cxa_guard_acquire>
 80180fe:	b138      	cbz	r0, 8018110 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018100:	4620      	mov	r0, r4
 8018102:	f007 fac8 	bl	801f696 <__cxa_guard_release>
 8018106:	4a06      	ldr	r2, [pc, #24]	; (8018120 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018108:	4909      	ldr	r1, [pc, #36]	; (8018130 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801810a:	480a      	ldr	r0, [pc, #40]	; (8018134 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801810c:	f007 fa9c 	bl	801f648 <__aeabi_atexit>
 8018110:	4b05      	ldr	r3, [pc, #20]	; (8018128 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018112:	65ab      	str	r3, [r5, #88]	; 0x58
 8018114:	4b07      	ldr	r3, [pc, #28]	; (8018134 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018116:	65eb      	str	r3, [r5, #92]	; 0x5c
 8018118:	bd38      	pop	{r3, r4, r5, pc}
 801811a:	bf00      	nop
 801811c:	2001264c 	.word	0x2001264c
 8018120:	20000000 	.word	0x20000000
 8018124:	08016139 	.word	0x08016139
 8018128:	20000088 	.word	0x20000088
 801812c:	20012650 	.word	0x20012650
 8018130:	08016137 	.word	0x08016137
 8018134:	2000008c 	.word	0x2000008c

08018138 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8018138:	b510      	push	{r4, lr}
 801813a:	4604      	mov	r4, r0
 801813c:	f7ff ff88 	bl	8018050 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8018140:	4620      	mov	r0, r4
 8018142:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018146:	f7ff bfbd 	b.w	80180c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801814c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801814c:	b538      	push	{r3, r4, r5, lr}
 801814e:	4c15      	ldr	r4, [pc, #84]	; (80181a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8018150:	4605      	mov	r5, r0
 8018152:	7823      	ldrb	r3, [r4, #0]
 8018154:	f3bf 8f5b 	dmb	ish
 8018158:	07da      	lsls	r2, r3, #31
 801815a:	d40b      	bmi.n	8018174 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801815c:	4620      	mov	r0, r4
 801815e:	f007 fa8e 	bl	801f67e <__cxa_guard_acquire>
 8018162:	b138      	cbz	r0, 8018174 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018164:	4620      	mov	r0, r4
 8018166:	f007 fa96 	bl	801f696 <__cxa_guard_release>
 801816a:	4a0f      	ldr	r2, [pc, #60]	; (80181a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801816c:	490f      	ldr	r1, [pc, #60]	; (80181ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801816e:	4810      	ldr	r0, [pc, #64]	; (80181b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018170:	f007 fa6a 	bl	801f648 <__aeabi_atexit>
 8018174:	4c0f      	ldr	r4, [pc, #60]	; (80181b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8018176:	7823      	ldrb	r3, [r4, #0]
 8018178:	f3bf 8f5b 	dmb	ish
 801817c:	07db      	lsls	r3, r3, #31
 801817e:	d40b      	bmi.n	8018198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018180:	4620      	mov	r0, r4
 8018182:	f007 fa7c 	bl	801f67e <__cxa_guard_acquire>
 8018186:	b138      	cbz	r0, 8018198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018188:	4620      	mov	r0, r4
 801818a:	f007 fa84 	bl	801f696 <__cxa_guard_release>
 801818e:	4a06      	ldr	r2, [pc, #24]	; (80181a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018190:	4909      	ldr	r1, [pc, #36]	; (80181b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8018192:	480a      	ldr	r0, [pc, #40]	; (80181bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018194:	f007 fa58 	bl	801f648 <__aeabi_atexit>
 8018198:	4b05      	ldr	r3, [pc, #20]	; (80181b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801819a:	672b      	str	r3, [r5, #112]	; 0x70
 801819c:	4b07      	ldr	r3, [pc, #28]	; (80181bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801819e:	676b      	str	r3, [r5, #116]	; 0x74
 80181a0:	bd38      	pop	{r3, r4, r5, pc}
 80181a2:	bf00      	nop
 80181a4:	20012644 	.word	0x20012644
 80181a8:	20000000 	.word	0x20000000
 80181ac:	0801612d 	.word	0x0801612d
 80181b0:	20000080 	.word	0x20000080
 80181b4:	20012648 	.word	0x20012648
 80181b8:	0801612b 	.word	0x0801612b
 80181bc:	20000084 	.word	0x20000084

080181c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80181c0:	b538      	push	{r3, r4, r5, lr}
 80181c2:	4c15      	ldr	r4, [pc, #84]	; (8018218 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80181c4:	4605      	mov	r5, r0
 80181c6:	7823      	ldrb	r3, [r4, #0]
 80181c8:	f3bf 8f5b 	dmb	ish
 80181cc:	07da      	lsls	r2, r3, #31
 80181ce:	d40b      	bmi.n	80181e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80181d0:	4620      	mov	r0, r4
 80181d2:	f007 fa54 	bl	801f67e <__cxa_guard_acquire>
 80181d6:	b138      	cbz	r0, 80181e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80181d8:	4620      	mov	r0, r4
 80181da:	f007 fa5c 	bl	801f696 <__cxa_guard_release>
 80181de:	4a0f      	ldr	r2, [pc, #60]	; (801821c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80181e0:	490f      	ldr	r1, [pc, #60]	; (8018220 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80181e2:	4810      	ldr	r0, [pc, #64]	; (8018224 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80181e4:	f007 fa30 	bl	801f648 <__aeabi_atexit>
 80181e8:	4c0f      	ldr	r4, [pc, #60]	; (8018228 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80181ea:	7823      	ldrb	r3, [r4, #0]
 80181ec:	f3bf 8f5b 	dmb	ish
 80181f0:	07db      	lsls	r3, r3, #31
 80181f2:	d40b      	bmi.n	801820c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80181f4:	4620      	mov	r0, r4
 80181f6:	f007 fa42 	bl	801f67e <__cxa_guard_acquire>
 80181fa:	b138      	cbz	r0, 801820c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80181fc:	4620      	mov	r0, r4
 80181fe:	f007 fa4a 	bl	801f696 <__cxa_guard_release>
 8018202:	4a06      	ldr	r2, [pc, #24]	; (801821c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018204:	4909      	ldr	r1, [pc, #36]	; (801822c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8018206:	480a      	ldr	r0, [pc, #40]	; (8018230 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018208:	f007 fa1e 	bl	801f648 <__aeabi_atexit>
 801820c:	4b05      	ldr	r3, [pc, #20]	; (8018224 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801820e:	66ab      	str	r3, [r5, #104]	; 0x68
 8018210:	4b07      	ldr	r3, [pc, #28]	; (8018230 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018212:	66eb      	str	r3, [r5, #108]	; 0x6c
 8018214:	bd38      	pop	{r3, r4, r5, pc}
 8018216:	bf00      	nop
 8018218:	2001263c 	.word	0x2001263c
 801821c:	20000000 	.word	0x20000000
 8018220:	08016131 	.word	0x08016131
 8018224:	20000078 	.word	0x20000078
 8018228:	20012640 	.word	0x20012640
 801822c:	0801612f 	.word	0x0801612f
 8018230:	2000007c 	.word	0x2000007c

08018234 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8018234:	b510      	push	{r4, lr}
 8018236:	4604      	mov	r4, r0
 8018238:	f7ff ff88 	bl	801814c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801823c:	4620      	mov	r0, r4
 801823e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018242:	f7ff bfbd 	b.w	80181c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08018246 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8018246:	b510      	push	{r4, lr}
 8018248:	4604      	mov	r4, r0
 801824a:	f7ff fff3 	bl	8018234 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801824e:	4620      	mov	r0, r4
 8018250:	f7ff ff72 	bl	8018138 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8018254:	4620      	mov	r0, r4
 8018256:	f7ff fdf9 	bl	8017e4c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801825a:	4620      	mov	r0, r4
 801825c:	f7ff fcfa 	bl	8017c54 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8018260:	4620      	mov	r0, r4
 8018262:	f7ff fd75 	bl	8017d50 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8018266:	4620      	mov	r0, r4
 8018268:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801826c:	f7ff bee0 	b.w	8018030 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08018270 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8018270:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018274:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8018278:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 801827c:	f1be 0f00 	cmp.w	lr, #0
 8018280:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8018284:	fb0e 4708 	mla	r7, lr, r8, r4
 8018288:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801828c:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8018290:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8018294:	eb02 0a07 	add.w	sl, r2, r7
 8018298:	8808      	ldrh	r0, [r1, #0]
 801829a:	db37      	blt.n	801830c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801829c:	45f3      	cmp	fp, lr
 801829e:	dd35      	ble.n	801830c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80182a0:	2c00      	cmp	r4, #0
 80182a2:	db31      	blt.n	8018308 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80182a4:	45a0      	cmp	r8, r4
 80182a6:	dd2f      	ble.n	8018308 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80182a8:	5dd2      	ldrb	r2, [r2, r7]
 80182aa:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80182ae:	1c62      	adds	r2, r4, #1
 80182b0:	d42f      	bmi.n	8018312 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80182b2:	4590      	cmp	r8, r2
 80182b4:	dd2d      	ble.n	8018312 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80182b6:	b366      	cbz	r6, 8018312 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80182b8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80182bc:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80182c0:	f11e 0e01 	adds.w	lr, lr, #1
 80182c4:	d429      	bmi.n	801831a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80182c6:	45f3      	cmp	fp, lr
 80182c8:	dd27      	ble.n	801831a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80182ca:	f1bc 0f00 	cmp.w	ip, #0
 80182ce:	f000 80a0 	beq.w	8018412 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 80182d2:	2c00      	cmp	r4, #0
 80182d4:	db1f      	blt.n	8018316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80182d6:	45a0      	cmp	r8, r4
 80182d8:	dd1d      	ble.n	8018316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80182da:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80182de:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80182e2:	3401      	adds	r4, #1
 80182e4:	d41c      	bmi.n	8018320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80182e6:	45a0      	cmp	r8, r4
 80182e8:	dd1a      	ble.n	8018320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80182ea:	b1de      	cbz	r6, 8018324 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80182ec:	44d0      	add	r8, sl
 80182ee:	f898 2001 	ldrb.w	r2, [r8, #1]
 80182f2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80182f6:	2e0f      	cmp	r6, #15
 80182f8:	d915      	bls.n	8018326 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 80182fa:	4b49      	ldr	r3, [pc, #292]	; (8018420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80182fc:	f240 11ef 	movw	r1, #495	; 0x1ef
 8018300:	4a48      	ldr	r2, [pc, #288]	; (8018424 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8018302:	4849      	ldr	r0, [pc, #292]	; (8018428 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8018304:	f008 fd34 	bl	8020d70 <__assert_func>
 8018308:	4681      	mov	r9, r0
 801830a:	e7d0      	b.n	80182ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 801830c:	4607      	mov	r7, r0
 801830e:	4681      	mov	r9, r0
 8018310:	e7d6      	b.n	80182c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8018312:	4607      	mov	r7, r0
 8018314:	e7d4      	b.n	80182c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8018316:	4686      	mov	lr, r0
 8018318:	e7e3      	b.n	80182e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 801831a:	4603      	mov	r3, r0
 801831c:	4686      	mov	lr, r0
 801831e:	e7ea      	b.n	80182f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8018320:	4603      	mov	r3, r0
 8018322:	e7e8      	b.n	80182f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8018324:	4603      	mov	r3, r0
 8018326:	f1bc 0f0f 	cmp.w	ip, #15
 801832a:	d8e6      	bhi.n	80182fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 801832c:	fb16 f80c 	smulbb	r8, r6, ip
 8018330:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8018334:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018338:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801833c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018340:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8018344:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018348:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801834c:	ea44 0909 	orr.w	r9, r4, r9
 8018350:	f1cc 0410 	rsb	r4, ip, #16
 8018354:	041a      	lsls	r2, r3, #16
 8018356:	ea4a 0707 	orr.w	r7, sl, r7
 801835a:	1ba4      	subs	r4, r4, r6
 801835c:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8018360:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018364:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018368:	4377      	muls	r7, r6
 801836a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801836e:	4313      	orrs	r3, r2
 8018370:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8018374:	fb04 7409 	mla	r4, r4, r9, r7
 8018378:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801837c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018380:	b2af      	uxth	r7, r5
 8018382:	fb08 4303 	mla	r3, r8, r3, r4
 8018386:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 801838a:	43ed      	mvns	r5, r5
 801838c:	10c6      	asrs	r6, r0, #3
 801838e:	4322      	orrs	r2, r4
 8018390:	b2ed      	uxtb	r5, r5
 8018392:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018396:	fb0c 3202 	mla	r2, ip, r2, r3
 801839a:	fb16 f605 	smulbb	r6, r6, r5
 801839e:	0d53      	lsrs	r3, r2, #21
 80183a0:	0952      	lsrs	r2, r2, #5
 80183a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80183a6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80183aa:	431a      	orrs	r2, r3
 80183ac:	b293      	uxth	r3, r2
 80183ae:	1202      	asrs	r2, r0, #8
 80183b0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80183b4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80183b8:	00dc      	lsls	r4, r3, #3
 80183ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80183be:	fb12 f205 	smulbb	r2, r2, r5
 80183c2:	b2e4      	uxtb	r4, r4
 80183c4:	fb0c 2c07 	mla	ip, ip, r7, r2
 80183c8:	10da      	asrs	r2, r3, #3
 80183ca:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80183ce:	fa1f fc8c 	uxth.w	ip, ip
 80183d2:	fb02 6207 	mla	r2, r2, r7, r6
 80183d6:	f10c 0301 	add.w	r3, ip, #1
 80183da:	b296      	uxth	r6, r2
 80183dc:	00c2      	lsls	r2, r0, #3
 80183de:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80183e2:	b2d2      	uxtb	r2, r2
 80183e4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80183e8:	fb12 f205 	smulbb	r2, r2, r5
 80183ec:	fb04 2207 	mla	r2, r4, r7, r2
 80183f0:	b292      	uxth	r2, r2
 80183f2:	1c50      	adds	r0, r2, #1
 80183f4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80183f8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80183fc:	4313      	orrs	r3, r2
 80183fe:	1c72      	adds	r2, r6, #1
 8018400:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8018404:	0952      	lsrs	r2, r2, #5
 8018406:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801840a:	4313      	orrs	r3, r2
 801840c:	800b      	strh	r3, [r1, #0]
 801840e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018412:	2e0f      	cmp	r6, #15
 8018414:	f63f af71 	bhi.w	80182fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8018418:	4603      	mov	r3, r0
 801841a:	4686      	mov	lr, r0
 801841c:	e786      	b.n	801832c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 801841e:	bf00      	nop
 8018420:	080252eb 	.word	0x080252eb
 8018424:	08025952 	.word	0x08025952
 8018428:	080253d4 	.word	0x080253d4

0801842c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801842c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018430:	ed2d 8b08 	vpush	{d8-d11}
 8018434:	b099      	sub	sp, #100	; 0x64
 8018436:	eeb0 aa40 	vmov.f32	s20, s0
 801843a:	eef0 9a60 	vmov.f32	s19, s1
 801843e:	9215      	str	r2, [sp, #84]	; 0x54
 8018440:	eeb0 9a41 	vmov.f32	s18, s2
 8018444:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8018446:	eeb0 8a62 	vmov.f32	s16, s5
 801844a:	9309      	str	r3, [sp, #36]	; 0x24
 801844c:	eef0 8a43 	vmov.f32	s17, s6
 8018450:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8018454:	eef0 ba44 	vmov.f32	s23, s8
 8018458:	9016      	str	r0, [sp, #88]	; 0x58
 801845a:	eeb0 ba64 	vmov.f32	s22, s9
 801845e:	930d      	str	r3, [sp, #52]	; 0x34
 8018460:	eef0 aa45 	vmov.f32	s21, s10
 8018464:	6850      	ldr	r0, [r2, #4]
 8018466:	910c      	str	r1, [sp, #48]	; 0x30
 8018468:	6812      	ldr	r2, [r2, #0]
 801846a:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801846e:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8018472:	fb00 1303 	mla	r3, r0, r3, r1
 8018476:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801847a:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801847c:	681b      	ldr	r3, [r3, #0]
 801847e:	930b      	str	r3, [sp, #44]	; 0x2c
 8018480:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8018482:	685e      	ldr	r6, [r3, #4]
 8018484:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018486:	3604      	adds	r6, #4
 8018488:	43db      	mvns	r3, r3
 801848a:	b2db      	uxtb	r3, r3
 801848c:	930a      	str	r3, [sp, #40]	; 0x28
 801848e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018490:	2b00      	cmp	r3, #0
 8018492:	dc03      	bgt.n	801849c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018494:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8018496:	2b00      	cmp	r3, #0
 8018498:	f340 8226 	ble.w	80188e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 801849c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801849e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80184a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80184a6:	1e48      	subs	r0, r1, #1
 80184a8:	1e57      	subs	r7, r2, #1
 80184aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80184ac:	2b00      	cmp	r3, #0
 80184ae:	f340 80e4 	ble.w	801867a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80184b2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80184b6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80184ba:	d406      	bmi.n	80184ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80184bc:	4584      	cmp	ip, r0
 80184be:	da04      	bge.n	80184ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80184c0:	2b00      	cmp	r3, #0
 80184c2:	db02      	blt.n	80184ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80184c4:	42bb      	cmp	r3, r7
 80184c6:	f2c0 80d9 	blt.w	801867c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80184ca:	f11c 0c01 	adds.w	ip, ip, #1
 80184ce:	f100 80ca 	bmi.w	8018666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80184d2:	4561      	cmp	r1, ip
 80184d4:	f2c0 80c7 	blt.w	8018666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80184d8:	3301      	adds	r3, #1
 80184da:	f100 80c4 	bmi.w	8018666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80184de:	429a      	cmp	r2, r3
 80184e0:	f2c0 80c1 	blt.w	8018666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80184e4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80184e8:	4647      	mov	r7, r8
 80184ea:	f1bb 0f00 	cmp.w	fp, #0
 80184ee:	f340 80e4 	ble.w	80186ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 80184f2:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80184f4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80184f8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80184fa:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80184fe:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018502:	ea5f 422a 	movs.w	r2, sl, asr #16
 8018506:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801850a:	689b      	ldr	r3, [r3, #8]
 801850c:	f100 8122 	bmi.w	8018754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8018510:	f103 39ff 	add.w	r9, r3, #4294967295
 8018514:	454a      	cmp	r2, r9
 8018516:	f280 811d 	bge.w	8018754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 801851a:	f1bc 0f00 	cmp.w	ip, #0
 801851e:	f2c0 8119 	blt.w	8018754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8018522:	f10e 39ff 	add.w	r9, lr, #4294967295
 8018526:	45cc      	cmp	ip, r9
 8018528:	f280 8114 	bge.w	8018754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 801852c:	b21b      	sxth	r3, r3
 801852e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018530:	fb0c 2203 	mla	r2, ip, r3, r2
 8018534:	eb04 0902 	add.w	r9, r4, r2
 8018538:	5ca2      	ldrb	r2, [r4, r2]
 801853a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801853e:	2800      	cmp	r0, #0
 8018540:	f000 80ff 	beq.w	8018742 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 8018544:	f899 2001 	ldrb.w	r2, [r9, #1]
 8018548:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801854c:	9211      	str	r2, [sp, #68]	; 0x44
 801854e:	b151      	cbz	r1, 8018566 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8018550:	eb09 0203 	add.w	r2, r9, r3
 8018554:	f819 3003 	ldrb.w	r3, [r9, r3]
 8018558:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801855c:	930f      	str	r3, [sp, #60]	; 0x3c
 801855e:	7853      	ldrb	r3, [r2, #1]
 8018560:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018564:	9312      	str	r3, [sp, #72]	; 0x48
 8018566:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018568:	fb10 f201 	smulbb	r2, r0, r1
 801856c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801856e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018572:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018576:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801857a:	10d2      	asrs	r2, r2, #3
 801857c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018580:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8018584:	ea4c 0c03 	orr.w	ip, ip, r3
 8018588:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801858a:	041b      	lsls	r3, r3, #16
 801858c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018590:	4323      	orrs	r3, r4
 8018592:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018594:	4353      	muls	r3, r2
 8018596:	fb09 330c 	mla	r3, r9, ip, r3
 801859a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801859e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80185a2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80185a6:	ea4c 0e0e 	orr.w	lr, ip, lr
 80185aa:	f1c1 0c10 	rsb	ip, r1, #16
 80185ae:	ebac 0c00 	sub.w	ip, ip, r0
 80185b2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80185b6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80185ba:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80185be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80185c0:	0418      	lsls	r0, r3, #16
 80185c2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80185c6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80185ca:	4318      	orrs	r0, r3
 80185cc:	fb02 c200 	mla	r2, r2, r0, ip
 80185d0:	f8b7 c000 	ldrh.w	ip, [r7]
 80185d4:	0d53      	lsrs	r3, r2, #21
 80185d6:	0952      	lsrs	r2, r2, #5
 80185d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80185dc:	ea4f 212c 	mov.w	r1, ip, asr #8
 80185e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80185e4:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80185e8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80185ec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80185f0:	431a      	orrs	r2, r3
 80185f2:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80185f6:	fb11 f104 	smulbb	r1, r1, r4
 80185fa:	fa5f fc8c 	uxtb.w	ip, ip
 80185fe:	b292      	uxth	r2, r2
 8018600:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018604:	fb1c fc04 	smulbb	ip, ip, r4
 8018608:	fb1e fe04 	smulbb	lr, lr, r4
 801860c:	1210      	asrs	r0, r2, #8
 801860e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018612:	fb00 1003 	mla	r0, r0, r3, r1
 8018616:	10d1      	asrs	r1, r2, #3
 8018618:	00d2      	lsls	r2, r2, #3
 801861a:	b280      	uxth	r0, r0
 801861c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018620:	b2d2      	uxtb	r2, r2
 8018622:	fb01 e103 	mla	r1, r1, r3, lr
 8018626:	fb02 c203 	mla	r2, r2, r3, ip
 801862a:	1c43      	adds	r3, r0, #1
 801862c:	b289      	uxth	r1, r1
 801862e:	b292      	uxth	r2, r2
 8018630:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018634:	f102 0c01 	add.w	ip, r2, #1
 8018638:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801863c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8018640:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018644:	4313      	orrs	r3, r2
 8018646:	1c4a      	adds	r2, r1, #1
 8018648:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801864c:	0949      	lsrs	r1, r1, #5
 801864e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018652:	430b      	orrs	r3, r1
 8018654:	803b      	strh	r3, [r7, #0]
 8018656:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018658:	3702      	adds	r7, #2
 801865a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801865e:	449a      	add	sl, r3
 8018660:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018662:	441d      	add	r5, r3
 8018664:	e741      	b.n	80184ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8018666:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018668:	f108 0802 	add.w	r8, r8, #2
 801866c:	449a      	add	sl, r3
 801866e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018670:	441d      	add	r5, r3
 8018672:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018674:	3b01      	subs	r3, #1
 8018676:	9309      	str	r3, [sp, #36]	; 0x24
 8018678:	e717      	b.n	80184aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801867a:	d023      	beq.n	80186c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801867c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801867e:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8018680:	3b01      	subs	r3, #1
 8018682:	fb00 a003 	mla	r0, r0, r3, sl
 8018686:	1400      	asrs	r0, r0, #16
 8018688:	f53f af2c 	bmi.w	80184e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801868c:	3901      	subs	r1, #1
 801868e:	4288      	cmp	r0, r1
 8018690:	f6bf af28 	bge.w	80184e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018694:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8018696:	fb01 5303 	mla	r3, r1, r3, r5
 801869a:	141b      	asrs	r3, r3, #16
 801869c:	f53f af22 	bmi.w	80184e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80186a0:	3a01      	subs	r2, #1
 80186a2:	4293      	cmp	r3, r2
 80186a4:	f6bf af1e 	bge.w	80184e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80186a8:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80186ac:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80186b0:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80186b4:	f1be 0f00 	cmp.w	lr, #0
 80186b8:	dc6c      	bgt.n	8018794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80186ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80186bc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80186c0:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80186c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80186c6:	2b00      	cmp	r3, #0
 80186c8:	f340 810e 	ble.w	80188e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 80186cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80186d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80186d2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80186d6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80186da:	eef0 6a48 	vmov.f32	s13, s16
 80186de:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80186e2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80186e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80186ea:	ee16 aa90 	vmov	sl, s13
 80186ee:	eef0 6a68 	vmov.f32	s13, s17
 80186f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80186f6:	ee16 5a90 	vmov	r5, s13
 80186fa:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80186fe:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018702:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018706:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801870a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801870e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018712:	ee18 2a10 	vmov	r2, s16
 8018716:	eeb0 8a47 	vmov.f32	s16, s14
 801871a:	fb92 f3f3 	sdiv	r3, r2, r3
 801871e:	ee18 2a90 	vmov	r2, s17
 8018722:	932d      	str	r3, [sp, #180]	; 0xb4
 8018724:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018726:	eef0 8a67 	vmov.f32	s17, s15
 801872a:	fb92 f3f3 	sdiv	r3, r2, r3
 801872e:	932e      	str	r3, [sp, #184]	; 0xb8
 8018730:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018732:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8018734:	3b01      	subs	r3, #1
 8018736:	930c      	str	r3, [sp, #48]	; 0x30
 8018738:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801873a:	bf08      	it	eq
 801873c:	4613      	moveq	r3, r2
 801873e:	9309      	str	r3, [sp, #36]	; 0x24
 8018740:	e6a5      	b.n	801848e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8018742:	2900      	cmp	r1, #0
 8018744:	f43f af0f 	beq.w	8018566 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8018748:	f819 3003 	ldrb.w	r3, [r9, r3]
 801874c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018750:	930f      	str	r3, [sp, #60]	; 0x3c
 8018752:	e708      	b.n	8018566 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8018754:	f112 0901 	adds.w	r9, r2, #1
 8018758:	f53f af7d 	bmi.w	8018656 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801875c:	454b      	cmp	r3, r9
 801875e:	f6ff af7a 	blt.w	8018656 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8018762:	f11c 0901 	adds.w	r9, ip, #1
 8018766:	f53f af76 	bmi.w	8018656 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801876a:	45ce      	cmp	lr, r9
 801876c:	f6ff af73 	blt.w	8018656 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8018770:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018772:	b21b      	sxth	r3, r3
 8018774:	9202      	str	r2, [sp, #8]
 8018776:	fa0f f28e 	sxth.w	r2, lr
 801877a:	9300      	str	r3, [sp, #0]
 801877c:	4633      	mov	r3, r6
 801877e:	9201      	str	r2, [sp, #4]
 8018780:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018782:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8018786:	e9cd c003 	strd	ip, r0, [sp, #12]
 801878a:	4639      	mov	r1, r7
 801878c:	9816      	ldr	r0, [sp, #88]	; 0x58
 801878e:	f7ff fd6f 	bl	8018270 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8018792:	e760      	b.n	8018656 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8018794:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8018796:	ea4f 422a 	mov.w	r2, sl, asr #16
 801879a:	1429      	asrs	r1, r5, #16
 801879c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801879e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80187a2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80187a6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80187aa:	fb03 2101 	mla	r1, r3, r1, r2
 80187ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80187b0:	440a      	add	r2, r1
 80187b2:	5c61      	ldrb	r1, [r4, r1]
 80187b4:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80187b8:	f1bc 0f00 	cmp.w	ip, #0
 80187bc:	f000 808c 	beq.w	80188d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80187c0:	7857      	ldrb	r7, [r2, #1]
 80187c2:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80187c6:	9413      	str	r4, [sp, #76]	; 0x4c
 80187c8:	b140      	cbz	r0, 80187dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80187ca:	18d7      	adds	r7, r2, r3
 80187cc:	5cd3      	ldrb	r3, [r2, r3]
 80187ce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80187d2:	9310      	str	r3, [sp, #64]	; 0x40
 80187d4:	787b      	ldrb	r3, [r7, #1]
 80187d6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80187da:	9314      	str	r3, [sp, #80]	; 0x50
 80187dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80187de:	fb1c f200 	smulbb	r2, ip, r0
 80187e2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80187e4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80187e8:	041f      	lsls	r7, r3, #16
 80187ea:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80187ee:	10d2      	asrs	r2, r2, #3
 80187f0:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80187f4:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80187f8:	431f      	orrs	r7, r3
 80187fa:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80187fe:	9317      	str	r3, [sp, #92]	; 0x5c
 8018800:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018802:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8018804:	041b      	lsls	r3, r3, #16
 8018806:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801880a:	ea43 030b 	orr.w	r3, r3, fp
 801880e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018812:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018816:	4353      	muls	r3, r2
 8018818:	fb04 3707 	mla	r7, r4, r7, r3
 801881c:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8018820:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018822:	ea43 0b01 	orr.w	fp, r3, r1
 8018826:	f1c0 0110 	rsb	r1, r0, #16
 801882a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801882c:	eba1 0c0c 	sub.w	ip, r1, ip
 8018830:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018834:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8018838:	fb0c 770b 	mla	r7, ip, fp, r7
 801883c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018840:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8018844:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018848:	ea4c 0c0b 	orr.w	ip, ip, fp
 801884c:	fb02 770c 	mla	r7, r2, ip, r7
 8018850:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018852:	0d79      	lsrs	r1, r7, #21
 8018854:	8812      	ldrh	r2, [r2, #0]
 8018856:	097f      	lsrs	r7, r7, #5
 8018858:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801885c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018860:	430f      	orrs	r7, r1
 8018862:	1211      	asrs	r1, r2, #8
 8018864:	b2bb      	uxth	r3, r7
 8018866:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801886a:	10d7      	asrs	r7, r2, #3
 801886c:	fb11 f104 	smulbb	r1, r1, r4
 8018870:	1218      	asrs	r0, r3, #8
 8018872:	00d2      	lsls	r2, r2, #3
 8018874:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018878:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801887c:	fb17 f704 	smulbb	r7, r7, r4
 8018880:	b2d2      	uxtb	r2, r2
 8018882:	fb00 1009 	mla	r0, r0, r9, r1
 8018886:	10d9      	asrs	r1, r3, #3
 8018888:	fb12 f204 	smulbb	r2, r2, r4
 801888c:	00db      	lsls	r3, r3, #3
 801888e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018892:	b280      	uxth	r0, r0
 8018894:	b2db      	uxtb	r3, r3
 8018896:	fb01 7109 	mla	r1, r1, r9, r7
 801889a:	fb03 2309 	mla	r3, r3, r9, r2
 801889e:	1c42      	adds	r2, r0, #1
 80188a0:	b289      	uxth	r1, r1
 80188a2:	b29b      	uxth	r3, r3
 80188a4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80188a8:	1c4f      	adds	r7, r1, #1
 80188aa:	1c5a      	adds	r2, r3, #1
 80188ac:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80188b0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80188b4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80188b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80188ba:	0949      	lsrs	r1, r1, #5
 80188bc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80188c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80188c4:	4310      	orrs	r0, r2
 80188c6:	4308      	orrs	r0, r1
 80188c8:	f823 0b02 	strh.w	r0, [r3], #2
 80188cc:	930e      	str	r3, [sp, #56]	; 0x38
 80188ce:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80188d0:	449a      	add	sl, r3
 80188d2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80188d4:	441d      	add	r5, r3
 80188d6:	e6ed      	b.n	80186b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80188d8:	2800      	cmp	r0, #0
 80188da:	f43f af7f 	beq.w	80187dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80188de:	5cd3      	ldrb	r3, [r2, r3]
 80188e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80188e4:	9310      	str	r3, [sp, #64]	; 0x40
 80188e6:	e779      	b.n	80187dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80188e8:	b019      	add	sp, #100	; 0x64
 80188ea:	ecbd 8b08 	vpop	{d8-d11}
 80188ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080188f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80188f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80188f8:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 80188fc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8018900:	2e00      	cmp	r6, #0
 8018902:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8018906:	fb06 570e 	mla	r7, r6, lr, r5
 801890a:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 801890e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8018912:	eb02 0807 	add.w	r8, r2, r7
 8018916:	8808      	ldrh	r0, [r1, #0]
 8018918:	db38      	blt.n	801898c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801891a:	45b1      	cmp	r9, r6
 801891c:	dd36      	ble.n	801898c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801891e:	2d00      	cmp	r5, #0
 8018920:	db32      	blt.n	8018988 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8018922:	45ae      	cmp	lr, r5
 8018924:	dd30      	ble.n	8018988 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8018926:	5dd2      	ldrb	r2, [r2, r7]
 8018928:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801892c:	1c6a      	adds	r2, r5, #1
 801892e:	d430      	bmi.n	8018992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8018930:	4596      	cmp	lr, r2
 8018932:	dd2e      	ble.n	8018992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8018934:	b36c      	cbz	r4, 8018992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8018936:	f898 2001 	ldrb.w	r2, [r8, #1]
 801893a:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801893e:	3601      	adds	r6, #1
 8018940:	d42b      	bmi.n	801899a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8018942:	45b1      	cmp	r9, r6
 8018944:	dd29      	ble.n	801899a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8018946:	f1bc 0f00 	cmp.w	ip, #0
 801894a:	d028      	beq.n	801899e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 801894c:	2d00      	cmp	r5, #0
 801894e:	db22      	blt.n	8018996 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8018950:	45ae      	cmp	lr, r5
 8018952:	dd20      	ble.n	8018996 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8018954:	f818 600e 	ldrb.w	r6, [r8, lr]
 8018958:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 801895c:	3501      	adds	r5, #1
 801895e:	d407      	bmi.n	8018970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8018960:	45ae      	cmp	lr, r5
 8018962:	dd05      	ble.n	8018970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8018964:	b134      	cbz	r4, 8018974 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8018966:	44c6      	add	lr, r8
 8018968:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801896c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8018970:	2c0f      	cmp	r4, #15
 8018972:	d802      	bhi.n	801897a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8018974:	f1bc 0f0f 	cmp.w	ip, #15
 8018978:	d914      	bls.n	80189a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 801897a:	4b26      	ldr	r3, [pc, #152]	; (8018a14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 801897c:	f240 11ef 	movw	r1, #495	; 0x1ef
 8018980:	4a25      	ldr	r2, [pc, #148]	; (8018a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8018982:	4826      	ldr	r0, [pc, #152]	; (8018a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8018984:	f008 f9f4 	bl	8020d70 <__assert_func>
 8018988:	4607      	mov	r7, r0
 801898a:	e7cf      	b.n	801892c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 801898c:	4602      	mov	r2, r0
 801898e:	4607      	mov	r7, r0
 8018990:	e7d5      	b.n	801893e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8018992:	4602      	mov	r2, r0
 8018994:	e7d3      	b.n	801893e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8018996:	4606      	mov	r6, r0
 8018998:	e7e0      	b.n	801895c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 801899a:	4606      	mov	r6, r0
 801899c:	e7e8      	b.n	8018970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801899e:	2c0f      	cmp	r4, #15
 80189a0:	d8eb      	bhi.n	801897a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80189a2:	4606      	mov	r6, r0
 80189a4:	fb14 f30c 	smulbb	r3, r4, ip
 80189a8:	043d      	lsls	r5, r7, #16
 80189aa:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80189ae:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80189b2:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80189b6:	10db      	asrs	r3, r3, #3
 80189b8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80189bc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80189c0:	432f      	orrs	r7, r5
 80189c2:	f1cc 0510 	rsb	r5, ip, #16
 80189c6:	ea4e 0202 	orr.w	r2, lr, r2
 80189ca:	1b2d      	subs	r5, r5, r4
 80189cc:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80189d0:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80189d4:	4354      	muls	r4, r2
 80189d6:	fb05 4507 	mla	r5, r5, r7, r4
 80189da:	0404      	lsls	r4, r0, #16
 80189dc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80189e0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80189e4:	4320      	orrs	r0, r4
 80189e6:	fb03 5400 	mla	r4, r3, r0, r5
 80189ea:	0430      	lsls	r0, r6, #16
 80189ec:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80189f0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80189f4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80189f8:	4330      	orrs	r0, r6
 80189fa:	fb03 4000 	mla	r0, r3, r0, r4
 80189fe:	0d43      	lsrs	r3, r0, #21
 8018a00:	0940      	lsrs	r0, r0, #5
 8018a02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018a06:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018a0a:	4318      	orrs	r0, r3
 8018a0c:	8008      	strh	r0, [r1, #0]
 8018a0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018a12:	bf00      	nop
 8018a14:	080252eb 	.word	0x080252eb
 8018a18:	08025952 	.word	0x08025952
 8018a1c:	080253d4 	.word	0x080253d4

08018a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018a20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a24:	ed2d 8b0a 	vpush	{d8-d12}
 8018a28:	b093      	sub	sp, #76	; 0x4c
 8018a2a:	eeb0 aa40 	vmov.f32	s20, s0
 8018a2e:	eef0 9a60 	vmov.f32	s19, s1
 8018a32:	920f      	str	r2, [sp, #60]	; 0x3c
 8018a34:	eeb0 9a41 	vmov.f32	s18, s2
 8018a38:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018a3a:	eeb0 8a62 	vmov.f32	s16, s5
 8018a3e:	9010      	str	r0, [sp, #64]	; 0x40
 8018a40:	eef0 8a43 	vmov.f32	s17, s6
 8018a44:	6850      	ldr	r0, [r2, #4]
 8018a46:	eeb0 ca44 	vmov.f32	s24, s8
 8018a4a:	9108      	str	r1, [sp, #32]
 8018a4c:	eef0 ba64 	vmov.f32	s23, s9
 8018a50:	9306      	str	r3, [sp, #24]
 8018a52:	eeb0 ba45 	vmov.f32	s22, s10
 8018a56:	6812      	ldr	r2, [r2, #0]
 8018a58:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8018a5c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8018a60:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8018a64:	fb00 1303 	mla	r3, r0, r3, r1
 8018a68:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8018a6c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018a6e:	681b      	ldr	r3, [r3, #0]
 8018a70:	9307      	str	r3, [sp, #28]
 8018a72:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018a74:	685f      	ldr	r7, [r3, #4]
 8018a76:	3704      	adds	r7, #4
 8018a78:	9b08      	ldr	r3, [sp, #32]
 8018a7a:	2b00      	cmp	r3, #0
 8018a7c:	dc03      	bgt.n	8018a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018a7e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018a80:	2b00      	cmp	r3, #0
 8018a82:	f340 81b2 	ble.w	8018dea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8018a86:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018a88:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018a8c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018a90:	1e48      	subs	r0, r1, #1
 8018a92:	f102 3cff 	add.w	ip, r2, #4294967295
 8018a96:	9b06      	ldr	r3, [sp, #24]
 8018a98:	2b00      	cmp	r3, #0
 8018a9a:	f340 80a9 	ble.w	8018bf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8018a9e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018aa2:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018aa6:	d406      	bmi.n	8018ab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018aa8:	4586      	cmp	lr, r0
 8018aaa:	da04      	bge.n	8018ab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018aac:	2b00      	cmp	r3, #0
 8018aae:	db02      	blt.n	8018ab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018ab0:	4563      	cmp	r3, ip
 8018ab2:	f2c0 809e 	blt.w	8018bf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8018ab6:	f11e 0e01 	adds.w	lr, lr, #1
 8018aba:	f100 808f 	bmi.w	8018bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018abe:	4571      	cmp	r1, lr
 8018ac0:	f2c0 808c 	blt.w	8018bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018ac4:	3301      	adds	r3, #1
 8018ac6:	f100 8089 	bmi.w	8018bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018aca:	429a      	cmp	r2, r3
 8018acc:	f2c0 8086 	blt.w	8018bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018ad0:	f8dd b018 	ldr.w	fp, [sp, #24]
 8018ad4:	46c8      	mov	r8, r9
 8018ad6:	f1bb 0f00 	cmp.w	fp, #0
 8018ada:	f340 80a6 	ble.w	8018c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8018ade:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8018ae0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8018ae4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018ae6:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8018aea:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018aee:	1422      	asrs	r2, r4, #16
 8018af0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018af4:	689b      	ldr	r3, [r3, #8]
 8018af6:	f100 80e3 	bmi.w	8018cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018afa:	f103 3aff 	add.w	sl, r3, #4294967295
 8018afe:	4552      	cmp	r2, sl
 8018b00:	f280 80de 	bge.w	8018cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018b04:	f1bc 0f00 	cmp.w	ip, #0
 8018b08:	f2c0 80da 	blt.w	8018cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018b0c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8018b10:	45d4      	cmp	ip, sl
 8018b12:	f280 80d5 	bge.w	8018cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018b16:	b21b      	sxth	r3, r3
 8018b18:	9d07      	ldr	r5, [sp, #28]
 8018b1a:	fb0c 2203 	mla	r2, ip, r3, r2
 8018b1e:	eb05 0a02 	add.w	sl, r5, r2
 8018b22:	5caa      	ldrb	r2, [r5, r2]
 8018b24:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8018b28:	2800      	cmp	r0, #0
 8018b2a:	f000 80c0 	beq.w	8018cae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8018b2e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8018b32:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8018b36:	920b      	str	r2, [sp, #44]	; 0x2c
 8018b38:	b151      	cbz	r1, 8018b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8018b3a:	eb0a 0203 	add.w	r2, sl, r3
 8018b3e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8018b42:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018b46:	9309      	str	r3, [sp, #36]	; 0x24
 8018b48:	7853      	ldrb	r3, [r2, #1]
 8018b4a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018b4e:	930c      	str	r3, [sp, #48]	; 0x30
 8018b50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018b52:	fb10 f201 	smulbb	r2, r0, r1
 8018b56:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018b58:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018b5c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018b60:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018b64:	10d2      	asrs	r2, r2, #3
 8018b66:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018b6a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8018b6e:	ea4c 0c03 	orr.w	ip, ip, r3
 8018b72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018b74:	041b      	lsls	r3, r3, #16
 8018b76:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018b7a:	432b      	orrs	r3, r5
 8018b7c:	4353      	muls	r3, r2
 8018b7e:	fb0a 330c 	mla	r3, sl, ip, r3
 8018b82:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8018b86:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018b8a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018b8e:	ea4c 0e0e 	orr.w	lr, ip, lr
 8018b92:	f1c1 0c10 	rsb	ip, r1, #16
 8018b96:	ebac 0c00 	sub.w	ip, ip, r0
 8018b9a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018b9e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8018ba2:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8018ba6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018ba8:	0418      	lsls	r0, r3, #16
 8018baa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018bae:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018bb2:	4318      	orrs	r0, r3
 8018bb4:	fb02 c200 	mla	r2, r2, r0, ip
 8018bb8:	0d53      	lsrs	r3, r2, #21
 8018bba:	0952      	lsrs	r2, r2, #5
 8018bbc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018bc0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018bc4:	431a      	orrs	r2, r3
 8018bc6:	f8a8 2000 	strh.w	r2, [r8]
 8018bca:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018bcc:	f108 0802 	add.w	r8, r8, #2
 8018bd0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018bd4:	441c      	add	r4, r3
 8018bd6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018bd8:	441e      	add	r6, r3
 8018bda:	e77c      	b.n	8018ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8018bdc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018bde:	f109 0902 	add.w	r9, r9, #2
 8018be2:	441c      	add	r4, r3
 8018be4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018be6:	441e      	add	r6, r3
 8018be8:	9b06      	ldr	r3, [sp, #24]
 8018bea:	3b01      	subs	r3, #1
 8018bec:	9306      	str	r3, [sp, #24]
 8018bee:	e752      	b.n	8018a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018bf0:	d020      	beq.n	8018c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018bf2:	9b06      	ldr	r3, [sp, #24]
 8018bf4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8018bf6:	3b01      	subs	r3, #1
 8018bf8:	fb00 4003 	mla	r0, r0, r3, r4
 8018bfc:	1400      	asrs	r0, r0, #16
 8018bfe:	f53f af67 	bmi.w	8018ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018c02:	3901      	subs	r1, #1
 8018c04:	4288      	cmp	r0, r1
 8018c06:	f6bf af63 	bge.w	8018ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018c0a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8018c0c:	fb01 6303 	mla	r3, r1, r3, r6
 8018c10:	141b      	asrs	r3, r3, #16
 8018c12:	f53f af5d 	bmi.w	8018ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018c16:	3a01      	subs	r2, #1
 8018c18:	4293      	cmp	r3, r2
 8018c1a:	f6bf af59 	bge.w	8018ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018c1e:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8018c22:	46ca      	mov	sl, r9
 8018c24:	f1b8 0f00 	cmp.w	r8, #0
 8018c28:	dc67      	bgt.n	8018cfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8018c2a:	9b06      	ldr	r3, [sp, #24]
 8018c2c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018c30:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8018c34:	9b08      	ldr	r3, [sp, #32]
 8018c36:	2b00      	cmp	r3, #0
 8018c38:	f340 80d7 	ble.w	8018dea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8018c3c:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8018c40:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018c42:	ee79 9aab 	vadd.f32	s19, s19, s23
 8018c46:	eef0 6a48 	vmov.f32	s13, s16
 8018c4a:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8018c4e:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8018c52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c56:	ee16 4a90 	vmov	r4, s13
 8018c5a:	eef0 6a68 	vmov.f32	s13, s17
 8018c5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c62:	ee16 6a90 	vmov	r6, s13
 8018c66:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018c6a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018c6e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018c72:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018c76:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018c7a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018c7e:	ee18 2a10 	vmov	r2, s16
 8018c82:	eeb0 8a47 	vmov.f32	s16, s14
 8018c86:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c8a:	ee18 2a90 	vmov	r2, s17
 8018c8e:	9329      	str	r3, [sp, #164]	; 0xa4
 8018c90:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018c92:	eef0 8a67 	vmov.f32	s17, s15
 8018c96:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c9a:	932a      	str	r3, [sp, #168]	; 0xa8
 8018c9c:	9b08      	ldr	r3, [sp, #32]
 8018c9e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018ca0:	3b01      	subs	r3, #1
 8018ca2:	9308      	str	r3, [sp, #32]
 8018ca4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018ca6:	bf08      	it	eq
 8018ca8:	4613      	moveq	r3, r2
 8018caa:	9306      	str	r3, [sp, #24]
 8018cac:	e6e4      	b.n	8018a78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8018cae:	2900      	cmp	r1, #0
 8018cb0:	f43f af4e 	beq.w	8018b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8018cb4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8018cb8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018cbc:	9309      	str	r3, [sp, #36]	; 0x24
 8018cbe:	e747      	b.n	8018b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8018cc0:	f112 0a01 	adds.w	sl, r2, #1
 8018cc4:	d481      	bmi.n	8018bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018cc6:	4553      	cmp	r3, sl
 8018cc8:	f6ff af7f 	blt.w	8018bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018ccc:	f11c 0a01 	adds.w	sl, ip, #1
 8018cd0:	f53f af7b 	bmi.w	8018bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018cd4:	45d6      	cmp	lr, sl
 8018cd6:	f6ff af78 	blt.w	8018bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018cda:	b21b      	sxth	r3, r3
 8018cdc:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8018ce0:	fa0f f28e 	sxth.w	r2, lr
 8018ce4:	9300      	str	r3, [sp, #0]
 8018ce6:	463b      	mov	r3, r7
 8018ce8:	9201      	str	r2, [sp, #4]
 8018cea:	9a07      	ldr	r2, [sp, #28]
 8018cec:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8018cf0:	4641      	mov	r1, r8
 8018cf2:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018cf4:	f7ff fdfe 	bl	80188f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8018cf8:	e767      	b.n	8018bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018cfa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018cfc:	1422      	asrs	r2, r4, #16
 8018cfe:	1431      	asrs	r1, r6, #16
 8018d00:	9d07      	ldr	r5, [sp, #28]
 8018d02:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018d06:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8018d0a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018d0e:	fb03 2101 	mla	r1, r3, r1, r2
 8018d12:	9a07      	ldr	r2, [sp, #28]
 8018d14:	440a      	add	r2, r1
 8018d16:	5c69      	ldrb	r1, [r5, r1]
 8018d18:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8018d1c:	f1be 0f00 	cmp.w	lr, #0
 8018d20:	d05c      	beq.n	8018ddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8018d22:	f892 c001 	ldrb.w	ip, [r2, #1]
 8018d26:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8018d2a:	950d      	str	r5, [sp, #52]	; 0x34
 8018d2c:	b150      	cbz	r0, 8018d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8018d2e:	eb02 0c03 	add.w	ip, r2, r3
 8018d32:	5cd3      	ldrb	r3, [r2, r3]
 8018d34:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018d38:	930a      	str	r3, [sp, #40]	; 0x28
 8018d3a:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8018d3e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018d42:	930e      	str	r3, [sp, #56]	; 0x38
 8018d44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018d46:	fb1e f200 	smulbb	r2, lr, r0
 8018d4a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018d4c:	f108 38ff 	add.w	r8, r8, #4294967295
 8018d50:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018d54:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018d58:	10d2      	asrs	r2, r2, #3
 8018d5a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8018d5e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018d62:	ea4c 0c03 	orr.w	ip, ip, r3
 8018d66:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8018d6a:	9311      	str	r3, [sp, #68]	; 0x44
 8018d6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018d6e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018d70:	041b      	lsls	r3, r3, #16
 8018d72:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018d76:	ea43 030b 	orr.w	r3, r3, fp
 8018d7a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018d7e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018d82:	4353      	muls	r3, r2
 8018d84:	fb05 3c0c 	mla	ip, r5, ip, r3
 8018d88:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8018d8c:	ea43 0b01 	orr.w	fp, r3, r1
 8018d90:	f1c0 0110 	rsb	r1, r0, #16
 8018d94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018d96:	eba1 0e0e 	sub.w	lr, r1, lr
 8018d9a:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8018d9e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8018da2:	fb0e cc0b 	mla	ip, lr, fp, ip
 8018da6:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8018daa:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8018dae:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018db2:	ea4b 0e0e 	orr.w	lr, fp, lr
 8018db6:	fb02 cc0e 	mla	ip, r2, lr, ip
 8018dba:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8018dbe:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8018dc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018dc6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018dca:	ea43 0c0c 	orr.w	ip, r3, ip
 8018dce:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018dd0:	441c      	add	r4, r3
 8018dd2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018dd4:	f82a cb02 	strh.w	ip, [sl], #2
 8018dd8:	441e      	add	r6, r3
 8018dda:	e723      	b.n	8018c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018ddc:	2800      	cmp	r0, #0
 8018dde:	d0b1      	beq.n	8018d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8018de0:	5cd3      	ldrb	r3, [r2, r3]
 8018de2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018de6:	930a      	str	r3, [sp, #40]	; 0x28
 8018de8:	e7ac      	b.n	8018d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8018dea:	b013      	add	sp, #76	; 0x4c
 8018dec:	ecbd 8b0a 	vpop	{d8-d12}
 8018df0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018df4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8018df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018df8:	468b      	mov	fp, r1
 8018dfa:	8809      	ldrh	r1, [r1, #0]
 8018dfc:	b089      	sub	sp, #36	; 0x24
 8018dfe:	10cd      	asrs	r5, r1, #3
 8018e00:	ea4f 2921 	mov.w	r9, r1, asr #8
 8018e04:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8018e08:	00c9      	lsls	r1, r1, #3
 8018e0a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018e0e:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8018e12:	9202      	str	r2, [sp, #8]
 8018e14:	b2c9      	uxtb	r1, r1
 8018e16:	9500      	str	r5, [sp, #0]
 8018e18:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8018e1c:	9101      	str	r1, [sp, #4]
 8018e1e:	9900      	ldr	r1, [sp, #0]
 8018e20:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8018e24:	0209      	lsls	r1, r1, #8
 8018e26:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8018e2a:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8018e2e:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8018e32:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8018e36:	fb04 650e 	mla	r5, r4, lr, r6
 8018e3a:	2c00      	cmp	r4, #0
 8018e3c:	eb02 0805 	add.w	r8, r2, r5
 8018e40:	9a01      	ldr	r2, [sp, #4]
 8018e42:	ea41 0102 	orr.w	r1, r1, r2
 8018e46:	9107      	str	r1, [sp, #28]
 8018e48:	db43      	blt.n	8018ed2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xde>
 8018e4a:	45a2      	cmp	sl, r4
 8018e4c:	dd41      	ble.n	8018ed2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xde>
 8018e4e:	2e00      	cmp	r6, #0
 8018e50:	db3d      	blt.n	8018ece <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xda>
 8018e52:	45b6      	cmp	lr, r6
 8018e54:	dd3b      	ble.n	8018ece <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xda>
 8018e56:	9a02      	ldr	r2, [sp, #8]
 8018e58:	5d55      	ldrb	r5, [r2, r5]
 8018e5a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018e5e:	441d      	add	r5, r3
 8018e60:	1c72      	adds	r2, r6, #1
 8018e62:	d439      	bmi.n	8018ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe4>
 8018e64:	4596      	cmp	lr, r2
 8018e66:	dd37      	ble.n	8018ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe4>
 8018e68:	2f00      	cmp	r7, #0
 8018e6a:	d035      	beq.n	8018ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe4>
 8018e6c:	f898 1001 	ldrb.w	r1, [r8, #1]
 8018e70:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8018e74:	4419      	add	r1, r3
 8018e76:	3401      	adds	r4, #1
 8018e78:	d432      	bmi.n	8018ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xec>
 8018e7a:	45a2      	cmp	sl, r4
 8018e7c:	dd30      	ble.n	8018ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xec>
 8018e7e:	b378      	cbz	r0, 8018ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xec>
 8018e80:	2e00      	cmp	r6, #0
 8018e82:	db2b      	blt.n	8018edc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe8>
 8018e84:	45b6      	cmp	lr, r6
 8018e86:	dd29      	ble.n	8018edc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe8>
 8018e88:	f818 400e 	ldrb.w	r4, [r8, lr]
 8018e8c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8018e90:	441c      	add	r4, r3
 8018e92:	3601      	adds	r6, #1
 8018e94:	d427      	bmi.n	8018ee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf2>
 8018e96:	45b6      	cmp	lr, r6
 8018e98:	dd25      	ble.n	8018ee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf2>
 8018e9a:	b327      	cbz	r7, 8018ee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf2>
 8018e9c:	44c6      	add	lr, r8
 8018e9e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018ea2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018ea6:	4413      	add	r3, r2
 8018ea8:	782a      	ldrb	r2, [r5, #0]
 8018eaa:	2f0f      	cmp	r7, #15
 8018eac:	9202      	str	r2, [sp, #8]
 8018eae:	780a      	ldrb	r2, [r1, #0]
 8018eb0:	9203      	str	r2, [sp, #12]
 8018eb2:	7822      	ldrb	r2, [r4, #0]
 8018eb4:	9204      	str	r2, [sp, #16]
 8018eb6:	781a      	ldrb	r2, [r3, #0]
 8018eb8:	9205      	str	r2, [sp, #20]
 8018eba:	d801      	bhi.n	8018ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xcc>
 8018ebc:	280f      	cmp	r0, #15
 8018ebe:	d914      	bls.n	8018eea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf6>
 8018ec0:	4b3f      	ldr	r3, [pc, #252]	; (8018fc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8018ec2:	f240 210d 	movw	r1, #525	; 0x20d
 8018ec6:	4a3f      	ldr	r2, [pc, #252]	; (8018fc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8018ec8:	483f      	ldr	r0, [pc, #252]	; (8018fc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>)
 8018eca:	f007 ff51 	bl	8020d70 <__assert_func>
 8018ece:	ad07      	add	r5, sp, #28
 8018ed0:	e7c6      	b.n	8018e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6c>
 8018ed2:	a907      	add	r1, sp, #28
 8018ed4:	460d      	mov	r5, r1
 8018ed6:	e7ce      	b.n	8018e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x82>
 8018ed8:	a907      	add	r1, sp, #28
 8018eda:	e7cc      	b.n	8018e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x82>
 8018edc:	ac07      	add	r4, sp, #28
 8018ede:	e7d8      	b.n	8018e92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9e>
 8018ee0:	ab07      	add	r3, sp, #28
 8018ee2:	461c      	mov	r4, r3
 8018ee4:	e7e0      	b.n	8018ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8018ee6:	ab07      	add	r3, sp, #28
 8018ee8:	e7de      	b.n	8018ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8018eea:	b2ba      	uxth	r2, r7
 8018eec:	f891 8002 	ldrb.w	r8, [r1, #2]
 8018ef0:	b280      	uxth	r0, r0
 8018ef2:	7849      	ldrb	r1, [r1, #1]
 8018ef4:	78ae      	ldrb	r6, [r5, #2]
 8018ef6:	fa1f f78c 	uxth.w	r7, ip
 8018efa:	fb02 fa00 	mul.w	sl, r2, r0
 8018efe:	0112      	lsls	r2, r2, #4
 8018f00:	786d      	ldrb	r5, [r5, #1]
 8018f02:	ea6f 0c0c 	mvn.w	ip, ip
 8018f06:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8018f0a:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8018f0e:	eba2 020a 	sub.w	r2, r2, sl
 8018f12:	fa5f fc8c 	uxtb.w	ip, ip
 8018f16:	b280      	uxth	r0, r0
 8018f18:	fb19 f90c 	smulbb	r9, r9, ip
 8018f1c:	b292      	uxth	r2, r2
 8018f1e:	ebae 0e00 	sub.w	lr, lr, r0
 8018f22:	4351      	muls	r1, r2
 8018f24:	fa1f fe8e 	uxth.w	lr, lr
 8018f28:	fb02 f808 	mul.w	r8, r2, r8
 8018f2c:	fb0e 1505 	mla	r5, lr, r5, r1
 8018f30:	7861      	ldrb	r1, [r4, #1]
 8018f32:	fb0e 8806 	mla	r8, lr, r6, r8
 8018f36:	78a6      	ldrb	r6, [r4, #2]
 8018f38:	fb00 5501 	mla	r5, r0, r1, r5
 8018f3c:	7859      	ldrb	r1, [r3, #1]
 8018f3e:	fb00 8806 	mla	r8, r0, r6, r8
 8018f42:	789e      	ldrb	r6, [r3, #2]
 8018f44:	9b00      	ldr	r3, [sp, #0]
 8018f46:	fb0a 5101 	mla	r1, sl, r1, r5
 8018f4a:	fb0a 8606 	mla	r6, sl, r6, r8
 8018f4e:	fb13 f50c 	smulbb	r5, r3, ip
 8018f52:	9b03      	ldr	r3, [sp, #12]
 8018f54:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8018f58:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018f5c:	435a      	muls	r2, r3
 8018f5e:	9b02      	ldr	r3, [sp, #8]
 8018f60:	fb06 9607 	mla	r6, r6, r7, r9
 8018f64:	fb0e 2203 	mla	r2, lr, r3, r2
 8018f68:	9b04      	ldr	r3, [sp, #16]
 8018f6a:	fb01 5107 	mla	r1, r1, r7, r5
 8018f6e:	b2b6      	uxth	r6, r6
 8018f70:	fb00 2003 	mla	r0, r0, r3, r2
 8018f74:	9b05      	ldr	r3, [sp, #20]
 8018f76:	b289      	uxth	r1, r1
 8018f78:	f106 0901 	add.w	r9, r6, #1
 8018f7c:	fb0a 0a03 	mla	sl, sl, r3, r0
 8018f80:	9b01      	ldr	r3, [sp, #4]
 8018f82:	1c4d      	adds	r5, r1, #1
 8018f84:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8018f88:	fb13 fc0c 	smulbb	ip, r3, ip
 8018f8c:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8018f90:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8018f94:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8018f98:	fb0a c707 	mla	r7, sl, r7, ip
 8018f9c:	0949      	lsrs	r1, r1, #5
 8018f9e:	b2bf      	uxth	r7, r7
 8018fa0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018fa4:	f107 0c01 	add.w	ip, r7, #1
 8018fa8:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8018fac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018fb0:	433e      	orrs	r6, r7
 8018fb2:	430e      	orrs	r6, r1
 8018fb4:	f8ab 6000 	strh.w	r6, [fp]
 8018fb8:	b009      	add	sp, #36	; 0x24
 8018fba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018fbe:	bf00      	nop
 8018fc0:	080252eb 	.word	0x080252eb
 8018fc4:	080258a9 	.word	0x080258a9
 8018fc8:	080253d4 	.word	0x080253d4

08018fcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018fcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018fd0:	ed2d 8b08 	vpush	{d8-d11}
 8018fd4:	b095      	sub	sp, #84	; 0x54
 8018fd6:	eeb0 aa40 	vmov.f32	s20, s0
 8018fda:	eef0 9a60 	vmov.f32	s19, s1
 8018fde:	9212      	str	r2, [sp, #72]	; 0x48
 8018fe0:	eeb0 9a41 	vmov.f32	s18, s2
 8018fe4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018fe6:	eeb0 8a62 	vmov.f32	s16, s5
 8018fea:	9309      	str	r3, [sp, #36]	; 0x24
 8018fec:	eef0 8a43 	vmov.f32	s17, s6
 8018ff0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8018ff4:	eef0 ba44 	vmov.f32	s23, s8
 8018ff8:	9013      	str	r0, [sp, #76]	; 0x4c
 8018ffa:	eeb0 ba64 	vmov.f32	s22, s9
 8018ffe:	930f      	str	r3, [sp, #60]	; 0x3c
 8019000:	eef0 aa45 	vmov.f32	s21, s10
 8019004:	6850      	ldr	r0, [r2, #4]
 8019006:	910e      	str	r1, [sp, #56]	; 0x38
 8019008:	6812      	ldr	r2, [r2, #0]
 801900a:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801900e:	fb00 1303 	mla	r3, r0, r3, r1
 8019012:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019016:	930a      	str	r3, [sp, #40]	; 0x28
 8019018:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801901a:	681b      	ldr	r3, [r3, #0]
 801901c:	930d      	str	r3, [sp, #52]	; 0x34
 801901e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019020:	685c      	ldr	r4, [r3, #4]
 8019022:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019024:	3404      	adds	r4, #4
 8019026:	43db      	mvns	r3, r3
 8019028:	b2db      	uxtb	r3, r3
 801902a:	930b      	str	r3, [sp, #44]	; 0x2c
 801902c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801902e:	2b00      	cmp	r3, #0
 8019030:	dc03      	bgt.n	801903a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019032:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019034:	2b00      	cmp	r3, #0
 8019036:	f340 8258 	ble.w	80194ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 801903a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801903c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019040:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019044:	1e48      	subs	r0, r1, #1
 8019046:	1e55      	subs	r5, r2, #1
 8019048:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801904a:	2b00      	cmp	r3, #0
 801904c:	f340 80fc 	ble.w	8019248 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019050:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8019052:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019054:	1436      	asrs	r6, r6, #16
 8019056:	ea4f 4323 	mov.w	r3, r3, asr #16
 801905a:	d406      	bmi.n	801906a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801905c:	4286      	cmp	r6, r0
 801905e:	da04      	bge.n	801906a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019060:	2b00      	cmp	r3, #0
 8019062:	db02      	blt.n	801906a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019064:	42ab      	cmp	r3, r5
 8019066:	f2c0 80f0 	blt.w	801924a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801906a:	3601      	adds	r6, #1
 801906c:	f100 80dd 	bmi.w	801922a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8019070:	42b1      	cmp	r1, r6
 8019072:	f2c0 80da 	blt.w	801922a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8019076:	3301      	adds	r3, #1
 8019078:	f100 80d7 	bmi.w	801922a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 801907c:	429a      	cmp	r2, r3
 801907e:	f2c0 80d4 	blt.w	801922a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8019082:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019084:	9311      	str	r3, [sp, #68]	; 0x44
 8019086:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019088:	930c      	str	r3, [sp, #48]	; 0x30
 801908a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801908c:	2b00      	cmp	r3, #0
 801908e:	f340 80fd 	ble.w	801928c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8019092:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8019094:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019096:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8019098:	68c6      	ldr	r6, [r0, #12]
 801909a:	141d      	asrs	r5, r3, #16
 801909c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801909e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80190a2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80190a4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80190a6:	1400      	asrs	r0, r0, #16
 80190a8:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80190ac:	6892      	ldr	r2, [r2, #8]
 80190ae:	f100 8141 	bmi.w	8019334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80190b2:	1e57      	subs	r7, r2, #1
 80190b4:	42b8      	cmp	r0, r7
 80190b6:	f280 813d 	bge.w	8019334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80190ba:	2d00      	cmp	r5, #0
 80190bc:	f2c0 813a 	blt.w	8019334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80190c0:	1e77      	subs	r7, r6, #1
 80190c2:	42bd      	cmp	r5, r7
 80190c4:	f280 8136 	bge.w	8019334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80190c8:	b212      	sxth	r2, r2
 80190ca:	fb05 0002 	mla	r0, r5, r2, r0
 80190ce:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80190d0:	f815 a000 	ldrb.w	sl, [r5, r0]
 80190d4:	182e      	adds	r6, r5, r0
 80190d6:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80190da:	eb04 050a 	add.w	r5, r4, sl
 80190de:	2b00      	cmp	r3, #0
 80190e0:	f000 811a 	beq.w	8019318 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 80190e4:	f896 c001 	ldrb.w	ip, [r6, #1]
 80190e8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80190ec:	44a4      	add	ip, r4
 80190ee:	2900      	cmp	r1, #0
 80190f0:	f000 811a 	beq.w	8019328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 80190f4:	18b0      	adds	r0, r6, r2
 80190f6:	5cb2      	ldrb	r2, [r6, r2]
 80190f8:	7840      	ldrb	r0, [r0, #1]
 80190fa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80190fe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019102:	4422      	add	r2, r4
 8019104:	4420      	add	r0, r4
 8019106:	b29b      	uxth	r3, r3
 8019108:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801910c:	b289      	uxth	r1, r1
 801910e:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019112:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019114:	fb03 f901 	mul.w	r9, r3, r1
 8019118:	011b      	lsls	r3, r3, #4
 801911a:	f8b6 e000 	ldrh.w	lr, [r6]
 801911e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019122:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8019126:	eba3 0309 	sub.w	r3, r3, r9
 801912a:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801912e:	b289      	uxth	r1, r1
 8019130:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8019134:	b29b      	uxth	r3, r3
 8019136:	eba8 0801 	sub.w	r8, r8, r1
 801913a:	435f      	muls	r7, r3
 801913c:	fa1f f888 	uxth.w	r8, r8
 8019140:	9310      	str	r3, [sp, #64]	; 0x40
 8019142:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019144:	fb08 770b 	mla	r7, r8, fp, r7
 8019148:	f892 b002 	ldrb.w	fp, [r2, #2]
 801914c:	fb01 770b 	mla	r7, r1, fp, r7
 8019150:	f890 b002 	ldrb.w	fp, [r0, #2]
 8019154:	fb09 770b 	mla	r7, r9, fp, r7
 8019158:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801915c:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8019160:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8019164:	fb1b fb03 	smulbb	fp, fp, r3
 8019168:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801916a:	fb07 b706 	mla	r7, r7, r6, fp
 801916e:	f895 b001 	ldrb.w	fp, [r5, #1]
 8019172:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019176:	f89c c000 	ldrb.w	ip, [ip]
 801917a:	b2bf      	uxth	r7, r7
 801917c:	435d      	muls	r5, r3
 801917e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019180:	fb08 550b 	mla	r5, r8, fp, r5
 8019184:	f892 b001 	ldrb.w	fp, [r2, #1]
 8019188:	fb01 550b 	mla	r5, r1, fp, r5
 801918c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8019190:	fb09 550b 	mla	r5, r9, fp, r5
 8019194:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8019198:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801919c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80191a0:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80191a4:	fa5f fe8e 	uxtb.w	lr, lr
 80191a8:	fb1b fb03 	smulbb	fp, fp, r3
 80191ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191ae:	fb03 f30c 	mul.w	r3, r3, ip
 80191b2:	f892 c000 	ldrb.w	ip, [r2]
 80191b6:	fb05 b506 	mla	r5, r5, r6, fp
 80191ba:	1c7a      	adds	r2, r7, #1
 80191bc:	fb08 330a 	mla	r3, r8, sl, r3
 80191c0:	b2ad      	uxth	r5, r5
 80191c2:	fb01 330c 	mla	r3, r1, ip, r3
 80191c6:	f890 c000 	ldrb.w	ip, [r0]
 80191ca:	f105 0b01 	add.w	fp, r5, #1
 80191ce:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80191d2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80191d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80191d8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80191dc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80191e0:	fb1e fe03 	smulbb	lr, lr, r3
 80191e4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80191e8:	096d      	lsrs	r5, r5, #5
 80191ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80191ec:	fb0c ee06 	mla	lr, ip, r6, lr
 80191f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80191f4:	fa1f fe8e 	uxth.w	lr, lr
 80191f8:	f10e 0c01 	add.w	ip, lr, #1
 80191fc:	eb0c 2e1e 	add.w	lr, ip, lr, lsr #8
 8019200:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019204:	ea47 070e 	orr.w	r7, r7, lr
 8019208:	433d      	orrs	r5, r7
 801920a:	801d      	strh	r5, [r3, #0]
 801920c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801920e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019210:	3302      	adds	r3, #2
 8019212:	930c      	str	r3, [sp, #48]	; 0x30
 8019214:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019216:	4413      	add	r3, r2
 8019218:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801921a:	9327      	str	r3, [sp, #156]	; 0x9c
 801921c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801921e:	4413      	add	r3, r2
 8019220:	9328      	str	r3, [sp, #160]	; 0xa0
 8019222:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019224:	3b01      	subs	r3, #1
 8019226:	9311      	str	r3, [sp, #68]	; 0x44
 8019228:	e72f      	b.n	801908a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801922a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801922c:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801922e:	4433      	add	r3, r6
 8019230:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8019232:	9327      	str	r3, [sp, #156]	; 0x9c
 8019234:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019236:	4433      	add	r3, r6
 8019238:	9328      	str	r3, [sp, #160]	; 0xa0
 801923a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801923c:	3b01      	subs	r3, #1
 801923e:	9309      	str	r3, [sp, #36]	; 0x24
 8019240:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019242:	3302      	adds	r3, #2
 8019244:	930a      	str	r3, [sp, #40]	; 0x28
 8019246:	e6ff      	b.n	8019048 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019248:	d027      	beq.n	801929a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 801924a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801924c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801924e:	3b01      	subs	r3, #1
 8019250:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8019252:	fb00 5003 	mla	r0, r0, r3, r5
 8019256:	1400      	asrs	r0, r0, #16
 8019258:	f53f af13 	bmi.w	8019082 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801925c:	3901      	subs	r1, #1
 801925e:	4288      	cmp	r0, r1
 8019260:	f6bf af0f 	bge.w	8019082 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8019264:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8019266:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8019268:	fb01 0303 	mla	r3, r1, r3, r0
 801926c:	141b      	asrs	r3, r3, #16
 801926e:	f53f af08 	bmi.w	8019082 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8019272:	3a01      	subs	r2, #1
 8019274:	4293      	cmp	r3, r2
 8019276:	f6bf af04 	bge.w	8019082 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801927a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801927c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8019280:	9311      	str	r3, [sp, #68]	; 0x44
 8019282:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019284:	930c      	str	r3, [sp, #48]	; 0x30
 8019286:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019288:	2b00      	cmp	r3, #0
 801928a:	dc70      	bgt.n	801936e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a2>
 801928c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801928e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019290:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019294:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019298:	930a      	str	r3, [sp, #40]	; 0x28
 801929a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801929c:	2b00      	cmp	r3, #0
 801929e:	f340 8124 	ble.w	80194ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 80192a2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80192a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80192a8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80192ac:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80192b0:	eef0 6a48 	vmov.f32	s13, s16
 80192b4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80192b8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80192bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80192c0:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80192c4:	eef0 6a68 	vmov.f32	s13, s17
 80192c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80192cc:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 80192d0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80192d4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80192d8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80192dc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80192e0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80192e4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80192e8:	ee18 2a10 	vmov	r2, s16
 80192ec:	eeb0 8a47 	vmov.f32	s16, s14
 80192f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80192f4:	ee18 2a90 	vmov	r2, s17
 80192f8:	9329      	str	r3, [sp, #164]	; 0xa4
 80192fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80192fc:	eef0 8a67 	vmov.f32	s17, s15
 8019300:	fb92 f3f3 	sdiv	r3, r2, r3
 8019304:	932a      	str	r3, [sp, #168]	; 0xa8
 8019306:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019308:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801930a:	3b01      	subs	r3, #1
 801930c:	930e      	str	r3, [sp, #56]	; 0x38
 801930e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019310:	bf08      	it	eq
 8019312:	4613      	moveq	r3, r2
 8019314:	9309      	str	r3, [sp, #36]	; 0x24
 8019316:	e689      	b.n	801902c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019318:	b149      	cbz	r1, 801932e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801931a:	5cb2      	ldrb	r2, [r6, r2]
 801931c:	4628      	mov	r0, r5
 801931e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019322:	4422      	add	r2, r4
 8019324:	46ac      	mov	ip, r5
 8019326:	e6ee      	b.n	8019106 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8019328:	4628      	mov	r0, r5
 801932a:	462a      	mov	r2, r5
 801932c:	e6eb      	b.n	8019106 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801932e:	4628      	mov	r0, r5
 8019330:	462a      	mov	r2, r5
 8019332:	e7f7      	b.n	8019324 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8019334:	1c47      	adds	r7, r0, #1
 8019336:	f53f af69 	bmi.w	801920c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801933a:	42ba      	cmp	r2, r7
 801933c:	f6ff af66 	blt.w	801920c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8019340:	1c6f      	adds	r7, r5, #1
 8019342:	f53f af63 	bmi.w	801920c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8019346:	42be      	cmp	r6, r7
 8019348:	f6ff af60 	blt.w	801920c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801934c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801934e:	b236      	sxth	r6, r6
 8019350:	b212      	sxth	r2, r2
 8019352:	9002      	str	r0, [sp, #8]
 8019354:	9601      	str	r6, [sp, #4]
 8019356:	9200      	str	r2, [sp, #0]
 8019358:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801935a:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801935e:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8019362:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8019366:	4623      	mov	r3, r4
 8019368:	f7ff fd44 	bl	8018df4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801936c:	e74e      	b.n	801920c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801936e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8019370:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8019372:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019376:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8019378:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801937a:	1400      	asrs	r0, r0, #16
 801937c:	142d      	asrs	r5, r5, #16
 801937e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019380:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8019384:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8019388:	fb02 5000 	mla	r0, r2, r0, r5
 801938c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801938e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8019392:	182e      	adds	r6, r5, r0
 8019394:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8019398:	eb04 0509 	add.w	r5, r4, r9
 801939c:	2b00      	cmp	r3, #0
 801939e:	f000 8096 	beq.w	80194ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 80193a2:	7877      	ldrb	r7, [r6, #1]
 80193a4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80193a8:	4427      	add	r7, r4
 80193aa:	2900      	cmp	r1, #0
 80193ac:	f000 8097 	beq.w	80194de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 80193b0:	18b0      	adds	r0, r6, r2
 80193b2:	5cb2      	ldrb	r2, [r6, r2]
 80193b4:	7840      	ldrb	r0, [r0, #1]
 80193b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80193ba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80193be:	4422      	add	r2, r4
 80193c0:	4420      	add	r0, r4
 80193c2:	b29b      	uxth	r3, r3
 80193c4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80193c6:	b289      	uxth	r1, r1
 80193c8:	f895 b002 	ldrb.w	fp, [r5, #2]
 80193cc:	f8b6 c000 	ldrh.w	ip, [r6]
 80193d0:	fb03 f801 	mul.w	r8, r3, r1
 80193d4:	011b      	lsls	r3, r3, #4
 80193d6:	78be      	ldrb	r6, [r7, #2]
 80193d8:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80193dc:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80193e0:	eba3 0308 	sub.w	r3, r3, r8
 80193e4:	f814 9009 	ldrb.w	r9, [r4, r9]
 80193e8:	b289      	uxth	r1, r1
 80193ea:	b29b      	uxth	r3, r3
 80193ec:	ebae 0e01 	sub.w	lr, lr, r1
 80193f0:	435e      	muls	r6, r3
 80193f2:	fa1f fe8e 	uxth.w	lr, lr
 80193f6:	9310      	str	r3, [sp, #64]	; 0x40
 80193f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80193fa:	fb0e 660b 	mla	r6, lr, fp, r6
 80193fe:	f892 b002 	ldrb.w	fp, [r2, #2]
 8019402:	fb01 660b 	mla	r6, r1, fp, r6
 8019406:	f890 b002 	ldrb.w	fp, [r0, #2]
 801940a:	fb08 660b 	mla	r6, r8, fp, r6
 801940e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8019412:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8019416:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801941a:	fb1b fb03 	smulbb	fp, fp, r3
 801941e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019420:	fb06 b60a 	mla	r6, r6, sl, fp
 8019424:	f895 b001 	ldrb.w	fp, [r5, #1]
 8019428:	787d      	ldrb	r5, [r7, #1]
 801942a:	783f      	ldrb	r7, [r7, #0]
 801942c:	b2b6      	uxth	r6, r6
 801942e:	435d      	muls	r5, r3
 8019430:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019432:	fb0e 550b 	mla	r5, lr, fp, r5
 8019436:	f892 b001 	ldrb.w	fp, [r2, #1]
 801943a:	fb01 550b 	mla	r5, r1, fp, r5
 801943e:	f890 b001 	ldrb.w	fp, [r0, #1]
 8019442:	fb08 550b 	mla	r5, r8, fp, r5
 8019446:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801944a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801944e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019452:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8019456:	fa5f fc8c 	uxtb.w	ip, ip
 801945a:	fb1b fb03 	smulbb	fp, fp, r3
 801945e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019460:	437b      	muls	r3, r7
 8019462:	7817      	ldrb	r7, [r2, #0]
 8019464:	fb05 b50a 	mla	r5, r5, sl, fp
 8019468:	fb0e 3309 	mla	r3, lr, r9, r3
 801946c:	b2ad      	uxth	r5, r5
 801946e:	fb01 3307 	mla	r3, r1, r7, r3
 8019472:	7807      	ldrb	r7, [r0, #0]
 8019474:	f105 0b01 	add.w	fp, r5, #1
 8019478:	fb08 3707 	mla	r7, r8, r7, r3
 801947c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801947e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8019482:	fb1c fc03 	smulbb	ip, ip, r3
 8019486:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801948a:	1c73      	adds	r3, r6, #1
 801948c:	096d      	lsrs	r5, r5, #5
 801948e:	fb07 c70a 	mla	r7, r7, sl, ip
 8019492:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8019496:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801949a:	b2bf      	uxth	r7, r7
 801949c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801949e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80194a2:	1c7a      	adds	r2, r7, #1
 80194a4:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80194a8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80194ac:	4316      	orrs	r6, r2
 80194ae:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80194b0:	432e      	orrs	r6, r5
 80194b2:	f823 6b02 	strh.w	r6, [r3], #2
 80194b6:	930c      	str	r3, [sp, #48]	; 0x30
 80194b8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80194ba:	4413      	add	r3, r2
 80194bc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80194be:	9327      	str	r3, [sp, #156]	; 0x9c
 80194c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80194c2:	4413      	add	r3, r2
 80194c4:	9328      	str	r3, [sp, #160]	; 0xa0
 80194c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80194c8:	3b01      	subs	r3, #1
 80194ca:	9311      	str	r3, [sp, #68]	; 0x44
 80194cc:	e6db      	b.n	8019286 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80194ce:	b149      	cbz	r1, 80194e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80194d0:	5cb2      	ldrb	r2, [r6, r2]
 80194d2:	4628      	mov	r0, r5
 80194d4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80194d8:	4422      	add	r2, r4
 80194da:	462f      	mov	r7, r5
 80194dc:	e771      	b.n	80193c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 80194de:	4628      	mov	r0, r5
 80194e0:	462a      	mov	r2, r5
 80194e2:	e76e      	b.n	80193c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 80194e4:	4628      	mov	r0, r5
 80194e6:	462a      	mov	r2, r5
 80194e8:	e7f7      	b.n	80194da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 80194ea:	b015      	add	sp, #84	; 0x54
 80194ec:	ecbd 8b08 	vpop	{d8-d11}
 80194f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080194f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80194f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194f8:	880e      	ldrh	r6, [r1, #0]
 80194fa:	b085      	sub	sp, #20
 80194fc:	4691      	mov	r9, r2
 80194fe:	0230      	lsls	r0, r6, #8
 8019500:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8019504:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8019508:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 801950c:	0170      	lsls	r0, r6, #5
 801950e:	00f6      	lsls	r6, r6, #3
 8019510:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8019514:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8019518:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 801951c:	b2f6      	uxtb	r6, r6
 801951e:	ea4b 0000 	orr.w	r0, fp, r0
 8019522:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8019526:	4306      	orrs	r6, r0
 8019528:	fb05 7a0c 	mla	sl, r5, ip, r7
 801952c:	2d00      	cmp	r5, #0
 801952e:	9603      	str	r6, [sp, #12]
 8019530:	eb09 0e0a 	add.w	lr, r9, sl
 8019534:	db42      	blt.n	80195bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8019536:	45a8      	cmp	r8, r5
 8019538:	dd40      	ble.n	80195bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 801953a:	2f00      	cmp	r7, #0
 801953c:	db3c      	blt.n	80195b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 801953e:	45bc      	cmp	ip, r7
 8019540:	dd3a      	ble.n	80195b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8019542:	f819 600a 	ldrb.w	r6, [r9, sl]
 8019546:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801954a:	441e      	add	r6, r3
 801954c:	1c78      	adds	r0, r7, #1
 801954e:	d438      	bmi.n	80195c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8019550:	4584      	cmp	ip, r0
 8019552:	dd36      	ble.n	80195c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8019554:	b3aa      	cbz	r2, 80195c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8019556:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801955a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801955e:	4418      	add	r0, r3
 8019560:	3501      	adds	r5, #1
 8019562:	d432      	bmi.n	80195ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8019564:	45a8      	cmp	r8, r5
 8019566:	dd30      	ble.n	80195ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8019568:	b37c      	cbz	r4, 80195ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 801956a:	2f00      	cmp	r7, #0
 801956c:	db2b      	blt.n	80195c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 801956e:	45bc      	cmp	ip, r7
 8019570:	dd29      	ble.n	80195c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8019572:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8019576:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801957a:	441d      	add	r5, r3
 801957c:	3701      	adds	r7, #1
 801957e:	d427      	bmi.n	80195d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8019580:	45bc      	cmp	ip, r7
 8019582:	dd25      	ble.n	80195d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8019584:	b322      	cbz	r2, 80195d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8019586:	44f4      	add	ip, lr
 8019588:	f89c 7001 	ldrb.w	r7, [ip, #1]
 801958c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019590:	443b      	add	r3, r7
 8019592:	781f      	ldrb	r7, [r3, #0]
 8019594:	2a0f      	cmp	r2, #15
 8019596:	f896 a000 	ldrb.w	sl, [r6]
 801959a:	f890 b000 	ldrb.w	fp, [r0]
 801959e:	f895 9000 	ldrb.w	r9, [r5]
 80195a2:	9700      	str	r7, [sp, #0]
 80195a4:	d801      	bhi.n	80195aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 80195a6:	2c0f      	cmp	r4, #15
 80195a8:	d914      	bls.n	80195d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 80195aa:	4b2c      	ldr	r3, [pc, #176]	; (801965c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 80195ac:	f240 210d 	movw	r1, #525	; 0x20d
 80195b0:	4a2b      	ldr	r2, [pc, #172]	; (8019660 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 80195b2:	482c      	ldr	r0, [pc, #176]	; (8019664 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 80195b4:	f007 fbdc 	bl	8020d70 <__assert_func>
 80195b8:	ae03      	add	r6, sp, #12
 80195ba:	e7c7      	b.n	801954c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 80195bc:	a803      	add	r0, sp, #12
 80195be:	4606      	mov	r6, r0
 80195c0:	e7ce      	b.n	8019560 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 80195c2:	a803      	add	r0, sp, #12
 80195c4:	e7cc      	b.n	8019560 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 80195c6:	ad03      	add	r5, sp, #12
 80195c8:	e7d8      	b.n	801957c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 80195ca:	ab03      	add	r3, sp, #12
 80195cc:	461d      	mov	r5, r3
 80195ce:	e7e0      	b.n	8019592 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80195d0:	ab03      	add	r3, sp, #12
 80195d2:	e7de      	b.n	8019592 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80195d4:	b292      	uxth	r2, r2
 80195d6:	f890 e002 	ldrb.w	lr, [r0, #2]
 80195da:	b2a4      	uxth	r4, r4
 80195dc:	78b7      	ldrb	r7, [r6, #2]
 80195de:	7840      	ldrb	r0, [r0, #1]
 80195e0:	fb02 f804 	mul.w	r8, r2, r4
 80195e4:	0112      	lsls	r2, r2, #4
 80195e6:	7876      	ldrb	r6, [r6, #1]
 80195e8:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 80195ec:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 80195f0:	eba2 0208 	sub.w	r2, r2, r8
 80195f4:	b2a4      	uxth	r4, r4
 80195f6:	b292      	uxth	r2, r2
 80195f8:	ebac 0c04 	sub.w	ip, ip, r4
 80195fc:	fb02 fe0e 	mul.w	lr, r2, lr
 8019600:	fa1f fc8c 	uxth.w	ip, ip
 8019604:	fb0c ee07 	mla	lr, ip, r7, lr
 8019608:	78af      	ldrb	r7, [r5, #2]
 801960a:	fb04 ee07 	mla	lr, r4, r7, lr
 801960e:	789f      	ldrb	r7, [r3, #2]
 8019610:	785b      	ldrb	r3, [r3, #1]
 8019612:	fb08 e707 	mla	r7, r8, r7, lr
 8019616:	fb02 fe0b 	mul.w	lr, r2, fp
 801961a:	4342      	muls	r2, r0
 801961c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019620:	7868      	ldrb	r0, [r5, #1]
 8019622:	fb0c ee0a 	mla	lr, ip, sl, lr
 8019626:	fb0c 2206 	mla	r2, ip, r6, r2
 801962a:	9701      	str	r7, [sp, #4]
 801962c:	fb04 ee09 	mla	lr, r4, r9, lr
 8019630:	9f00      	ldr	r7, [sp, #0]
 8019632:	fb04 2400 	mla	r4, r4, r0, r2
 8019636:	fb08 ee07 	mla	lr, r8, r7, lr
 801963a:	9f01      	ldr	r7, [sp, #4]
 801963c:	fb08 4803 	mla	r8, r8, r3, r4
 8019640:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019644:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019648:	ea47 070e 	orr.w	r7, r7, lr
 801964c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019650:	ea47 0708 	orr.w	r7, r7, r8
 8019654:	800f      	strh	r7, [r1, #0]
 8019656:	b005      	add	sp, #20
 8019658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801965c:	080252eb 	.word	0x080252eb
 8019660:	080258a9 	.word	0x080258a9
 8019664:	080253d4 	.word	0x080253d4

08019668 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801966c:	ed2d 8b08 	vpush	{d8-d11}
 8019670:	b08f      	sub	sp, #60	; 0x3c
 8019672:	eeb0 aa40 	vmov.f32	s20, s0
 8019676:	eef0 9a60 	vmov.f32	s19, s1
 801967a:	920c      	str	r2, [sp, #48]	; 0x30
 801967c:	eeb0 9a41 	vmov.f32	s18, s2
 8019680:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8019682:	eeb0 8a62 	vmov.f32	s16, s5
 8019686:	900d      	str	r0, [sp, #52]	; 0x34
 8019688:	eef0 8a43 	vmov.f32	s17, s6
 801968c:	6850      	ldr	r0, [r2, #4]
 801968e:	eef0 ba44 	vmov.f32	s23, s8
 8019692:	910a      	str	r1, [sp, #40]	; 0x28
 8019694:	eeb0 ba64 	vmov.f32	s22, s9
 8019698:	9306      	str	r3, [sp, #24]
 801969a:	eef0 aa45 	vmov.f32	s21, s10
 801969e:	6812      	ldr	r2, [r2, #0]
 80196a0:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80196a4:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 80196a8:	fb00 1303 	mla	r3, r0, r3, r1
 80196ac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80196b0:	9307      	str	r3, [sp, #28]
 80196b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80196b4:	681b      	ldr	r3, [r3, #0]
 80196b6:	9308      	str	r3, [sp, #32]
 80196b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80196ba:	685c      	ldr	r4, [r3, #4]
 80196bc:	3404      	adds	r4, #4
 80196be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80196c0:	2b00      	cmp	r3, #0
 80196c2:	dc03      	bgt.n	80196cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80196c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80196c6:	2b00      	cmp	r3, #0
 80196c8:	f340 81d5 	ble.w	8019a76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80196cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80196ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80196d2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80196d6:	1e48      	subs	r0, r1, #1
 80196d8:	1e56      	subs	r6, r2, #1
 80196da:	9b06      	ldr	r3, [sp, #24]
 80196dc:	2b00      	cmp	r3, #0
 80196de:	f340 80b6 	ble.w	801984e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80196e2:	ea5f 472b 	movs.w	r7, fp, asr #16
 80196e6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80196ea:	d406      	bmi.n	80196fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80196ec:	4287      	cmp	r7, r0
 80196ee:	da04      	bge.n	80196fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80196f0:	2b00      	cmp	r3, #0
 80196f2:	db02      	blt.n	80196fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80196f4:	42b3      	cmp	r3, r6
 80196f6:	f2c0 80ab 	blt.w	8019850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80196fa:	3701      	adds	r7, #1
 80196fc:	f100 809c 	bmi.w	8019838 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8019700:	42b9      	cmp	r1, r7
 8019702:	f2c0 8099 	blt.w	8019838 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8019706:	3301      	adds	r3, #1
 8019708:	f100 8096 	bmi.w	8019838 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 801970c:	429a      	cmp	r2, r3
 801970e:	f2c0 8093 	blt.w	8019838 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8019712:	9b06      	ldr	r3, [sp, #24]
 8019714:	930b      	str	r3, [sp, #44]	; 0x2c
 8019716:	9b07      	ldr	r3, [sp, #28]
 8019718:	9309      	str	r3, [sp, #36]	; 0x24
 801971a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801971c:	2b00      	cmp	r3, #0
 801971e:	f340 80b4 	ble.w	801988a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8019722:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8019724:	142e      	asrs	r6, r5, #16
 8019726:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8019728:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801972c:	68c7      	ldr	r7, [r0, #12]
 801972e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8019732:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019736:	6892      	ldr	r2, [r2, #8]
 8019738:	f100 80fb 	bmi.w	8019932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801973c:	f102 3cff 	add.w	ip, r2, #4294967295
 8019740:	4560      	cmp	r0, ip
 8019742:	f280 80f6 	bge.w	8019932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019746:	2e00      	cmp	r6, #0
 8019748:	f2c0 80f3 	blt.w	8019932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801974c:	f107 3cff 	add.w	ip, r7, #4294967295
 8019750:	4566      	cmp	r6, ip
 8019752:	f280 80ee 	bge.w	8019932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019756:	b212      	sxth	r2, r2
 8019758:	fb06 0002 	mla	r0, r6, r2, r0
 801975c:	9e08      	ldr	r6, [sp, #32]
 801975e:	1837      	adds	r7, r6, r0
 8019760:	5c30      	ldrb	r0, [r6, r0]
 8019762:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8019766:	eb04 0c08 	add.w	ip, r4, r8
 801976a:	2b00      	cmp	r3, #0
 801976c:	f000 80d3 	beq.w	8019916 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8019770:	787e      	ldrb	r6, [r7, #1]
 8019772:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019776:	4426      	add	r6, r4
 8019778:	2900      	cmp	r1, #0
 801977a:	f000 80d4 	beq.w	8019926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 801977e:	18b8      	adds	r0, r7, r2
 8019780:	5cba      	ldrb	r2, [r7, r2]
 8019782:	7840      	ldrb	r0, [r0, #1]
 8019784:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019788:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801978c:	4422      	add	r2, r4
 801978e:	4420      	add	r0, r4
 8019790:	b29b      	uxth	r3, r3
 8019792:	78b7      	ldrb	r7, [r6, #2]
 8019794:	b289      	uxth	r1, r1
 8019796:	f89c a002 	ldrb.w	sl, [ip, #2]
 801979a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801979e:	fb03 f901 	mul.w	r9, r3, r1
 80197a2:	011b      	lsls	r3, r3, #4
 80197a4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80197a8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80197ac:	eba3 0309 	sub.w	r3, r3, r9
 80197b0:	b289      	uxth	r1, r1
 80197b2:	b29b      	uxth	r3, r3
 80197b4:	ebae 0e01 	sub.w	lr, lr, r1
 80197b8:	435f      	muls	r7, r3
 80197ba:	fa1f fe8e 	uxth.w	lr, lr
 80197be:	fb0e 770a 	mla	r7, lr, sl, r7
 80197c2:	f892 a002 	ldrb.w	sl, [r2, #2]
 80197c6:	fb01 770a 	mla	r7, r1, sl, r7
 80197ca:	f890 a002 	ldrb.w	sl, [r0, #2]
 80197ce:	fb09 7a0a 	mla	sl, r9, sl, r7
 80197d2:	f814 7008 	ldrb.w	r7, [r4, r8]
 80197d6:	f896 8000 	ldrb.w	r8, [r6]
 80197da:	7876      	ldrb	r6, [r6, #1]
 80197dc:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80197e0:	fb03 f808 	mul.w	r8, r3, r8
 80197e4:	4373      	muls	r3, r6
 80197e6:	fb0e 8807 	mla	r8, lr, r7, r8
 80197ea:	7817      	ldrb	r7, [r2, #0]
 80197ec:	fb0e 330c 	mla	r3, lr, ip, r3
 80197f0:	fb01 8807 	mla	r8, r1, r7, r8
 80197f4:	7807      	ldrb	r7, [r0, #0]
 80197f6:	fb09 8707 	mla	r7, r9, r7, r8
 80197fa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80197fe:	ea4a 0707 	orr.w	r7, sl, r7
 8019802:	f892 a001 	ldrb.w	sl, [r2, #1]
 8019806:	fb01 310a 	mla	r1, r1, sl, r3
 801980a:	f890 a001 	ldrb.w	sl, [r0, #1]
 801980e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019810:	fb09 1a0a 	mla	sl, r9, sl, r1
 8019814:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019818:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801981c:	ea47 070a 	orr.w	r7, r7, sl
 8019820:	801f      	strh	r7, [r3, #0]
 8019822:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019824:	3302      	adds	r3, #2
 8019826:	9309      	str	r3, [sp, #36]	; 0x24
 8019828:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801982a:	449b      	add	fp, r3
 801982c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801982e:	441d      	add	r5, r3
 8019830:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019832:	3b01      	subs	r3, #1
 8019834:	930b      	str	r3, [sp, #44]	; 0x2c
 8019836:	e770      	b.n	801971a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019838:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801983a:	449b      	add	fp, r3
 801983c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801983e:	441d      	add	r5, r3
 8019840:	9b06      	ldr	r3, [sp, #24]
 8019842:	3b01      	subs	r3, #1
 8019844:	9306      	str	r3, [sp, #24]
 8019846:	9b07      	ldr	r3, [sp, #28]
 8019848:	3302      	adds	r3, #2
 801984a:	9307      	str	r3, [sp, #28]
 801984c:	e745      	b.n	80196da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801984e:	d023      	beq.n	8019898 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8019850:	9b06      	ldr	r3, [sp, #24]
 8019852:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8019854:	3b01      	subs	r3, #1
 8019856:	fb00 b003 	mla	r0, r0, r3, fp
 801985a:	1400      	asrs	r0, r0, #16
 801985c:	f53f af59 	bmi.w	8019712 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8019860:	3901      	subs	r1, #1
 8019862:	4288      	cmp	r0, r1
 8019864:	f6bf af55 	bge.w	8019712 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8019868:	9924      	ldr	r1, [sp, #144]	; 0x90
 801986a:	fb01 5303 	mla	r3, r1, r3, r5
 801986e:	141b      	asrs	r3, r3, #16
 8019870:	f53f af4f 	bmi.w	8019712 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8019874:	3a01      	subs	r2, #1
 8019876:	4293      	cmp	r3, r2
 8019878:	f6bf af4b 	bge.w	8019712 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801987c:	9b06      	ldr	r3, [sp, #24]
 801987e:	9309      	str	r3, [sp, #36]	; 0x24
 8019880:	9b07      	ldr	r3, [sp, #28]
 8019882:	930b      	str	r3, [sp, #44]	; 0x2c
 8019884:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019886:	2b00      	cmp	r3, #0
 8019888:	dc70      	bgt.n	801996c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801988a:	9b06      	ldr	r3, [sp, #24]
 801988c:	9a07      	ldr	r2, [sp, #28]
 801988e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019892:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019896:	9307      	str	r3, [sp, #28]
 8019898:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801989a:	2b00      	cmp	r3, #0
 801989c:	f340 80eb 	ble.w	8019a76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80198a0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80198a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80198a6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80198aa:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80198ae:	eef0 6a48 	vmov.f32	s13, s16
 80198b2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80198b6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80198ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80198be:	ee16 ba90 	vmov	fp, s13
 80198c2:	eef0 6a68 	vmov.f32	s13, s17
 80198c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80198ca:	ee16 5a90 	vmov	r5, s13
 80198ce:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80198d2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80198d6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80198da:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80198de:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80198e2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80198e6:	ee18 2a10 	vmov	r2, s16
 80198ea:	eeb0 8a47 	vmov.f32	s16, s14
 80198ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80198f2:	ee18 2a90 	vmov	r2, s17
 80198f6:	9323      	str	r3, [sp, #140]	; 0x8c
 80198f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80198fa:	eef0 8a67 	vmov.f32	s17, s15
 80198fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8019902:	9324      	str	r3, [sp, #144]	; 0x90
 8019904:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019906:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019908:	3b01      	subs	r3, #1
 801990a:	930a      	str	r3, [sp, #40]	; 0x28
 801990c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801990e:	bf08      	it	eq
 8019910:	4613      	moveq	r3, r2
 8019912:	9306      	str	r3, [sp, #24]
 8019914:	e6d3      	b.n	80196be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8019916:	b149      	cbz	r1, 801992c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c4>
 8019918:	5cba      	ldrb	r2, [r7, r2]
 801991a:	4660      	mov	r0, ip
 801991c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019920:	4422      	add	r2, r4
 8019922:	4666      	mov	r6, ip
 8019924:	e734      	b.n	8019790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019926:	4660      	mov	r0, ip
 8019928:	4662      	mov	r2, ip
 801992a:	e731      	b.n	8019790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801992c:	4660      	mov	r0, ip
 801992e:	4662      	mov	r2, ip
 8019930:	e7f7      	b.n	8019922 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019932:	f110 0c01 	adds.w	ip, r0, #1
 8019936:	f53f af74 	bmi.w	8019822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801993a:	4562      	cmp	r2, ip
 801993c:	f6ff af71 	blt.w	8019822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8019940:	f116 0c01 	adds.w	ip, r6, #1
 8019944:	f53f af6d 	bmi.w	8019822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8019948:	4567      	cmp	r7, ip
 801994a:	f6ff af6a 	blt.w	8019822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801994e:	b23f      	sxth	r7, r7
 8019950:	b212      	sxth	r2, r2
 8019952:	9701      	str	r7, [sp, #4]
 8019954:	9200      	str	r2, [sp, #0]
 8019956:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801995a:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801995e:	4623      	mov	r3, r4
 8019960:	980d      	ldr	r0, [sp, #52]	; 0x34
 8019962:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019966:	f7ff fdc5 	bl	80194f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801996a:	e75a      	b.n	8019822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801996c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801996e:	ea4f 462b 	mov.w	r6, fp, asr #16
 8019972:	1428      	asrs	r0, r5, #16
 8019974:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8019978:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801997c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019980:	fb02 6000 	mla	r0, r2, r0, r6
 8019984:	9e08      	ldr	r6, [sp, #32]
 8019986:	f816 8000 	ldrb.w	r8, [r6, r0]
 801998a:	1837      	adds	r7, r6, r0
 801998c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019990:	eb04 0c08 	add.w	ip, r4, r8
 8019994:	2b00      	cmp	r3, #0
 8019996:	d060      	beq.n	8019a5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8019998:	787e      	ldrb	r6, [r7, #1]
 801999a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801999e:	4426      	add	r6, r4
 80199a0:	2900      	cmp	r1, #0
 80199a2:	d062      	beq.n	8019a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x402>
 80199a4:	18b8      	adds	r0, r7, r2
 80199a6:	5cba      	ldrb	r2, [r7, r2]
 80199a8:	7840      	ldrb	r0, [r0, #1]
 80199aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80199ae:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80199b2:	4422      	add	r2, r4
 80199b4:	4420      	add	r0, r4
 80199b6:	b29b      	uxth	r3, r3
 80199b8:	78b7      	ldrb	r7, [r6, #2]
 80199ba:	b289      	uxth	r1, r1
 80199bc:	f89c a002 	ldrb.w	sl, [ip, #2]
 80199c0:	f89c c001 	ldrb.w	ip, [ip, #1]
 80199c4:	fb03 f901 	mul.w	r9, r3, r1
 80199c8:	011b      	lsls	r3, r3, #4
 80199ca:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80199ce:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80199d2:	eba3 0309 	sub.w	r3, r3, r9
 80199d6:	b289      	uxth	r1, r1
 80199d8:	b29b      	uxth	r3, r3
 80199da:	ebae 0e01 	sub.w	lr, lr, r1
 80199de:	435f      	muls	r7, r3
 80199e0:	fa1f fe8e 	uxth.w	lr, lr
 80199e4:	fb0e 770a 	mla	r7, lr, sl, r7
 80199e8:	f892 a002 	ldrb.w	sl, [r2, #2]
 80199ec:	fb01 770a 	mla	r7, r1, sl, r7
 80199f0:	f890 a002 	ldrb.w	sl, [r0, #2]
 80199f4:	fb09 7a0a 	mla	sl, r9, sl, r7
 80199f8:	f814 7008 	ldrb.w	r7, [r4, r8]
 80199fc:	f896 8000 	ldrb.w	r8, [r6]
 8019a00:	7876      	ldrb	r6, [r6, #1]
 8019a02:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8019a06:	fb03 f808 	mul.w	r8, r3, r8
 8019a0a:	4373      	muls	r3, r6
 8019a0c:	7856      	ldrb	r6, [r2, #1]
 8019a0e:	fb0e 8807 	mla	r8, lr, r7, r8
 8019a12:	7817      	ldrb	r7, [r2, #0]
 8019a14:	fb0e 330c 	mla	r3, lr, ip, r3
 8019a18:	fb01 8807 	mla	r8, r1, r7, r8
 8019a1c:	7807      	ldrb	r7, [r0, #0]
 8019a1e:	fb01 3306 	mla	r3, r1, r6, r3
 8019a22:	fb09 8707 	mla	r7, r9, r7, r8
 8019a26:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019a2a:	ea4a 0707 	orr.w	r7, sl, r7
 8019a2e:	f890 a001 	ldrb.w	sl, [r0, #1]
 8019a32:	fb09 3a0a 	mla	sl, r9, sl, r3
 8019a36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019a38:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019a3c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019a40:	ea47 070a 	orr.w	r7, r7, sl
 8019a44:	f823 7b02 	strh.w	r7, [r3], #2
 8019a48:	930b      	str	r3, [sp, #44]	; 0x2c
 8019a4a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019a4c:	449b      	add	fp, r3
 8019a4e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a50:	441d      	add	r5, r3
 8019a52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019a54:	3b01      	subs	r3, #1
 8019a56:	9309      	str	r3, [sp, #36]	; 0x24
 8019a58:	e714      	b.n	8019884 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21c>
 8019a5a:	b149      	cbz	r1, 8019a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x408>
 8019a5c:	5cba      	ldrb	r2, [r7, r2]
 8019a5e:	4660      	mov	r0, ip
 8019a60:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019a64:	4422      	add	r2, r4
 8019a66:	4666      	mov	r6, ip
 8019a68:	e7a5      	b.n	80199b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8019a6a:	4660      	mov	r0, ip
 8019a6c:	4662      	mov	r2, ip
 8019a6e:	e7a2      	b.n	80199b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8019a70:	4660      	mov	r0, ip
 8019a72:	4662      	mov	r2, ip
 8019a74:	e7f7      	b.n	8019a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fe>
 8019a76:	b00f      	add	sp, #60	; 0x3c
 8019a78:	ecbd 8b08 	vpop	{d8-d11}
 8019a7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019a80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8019a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a84:	880e      	ldrh	r6, [r1, #0]
 8019a86:	b085      	sub	sp, #20
 8019a88:	4691      	mov	r9, r2
 8019a8a:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8019a8e:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8019a92:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8019a96:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8019a9a:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8019a9e:	00f6      	lsls	r6, r6, #3
 8019aa0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8019aa4:	9200      	str	r2, [sp, #0]
 8019aa6:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8019aaa:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8019aae:	9201      	str	r2, [sp, #4]
 8019ab0:	b2f2      	uxtb	r2, r6
 8019ab2:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8019ab6:	9202      	str	r2, [sp, #8]
 8019ab8:	fb04 560c 	mla	r6, r4, ip, r5
 8019abc:	2c00      	cmp	r4, #0
 8019abe:	eb09 0e06 	add.w	lr, r9, r6
 8019ac2:	db3e      	blt.n	8019b42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8019ac4:	45a0      	cmp	r8, r4
 8019ac6:	dd3c      	ble.n	8019b42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8019ac8:	2d00      	cmp	r5, #0
 8019aca:	db38      	blt.n	8019b3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8019acc:	45ac      	cmp	ip, r5
 8019ace:	dd36      	ble.n	8019b3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8019ad0:	f819 2006 	ldrb.w	r2, [r9, r6]
 8019ad4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8019ad8:	1c6e      	adds	r6, r5, #1
 8019ada:	d435      	bmi.n	8019b48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8019adc:	45b4      	cmp	ip, r6
 8019ade:	dd33      	ble.n	8019b48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8019ae0:	b3a0      	cbz	r0, 8019b4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8019ae2:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8019ae6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8019aea:	3401      	adds	r4, #1
 8019aec:	d432      	bmi.n	8019b54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8019aee:	45a0      	cmp	r8, r4
 8019af0:	dd30      	ble.n	8019b54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8019af2:	b397      	cbz	r7, 8019b5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8019af4:	2d00      	cmp	r5, #0
 8019af6:	db2b      	blt.n	8019b50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8019af8:	45ac      	cmp	ip, r5
 8019afa:	dd29      	ble.n	8019b50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8019afc:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8019b00:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8019b04:	3501      	adds	r5, #1
 8019b06:	d42b      	bmi.n	8019b60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8019b08:	45ac      	cmp	ip, r5
 8019b0a:	dd29      	ble.n	8019b60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8019b0c:	b350      	cbz	r0, 8019b64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 8019b0e:	44f4      	add	ip, lr
 8019b10:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019b14:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8019b18:	280f      	cmp	r0, #15
 8019b1a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019b1e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8019b22:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019b26:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8019b2a:	d801      	bhi.n	8019b30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 8019b2c:	2f0f      	cmp	r7, #15
 8019b2e:	d91b      	bls.n	8019b68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 8019b30:	4b85      	ldr	r3, [pc, #532]	; (8019d48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8019b32:	f240 210d 	movw	r1, #525	; 0x20d
 8019b36:	4a85      	ldr	r2, [pc, #532]	; (8019d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8019b38:	4885      	ldr	r0, [pc, #532]	; (8019d50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2d0>)
 8019b3a:	f007 f919 	bl	8020d70 <__assert_func>
 8019b3e:	2200      	movs	r2, #0
 8019b40:	e7ca      	b.n	8019ad8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 8019b42:	2600      	movs	r6, #0
 8019b44:	4632      	mov	r2, r6
 8019b46:	e7d0      	b.n	8019aea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8019b48:	2600      	movs	r6, #0
 8019b4a:	e7ce      	b.n	8019aea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8019b4c:	4606      	mov	r6, r0
 8019b4e:	e7cc      	b.n	8019aea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8019b50:	2400      	movs	r4, #0
 8019b52:	e7d7      	b.n	8019b04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 8019b54:	2300      	movs	r3, #0
 8019b56:	461c      	mov	r4, r3
 8019b58:	e7de      	b.n	8019b18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8019b5a:	463b      	mov	r3, r7
 8019b5c:	463c      	mov	r4, r7
 8019b5e:	e7db      	b.n	8019b18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8019b60:	2300      	movs	r3, #0
 8019b62:	e7d9      	b.n	8019b18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8019b64:	4603      	mov	r3, r0
 8019b66:	e7d7      	b.n	8019b18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8019b68:	b280      	uxth	r0, r0
 8019b6a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019b6e:	b2bf      	uxth	r7, r7
 8019b70:	fb00 fe07 	mul.w	lr, r0, r7
 8019b74:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8019b78:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019b7c:	eba0 0c0e 	sub.w	ip, r0, lr
 8019b80:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8019b84:	b2bf      	uxth	r7, r7
 8019b86:	fa1f fc8c 	uxth.w	ip, ip
 8019b8a:	eba5 0507 	sub.w	r5, r5, r7
 8019b8e:	fb0c f00a 	mul.w	r0, ip, sl
 8019b92:	b2ad      	uxth	r5, r5
 8019b94:	fb05 000b 	mla	r0, r5, fp, r0
 8019b98:	fb07 0009 	mla	r0, r7, r9, r0
 8019b9c:	fb0e 0008 	mla	r0, lr, r8, r0
 8019ba0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019ba4:	9003      	str	r0, [sp, #12]
 8019ba6:	d018      	beq.n	8019bda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x15a>
 8019ba8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019bac:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019bb0:	fb0b f000 	mul.w	r0, fp, r0
 8019bb4:	fb0b fb02 	mul.w	fp, fp, r2
 8019bb8:	0a02      	lsrs	r2, r0, #8
 8019bba:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019bbe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019bc2:	4402      	add	r2, r0
 8019bc4:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019bc8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019bcc:	0a12      	lsrs	r2, r2, #8
 8019bce:	0a00      	lsrs	r0, r0, #8
 8019bd0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019bd4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019bd8:	4302      	orrs	r2, r0
 8019bda:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019bde:	d019      	beq.n	8019c14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x194>
 8019be0:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019be4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019be8:	fb0a fb0b 	mul.w	fp, sl, fp
 8019bec:	fb0a fa06 	mul.w	sl, sl, r6
 8019bf0:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019bf4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019bf8:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8019bfc:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019c00:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019c04:	445e      	add	r6, fp
 8019c06:	0a00      	lsrs	r0, r0, #8
 8019c08:	0a36      	lsrs	r6, r6, #8
 8019c0a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019c0e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019c12:	4306      	orrs	r6, r0
 8019c14:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019c18:	d019      	beq.n	8019c4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ce>
 8019c1a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019c1e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019c22:	fb09 fa0a 	mul.w	sl, r9, sl
 8019c26:	fb09 f904 	mul.w	r9, r9, r4
 8019c2a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8019c2e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019c32:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8019c36:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019c3a:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8019c3e:	4454      	add	r4, sl
 8019c40:	0a00      	lsrs	r0, r0, #8
 8019c42:	0a24      	lsrs	r4, r4, #8
 8019c44:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019c48:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019c4c:	4304      	orrs	r4, r0
 8019c4e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019c52:	d019      	beq.n	8019c88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x208>
 8019c54:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8019c58:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019c5c:	fb08 f909 	mul.w	r9, r8, r9
 8019c60:	fb08 f803 	mul.w	r8, r8, r3
 8019c64:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8019c68:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8019c6c:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8019c70:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019c74:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019c78:	444b      	add	r3, r9
 8019c7a:	0a00      	lsrs	r0, r0, #8
 8019c7c:	0a1b      	lsrs	r3, r3, #8
 8019c7e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019c82:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019c86:	4303      	orrs	r3, r0
 8019c88:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019c8c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019c90:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019c94:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019c98:	fb0c f808 	mul.w	r8, ip, r8
 8019c9c:	fb0c f606 	mul.w	r6, ip, r6
 8019ca0:	fb05 8800 	mla	r8, r5, r0, r8
 8019ca4:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8019ca8:	fb05 6202 	mla	r2, r5, r2, r6
 8019cac:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8019cb0:	fb07 8800 	mla	r8, r7, r0, r8
 8019cb4:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8019cb8:	b2ad      	uxth	r5, r5
 8019cba:	fb0e 8000 	mla	r0, lr, r0, r8
 8019cbe:	0a00      	lsrs	r0, r0, #8
 8019cc0:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8019cc4:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8019cc8:	9c00      	ldr	r4, [sp, #0]
 8019cca:	fb07 2700 	mla	r7, r7, r0, r2
 8019cce:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8019cd2:	9b03      	ldr	r3, [sp, #12]
 8019cd4:	fb0e 7000 	mla	r0, lr, r0, r7
 8019cd8:	436b      	muls	r3, r5
 8019cda:	0a00      	lsrs	r0, r0, #8
 8019cdc:	1c5a      	adds	r2, r3, #1
 8019cde:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019ce2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019ce6:	ea48 0000 	orr.w	r0, r8, r0
 8019cea:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8019cee:	0c03      	lsrs	r3, r0, #16
 8019cf0:	b2d2      	uxtb	r2, r2
 8019cf2:	fb14 f602 	smulbb	r6, r4, r2
 8019cf6:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8019cfa:	b2c0      	uxtb	r0, r0
 8019cfc:	fb03 6305 	mla	r3, r3, r5, r6
 8019d00:	b29e      	uxth	r6, r3
 8019d02:	9b01      	ldr	r3, [sp, #4]
 8019d04:	fb13 f302 	smulbb	r3, r3, r2
 8019d08:	fb04 3405 	mla	r4, r4, r5, r3
 8019d0c:	9b02      	ldr	r3, [sp, #8]
 8019d0e:	fb13 f202 	smulbb	r2, r3, r2
 8019d12:	b2a4      	uxth	r4, r4
 8019d14:	1c73      	adds	r3, r6, #1
 8019d16:	fb00 2005 	mla	r0, r0, r5, r2
 8019d1a:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8019d1e:	b280      	uxth	r0, r0
 8019d20:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019d24:	1c42      	adds	r2, r0, #1
 8019d26:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019d2a:	1c62      	adds	r2, r4, #1
 8019d2c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019d30:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8019d34:	0952      	lsrs	r2, r2, #5
 8019d36:	4303      	orrs	r3, r0
 8019d38:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019d3c:	4313      	orrs	r3, r2
 8019d3e:	800b      	strh	r3, [r1, #0]
 8019d40:	b005      	add	sp, #20
 8019d42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d46:	bf00      	nop
 8019d48:	080252eb 	.word	0x080252eb
 8019d4c:	080258a9 	.word	0x080258a9
 8019d50:	080253d4 	.word	0x080253d4

08019d54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d58:	ed2d 8b08 	vpush	{d8-d11}
 8019d5c:	b09f      	sub	sp, #124	; 0x7c
 8019d5e:	eeb0 aa40 	vmov.f32	s20, s0
 8019d62:	eef0 9a60 	vmov.f32	s19, s1
 8019d66:	921b      	str	r2, [sp, #108]	; 0x6c
 8019d68:	eeb0 9a41 	vmov.f32	s18, s2
 8019d6c:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8019d6e:	eeb0 8a62 	vmov.f32	s16, s5
 8019d72:	9309      	str	r3, [sp, #36]	; 0x24
 8019d74:	eef0 8a43 	vmov.f32	s17, s6
 8019d78:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8019d7c:	eef0 ba44 	vmov.f32	s23, s8
 8019d80:	901d      	str	r0, [sp, #116]	; 0x74
 8019d82:	eeb0 ba64 	vmov.f32	s22, s9
 8019d86:	931c      	str	r3, [sp, #112]	; 0x70
 8019d88:	eef0 aa45 	vmov.f32	s21, s10
 8019d8c:	6850      	ldr	r0, [r2, #4]
 8019d8e:	9119      	str	r1, [sp, #100]	; 0x64
 8019d90:	6812      	ldr	r2, [r2, #0]
 8019d92:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8019d94:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8019d98:	fb00 1303 	mla	r3, r0, r3, r1
 8019d9c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019da0:	930c      	str	r3, [sp, #48]	; 0x30
 8019da2:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019da4:	681b      	ldr	r3, [r3, #0]
 8019da6:	9312      	str	r3, [sp, #72]	; 0x48
 8019da8:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019daa:	685e      	ldr	r6, [r3, #4]
 8019dac:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8019db0:	3604      	adds	r6, #4
 8019db2:	930d      	str	r3, [sp, #52]	; 0x34
 8019db4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019db6:	2b00      	cmp	r3, #0
 8019db8:	dc03      	bgt.n	8019dc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019dba:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019dbc:	2b00      	cmp	r3, #0
 8019dbe:	f340 838d 	ble.w	801a4dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x788>
 8019dc2:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019dc4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019dc8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019dcc:	1e48      	subs	r0, r1, #1
 8019dce:	1e57      	subs	r7, r2, #1
 8019dd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019dd2:	2b00      	cmp	r3, #0
 8019dd4:	f340 819a 	ble.w	801a10c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b8>
 8019dd8:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8019dda:	142b      	asrs	r3, r5, #16
 8019ddc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019de0:	d406      	bmi.n	8019df0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019de2:	4584      	cmp	ip, r0
 8019de4:	da04      	bge.n	8019df0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019de6:	2b00      	cmp	r3, #0
 8019de8:	db02      	blt.n	8019df0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019dea:	42bb      	cmp	r3, r7
 8019dec:	f2c0 818f 	blt.w	801a10e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 8019df0:	f11c 0c01 	adds.w	ip, ip, #1
 8019df4:	f100 817d 	bmi.w	801a0f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8019df8:	4561      	cmp	r1, ip
 8019dfa:	f2c0 817a 	blt.w	801a0f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8019dfe:	3301      	adds	r3, #1
 8019e00:	f100 8177 	bmi.w	801a0f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8019e04:	429a      	cmp	r2, r3
 8019e06:	f2c0 8174 	blt.w	801a0f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8019e0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019e0c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8019e0e:	931a      	str	r3, [sp, #104]	; 0x68
 8019e10:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8019e12:	2b00      	cmp	r3, #0
 8019e14:	f340 8199 	ble.w	801a14a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 8019e18:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019e1a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019e1e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019e22:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019e26:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019e28:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8019e2c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019e2e:	141b      	asrs	r3, r3, #16
 8019e30:	f100 81dc 	bmi.w	801a1ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
 8019e34:	f100 38ff 	add.w	r8, r0, #4294967295
 8019e38:	4543      	cmp	r3, r8
 8019e3a:	f280 81d7 	bge.w	801a1ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
 8019e3e:	f1bc 0f00 	cmp.w	ip, #0
 8019e42:	f2c0 81d3 	blt.w	801a1ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
 8019e46:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019e4a:	45c4      	cmp	ip, r8
 8019e4c:	f280 81ce 	bge.w	801a1ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
 8019e50:	b200      	sxth	r0, r0
 8019e52:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019e54:	fb0c 3300 	mla	r3, ip, r0, r3
 8019e58:	eb04 0803 	add.w	r8, r4, r3
 8019e5c:	5ce3      	ldrb	r3, [r4, r3]
 8019e5e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019e62:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8019e66:	2a00      	cmp	r2, #0
 8019e68:	f000 81b5 	beq.w	801a1d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 8019e6c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8019e70:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8019e74:	940e      	str	r4, [sp, #56]	; 0x38
 8019e76:	0e24      	lsrs	r4, r4, #24
 8019e78:	9415      	str	r4, [sp, #84]	; 0x54
 8019e7a:	b179      	cbz	r1, 8019e9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8019e7c:	eb08 0c00 	add.w	ip, r8, r0
 8019e80:	f818 0000 	ldrb.w	r0, [r8, r0]
 8019e84:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019e88:	900a      	str	r0, [sp, #40]	; 0x28
 8019e8a:	0e00      	lsrs	r0, r0, #24
 8019e8c:	9013      	str	r0, [sp, #76]	; 0x4c
 8019e8e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8019e92:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019e96:	900f      	str	r0, [sp, #60]	; 0x3c
 8019e98:	0e00      	lsrs	r0, r0, #24
 8019e9a:	9016      	str	r0, [sp, #88]	; 0x58
 8019e9c:	b292      	uxth	r2, r2
 8019e9e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019ea0:	b289      	uxth	r1, r1
 8019ea2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019ea4:	fb02 f901 	mul.w	r9, r2, r1
 8019ea8:	0112      	lsls	r2, r2, #4
 8019eaa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019eae:	eba2 0809 	sub.w	r8, r2, r9
 8019eb2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019eb6:	b289      	uxth	r1, r1
 8019eb8:	fa1f f888 	uxth.w	r8, r8
 8019ebc:	1a52      	subs	r2, r2, r1
 8019ebe:	fb08 f000 	mul.w	r0, r8, r0
 8019ec2:	b292      	uxth	r2, r2
 8019ec4:	fb02 000e 	mla	r0, r2, lr, r0
 8019ec8:	fb01 0004 	mla	r0, r1, r4, r0
 8019ecc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019ece:	fb09 0004 	mla	r0, r9, r4, r0
 8019ed2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019ed6:	2800      	cmp	r0, #0
 8019ed8:	f000 8100 	beq.w	801a0dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8019edc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019ee0:	d01b      	beq.n	8019f1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8019ee2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019ee6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019eea:	fb0e fa0a 	mul.w	sl, lr, sl
 8019eee:	fb0e fe03 	mul.w	lr, lr, r3
 8019ef2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019ef6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019efa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019efe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019f02:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019f06:	4453      	add	r3, sl
 8019f08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019f0c:	0a1b      	lsrs	r3, r3, #8
 8019f0e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019f12:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019f16:	ea43 030c 	orr.w	r3, r3, ip
 8019f1a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019f1c:	2cff      	cmp	r4, #255	; 0xff
 8019f1e:	d021      	beq.n	8019f64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8019f20:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019f22:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019f26:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019f28:	fb04 fb0b 	mul.w	fp, r4, fp
 8019f2c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019f2e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019f32:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019f34:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019f38:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019f3c:	fb04 fa0a 	mul.w	sl, r4, sl
 8019f40:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019f44:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019f48:	44de      	add	lr, fp
 8019f4a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019f4e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019f52:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019f56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019f5a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019f5e:	ea4e 040a 	orr.w	r4, lr, sl
 8019f62:	940e      	str	r4, [sp, #56]	; 0x38
 8019f64:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019f66:	2cff      	cmp	r4, #255	; 0xff
 8019f68:	d021      	beq.n	8019fae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8019f6a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019f6c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019f70:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019f72:	fb04 fb0b 	mul.w	fp, r4, fp
 8019f76:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019f78:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019f7c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019f7e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019f82:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019f86:	fb04 fa0a 	mul.w	sl, r4, sl
 8019f8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019f8e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019f92:	44de      	add	lr, fp
 8019f94:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019f98:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019f9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019fa0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019fa4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019fa8:	ea4e 040a 	orr.w	r4, lr, sl
 8019fac:	940a      	str	r4, [sp, #40]	; 0x28
 8019fae:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019fb0:	2cff      	cmp	r4, #255	; 0xff
 8019fb2:	d021      	beq.n	8019ff8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8019fb4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019fb6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019fba:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019fbc:	fb04 fb0b 	mul.w	fp, r4, fp
 8019fc0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019fc2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019fc6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019fc8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019fcc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019fd0:	fb04 fa0a 	mul.w	sl, r4, sl
 8019fd4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019fd8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019fdc:	44de      	add	lr, fp
 8019fde:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019fe2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019fe6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019fea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019fee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019ff2:	ea4e 040a 	orr.w	r4, lr, sl
 8019ff6:	940f      	str	r4, [sp, #60]	; 0x3c
 8019ff8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019ffa:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8019ffe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a002:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a006:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a008:	fb08 fc0c 	mul.w	ip, r8, ip
 801a00c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a010:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a014:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a016:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a01a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a01e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a020:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a024:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801a028:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a02a:	fb08 f80e 	mul.w	r8, r8, lr
 801a02e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a032:	f8b7 e000 	ldrh.w	lr, [r7]
 801a036:	fb02 8303 	mla	r3, r2, r3, r8
 801a03a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a03c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a040:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a044:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a046:	fb01 330a 	mla	r3, r1, sl, r3
 801a04a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801a04e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a050:	fb09 3901 	mla	r9, r9, r1, r3
 801a054:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a056:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a05a:	4343      	muls	r3, r0
 801a05c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a060:	1c58      	adds	r0, r3, #1
 801a062:	ea4c 0c09 	orr.w	ip, ip, r9
 801a066:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801a06a:	ea4f 232e 	mov.w	r3, lr, asr #8
 801a06e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801a072:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801a076:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801a07a:	fb11 f102 	smulbb	r1, r1, r2
 801a07e:	b2c0      	uxtb	r0, r0
 801a080:	ea4f 02ee 	mov.w	r2, lr, asr #3
 801a084:	fb03 1300 	mla	r3, r3, r0, r1
 801a088:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a08c:	b299      	uxth	r1, r3
 801a08e:	f3cc 2307 	ubfx	r3, ip, #8, #8
 801a092:	fa5f fc8c 	uxtb.w	ip, ip
 801a096:	fb13 f304 	smulbb	r3, r3, r4
 801a09a:	fb1c fc04 	smulbb	ip, ip, r4
 801a09e:	fb02 3200 	mla	r2, r2, r0, r3
 801a0a2:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 801a0a6:	b2db      	uxtb	r3, r3
 801a0a8:	b292      	uxth	r2, r2
 801a0aa:	fb03 cc00 	mla	ip, r3, r0, ip
 801a0ae:	1c4b      	adds	r3, r1, #1
 801a0b0:	fa1f fc8c 	uxth.w	ip, ip
 801a0b4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a0b8:	1c51      	adds	r1, r2, #1
 801a0ba:	f10c 0001 	add.w	r0, ip, #1
 801a0be:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a0c2:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801a0c6:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 801a0ca:	0952      	lsrs	r2, r2, #5
 801a0cc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a0d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a0d4:	ea43 030c 	orr.w	r3, r3, ip
 801a0d8:	4313      	orrs	r3, r2
 801a0da:	803b      	strh	r3, [r7, #0]
 801a0dc:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801a0de:	3702      	adds	r7, #2
 801a0e0:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801a0e2:	441a      	add	r2, r3
 801a0e4:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a0e6:	441d      	add	r5, r3
 801a0e8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801a0ea:	9231      	str	r2, [sp, #196]	; 0xc4
 801a0ec:	3b01      	subs	r3, #1
 801a0ee:	931a      	str	r3, [sp, #104]	; 0x68
 801a0f0:	e68e      	b.n	8019e10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 801a0f2:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801a0f4:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801a0f6:	441c      	add	r4, r3
 801a0f8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a0fa:	441d      	add	r5, r3
 801a0fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a0fe:	9431      	str	r4, [sp, #196]	; 0xc4
 801a100:	3b01      	subs	r3, #1
 801a102:	9309      	str	r3, [sp, #36]	; 0x24
 801a104:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a106:	3302      	adds	r3, #2
 801a108:	930c      	str	r3, [sp, #48]	; 0x30
 801a10a:	e661      	b.n	8019dd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a10c:	d024      	beq.n	801a158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 801a10e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a110:	9833      	ldr	r0, [sp, #204]	; 0xcc
 801a112:	3b01      	subs	r3, #1
 801a114:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801a116:	fb00 4003 	mla	r0, r0, r3, r4
 801a11a:	1400      	asrs	r0, r0, #16
 801a11c:	f53f ae75 	bmi.w	8019e0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a120:	3901      	subs	r1, #1
 801a122:	4288      	cmp	r0, r1
 801a124:	f6bf ae71 	bge.w	8019e0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a128:	9934      	ldr	r1, [sp, #208]	; 0xd0
 801a12a:	fb01 5303 	mla	r3, r1, r3, r5
 801a12e:	141b      	asrs	r3, r3, #16
 801a130:	f53f ae6b 	bmi.w	8019e0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a134:	3a01      	subs	r2, #1
 801a136:	4293      	cmp	r3, r2
 801a138:	f6bf ae67 	bge.w	8019e0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a13c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801a140:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801a144:	f1bb 0f00 	cmp.w	fp, #0
 801a148:	dc70      	bgt.n	801a22c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a14a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a14c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a150:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a152:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a156:	930c      	str	r3, [sp, #48]	; 0x30
 801a158:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801a15a:	2b00      	cmp	r3, #0
 801a15c:	f340 81be 	ble.w	801a4dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x788>
 801a160:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a164:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a166:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a16a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a16e:	eef0 6a48 	vmov.f32	s13, s16
 801a172:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a176:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a17a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a17e:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 801a182:	eef0 6a68 	vmov.f32	s13, s17
 801a186:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a18a:	ee16 5a90 	vmov	r5, s13
 801a18e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a192:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a196:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a19a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a19e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a1a2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a1a6:	ee18 2a10 	vmov	r2, s16
 801a1aa:	eeb0 8a47 	vmov.f32	s16, s14
 801a1ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1b2:	ee18 2a90 	vmov	r2, s17
 801a1b6:	9333      	str	r3, [sp, #204]	; 0xcc
 801a1b8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a1ba:	eef0 8a67 	vmov.f32	s17, s15
 801a1be:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1c2:	9334      	str	r3, [sp, #208]	; 0xd0
 801a1c4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801a1c6:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801a1c8:	3b01      	subs	r3, #1
 801a1ca:	9319      	str	r3, [sp, #100]	; 0x64
 801a1cc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a1ce:	bf08      	it	eq
 801a1d0:	4613      	moveq	r3, r2
 801a1d2:	9309      	str	r3, [sp, #36]	; 0x24
 801a1d4:	e5ee      	b.n	8019db4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a1d6:	2900      	cmp	r1, #0
 801a1d8:	f43f ae60 	beq.w	8019e9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801a1dc:	f818 0000 	ldrb.w	r0, [r8, r0]
 801a1e0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801a1e4:	900a      	str	r0, [sp, #40]	; 0x28
 801a1e6:	0e00      	lsrs	r0, r0, #24
 801a1e8:	9013      	str	r0, [sp, #76]	; 0x4c
 801a1ea:	e657      	b.n	8019e9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801a1ec:	f113 0801 	adds.w	r8, r3, #1
 801a1f0:	f53f af74 	bmi.w	801a0dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801a1f4:	4540      	cmp	r0, r8
 801a1f6:	f6ff af71 	blt.w	801a0dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801a1fa:	f11c 0801 	adds.w	r8, ip, #1
 801a1fe:	f53f af6d 	bmi.w	801a0dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801a202:	45c6      	cmp	lr, r8
 801a204:	f6ff af6a 	blt.w	801a0dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801a208:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801a20a:	b200      	sxth	r0, r0
 801a20c:	9302      	str	r3, [sp, #8]
 801a20e:	fa0f f38e 	sxth.w	r3, lr
 801a212:	9000      	str	r0, [sp, #0]
 801a214:	9301      	str	r3, [sp, #4]
 801a216:	4633      	mov	r3, r6
 801a218:	981d      	ldr	r0, [sp, #116]	; 0x74
 801a21a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a21e:	e9cd c203 	strd	ip, r2, [sp, #12]
 801a222:	4639      	mov	r1, r7
 801a224:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a226:	f7ff fc2b 	bl	8019a80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801a22a:	e757      	b.n	801a0dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801a22c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801a22e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a232:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801a234:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a238:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801a23a:	1427      	asrs	r7, r4, #16
 801a23c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a23e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a242:	142b      	asrs	r3, r5, #16
 801a244:	fb01 7303 	mla	r3, r1, r3, r7
 801a248:	18e7      	adds	r7, r4, r3
 801a24a:	5ce3      	ldrb	r3, [r4, r3]
 801a24c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a250:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a254:	2a00      	cmp	r2, #0
 801a256:	f000 8137 	beq.w	801a4c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>
 801a25a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801a25e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801a262:	9410      	str	r4, [sp, #64]	; 0x40
 801a264:	0e24      	lsrs	r4, r4, #24
 801a266:	9417      	str	r4, [sp, #92]	; 0x5c
 801a268:	b170      	cbz	r0, 801a288 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801a26a:	eb07 0e01 	add.w	lr, r7, r1
 801a26e:	5c79      	ldrb	r1, [r7, r1]
 801a270:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a274:	910b      	str	r1, [sp, #44]	; 0x2c
 801a276:	0e09      	lsrs	r1, r1, #24
 801a278:	9114      	str	r1, [sp, #80]	; 0x50
 801a27a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801a27e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a282:	9111      	str	r1, [sp, #68]	; 0x44
 801a284:	0e09      	lsrs	r1, r1, #24
 801a286:	9118      	str	r1, [sp, #96]	; 0x60
 801a288:	b292      	uxth	r2, r2
 801a28a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801a28c:	b280      	uxth	r0, r0
 801a28e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a290:	fb02 f800 	mul.w	r8, r2, r0
 801a294:	0112      	lsls	r2, r2, #4
 801a296:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801a29a:	eba2 0e08 	sub.w	lr, r2, r8
 801a29e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801a2a2:	b280      	uxth	r0, r0
 801a2a4:	fa1f fe8e 	uxth.w	lr, lr
 801a2a8:	1a12      	subs	r2, r2, r0
 801a2aa:	fb0e f101 	mul.w	r1, lr, r1
 801a2ae:	b292      	uxth	r2, r2
 801a2b0:	fb02 110c 	mla	r1, r2, ip, r1
 801a2b4:	fb00 1104 	mla	r1, r0, r4, r1
 801a2b8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a2ba:	fb08 1104 	mla	r1, r8, r4, r1
 801a2be:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a2c2:	2900      	cmp	r1, #0
 801a2c4:	f000 80f5 	beq.w	801a4b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75e>
 801a2c8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a2cc:	d019      	beq.n	801a302 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ae>
 801a2ce:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a2d2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a2d6:	fb0c fa0a 	mul.w	sl, ip, sl
 801a2da:	fb0c fc03 	mul.w	ip, ip, r3
 801a2de:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a2e2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a2e6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a2ea:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a2ee:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a2f2:	4453      	add	r3, sl
 801a2f4:	0a3f      	lsrs	r7, r7, #8
 801a2f6:	0a1b      	lsrs	r3, r3, #8
 801a2f8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a2fc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a300:	433b      	orrs	r3, r7
 801a302:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a304:	2cff      	cmp	r4, #255	; 0xff
 801a306:	d020      	beq.n	801a34a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f6>
 801a308:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a30a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a30e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a310:	4367      	muls	r7, r4
 801a312:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a314:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a318:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a31c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a31e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a322:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a326:	fb04 fa0a 	mul.w	sl, r4, sl
 801a32a:	44bc      	add	ip, r7
 801a32c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a330:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a334:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a338:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a33c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a340:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a344:	ea4c 040a 	orr.w	r4, ip, sl
 801a348:	9410      	str	r4, [sp, #64]	; 0x40
 801a34a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a34c:	2cff      	cmp	r4, #255	; 0xff
 801a34e:	d020      	beq.n	801a392 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x63e>
 801a350:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a352:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a356:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a358:	4367      	muls	r7, r4
 801a35a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a35c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a360:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a364:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a366:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a36a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a36e:	fb04 fa0a 	mul.w	sl, r4, sl
 801a372:	44bc      	add	ip, r7
 801a374:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a378:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a37c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a380:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a384:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a388:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a38c:	ea4c 040a 	orr.w	r4, ip, sl
 801a390:	940b      	str	r4, [sp, #44]	; 0x2c
 801a392:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a394:	2cff      	cmp	r4, #255	; 0xff
 801a396:	d020      	beq.n	801a3da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x686>
 801a398:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a39a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a39e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a3a0:	4367      	muls	r7, r4
 801a3a2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a3a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a3a8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a3ac:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a3ae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a3b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a3b6:	fb04 fa0a 	mul.w	sl, r4, sl
 801a3ba:	44bc      	add	ip, r7
 801a3bc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a3c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a3c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a3c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a3cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a3d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a3d4:	ea4c 040a 	orr.w	r4, ip, sl
 801a3d8:	9411      	str	r4, [sp, #68]	; 0x44
 801a3da:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a3dc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a3e0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a3e4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a3e8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a3ea:	fb0e f707 	mul.w	r7, lr, r7
 801a3ee:	fb02 770c 	mla	r7, r2, ip, r7
 801a3f2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a3f6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a3f8:	fb00 770c 	mla	r7, r0, ip, r7
 801a3fc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a400:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a402:	fb08 770c 	mla	r7, r8, ip, r7
 801a406:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a40a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a40c:	fb0e fe0c 	mul.w	lr, lr, ip
 801a410:	0a3f      	lsrs	r7, r7, #8
 801a412:	fb02 e303 	mla	r3, r2, r3, lr
 801a416:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a418:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a41c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a420:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a422:	fb00 330a 	mla	r3, r0, sl, r3
 801a426:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801a42a:	f8b9 0000 	ldrh.w	r0, [r9]
 801a42e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801a432:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a434:	1202      	asrs	r2, r0, #8
 801a436:	434b      	muls	r3, r1
 801a438:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a43c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a440:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a444:	1c59      	adds	r1, r3, #1
 801a446:	ea47 070c 	orr.w	r7, r7, ip
 801a44a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a44e:	0c3b      	lsrs	r3, r7, #16
 801a450:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801a454:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801a458:	b2ff      	uxtb	r7, r7
 801a45a:	fb13 f304 	smulbb	r3, r3, r4
 801a45e:	b2c9      	uxtb	r1, r1
 801a460:	fb1c fc04 	smulbb	ip, ip, r4
 801a464:	fb02 3201 	mla	r2, r2, r1, r3
 801a468:	10c3      	asrs	r3, r0, #3
 801a46a:	fb17 f704 	smulbb	r7, r7, r4
 801a46e:	00c0      	lsls	r0, r0, #3
 801a470:	b292      	uxth	r2, r2
 801a472:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801a476:	b2c0      	uxtb	r0, r0
 801a478:	fb03 c301 	mla	r3, r3, r1, ip
 801a47c:	f102 0c01 	add.w	ip, r2, #1
 801a480:	fb00 7001 	mla	r0, r0, r1, r7
 801a484:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801a488:	b280      	uxth	r0, r0
 801a48a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801a48e:	b29b      	uxth	r3, r3
 801a490:	1c42      	adds	r2, r0, #1
 801a492:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a496:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801a49a:	ea4c 0200 	orr.w	r2, ip, r0
 801a49e:	f103 0c01 	add.w	ip, r3, #1
 801a4a2:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801a4a6:	095b      	lsrs	r3, r3, #5
 801a4a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a4ac:	431a      	orrs	r2, r3
 801a4ae:	f8a9 2000 	strh.w	r2, [r9]
 801a4b2:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801a4b4:	f109 0902 	add.w	r9, r9, #2
 801a4b8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801a4ba:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a4be:	441a      	add	r2, r3
 801a4c0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a4c2:	9231      	str	r2, [sp, #196]	; 0xc4
 801a4c4:	441d      	add	r5, r3
 801a4c6:	e63d      	b.n	801a144 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 801a4c8:	2800      	cmp	r0, #0
 801a4ca:	f43f aedd 	beq.w	801a288 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801a4ce:	5c79      	ldrb	r1, [r7, r1]
 801a4d0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a4d4:	910b      	str	r1, [sp, #44]	; 0x2c
 801a4d6:	0e09      	lsrs	r1, r1, #24
 801a4d8:	9114      	str	r1, [sp, #80]	; 0x50
 801a4da:	e6d5      	b.n	801a288 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801a4dc:	b01f      	add	sp, #124	; 0x7c
 801a4de:	ecbd 8b08 	vpop	{d8-d11}
 801a4e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a4e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801a4e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4ec:	880e      	ldrh	r6, [r1, #0]
 801a4ee:	b085      	sub	sp, #20
 801a4f0:	4691      	mov	r9, r2
 801a4f2:	ea4f 2e26 	mov.w	lr, r6, asr #8
 801a4f6:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801a4fa:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801a4fe:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 801a502:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 801a506:	00f6      	lsls	r6, r6, #3
 801a508:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801a50c:	9200      	str	r2, [sp, #0]
 801a50e:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 801a512:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 801a516:	9201      	str	r2, [sp, #4]
 801a518:	b2f2      	uxtb	r2, r6
 801a51a:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801a51e:	9202      	str	r2, [sp, #8]
 801a520:	fb04 560c 	mla	r6, r4, ip, r5
 801a524:	2c00      	cmp	r4, #0
 801a526:	eb09 0e06 	add.w	lr, r9, r6
 801a52a:	db3e      	blt.n	801a5aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 801a52c:	45a0      	cmp	r8, r4
 801a52e:	dd3c      	ble.n	801a5aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 801a530:	2d00      	cmp	r5, #0
 801a532:	db38      	blt.n	801a5a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 801a534:	45ac      	cmp	ip, r5
 801a536:	dd36      	ble.n	801a5a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 801a538:	f819 2006 	ldrb.w	r2, [r9, r6]
 801a53c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801a540:	1c6e      	adds	r6, r5, #1
 801a542:	d435      	bmi.n	801a5b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 801a544:	45b4      	cmp	ip, r6
 801a546:	dd33      	ble.n	801a5b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 801a548:	b3a0      	cbz	r0, 801a5b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 801a54a:	f89e 6001 	ldrb.w	r6, [lr, #1]
 801a54e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 801a552:	3401      	adds	r4, #1
 801a554:	d432      	bmi.n	801a5bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 801a556:	45a0      	cmp	r8, r4
 801a558:	dd30      	ble.n	801a5bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 801a55a:	b397      	cbz	r7, 801a5c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 801a55c:	2d00      	cmp	r5, #0
 801a55e:	db2b      	blt.n	801a5b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 801a560:	45ac      	cmp	ip, r5
 801a562:	dd29      	ble.n	801a5b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 801a564:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801a568:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 801a56c:	3501      	adds	r5, #1
 801a56e:	d42b      	bmi.n	801a5c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 801a570:	45ac      	cmp	ip, r5
 801a572:	dd29      	ble.n	801a5c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 801a574:	b350      	cbz	r0, 801a5cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe4>
 801a576:	44f4      	add	ip, lr
 801a578:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a57c:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801a580:	280f      	cmp	r0, #15
 801a582:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801a586:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801a58a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a58e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801a592:	d801      	bhi.n	801a598 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb0>
 801a594:	2f0f      	cmp	r7, #15
 801a596:	d91b      	bls.n	801a5d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe8>
 801a598:	4b7e      	ldr	r3, [pc, #504]	; (801a794 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 801a59a:	f240 210d 	movw	r1, #525	; 0x20d
 801a59e:	4a7e      	ldr	r2, [pc, #504]	; (801a798 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 801a5a0:	487e      	ldr	r0, [pc, #504]	; (801a79c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b4>)
 801a5a2:	f006 fbe5 	bl	8020d70 <__assert_func>
 801a5a6:	2200      	movs	r2, #0
 801a5a8:	e7ca      	b.n	801a540 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 801a5aa:	2600      	movs	r6, #0
 801a5ac:	4632      	mov	r2, r6
 801a5ae:	e7d0      	b.n	801a552 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801a5b0:	2600      	movs	r6, #0
 801a5b2:	e7ce      	b.n	801a552 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801a5b4:	4606      	mov	r6, r0
 801a5b6:	e7cc      	b.n	801a552 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801a5b8:	2400      	movs	r4, #0
 801a5ba:	e7d7      	b.n	801a56c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x84>
 801a5bc:	2300      	movs	r3, #0
 801a5be:	461c      	mov	r4, r3
 801a5c0:	e7de      	b.n	801a580 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 801a5c2:	463b      	mov	r3, r7
 801a5c4:	463c      	mov	r4, r7
 801a5c6:	e7db      	b.n	801a580 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 801a5c8:	2300      	movs	r3, #0
 801a5ca:	e7d9      	b.n	801a580 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 801a5cc:	4603      	mov	r3, r0
 801a5ce:	e7d7      	b.n	801a580 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 801a5d0:	b280      	uxth	r0, r0
 801a5d2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a5d6:	b2bf      	uxth	r7, r7
 801a5d8:	fb00 fe07 	mul.w	lr, r0, r7
 801a5dc:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801a5e0:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801a5e4:	eba0 0c0e 	sub.w	ip, r0, lr
 801a5e8:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801a5ec:	b2bf      	uxth	r7, r7
 801a5ee:	fa1f fc8c 	uxth.w	ip, ip
 801a5f2:	eba5 0507 	sub.w	r5, r5, r7
 801a5f6:	fb0c f00a 	mul.w	r0, ip, sl
 801a5fa:	b2ad      	uxth	r5, r5
 801a5fc:	fb05 000b 	mla	r0, r5, fp, r0
 801a600:	fb07 0009 	mla	r0, r7, r9, r0
 801a604:	fb0e 0008 	mla	r0, lr, r8, r0
 801a608:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a60c:	9003      	str	r0, [sp, #12]
 801a60e:	d018      	beq.n	801a642 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x15a>
 801a610:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a614:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a618:	fb0b f000 	mul.w	r0, fp, r0
 801a61c:	fb0b fb02 	mul.w	fp, fp, r2
 801a620:	0a02      	lsrs	r2, r0, #8
 801a622:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a626:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a62a:	4402      	add	r2, r0
 801a62c:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801a630:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a634:	0a12      	lsrs	r2, r2, #8
 801a636:	0a00      	lsrs	r0, r0, #8
 801a638:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a63c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a640:	4302      	orrs	r2, r0
 801a642:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a646:	d019      	beq.n	801a67c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x194>
 801a648:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801a64c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a650:	fb0a fb0b 	mul.w	fp, sl, fp
 801a654:	fb0a fa06 	mul.w	sl, sl, r6
 801a658:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801a65c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a660:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801a664:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a668:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801a66c:	445e      	add	r6, fp
 801a66e:	0a00      	lsrs	r0, r0, #8
 801a670:	0a36      	lsrs	r6, r6, #8
 801a672:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a676:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a67a:	4306      	orrs	r6, r0
 801a67c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a680:	d019      	beq.n	801a6b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1ce>
 801a682:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a686:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a68a:	fb09 fa0a 	mul.w	sl, r9, sl
 801a68e:	fb09 f904 	mul.w	r9, r9, r4
 801a692:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a696:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a69a:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801a69e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a6a2:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801a6a6:	4454      	add	r4, sl
 801a6a8:	0a00      	lsrs	r0, r0, #8
 801a6aa:	0a24      	lsrs	r4, r4, #8
 801a6ac:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a6b0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a6b4:	4304      	orrs	r4, r0
 801a6b6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a6ba:	d019      	beq.n	801a6f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x208>
 801a6bc:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801a6c0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a6c4:	fb08 f909 	mul.w	r9, r8, r9
 801a6c8:	fb08 f803 	mul.w	r8, r8, r3
 801a6cc:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801a6d0:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a6d4:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801a6d8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a6dc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801a6e0:	444b      	add	r3, r9
 801a6e2:	0a00      	lsrs	r0, r0, #8
 801a6e4:	0a1b      	lsrs	r3, r3, #8
 801a6e6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a6ea:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a6ee:	4303      	orrs	r3, r0
 801a6f0:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a6f4:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a6f8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a6fc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a700:	fb0c f808 	mul.w	r8, ip, r8
 801a704:	fb0c f606 	mul.w	r6, ip, r6
 801a708:	fb05 8800 	mla	r8, r5, r0, r8
 801a70c:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801a710:	fb05 6202 	mla	r2, r5, r2, r6
 801a714:	9d01      	ldr	r5, [sp, #4]
 801a716:	fb07 8800 	mla	r8, r7, r0, r8
 801a71a:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801a71e:	fb0e 8000 	mla	r0, lr, r0, r8
 801a722:	0a00      	lsrs	r0, r0, #8
 801a724:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801a728:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801a72c:	9c02      	ldr	r4, [sp, #8]
 801a72e:	fb07 2700 	mla	r7, r7, r0, r2
 801a732:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801a736:	9b03      	ldr	r3, [sp, #12]
 801a738:	fb0e 7000 	mla	r0, lr, r0, r7
 801a73c:	43da      	mvns	r2, r3
 801a73e:	9b00      	ldr	r3, [sp, #0]
 801a740:	0a00      	lsrs	r0, r0, #8
 801a742:	b2d2      	uxtb	r2, r2
 801a744:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a748:	4353      	muls	r3, r2
 801a74a:	4354      	muls	r4, r2
 801a74c:	ea48 0000 	orr.w	r0, r8, r0
 801a750:	4355      	muls	r5, r2
 801a752:	4622      	mov	r2, r4
 801a754:	1c5c      	adds	r4, r3, #1
 801a756:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 801a75a:	0c03      	lsrs	r3, r0, #16
 801a75c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801a760:	4b0f      	ldr	r3, [pc, #60]	; (801a7a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b8>)
 801a762:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 801a766:	1c54      	adds	r4, r2, #1
 801a768:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 801a76c:	b2c2      	uxtb	r2, r0
 801a76e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a772:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a776:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801a77a:	1c6a      	adds	r2, r5, #1
 801a77c:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801a780:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801a784:	00c0      	lsls	r0, r0, #3
 801a786:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a78a:	4318      	orrs	r0, r3
 801a78c:	8008      	strh	r0, [r1, #0]
 801a78e:	b005      	add	sp, #20
 801a790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a794:	080252eb 	.word	0x080252eb
 801a798:	080258a9 	.word	0x080258a9
 801a79c:	080253d4 	.word	0x080253d4
 801a7a0:	fffff800 	.word	0xfffff800

0801a7a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a7a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7a8:	ed2d 8b08 	vpush	{d8-d11}
 801a7ac:	b09b      	sub	sp, #108	; 0x6c
 801a7ae:	eeb0 aa40 	vmov.f32	s20, s0
 801a7b2:	eef0 9a60 	vmov.f32	s19, s1
 801a7b6:	9218      	str	r2, [sp, #96]	; 0x60
 801a7b8:	eeb0 9a41 	vmov.f32	s18, s2
 801a7bc:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801a7be:	eeb0 8a62 	vmov.f32	s16, s5
 801a7c2:	9019      	str	r0, [sp, #100]	; 0x64
 801a7c4:	eef0 8a43 	vmov.f32	s17, s6
 801a7c8:	6850      	ldr	r0, [r2, #4]
 801a7ca:	eef0 ba44 	vmov.f32	s23, s8
 801a7ce:	9116      	str	r1, [sp, #88]	; 0x58
 801a7d0:	eeb0 ba64 	vmov.f32	s22, s9
 801a7d4:	9307      	str	r3, [sp, #28]
 801a7d6:	eef0 aa45 	vmov.f32	s21, s10
 801a7da:	6812      	ldr	r2, [r2, #0]
 801a7dc:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 801a7de:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801a7e2:	fb00 1303 	mla	r3, r0, r3, r1
 801a7e6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a7ea:	930a      	str	r3, [sp, #40]	; 0x28
 801a7ec:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a7ee:	681b      	ldr	r3, [r3, #0]
 801a7f0:	930f      	str	r3, [sp, #60]	; 0x3c
 801a7f2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a7f4:	685e      	ldr	r6, [r3, #4]
 801a7f6:	3604      	adds	r6, #4
 801a7f8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a7fa:	2b00      	cmp	r3, #0
 801a7fc:	dc03      	bgt.n	801a806 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801a7fe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a800:	2b00      	cmp	r3, #0
 801a802:	f340 836f 	ble.w	801aee4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x740>
 801a806:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a808:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a80c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a810:	1e48      	subs	r0, r1, #1
 801a812:	1e57      	subs	r7, r2, #1
 801a814:	9b07      	ldr	r3, [sp, #28]
 801a816:	2b00      	cmp	r3, #0
 801a818:	f340 8188 	ble.w	801ab2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801a81c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801a81e:	142b      	asrs	r3, r5, #16
 801a820:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a824:	d406      	bmi.n	801a834 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a826:	4584      	cmp	ip, r0
 801a828:	da04      	bge.n	801a834 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a82a:	2b00      	cmp	r3, #0
 801a82c:	db02      	blt.n	801a834 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a82e:	42bb      	cmp	r3, r7
 801a830:	f2c0 817d 	blt.w	801ab2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a834:	f11c 0c01 	adds.w	ip, ip, #1
 801a838:	f100 816b 	bmi.w	801ab12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801a83c:	4561      	cmp	r1, ip
 801a83e:	f2c0 8168 	blt.w	801ab12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801a842:	3301      	adds	r3, #1
 801a844:	f100 8165 	bmi.w	801ab12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801a848:	429a      	cmp	r2, r3
 801a84a:	f2c0 8162 	blt.w	801ab12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801a84e:	9b07      	ldr	r3, [sp, #28]
 801a850:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a852:	9317      	str	r3, [sp, #92]	; 0x5c
 801a854:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a856:	2b00      	cmp	r3, #0
 801a858:	f340 8187 	ble.w	801ab6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801a85c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a85e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a862:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a866:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a86a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a86c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801a870:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a872:	141b      	asrs	r3, r3, #16
 801a874:	f100 81ca 	bmi.w	801ac0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801a878:	f101 38ff 	add.w	r8, r1, #4294967295
 801a87c:	4543      	cmp	r3, r8
 801a87e:	f280 81c5 	bge.w	801ac0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801a882:	f1bc 0f00 	cmp.w	ip, #0
 801a886:	f2c0 81c1 	blt.w	801ac0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801a88a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a88e:	45c4      	cmp	ip, r8
 801a890:	f280 81bc 	bge.w	801ac0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801a894:	b209      	sxth	r1, r1
 801a896:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a898:	fb0c 3301 	mla	r3, ip, r1, r3
 801a89c:	eb04 0803 	add.w	r8, r4, r3
 801a8a0:	5ce3      	ldrb	r3, [r4, r3]
 801a8a2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a8a6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801a8aa:	2a00      	cmp	r2, #0
 801a8ac:	f000 81a3 	beq.w	801abf6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801a8b0:	f898 c001 	ldrb.w	ip, [r8, #1]
 801a8b4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801a8b8:	940b      	str	r4, [sp, #44]	; 0x2c
 801a8ba:	0e24      	lsrs	r4, r4, #24
 801a8bc:	9412      	str	r4, [sp, #72]	; 0x48
 801a8be:	b178      	cbz	r0, 801a8e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 801a8c0:	eb08 0c01 	add.w	ip, r8, r1
 801a8c4:	f818 1001 	ldrb.w	r1, [r8, r1]
 801a8c8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a8cc:	9108      	str	r1, [sp, #32]
 801a8ce:	0e09      	lsrs	r1, r1, #24
 801a8d0:	9110      	str	r1, [sp, #64]	; 0x40
 801a8d2:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801a8d6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a8da:	910c      	str	r1, [sp, #48]	; 0x30
 801a8dc:	0e09      	lsrs	r1, r1, #24
 801a8de:	9113      	str	r1, [sp, #76]	; 0x4c
 801a8e0:	b292      	uxth	r2, r2
 801a8e2:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a8e4:	b280      	uxth	r0, r0
 801a8e6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a8e8:	fb02 f900 	mul.w	r9, r2, r0
 801a8ec:	0112      	lsls	r2, r2, #4
 801a8ee:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a8f2:	eba2 0809 	sub.w	r8, r2, r9
 801a8f6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801a8fa:	b280      	uxth	r0, r0
 801a8fc:	fa1f f888 	uxth.w	r8, r8
 801a900:	1a12      	subs	r2, r2, r0
 801a902:	fb08 f101 	mul.w	r1, r8, r1
 801a906:	b292      	uxth	r2, r2
 801a908:	fb02 110e 	mla	r1, r2, lr, r1
 801a90c:	fb00 1104 	mla	r1, r0, r4, r1
 801a910:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a912:	fb09 1104 	mla	r1, r9, r4, r1
 801a916:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a91a:	2900      	cmp	r1, #0
 801a91c:	f000 80ee 	beq.w	801aafc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801a920:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a924:	d01b      	beq.n	801a95e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801a926:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a92a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a92e:	fb0e fa0a 	mul.w	sl, lr, sl
 801a932:	fb0e fe03 	mul.w	lr, lr, r3
 801a936:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a93a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a93e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a942:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a946:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a94a:	4453      	add	r3, sl
 801a94c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a950:	0a1b      	lsrs	r3, r3, #8
 801a952:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a956:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a95a:	ea43 030c 	orr.w	r3, r3, ip
 801a95e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a960:	2cff      	cmp	r4, #255	; 0xff
 801a962:	d021      	beq.n	801a9a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a964:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a966:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a96a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a96c:	fb04 fb0b 	mul.w	fp, r4, fp
 801a970:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a972:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a976:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a978:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a97c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a980:	fb04 fa0a 	mul.w	sl, r4, sl
 801a984:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a988:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a98c:	44de      	add	lr, fp
 801a98e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a992:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a996:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a99a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a99e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a9a2:	ea4e 040a 	orr.w	r4, lr, sl
 801a9a6:	940b      	str	r4, [sp, #44]	; 0x2c
 801a9a8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a9aa:	2cff      	cmp	r4, #255	; 0xff
 801a9ac:	d021      	beq.n	801a9f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801a9ae:	9c08      	ldr	r4, [sp, #32]
 801a9b0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a9b4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a9b6:	fb04 fb0b 	mul.w	fp, r4, fp
 801a9ba:	9c08      	ldr	r4, [sp, #32]
 801a9bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a9c0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a9c2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a9c6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a9ca:	fb04 fa0a 	mul.w	sl, r4, sl
 801a9ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a9d2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a9d6:	44de      	add	lr, fp
 801a9d8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a9dc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a9e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a9e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a9e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a9ec:	ea4e 040a 	orr.w	r4, lr, sl
 801a9f0:	9408      	str	r4, [sp, #32]
 801a9f2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a9f4:	2cff      	cmp	r4, #255	; 0xff
 801a9f6:	d021      	beq.n	801aa3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a9f8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a9fa:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a9fe:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aa00:	fb04 fb0b 	mul.w	fp, r4, fp
 801aa04:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801aa06:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aa0a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aa0c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801aa10:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aa14:	fb04 fa0a 	mul.w	sl, r4, sl
 801aa18:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aa1c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aa20:	44de      	add	lr, fp
 801aa22:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aa26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aa2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa2e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aa32:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa36:	ea4e 040a 	orr.w	r4, lr, sl
 801aa3a:	940c      	str	r4, [sp, #48]	; 0x30
 801aa3c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801aa3e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801aa42:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aa46:	43c9      	mvns	r1, r1
 801aa48:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801aa4c:	9c08      	ldr	r4, [sp, #32]
 801aa4e:	b2c9      	uxtb	r1, r1
 801aa50:	fb08 fc0c 	mul.w	ip, r8, ip
 801aa54:	fb02 cc0e 	mla	ip, r2, lr, ip
 801aa58:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801aa5c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801aa5e:	fb00 cc0e 	mla	ip, r0, lr, ip
 801aa62:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801aa66:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801aa68:	fb09 cc0e 	mla	ip, r9, lr, ip
 801aa6c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801aa70:	fb08 f80e 	mul.w	r8, r8, lr
 801aa74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aa78:	fb02 8303 	mla	r3, r2, r3, r8
 801aa7c:	9a08      	ldr	r2, [sp, #32]
 801aa7e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa82:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801aa86:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801aa88:	fb00 330a 	mla	r3, r0, sl, r3
 801aa8c:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801aa90:	fb09 3900 	mla	r9, r9, r0, r3
 801aa94:	883b      	ldrh	r3, [r7, #0]
 801aa96:	1218      	asrs	r0, r3, #8
 801aa98:	10da      	asrs	r2, r3, #3
 801aa9a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801aa9e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801aaa2:	00db      	lsls	r3, r3, #3
 801aaa4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801aaa8:	4348      	muls	r0, r1
 801aaaa:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801aaae:	b2db      	uxtb	r3, r3
 801aab0:	434a      	muls	r2, r1
 801aab2:	ea4c 0c09 	orr.w	ip, ip, r9
 801aab6:	434b      	muls	r3, r1
 801aab8:	1c41      	adds	r1, r0, #1
 801aaba:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801aabe:	ea4f 401c 	mov.w	r0, ip, lsr #16
 801aac2:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 801aac6:	4960      	ldr	r1, [pc, #384]	; (801ac48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>)
 801aac8:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801aacc:	1c59      	adds	r1, r3, #1
 801aace:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801aad2:	fa5f f38c 	uxtb.w	r3, ip
 801aad6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801aada:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801aade:	1c51      	adds	r1, r2, #1
 801aae0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801aae4:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 801aae8:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 801aaec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801aaf0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801aaf4:	ea43 0c0c 	orr.w	ip, r3, ip
 801aaf8:	f8a7 c000 	strh.w	ip, [r7]
 801aafc:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801aafe:	3702      	adds	r7, #2
 801ab00:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ab02:	441a      	add	r2, r3
 801ab04:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ab06:	441d      	add	r5, r3
 801ab08:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ab0a:	922d      	str	r2, [sp, #180]	; 0xb4
 801ab0c:	3b01      	subs	r3, #1
 801ab0e:	9317      	str	r3, [sp, #92]	; 0x5c
 801ab10:	e6a0      	b.n	801a854 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ab12:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801ab14:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801ab16:	441c      	add	r4, r3
 801ab18:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ab1a:	441d      	add	r5, r3
 801ab1c:	9b07      	ldr	r3, [sp, #28]
 801ab1e:	942d      	str	r4, [sp, #180]	; 0xb4
 801ab20:	3b01      	subs	r3, #1
 801ab22:	9307      	str	r3, [sp, #28]
 801ab24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ab26:	3302      	adds	r3, #2
 801ab28:	930a      	str	r3, [sp, #40]	; 0x28
 801ab2a:	e673      	b.n	801a814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ab2c:	d024      	beq.n	801ab78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801ab2e:	9b07      	ldr	r3, [sp, #28]
 801ab30:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801ab32:	3b01      	subs	r3, #1
 801ab34:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801ab36:	fb00 4003 	mla	r0, r0, r3, r4
 801ab3a:	1400      	asrs	r0, r0, #16
 801ab3c:	f53f ae87 	bmi.w	801a84e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ab40:	3901      	subs	r1, #1
 801ab42:	4288      	cmp	r0, r1
 801ab44:	f6bf ae83 	bge.w	801a84e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ab48:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801ab4a:	fb01 5303 	mla	r3, r1, r3, r5
 801ab4e:	141b      	asrs	r3, r3, #16
 801ab50:	f53f ae7d 	bmi.w	801a84e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ab54:	3a01      	subs	r2, #1
 801ab56:	4293      	cmp	r3, r2
 801ab58:	f6bf ae79 	bge.w	801a84e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ab5c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ab60:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801ab64:	f1bb 0f00 	cmp.w	fp, #0
 801ab68:	dc70      	bgt.n	801ac4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801ab6a:	9b07      	ldr	r3, [sp, #28]
 801ab6c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ab70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ab72:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ab76:	930a      	str	r3, [sp, #40]	; 0x28
 801ab78:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ab7a:	2b00      	cmp	r3, #0
 801ab7c:	f340 81b2 	ble.w	801aee4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x740>
 801ab80:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ab84:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ab86:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ab8a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ab8e:	eef0 6a48 	vmov.f32	s13, s16
 801ab92:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ab96:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801ab9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ab9e:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 801aba2:	eef0 6a68 	vmov.f32	s13, s17
 801aba6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abaa:	ee16 5a90 	vmov	r5, s13
 801abae:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801abb2:	ee69 7a27 	vmul.f32	s15, s18, s15
 801abb6:	ee37 8a48 	vsub.f32	s16, s14, s16
 801abba:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801abbe:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801abc2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801abc6:	ee18 2a10 	vmov	r2, s16
 801abca:	eeb0 8a47 	vmov.f32	s16, s14
 801abce:	fb92 f3f3 	sdiv	r3, r2, r3
 801abd2:	ee18 2a90 	vmov	r2, s17
 801abd6:	932f      	str	r3, [sp, #188]	; 0xbc
 801abd8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801abda:	eef0 8a67 	vmov.f32	s17, s15
 801abde:	fb92 f3f3 	sdiv	r3, r2, r3
 801abe2:	9330      	str	r3, [sp, #192]	; 0xc0
 801abe4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801abe6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801abe8:	3b01      	subs	r3, #1
 801abea:	9316      	str	r3, [sp, #88]	; 0x58
 801abec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801abee:	bf08      	it	eq
 801abf0:	4613      	moveq	r3, r2
 801abf2:	9307      	str	r3, [sp, #28]
 801abf4:	e600      	b.n	801a7f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801abf6:	2800      	cmp	r0, #0
 801abf8:	f43f ae72 	beq.w	801a8e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 801abfc:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ac00:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ac04:	9108      	str	r1, [sp, #32]
 801ac06:	0e09      	lsrs	r1, r1, #24
 801ac08:	9110      	str	r1, [sp, #64]	; 0x40
 801ac0a:	e669      	b.n	801a8e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 801ac0c:	f113 0801 	adds.w	r8, r3, #1
 801ac10:	f53f af74 	bmi.w	801aafc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801ac14:	4541      	cmp	r1, r8
 801ac16:	f6ff af71 	blt.w	801aafc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801ac1a:	f11c 0801 	adds.w	r8, ip, #1
 801ac1e:	f53f af6d 	bmi.w	801aafc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801ac22:	45c6      	cmp	lr, r8
 801ac24:	f6ff af6a 	blt.w	801aafc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801ac28:	b209      	sxth	r1, r1
 801ac2a:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801ac2e:	fa0f f38e 	sxth.w	r3, lr
 801ac32:	9100      	str	r1, [sp, #0]
 801ac34:	4639      	mov	r1, r7
 801ac36:	9301      	str	r3, [sp, #4]
 801ac38:	4633      	mov	r3, r6
 801ac3a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801ac3e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ac40:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ac42:	f7ff fc51 	bl	801a4e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801ac46:	e759      	b.n	801aafc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801ac48:	fffff800 	.word	0xfffff800
 801ac4c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801ac4e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ac52:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801ac54:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ac58:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801ac5a:	1427      	asrs	r7, r4, #16
 801ac5c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ac5e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac62:	142b      	asrs	r3, r5, #16
 801ac64:	fb01 7303 	mla	r3, r1, r3, r7
 801ac68:	18e7      	adds	r7, r4, r3
 801ac6a:	5ce3      	ldrb	r3, [r4, r3]
 801ac6c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ac70:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ac74:	2a00      	cmp	r2, #0
 801ac76:	f000 812b 	beq.w	801aed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>
 801ac7a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801ac7e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801ac82:	940d      	str	r4, [sp, #52]	; 0x34
 801ac84:	0e24      	lsrs	r4, r4, #24
 801ac86:	9414      	str	r4, [sp, #80]	; 0x50
 801ac88:	b170      	cbz	r0, 801aca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801ac8a:	eb07 0e01 	add.w	lr, r7, r1
 801ac8e:	5c79      	ldrb	r1, [r7, r1]
 801ac90:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ac94:	9109      	str	r1, [sp, #36]	; 0x24
 801ac96:	0e09      	lsrs	r1, r1, #24
 801ac98:	9111      	str	r1, [sp, #68]	; 0x44
 801ac9a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801ac9e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801aca2:	910e      	str	r1, [sp, #56]	; 0x38
 801aca4:	0e09      	lsrs	r1, r1, #24
 801aca6:	9115      	str	r1, [sp, #84]	; 0x54
 801aca8:	b292      	uxth	r2, r2
 801acaa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801acac:	b280      	uxth	r0, r0
 801acae:	fb02 f800 	mul.w	r8, r2, r0
 801acb2:	0112      	lsls	r2, r2, #4
 801acb4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801acb8:	eba2 0e08 	sub.w	lr, r2, r8
 801acbc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801acc0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801acc2:	b280      	uxth	r0, r0
 801acc4:	fa1f fe8e 	uxth.w	lr, lr
 801acc8:	1a09      	subs	r1, r1, r0
 801acca:	fb0e f202 	mul.w	r2, lr, r2
 801acce:	b289      	uxth	r1, r1
 801acd0:	fb01 220c 	mla	r2, r1, ip, r2
 801acd4:	fb00 2204 	mla	r2, r0, r4, r2
 801acd8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801acda:	fb08 2204 	mla	r2, r8, r4, r2
 801acde:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ace2:	2a00      	cmp	r2, #0
 801ace4:	f000 80e9 	beq.w	801aeba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x716>
 801ace8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801acec:	d019      	beq.n	801ad22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801acee:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801acf2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801acf6:	fb0c fa0a 	mul.w	sl, ip, sl
 801acfa:	fb0c fc03 	mul.w	ip, ip, r3
 801acfe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ad02:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ad06:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ad0a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ad0e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ad12:	4453      	add	r3, sl
 801ad14:	0a3f      	lsrs	r7, r7, #8
 801ad16:	0a1b      	lsrs	r3, r3, #8
 801ad18:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ad1c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ad20:	433b      	orrs	r3, r7
 801ad22:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ad24:	2cff      	cmp	r4, #255	; 0xff
 801ad26:	d020      	beq.n	801ad6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801ad28:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ad2a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ad2e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ad30:	4367      	muls	r7, r4
 801ad32:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ad34:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ad38:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ad3c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ad3e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ad42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ad46:	fb04 fa0a 	mul.w	sl, r4, sl
 801ad4a:	44bc      	add	ip, r7
 801ad4c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ad50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ad54:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ad58:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ad5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ad60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ad64:	ea4c 040a 	orr.w	r4, ip, sl
 801ad68:	940d      	str	r4, [sp, #52]	; 0x34
 801ad6a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ad6c:	2cff      	cmp	r4, #255	; 0xff
 801ad6e:	d020      	beq.n	801adb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801ad70:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ad72:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ad76:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ad78:	4367      	muls	r7, r4
 801ad7a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ad7c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ad80:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ad84:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ad86:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ad8a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ad8e:	fb04 fa0a 	mul.w	sl, r4, sl
 801ad92:	44bc      	add	ip, r7
 801ad94:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ad98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ad9c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ada0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ada4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ada8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801adac:	ea4c 040a 	orr.w	r4, ip, sl
 801adb0:	9409      	str	r4, [sp, #36]	; 0x24
 801adb2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801adb4:	2cff      	cmp	r4, #255	; 0xff
 801adb6:	d020      	beq.n	801adfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801adb8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801adba:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801adbe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801adc0:	4367      	muls	r7, r4
 801adc2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801adc4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801adc8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801adcc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801adce:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801add2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801add6:	fb04 fa0a 	mul.w	sl, r4, sl
 801adda:	44bc      	add	ip, r7
 801addc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ade0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ade4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ade8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801adec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801adf0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801adf4:	ea4c 040a 	orr.w	r4, ip, sl
 801adf8:	940e      	str	r4, [sp, #56]	; 0x38
 801adfa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801adfc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ae00:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ae04:	43d2      	mvns	r2, r2
 801ae06:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ae0a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ae0c:	b2d2      	uxtb	r2, r2
 801ae0e:	fb0e f707 	mul.w	r7, lr, r7
 801ae12:	fb01 770c 	mla	r7, r1, ip, r7
 801ae16:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ae1a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ae1c:	fb00 770c 	mla	r7, r0, ip, r7
 801ae20:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ae24:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ae26:	fb08 770c 	mla	r7, r8, ip, r7
 801ae2a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801ae2e:	fb0e fe0c 	mul.w	lr, lr, ip
 801ae32:	0a3f      	lsrs	r7, r7, #8
 801ae34:	fb01 e303 	mla	r3, r1, r3, lr
 801ae38:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ae3a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ae3e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ae42:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ae44:	fb00 330a 	mla	r3, r0, sl, r3
 801ae48:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801ae4c:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ae50:	f8b9 3000 	ldrh.w	r3, [r9]
 801ae54:	1218      	asrs	r0, r3, #8
 801ae56:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ae5a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ae5e:	10d9      	asrs	r1, r3, #3
 801ae60:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ae64:	00db      	lsls	r3, r3, #3
 801ae66:	4350      	muls	r0, r2
 801ae68:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ae6c:	ea47 070c 	orr.w	r7, r7, ip
 801ae70:	b2db      	uxtb	r3, r3
 801ae72:	f100 0c01 	add.w	ip, r0, #1
 801ae76:	4351      	muls	r1, r2
 801ae78:	4353      	muls	r3, r2
 801ae7a:	4a1d      	ldr	r2, [pc, #116]	; (801aef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ae7c:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 801ae80:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801ae84:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 801ae88:	f103 0c01 	add.w	ip, r3, #1
 801ae8c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801ae90:	fa5f fc87 	uxtb.w	ip, r7
 801ae94:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801ae98:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801ae9c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801aea0:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 801aea4:	1c4b      	adds	r3, r1, #1
 801aea6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801aeaa:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 801aeae:	00ff      	lsls	r7, r7, #3
 801aeb0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801aeb4:	4338      	orrs	r0, r7
 801aeb6:	f8a9 0000 	strh.w	r0, [r9]
 801aeba:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801aebc:	f109 0902 	add.w	r9, r9, #2
 801aec0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801aec2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801aec6:	441a      	add	r2, r3
 801aec8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aeca:	922d      	str	r2, [sp, #180]	; 0xb4
 801aecc:	441d      	add	r5, r3
 801aece:	e649      	b.n	801ab64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801aed0:	2800      	cmp	r0, #0
 801aed2:	f43f aee9 	beq.w	801aca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801aed6:	5c79      	ldrb	r1, [r7, r1]
 801aed8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801aedc:	9109      	str	r1, [sp, #36]	; 0x24
 801aede:	0e09      	lsrs	r1, r1, #24
 801aee0:	9111      	str	r1, [sp, #68]	; 0x44
 801aee2:	e6e1      	b.n	801aca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801aee4:	b01b      	add	sp, #108	; 0x6c
 801aee6:	ecbd 8b08 	vpop	{d8-d11}
 801aeea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aeee:	bf00      	nop
 801aef0:	fffff800 	.word	0xfffff800

0801aef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801aef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aef8:	b085      	sub	sp, #20
 801aefa:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801aefe:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801af02:	9103      	str	r1, [sp, #12]
 801af04:	2d00      	cmp	r5, #0
 801af06:	fb05 7106 	mla	r1, r5, r6, r7
 801af0a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801af0e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801af12:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 801af16:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801af1a:	eb03 0901 	add.w	r9, r3, r1
 801af1e:	9401      	str	r4, [sp, #4]
 801af20:	f2c0 80c0 	blt.w	801b0a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801af24:	45a8      	cmp	r8, r5
 801af26:	f340 80bd 	ble.w	801b0a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801af2a:	2f00      	cmp	r7, #0
 801af2c:	f2c0 80b6 	blt.w	801b09c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801af30:	42be      	cmp	r6, r7
 801af32:	f340 80b3 	ble.w	801b09c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801af36:	f813 c001 	ldrb.w	ip, [r3, r1]
 801af3a:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 801af3e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801af42:	d019      	beq.n	801af78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 801af44:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 801af48:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801af4c:	435a      	muls	r2, r3
 801af4e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801af52:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801af56:	fb0c f403 	mul.w	r4, ip, r3
 801af5a:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801af5e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801af62:	441a      	add	r2, r3
 801af64:	f104 0320 	add.w	r3, r4, #32
 801af68:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801af6c:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801af70:	0a1b      	lsrs	r3, r3, #8
 801af72:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801af76:	4319      	orrs	r1, r3
 801af78:	b289      	uxth	r1, r1
 801af7a:	1c7b      	adds	r3, r7, #1
 801af7c:	f100 8097 	bmi.w	801b0ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801af80:	429e      	cmp	r6, r3
 801af82:	f340 8094 	ble.w	801b0ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801af86:	2800      	cmp	r0, #0
 801af88:	f000 8094 	beq.w	801b0b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 801af8c:	f899 4001 	ldrb.w	r4, [r9, #1]
 801af90:	9b01      	ldr	r3, [sp, #4]
 801af92:	2cff      	cmp	r4, #255	; 0xff
 801af94:	885b      	ldrh	r3, [r3, #2]
 801af96:	d01b      	beq.n	801afd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 801af98:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801af9c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801afa0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801afa4:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801afa8:	fb0a f202 	mul.w	r2, sl, r2
 801afac:	fb04 fa03 	mul.w	sl, r4, r3
 801afb0:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801afb4:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801afb8:	441a      	add	r2, r3
 801afba:	f10a 0320 	add.w	r3, sl, #32
 801afbe:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801afc2:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801afc6:	0a1b      	lsrs	r3, r3, #8
 801afc8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801afcc:	ea4b 0303 	orr.w	r3, fp, r3
 801afd0:	b29b      	uxth	r3, r3
 801afd2:	3501      	adds	r5, #1
 801afd4:	d474      	bmi.n	801b0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801afd6:	45a8      	cmp	r8, r5
 801afd8:	dd72      	ble.n	801b0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801afda:	f1be 0f00 	cmp.w	lr, #0
 801afde:	f000 8120 	beq.w	801b222 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 801afe2:	2f00      	cmp	r7, #0
 801afe4:	db69      	blt.n	801b0ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801afe6:	42be      	cmp	r6, r7
 801afe8:	dd67      	ble.n	801b0ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801afea:	f819 5006 	ldrb.w	r5, [r9, r6]
 801afee:	9a01      	ldr	r2, [sp, #4]
 801aff0:	2dff      	cmp	r5, #255	; 0xff
 801aff2:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801aff6:	d01c      	beq.n	801b032 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 801aff8:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801affc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b000:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801b004:	fb08 f802 	mul.w	r8, r8, r2
 801b008:	fb05 fa0b 	mul.w	sl, r5, fp
 801b00c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801b010:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801b014:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b018:	4490      	add	r8, r2
 801b01a:	f10a 0220 	add.w	r2, sl, #32
 801b01e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801b022:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801b026:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b02a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b02e:	ea4b 0b0a 	orr.w	fp, fp, sl
 801b032:	fa1f fb8b 	uxth.w	fp, fp
 801b036:	3701      	adds	r7, #1
 801b038:	d447      	bmi.n	801b0ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801b03a:	42be      	cmp	r6, r7
 801b03c:	dd45      	ble.n	801b0ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801b03e:	2800      	cmp	r0, #0
 801b040:	d046      	beq.n	801b0d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 801b042:	3601      	adds	r6, #1
 801b044:	9a01      	ldr	r2, [sp, #4]
 801b046:	f819 7006 	ldrb.w	r7, [r9, r6]
 801b04a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801b04e:	2fff      	cmp	r7, #255	; 0xff
 801b050:	d01a      	beq.n	801b088 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 801b052:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801b056:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801b05a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b05e:	fb08 f806 	mul.w	r8, r8, r6
 801b062:	fb07 f902 	mul.w	r9, r7, r2
 801b066:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801b06a:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801b06e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b072:	44b0      	add	r8, r6
 801b074:	f109 0620 	add.w	r6, r9, #32
 801b078:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801b07c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801b080:	0a36      	lsrs	r6, r6, #8
 801b082:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b086:	4332      	orrs	r2, r6
 801b088:	b292      	uxth	r2, r2
 801b08a:	280f      	cmp	r0, #15
 801b08c:	d922      	bls.n	801b0d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801b08e:	4b69      	ldr	r3, [pc, #420]	; (801b234 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 801b090:	f240 210d 	movw	r1, #525	; 0x20d
 801b094:	4a68      	ldr	r2, [pc, #416]	; (801b238 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 801b096:	4869      	ldr	r0, [pc, #420]	; (801b23c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 801b098:	f005 fe6a 	bl	8020d70 <__assert_func>
 801b09c:	f04f 0c00 	mov.w	ip, #0
 801b0a0:	4661      	mov	r1, ip
 801b0a2:	e76a      	b.n	801af7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 801b0a4:	2400      	movs	r4, #0
 801b0a6:	46a4      	mov	ip, r4
 801b0a8:	4623      	mov	r3, r4
 801b0aa:	4621      	mov	r1, r4
 801b0ac:	e791      	b.n	801afd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801b0ae:	2400      	movs	r4, #0
 801b0b0:	4623      	mov	r3, r4
 801b0b2:	e78e      	b.n	801afd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801b0b4:	4604      	mov	r4, r0
 801b0b6:	4603      	mov	r3, r0
 801b0b8:	e78b      	b.n	801afd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801b0ba:	2500      	movs	r5, #0
 801b0bc:	46ab      	mov	fp, r5
 801b0be:	e7ba      	b.n	801b036 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 801b0c0:	2700      	movs	r7, #0
 801b0c2:	463d      	mov	r5, r7
 801b0c4:	463a      	mov	r2, r7
 801b0c6:	46bb      	mov	fp, r7
 801b0c8:	e7df      	b.n	801b08a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801b0ca:	2700      	movs	r7, #0
 801b0cc:	463a      	mov	r2, r7
 801b0ce:	e7dc      	b.n	801b08a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801b0d0:	4607      	mov	r7, r0
 801b0d2:	4602      	mov	r2, r0
 801b0d4:	f1be 0f0f 	cmp.w	lr, #15
 801b0d8:	d8d9      	bhi.n	801b08e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801b0da:	b286      	uxth	r6, r0
 801b0dc:	fa1f f98e 	uxth.w	r9, lr
 801b0e0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801b0e4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801b0e8:	fb06 f809 	mul.w	r8, r6, r9
 801b0ec:	0136      	lsls	r6, r6, #4
 801b0ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b0f2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801b0f6:	9601      	str	r6, [sp, #4]
 801b0f8:	ea4a 0101 	orr.w	r1, sl, r1
 801b0fc:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 801b100:	fa1f f689 	uxth.w	r6, r9
 801b104:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b108:	fb10 f90e 	smulbb	r9, r0, lr
 801b10c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b110:	9602      	str	r6, [sp, #8]
 801b112:	460e      	mov	r6, r1
 801b114:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801b118:	f1ce 0110 	rsb	r1, lr, #16
 801b11c:	ea4a 0303 	orr.w	r3, sl, r3
 801b120:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b124:	1a09      	subs	r1, r1, r0
 801b126:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801b12a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b12e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b132:	4343      	muls	r3, r0
 801b134:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 801b138:	9801      	ldr	r0, [sp, #4]
 801b13a:	ea4a 0202 	orr.w	r2, sl, r2
 801b13e:	fb01 3106 	mla	r1, r1, r6, r3
 801b142:	9e02      	ldr	r6, [sp, #8]
 801b144:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801b148:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801b14c:	fb09 1302 	mla	r3, r9, r2, r1
 801b150:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801b154:	1b80      	subs	r0, r0, r6
 801b156:	9e01      	ldr	r6, [sp, #4]
 801b158:	9a03      	ldr	r2, [sp, #12]
 801b15a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b15e:	eba6 0608 	sub.w	r6, r6, r8
 801b162:	b280      	uxth	r0, r0
 801b164:	8811      	ldrh	r1, [r2, #0]
 801b166:	ea4a 0b0b 	orr.w	fp, sl, fp
 801b16a:	b2b6      	uxth	r6, r6
 801b16c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 801b170:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801b174:	4374      	muls	r4, r6
 801b176:	b292      	uxth	r2, r2
 801b178:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801b17c:	fb0c 4400 	mla	r4, ip, r0, r4
 801b180:	9802      	ldr	r0, [sp, #8]
 801b182:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801b186:	fb00 4505 	mla	r5, r0, r5, r4
 801b18a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b18e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b192:	1208      	asrs	r0, r1, #8
 801b194:	fb08 5707 	mla	r7, r8, r7, r5
 801b198:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b19c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b1a0:	10cd      	asrs	r5, r1, #3
 801b1a2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b1a6:	ea43 0e0e 	orr.w	lr, r3, lr
 801b1aa:	00c9      	lsls	r1, r1, #3
 801b1ac:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b1b0:	4357      	muls	r7, r2
 801b1b2:	fa1f f38e 	uxth.w	r3, lr
 801b1b6:	b2c9      	uxtb	r1, r1
 801b1b8:	f107 0801 	add.w	r8, r7, #1
 801b1bc:	121c      	asrs	r4, r3, #8
 801b1be:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 801b1c2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b1c6:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801b1ca:	b2ff      	uxtb	r7, r7
 801b1cc:	fb10 f007 	smulbb	r0, r0, r7
 801b1d0:	fb11 f107 	smulbb	r1, r1, r7
 801b1d4:	fb04 0402 	mla	r4, r4, r2, r0
 801b1d8:	10d8      	asrs	r0, r3, #3
 801b1da:	fb15 f507 	smulbb	r5, r5, r7
 801b1de:	00db      	lsls	r3, r3, #3
 801b1e0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b1e4:	b2a4      	uxth	r4, r4
 801b1e6:	b2db      	uxtb	r3, r3
 801b1e8:	fb00 5002 	mla	r0, r0, r2, r5
 801b1ec:	fb03 1202 	mla	r2, r3, r2, r1
 801b1f0:	1c63      	adds	r3, r4, #1
 801b1f2:	b280      	uxth	r0, r0
 801b1f4:	b292      	uxth	r2, r2
 801b1f6:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801b1fa:	1c51      	adds	r1, r2, #1
 801b1fc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801b200:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b204:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b208:	4313      	orrs	r3, r2
 801b20a:	1c42      	adds	r2, r0, #1
 801b20c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b210:	9a03      	ldr	r2, [sp, #12]
 801b212:	0940      	lsrs	r0, r0, #5
 801b214:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b218:	4303      	orrs	r3, r0
 801b21a:	8013      	strh	r3, [r2, #0]
 801b21c:	b005      	add	sp, #20
 801b21e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b222:	280f      	cmp	r0, #15
 801b224:	f63f af33 	bhi.w	801b08e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801b228:	4677      	mov	r7, lr
 801b22a:	4675      	mov	r5, lr
 801b22c:	4672      	mov	r2, lr
 801b22e:	46f3      	mov	fp, lr
 801b230:	e753      	b.n	801b0da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 801b232:	bf00      	nop
 801b234:	080252eb 	.word	0x080252eb
 801b238:	080258a9 	.word	0x080258a9
 801b23c:	080253d4 	.word	0x080253d4

0801b240 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b244:	ed2d 8b08 	vpush	{d8-d11}
 801b248:	b097      	sub	sp, #92	; 0x5c
 801b24a:	eeb0 aa40 	vmov.f32	s20, s0
 801b24e:	eef0 9a60 	vmov.f32	s19, s1
 801b252:	9214      	str	r2, [sp, #80]	; 0x50
 801b254:	eeb0 9a41 	vmov.f32	s18, s2
 801b258:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801b25a:	eeb0 8a62 	vmov.f32	s16, s5
 801b25e:	9308      	str	r3, [sp, #32]
 801b260:	eef0 8a43 	vmov.f32	s17, s6
 801b264:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801b268:	eef0 ba44 	vmov.f32	s23, s8
 801b26c:	9015      	str	r0, [sp, #84]	; 0x54
 801b26e:	eeb0 ba64 	vmov.f32	s22, s9
 801b272:	9312      	str	r3, [sp, #72]	; 0x48
 801b274:	eef0 aa45 	vmov.f32	s21, s10
 801b278:	6850      	ldr	r0, [r2, #4]
 801b27a:	9111      	str	r1, [sp, #68]	; 0x44
 801b27c:	6812      	ldr	r2, [r2, #0]
 801b27e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801b282:	fb00 1303 	mla	r3, r0, r3, r1
 801b286:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b28a:	9309      	str	r3, [sp, #36]	; 0x24
 801b28c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b28e:	681b      	ldr	r3, [r3, #0]
 801b290:	930b      	str	r3, [sp, #44]	; 0x2c
 801b292:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b294:	685b      	ldr	r3, [r3, #4]
 801b296:	930c      	str	r3, [sp, #48]	; 0x30
 801b298:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801b29c:	930a      	str	r3, [sp, #40]	; 0x28
 801b29e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b2a0:	2b00      	cmp	r3, #0
 801b2a2:	dc03      	bgt.n	801b2ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b2a4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801b2a6:	2b00      	cmp	r3, #0
 801b2a8:	f340 83cd 	ble.w	801ba46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x806>
 801b2ac:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b2ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b2b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b2b6:	1e48      	subs	r0, r1, #1
 801b2b8:	1e55      	subs	r5, r2, #1
 801b2ba:	9b08      	ldr	r3, [sp, #32]
 801b2bc:	2b00      	cmp	r3, #0
 801b2be:	f340 81a5 	ble.w	801b60c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801b2c2:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801b2c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b2c6:	1436      	asrs	r6, r6, #16
 801b2c8:	ea4f 4323 	mov.w	r3, r3, asr #16
 801b2cc:	d406      	bmi.n	801b2dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b2ce:	4286      	cmp	r6, r0
 801b2d0:	da04      	bge.n	801b2dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b2d2:	2b00      	cmp	r3, #0
 801b2d4:	db02      	blt.n	801b2dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b2d6:	42ab      	cmp	r3, r5
 801b2d8:	f2c0 8199 	blt.w	801b60e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801b2dc:	3601      	adds	r6, #1
 801b2de:	f100 8186 	bmi.w	801b5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801b2e2:	42b1      	cmp	r1, r6
 801b2e4:	f2c0 8183 	blt.w	801b5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801b2e8:	3301      	adds	r3, #1
 801b2ea:	f100 8180 	bmi.w	801b5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801b2ee:	429a      	cmp	r2, r3
 801b2f0:	f2c0 817d 	blt.w	801b5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801b2f4:	9b08      	ldr	r3, [sp, #32]
 801b2f6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801b2fa:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801b2fc:	9313      	str	r3, [sp, #76]	; 0x4c
 801b2fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b300:	2b00      	cmp	r3, #0
 801b302:	f340 81a6 	ble.w	801b652 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 801b306:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b308:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 801b30a:	1418      	asrs	r0, r3, #16
 801b30c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b30e:	142d      	asrs	r5, r5, #16
 801b310:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801b314:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b316:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801b31a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b31c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801b320:	f100 81fa 	bmi.w	801b718 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801b324:	f102 3eff 	add.w	lr, r2, #4294967295
 801b328:	4575      	cmp	r5, lr
 801b32a:	f280 81f5 	bge.w	801b718 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801b32e:	2800      	cmp	r0, #0
 801b330:	f2c0 81f2 	blt.w	801b718 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801b334:	f103 3eff 	add.w	lr, r3, #4294967295
 801b338:	4570      	cmp	r0, lr
 801b33a:	f280 81ed 	bge.w	801b718 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801b33e:	b212      	sxth	r2, r2
 801b340:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b342:	fa1f fe81 	uxth.w	lr, r1
 801b346:	fb00 5002 	mla	r0, r0, r2, r5
 801b34a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801b34e:	eb03 0a00 	add.w	sl, r3, r0
 801b352:	f813 9000 	ldrb.w	r9, [r3, r0]
 801b356:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801b35a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b35e:	b29b      	uxth	r3, r3
 801b360:	f1bc 0f00 	cmp.w	ip, #0
 801b364:	f000 81bb 	beq.w	801b6de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801b368:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801b36c:	eb0a 0b02 	add.w	fp, sl, r2
 801b370:	fa1f fa8c 	uxth.w	sl, ip
 801b374:	940d      	str	r4, [sp, #52]	; 0x34
 801b376:	fb0a fe0e 	mul.w	lr, sl, lr
 801b37a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b37e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801b382:	eba5 050e 	sub.w	r5, r5, lr
 801b386:	940e      	str	r4, [sp, #56]	; 0x38
 801b388:	fa1f fa8a 	uxth.w	sl, sl
 801b38c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b38e:	b2ad      	uxth	r5, r5
 801b390:	eba3 030a 	sub.w	r3, r3, sl
 801b394:	fb08 f505 	mul.w	r5, r8, r5
 801b398:	b29b      	uxth	r3, r3
 801b39a:	fb09 5303 	mla	r3, r9, r3, r5
 801b39e:	fb0a 3304 	mla	r3, sl, r4, r3
 801b3a2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b3a4:	fb0e 3304 	mla	r3, lr, r4, r3
 801b3a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b3ac:	2b00      	cmp	r3, #0
 801b3ae:	f000 8111 	beq.w	801b5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801b3b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b3b4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b3b8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801b3bc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801b3c0:	f000 8192 	beq.w	801b6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801b3c4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801b3c8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b3cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b3d0:	fb0a fe0e 	mul.w	lr, sl, lr
 801b3d4:	fb09 f000 	mul.w	r0, r9, r0
 801b3d8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801b3dc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801b3e0:	f100 0b20 	add.w	fp, r0, #32
 801b3e4:	44ce      	add	lr, r9
 801b3e6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801b3ea:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b3ee:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b3f2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b3f6:	ea4e 0909 	orr.w	r9, lr, r9
 801b3fa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b3fe:	8868      	ldrh	r0, [r5, #2]
 801b400:	d019      	beq.n	801b436 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801b402:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801b406:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b40a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b40e:	fb0a fe0e 	mul.w	lr, sl, lr
 801b412:	fb08 f800 	mul.w	r8, r8, r0
 801b416:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801b41a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801b41e:	f108 0b20 	add.w	fp, r8, #32
 801b422:	4486      	add	lr, r0
 801b424:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801b428:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b42c:	0a00      	lsrs	r0, r0, #8
 801b42e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b432:	ea4e 0000 	orr.w	r0, lr, r0
 801b436:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801b43a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b43e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801b442:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b446:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801b44a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b44e:	ea4e 0909 	orr.w	r9, lr, r9
 801b452:	ea4a 0000 	orr.w	r0, sl, r0
 801b456:	f1bc 0f00 	cmp.w	ip, #0
 801b45a:	f000 8147 	beq.w	801b6ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801b45e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801b462:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b464:	3a01      	subs	r2, #1
 801b466:	2cff      	cmp	r4, #255	; 0xff
 801b468:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801b46c:	f102 0202 	add.w	r2, r2, #2
 801b470:	eb05 0e02 	add.w	lr, r5, r2
 801b474:	5aaa      	ldrh	r2, [r5, r2]
 801b476:	d018      	beq.n	801b4aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801b478:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801b47c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b480:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b484:	fb04 fa02 	mul.w	sl, r4, r2
 801b488:	fb08 f805 	mul.w	r8, r8, r5
 801b48c:	f10a 0520 	add.w	r5, sl, #32
 801b490:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801b494:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b498:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801b49c:	4442      	add	r2, r8
 801b49e:	0a2d      	lsrs	r5, r5, #8
 801b4a0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801b4a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b4a8:	432a      	orrs	r2, r5
 801b4aa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b4ac:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801b4b0:	2cff      	cmp	r4, #255	; 0xff
 801b4b2:	d01a      	beq.n	801b4ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2aa>
 801b4b4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801b4b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b4bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b4c0:	fb04 fa05 	mul.w	sl, r4, r5
 801b4c4:	fb08 f80e 	mul.w	r8, r8, lr
 801b4c8:	f10a 0e20 	add.w	lr, sl, #32
 801b4cc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801b4d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b4d4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801b4d8:	4445      	add	r5, r8
 801b4da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b4de:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801b4e2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801b4e6:	ea45 050e 	orr.w	r5, r5, lr
 801b4ea:	fb1c fe01 	smulbb	lr, ip, r1
 801b4ee:	f1cc 0810 	rsb	r8, ip, #16
 801b4f2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b4f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b4fa:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801b4fe:	eba8 0801 	sub.w	r8, r8, r1
 801b502:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801b506:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b50a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801b50e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801b512:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801b516:	ea4a 0202 	orr.w	r2, sl, r2
 801b51a:	4341      	muls	r1, r0
 801b51c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801b520:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b524:	fb09 1108 	mla	r1, r9, r8, r1
 801b528:	ea4b 0505 	orr.w	r5, fp, r5
 801b52c:	fb0c 1102 	mla	r1, ip, r2, r1
 801b530:	fb0e 1e05 	mla	lr, lr, r5, r1
 801b534:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801b538:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b53c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b540:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b544:	ea42 0e0e 	orr.w	lr, r2, lr
 801b548:	fa1f f28e 	uxth.w	r2, lr
 801b54c:	2bff      	cmp	r3, #255	; 0xff
 801b54e:	d103      	bne.n	801b558 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b550:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b552:	29ff      	cmp	r1, #255	; 0xff
 801b554:	f000 80de 	beq.w	801b714 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801b558:	990a      	ldr	r1, [sp, #40]	; 0x28
 801b55a:	8838      	ldrh	r0, [r7, #0]
 801b55c:	434b      	muls	r3, r1
 801b55e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b560:	1205      	asrs	r5, r0, #8
 801b562:	f103 0c01 	add.w	ip, r3, #1
 801b566:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b56a:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801b56e:	ea6f 2c23 	mvn.w	ip, r3, asr #8
 801b572:	1213      	asrs	r3, r2, #8
 801b574:	fa5f fc8c 	uxtb.w	ip, ip
 801b578:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801b57c:	fb15 f50c 	smulbb	r5, r5, ip
 801b580:	fb03 5301 	mla	r3, r3, r1, r5
 801b584:	10d1      	asrs	r1, r2, #3
 801b586:	00d2      	lsls	r2, r2, #3
 801b588:	b29d      	uxth	r5, r3
 801b58a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b58e:	10c3      	asrs	r3, r0, #3
 801b590:	00c0      	lsls	r0, r0, #3
 801b592:	b2d2      	uxtb	r2, r2
 801b594:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b598:	b2c0      	uxtb	r0, r0
 801b59a:	fb13 f30c 	smulbb	r3, r3, ip
 801b59e:	fb10 f00c 	smulbb	r0, r0, ip
 801b5a2:	fb01 3104 	mla	r1, r1, r4, r3
 801b5a6:	1c6b      	adds	r3, r5, #1
 801b5a8:	fb02 0204 	mla	r2, r2, r4, r0
 801b5ac:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801b5b0:	b292      	uxth	r2, r2
 801b5b2:	b289      	uxth	r1, r1
 801b5b4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801b5b8:	1c50      	adds	r0, r2, #1
 801b5ba:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801b5be:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b5c2:	4313      	orrs	r3, r2
 801b5c4:	1c4a      	adds	r2, r1, #1
 801b5c6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b5ca:	0949      	lsrs	r1, r1, #5
 801b5cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b5d0:	430b      	orrs	r3, r1
 801b5d2:	803b      	strh	r3, [r7, #0]
 801b5d4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b5d6:	3702      	adds	r7, #2
 801b5d8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801b5da:	4413      	add	r3, r2
 801b5dc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801b5de:	9329      	str	r3, [sp, #164]	; 0xa4
 801b5e0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b5e2:	441a      	add	r2, r3
 801b5e4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b5e6:	3b01      	subs	r3, #1
 801b5e8:	922a      	str	r2, [sp, #168]	; 0xa8
 801b5ea:	9313      	str	r3, [sp, #76]	; 0x4c
 801b5ec:	e687      	b.n	801b2fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801b5ee:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b5f0:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 801b5f2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 801b5f4:	4433      	add	r3, r6
 801b5f6:	9329      	str	r3, [sp, #164]	; 0xa4
 801b5f8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b5fa:	441c      	add	r4, r3
 801b5fc:	9b08      	ldr	r3, [sp, #32]
 801b5fe:	3b01      	subs	r3, #1
 801b600:	942a      	str	r4, [sp, #168]	; 0xa8
 801b602:	9308      	str	r3, [sp, #32]
 801b604:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b606:	3302      	adds	r3, #2
 801b608:	9309      	str	r3, [sp, #36]	; 0x24
 801b60a:	e656      	b.n	801b2ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b60c:	d028      	beq.n	801b660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801b60e:	9b08      	ldr	r3, [sp, #32]
 801b610:	982b      	ldr	r0, [sp, #172]	; 0xac
 801b612:	3b01      	subs	r3, #1
 801b614:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 801b616:	fb00 5003 	mla	r0, r0, r3, r5
 801b61a:	1400      	asrs	r0, r0, #16
 801b61c:	f53f ae6a 	bmi.w	801b2f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b620:	3901      	subs	r1, #1
 801b622:	4288      	cmp	r0, r1
 801b624:	f6bf ae66 	bge.w	801b2f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b628:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801b62a:	982a      	ldr	r0, [sp, #168]	; 0xa8
 801b62c:	fb01 0303 	mla	r3, r1, r3, r0
 801b630:	141b      	asrs	r3, r3, #16
 801b632:	f53f ae5f 	bmi.w	801b2f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b636:	3a01      	subs	r2, #1
 801b638:	4293      	cmp	r3, r2
 801b63a:	f6bf ae5b 	bge.w	801b2f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b63e:	9b08      	ldr	r3, [sp, #32]
 801b640:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801b644:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801b648:	9313      	str	r3, [sp, #76]	; 0x4c
 801b64a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b64c:	2b00      	cmp	r3, #0
 801b64e:	f300 8082 	bgt.w	801b756 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x516>
 801b652:	9b08      	ldr	r3, [sp, #32]
 801b654:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b658:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b65a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b65e:	9309      	str	r3, [sp, #36]	; 0x24
 801b660:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b662:	2b00      	cmp	r3, #0
 801b664:	f340 81ef 	ble.w	801ba46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x806>
 801b668:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b66c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b66e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b672:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b676:	eef0 6a48 	vmov.f32	s13, s16
 801b67a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b67e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b682:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b686:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801b68a:	eef0 6a68 	vmov.f32	s13, s17
 801b68e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b692:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 801b696:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b69a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b69e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b6a2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b6a6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b6aa:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b6ae:	ee18 2a10 	vmov	r2, s16
 801b6b2:	eeb0 8a47 	vmov.f32	s16, s14
 801b6b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b6ba:	ee18 2a90 	vmov	r2, s17
 801b6be:	932b      	str	r3, [sp, #172]	; 0xac
 801b6c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b6c2:	eef0 8a67 	vmov.f32	s17, s15
 801b6c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b6ca:	932c      	str	r3, [sp, #176]	; 0xb0
 801b6cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b6ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b6d0:	3b01      	subs	r3, #1
 801b6d2:	9311      	str	r3, [sp, #68]	; 0x44
 801b6d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b6d6:	bf08      	it	eq
 801b6d8:	4613      	moveq	r3, r2
 801b6da:	9308      	str	r3, [sp, #32]
 801b6dc:	e5df      	b.n	801b29e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b6de:	fb08 f505 	mul.w	r5, r8, r5
 801b6e2:	fb09 5303 	mla	r3, r9, r3, r5
 801b6e6:	e65f      	b.n	801b3a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 801b6e8:	4681      	mov	r9, r0
 801b6ea:	e686      	b.n	801b3fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801b6ec:	f1c1 0210 	rsb	r2, r1, #16
 801b6f0:	4341      	muls	r1, r0
 801b6f2:	fb09 1902 	mla	r9, r9, r2, r1
 801b6f6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b6fa:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801b6fe:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b702:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b706:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b70a:	ea42 0909 	orr.w	r9, r2, r9
 801b70e:	fa1f f289 	uxth.w	r2, r9
 801b712:	e71b      	b.n	801b54c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b714:	803a      	strh	r2, [r7, #0]
 801b716:	e75d      	b.n	801b5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801b718:	f115 0e01 	adds.w	lr, r5, #1
 801b71c:	f53f af5a 	bmi.w	801b5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801b720:	4572      	cmp	r2, lr
 801b722:	f6ff af57 	blt.w	801b5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801b726:	f110 0e01 	adds.w	lr, r0, #1
 801b72a:	f53f af53 	bmi.w	801b5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801b72e:	4573      	cmp	r3, lr
 801b730:	f6ff af50 	blt.w	801b5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801b734:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b736:	b21b      	sxth	r3, r3
 801b738:	b212      	sxth	r2, r2
 801b73a:	9502      	str	r5, [sp, #8]
 801b73c:	9301      	str	r3, [sp, #4]
 801b73e:	9200      	str	r2, [sp, #0]
 801b740:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801b744:	e9cd c405 	strd	ip, r4, [sp, #20]
 801b748:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801b74c:	4639      	mov	r1, r7
 801b74e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b750:	f7ff fbd0 	bl	801aef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801b754:	e73e      	b.n	801b5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801b756:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b758:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b75c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b75e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801b762:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b764:	fa1f fc82 	uxth.w	ip, r2
 801b768:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b76c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b76e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801b772:	141f      	asrs	r7, r3, #16
 801b774:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b776:	141b      	asrs	r3, r3, #16
 801b778:	fb01 3707 	mla	r7, r1, r7, r3
 801b77c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b77e:	eb03 0a07 	add.w	sl, r3, r7
 801b782:	f813 9007 	ldrb.w	r9, [r3, r7]
 801b786:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801b78a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b78e:	b29b      	uxth	r3, r3
 801b790:	2d00      	cmp	r5, #0
 801b792:	f000 813d 	beq.w	801ba10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d0>
 801b796:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801b79a:	eb0a 0b01 	add.w	fp, sl, r1
 801b79e:	fa1f fa85 	uxth.w	sl, r5
 801b7a2:	940f      	str	r4, [sp, #60]	; 0x3c
 801b7a4:	fb0a fc0c 	mul.w	ip, sl, ip
 801b7a8:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b7ac:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801b7b0:	eba0 000c 	sub.w	r0, r0, ip
 801b7b4:	9410      	str	r4, [sp, #64]	; 0x40
 801b7b6:	fa1f fa8a 	uxth.w	sl, sl
 801b7ba:	b280      	uxth	r0, r0
 801b7bc:	eba3 030a 	sub.w	r3, r3, sl
 801b7c0:	fb08 f000 	mul.w	r0, r8, r0
 801b7c4:	b29b      	uxth	r3, r3
 801b7c6:	fb09 0303 	mla	r3, r9, r3, r0
 801b7ca:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801b7cc:	fb0a 3300 	mla	r3, sl, r0, r3
 801b7d0:	fb0c 3304 	mla	r3, ip, r4, r3
 801b7d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b7d8:	2b00      	cmp	r3, #0
 801b7da:	f000 810b 	beq.w	801b9f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b4>
 801b7de:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801b7e0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b7e4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b7e6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801b7ea:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801b7ee:	f000 8114 	beq.w	801ba1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 801b7f2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801b7f6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b7fa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b7fe:	fb0a fc0c 	mul.w	ip, sl, ip
 801b802:	fb09 f707 	mul.w	r7, r9, r7
 801b806:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801b80a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801b80e:	f107 0b20 	add.w	fp, r7, #32
 801b812:	44cc      	add	ip, r9
 801b814:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801b818:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b81c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b820:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b824:	ea4c 0909 	orr.w	r9, ip, r9
 801b828:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b82c:	8847      	ldrh	r7, [r0, #2]
 801b82e:	d019      	beq.n	801b864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x624>
 801b830:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801b834:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b838:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b83c:	fb0a fc0c 	mul.w	ip, sl, ip
 801b840:	fb08 f807 	mul.w	r8, r8, r7
 801b844:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801b848:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801b84c:	f108 0b20 	add.w	fp, r8, #32
 801b850:	44bc      	add	ip, r7
 801b852:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801b856:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b85a:	0a3f      	lsrs	r7, r7, #8
 801b85c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b860:	ea4c 0707 	orr.w	r7, ip, r7
 801b864:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801b868:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b86c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801b870:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801b874:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801b878:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b87c:	ea4c 0909 	orr.w	r9, ip, r9
 801b880:	ea4a 0707 	orr.w	r7, sl, r7
 801b884:	2d00      	cmp	r5, #0
 801b886:	f000 80ca 	beq.w	801ba1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801b88a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801b88e:	3901      	subs	r1, #1
 801b890:	0049      	lsls	r1, r1, #1
 801b892:	3102      	adds	r1, #2
 801b894:	eb00 0c01 	add.w	ip, r0, r1
 801b898:	5a41      	ldrh	r1, [r0, r1]
 801b89a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801b89c:	28ff      	cmp	r0, #255	; 0xff
 801b89e:	d019      	beq.n	801b8d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x694>
 801b8a0:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801b8a4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b8a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b8aa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b8ae:	fb04 fa01 	mul.w	sl, r4, r1
 801b8b2:	fb08 f800 	mul.w	r8, r8, r0
 801b8b6:	f10a 0020 	add.w	r0, sl, #32
 801b8ba:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801b8be:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b8c2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801b8c6:	4441      	add	r1, r8
 801b8c8:	0a00      	lsrs	r0, r0, #8
 801b8ca:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801b8ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b8d2:	4301      	orrs	r1, r0
 801b8d4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b8d6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801b8da:	2cff      	cmp	r4, #255	; 0xff
 801b8dc:	d01a      	beq.n	801b914 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d4>
 801b8de:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801b8e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b8e6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b8ea:	fb04 fa00 	mul.w	sl, r4, r0
 801b8ee:	fb08 f80c 	mul.w	r8, r8, ip
 801b8f2:	f10a 0c20 	add.w	ip, sl, #32
 801b8f6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801b8fa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b8fe:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801b902:	4440      	add	r0, r8
 801b904:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b908:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801b90c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b910:	ea40 000c 	orr.w	r0, r0, ip
 801b914:	fb15 fc02 	smulbb	ip, r5, r2
 801b918:	f1c5 0810 	rsb	r8, r5, #16
 801b91c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801b920:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801b924:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801b928:	eba8 0802 	sub.w	r8, r8, r2
 801b92c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801b930:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b934:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801b938:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b93c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801b940:	ea4a 0101 	orr.w	r1, sl, r1
 801b944:	437a      	muls	r2, r7
 801b946:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801b94a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b94e:	fb09 2208 	mla	r2, r9, r8, r2
 801b952:	ea4b 0000 	orr.w	r0, fp, r0
 801b956:	fb05 2201 	mla	r2, r5, r1, r2
 801b95a:	fb0c 2200 	mla	r2, ip, r0, r2
 801b95e:	0d57      	lsrs	r7, r2, #21
 801b960:	0952      	lsrs	r2, r2, #5
 801b962:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b966:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b96a:	433a      	orrs	r2, r7
 801b96c:	2bff      	cmp	r3, #255	; 0xff
 801b96e:	b292      	uxth	r2, r2
 801b970:	d102      	bne.n	801b978 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 801b972:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b974:	29ff      	cmp	r1, #255	; 0xff
 801b976:	d063      	beq.n	801ba40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x800>
 801b978:	980a      	ldr	r0, [sp, #40]	; 0x28
 801b97a:	1215      	asrs	r5, r2, #8
 801b97c:	f8be 1000 	ldrh.w	r1, [lr]
 801b980:	4343      	muls	r3, r0
 801b982:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b984:	10cf      	asrs	r7, r1, #3
 801b986:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b98a:	1c58      	adds	r0, r3, #1
 801b98c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b990:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801b994:	1208      	asrs	r0, r1, #8
 801b996:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801b99a:	00c9      	lsls	r1, r1, #3
 801b99c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b9a0:	b2db      	uxtb	r3, r3
 801b9a2:	b2c9      	uxtb	r1, r1
 801b9a4:	fb10 f003 	smulbb	r0, r0, r3
 801b9a8:	fb11 f103 	smulbb	r1, r1, r3
 801b9ac:	fb05 0504 	mla	r5, r5, r4, r0
 801b9b0:	10d0      	asrs	r0, r2, #3
 801b9b2:	fb17 f703 	smulbb	r7, r7, r3
 801b9b6:	00d2      	lsls	r2, r2, #3
 801b9b8:	b2ad      	uxth	r5, r5
 801b9ba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b9be:	b2d2      	uxtb	r2, r2
 801b9c0:	fb00 7004 	mla	r0, r0, r4, r7
 801b9c4:	1c6b      	adds	r3, r5, #1
 801b9c6:	fb02 1204 	mla	r2, r2, r4, r1
 801b9ca:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b9ce:	b292      	uxth	r2, r2
 801b9d0:	b280      	uxth	r0, r0
 801b9d2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b9d6:	1c57      	adds	r7, r2, #1
 801b9d8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801b9dc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b9e0:	433d      	orrs	r5, r7
 801b9e2:	1c47      	adds	r7, r0, #1
 801b9e4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801b9e8:	097f      	lsrs	r7, r7, #5
 801b9ea:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b9ee:	433d      	orrs	r5, r7
 801b9f0:	f8ae 5000 	strh.w	r5, [lr]
 801b9f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b9f6:	f10e 0e02 	add.w	lr, lr, #2
 801b9fa:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801b9fc:	4413      	add	r3, r2
 801b9fe:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ba00:	9329      	str	r3, [sp, #164]	; 0xa4
 801ba02:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ba04:	441a      	add	r2, r3
 801ba06:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ba08:	3b01      	subs	r3, #1
 801ba0a:	922a      	str	r2, [sp, #168]	; 0xa8
 801ba0c:	9313      	str	r3, [sp, #76]	; 0x4c
 801ba0e:	e61c      	b.n	801b64a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 801ba10:	fb08 f000 	mul.w	r0, r8, r0
 801ba14:	fb09 0303 	mla	r3, r9, r3, r0
 801ba18:	e6dc      	b.n	801b7d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x594>
 801ba1a:	46b9      	mov	r9, r7
 801ba1c:	e704      	b.n	801b828 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e8>
 801ba1e:	f1c2 0110 	rsb	r1, r2, #16
 801ba22:	437a      	muls	r2, r7
 801ba24:	fb09 2901 	mla	r9, r9, r1, r2
 801ba28:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ba2c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801ba30:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801ba34:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ba38:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ba3c:	4302      	orrs	r2, r0
 801ba3e:	e795      	b.n	801b96c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>
 801ba40:	f8ae 2000 	strh.w	r2, [lr]
 801ba44:	e7d6      	b.n	801b9f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b4>
 801ba46:	b017      	add	sp, #92	; 0x5c
 801ba48:	ecbd 8b08 	vpop	{d8-d11}
 801ba4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ba50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ba50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba54:	b085      	sub	sp, #20
 801ba56:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801ba5a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801ba5e:	9103      	str	r1, [sp, #12]
 801ba60:	2d00      	cmp	r5, #0
 801ba62:	fb05 7106 	mla	r1, r5, r6, r7
 801ba66:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801ba6a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801ba6e:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 801ba72:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801ba76:	eb02 0901 	add.w	r9, r2, r1
 801ba7a:	9401      	str	r4, [sp, #4]
 801ba7c:	f2c0 80c0 	blt.w	801bc00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801ba80:	45a8      	cmp	r8, r5
 801ba82:	f340 80bd 	ble.w	801bc00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801ba86:	2f00      	cmp	r7, #0
 801ba88:	f2c0 80b6 	blt.w	801bbf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 801ba8c:	42be      	cmp	r6, r7
 801ba8e:	f340 80b3 	ble.w	801bbf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 801ba92:	f812 c001 	ldrb.w	ip, [r2, r1]
 801ba96:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 801ba9a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ba9e:	d019      	beq.n	801bad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 801baa0:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 801baa4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801baa8:	435a      	muls	r2, r3
 801baaa:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801baae:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801bab2:	fb0c f403 	mul.w	r4, ip, r3
 801bab6:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801baba:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801babe:	441a      	add	r2, r3
 801bac0:	f104 0320 	add.w	r3, r4, #32
 801bac4:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801bac8:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801bacc:	0a1b      	lsrs	r3, r3, #8
 801bace:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bad2:	4319      	orrs	r1, r3
 801bad4:	b289      	uxth	r1, r1
 801bad6:	1c7b      	adds	r3, r7, #1
 801bad8:	f100 8097 	bmi.w	801bc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801badc:	429e      	cmp	r6, r3
 801bade:	f340 8094 	ble.w	801bc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801bae2:	2800      	cmp	r0, #0
 801bae4:	f000 8094 	beq.w	801bc10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 801bae8:	f899 4001 	ldrb.w	r4, [r9, #1]
 801baec:	9b01      	ldr	r3, [sp, #4]
 801baee:	2cff      	cmp	r4, #255	; 0xff
 801baf0:	885b      	ldrh	r3, [r3, #2]
 801baf2:	d01b      	beq.n	801bb2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 801baf4:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801baf8:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801bafc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bb00:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801bb04:	fb0a f202 	mul.w	r2, sl, r2
 801bb08:	fb04 fa03 	mul.w	sl, r4, r3
 801bb0c:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801bb10:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801bb14:	441a      	add	r2, r3
 801bb16:	f10a 0320 	add.w	r3, sl, #32
 801bb1a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801bb1e:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801bb22:	0a1b      	lsrs	r3, r3, #8
 801bb24:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bb28:	ea4b 0303 	orr.w	r3, fp, r3
 801bb2c:	b29b      	uxth	r3, r3
 801bb2e:	3501      	adds	r5, #1
 801bb30:	d474      	bmi.n	801bc1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801bb32:	45a8      	cmp	r8, r5
 801bb34:	dd72      	ble.n	801bc1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801bb36:	f1be 0f00 	cmp.w	lr, #0
 801bb3a:	f000 8111 	beq.w	801bd60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x310>
 801bb3e:	2f00      	cmp	r7, #0
 801bb40:	db69      	blt.n	801bc16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801bb42:	42be      	cmp	r6, r7
 801bb44:	dd67      	ble.n	801bc16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801bb46:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bb4a:	9a01      	ldr	r2, [sp, #4]
 801bb4c:	2dff      	cmp	r5, #255	; 0xff
 801bb4e:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801bb52:	d01c      	beq.n	801bb8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 801bb54:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801bb58:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801bb5c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801bb60:	fb08 f802 	mul.w	r8, r8, r2
 801bb64:	fb05 fa0b 	mul.w	sl, r5, fp
 801bb68:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801bb6c:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801bb70:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bb74:	4490      	add	r8, r2
 801bb76:	f10a 0220 	add.w	r2, sl, #32
 801bb7a:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801bb7e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801bb82:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb86:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bb8a:	ea4b 0b0a 	orr.w	fp, fp, sl
 801bb8e:	fa1f fb8b 	uxth.w	fp, fp
 801bb92:	3701      	adds	r7, #1
 801bb94:	d447      	bmi.n	801bc26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801bb96:	42be      	cmp	r6, r7
 801bb98:	dd45      	ble.n	801bc26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801bb9a:	2800      	cmp	r0, #0
 801bb9c:	d046      	beq.n	801bc2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 801bb9e:	3601      	adds	r6, #1
 801bba0:	9a01      	ldr	r2, [sp, #4]
 801bba2:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bba6:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801bbaa:	2fff      	cmp	r7, #255	; 0xff
 801bbac:	d01a      	beq.n	801bbe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 801bbae:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801bbb2:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801bbb6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bbba:	fb08 f806 	mul.w	r8, r8, r6
 801bbbe:	fb07 f902 	mul.w	r9, r7, r2
 801bbc2:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801bbc6:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801bbca:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bbce:	44b0      	add	r8, r6
 801bbd0:	f109 0620 	add.w	r6, r9, #32
 801bbd4:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801bbd8:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bbdc:	0a36      	lsrs	r6, r6, #8
 801bbde:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bbe2:	4332      	orrs	r2, r6
 801bbe4:	b292      	uxth	r2, r2
 801bbe6:	280f      	cmp	r0, #15
 801bbe8:	d922      	bls.n	801bc30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801bbea:	4b61      	ldr	r3, [pc, #388]	; (801bd70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 801bbec:	f240 210d 	movw	r1, #525	; 0x20d
 801bbf0:	4a60      	ldr	r2, [pc, #384]	; (801bd74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 801bbf2:	4861      	ldr	r0, [pc, #388]	; (801bd78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 801bbf4:	f005 f8bc 	bl	8020d70 <__assert_func>
 801bbf8:	f04f 0c00 	mov.w	ip, #0
 801bbfc:	4661      	mov	r1, ip
 801bbfe:	e76a      	b.n	801bad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801bc00:	2400      	movs	r4, #0
 801bc02:	46a4      	mov	ip, r4
 801bc04:	4623      	mov	r3, r4
 801bc06:	4621      	mov	r1, r4
 801bc08:	e791      	b.n	801bb2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801bc0a:	2400      	movs	r4, #0
 801bc0c:	4623      	mov	r3, r4
 801bc0e:	e78e      	b.n	801bb2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801bc10:	4604      	mov	r4, r0
 801bc12:	4603      	mov	r3, r0
 801bc14:	e78b      	b.n	801bb2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801bc16:	2500      	movs	r5, #0
 801bc18:	46ab      	mov	fp, r5
 801bc1a:	e7ba      	b.n	801bb92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 801bc1c:	2700      	movs	r7, #0
 801bc1e:	463d      	mov	r5, r7
 801bc20:	463a      	mov	r2, r7
 801bc22:	46bb      	mov	fp, r7
 801bc24:	e7df      	b.n	801bbe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801bc26:	2700      	movs	r7, #0
 801bc28:	463a      	mov	r2, r7
 801bc2a:	e7dc      	b.n	801bbe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801bc2c:	4607      	mov	r7, r0
 801bc2e:	4602      	mov	r2, r0
 801bc30:	f1be 0f0f 	cmp.w	lr, #15
 801bc34:	d8d9      	bhi.n	801bbea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801bc36:	b286      	uxth	r6, r0
 801bc38:	fa1f f98e 	uxth.w	r9, lr
 801bc3c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801bc40:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801bc44:	fb06 f809 	mul.w	r8, r6, r9
 801bc48:	0136      	lsls	r6, r6, #4
 801bc4a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bc4e:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bc52:	9601      	str	r6, [sp, #4]
 801bc54:	ea4a 0101 	orr.w	r1, sl, r1
 801bc58:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 801bc5c:	fa1f f689 	uxth.w	r6, r9
 801bc60:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801bc64:	fb10 f90e 	smulbb	r9, r0, lr
 801bc68:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bc6c:	9602      	str	r6, [sp, #8]
 801bc6e:	460e      	mov	r6, r1
 801bc70:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801bc74:	f1ce 0110 	rsb	r1, lr, #16
 801bc78:	ea4a 0303 	orr.w	r3, sl, r3
 801bc7c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bc80:	1a09      	subs	r1, r1, r0
 801bc82:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801bc86:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bc8a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bc8e:	4343      	muls	r3, r0
 801bc90:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 801bc94:	ea4a 0202 	orr.w	r2, sl, r2
 801bc98:	9802      	ldr	r0, [sp, #8]
 801bc9a:	fb01 3106 	mla	r1, r1, r6, r3
 801bc9e:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801bca2:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801bca6:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801bcaa:	fb09 1302 	mla	r3, r9, r2, r1
 801bcae:	9901      	ldr	r1, [sp, #4]
 801bcb0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bcb4:	9a03      	ldr	r2, [sp, #12]
 801bcb6:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801bcba:	ea4a 0b0b 	orr.w	fp, sl, fp
 801bcbe:	8812      	ldrh	r2, [r2, #0]
 801bcc0:	1a09      	subs	r1, r1, r0
 801bcc2:	9801      	ldr	r0, [sp, #4]
 801bcc4:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801bcc8:	eba0 0608 	sub.w	r6, r0, r8
 801bccc:	b289      	uxth	r1, r1
 801bcce:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801bcd2:	b2b6      	uxth	r6, r6
 801bcd4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bcd8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bcdc:	4374      	muls	r4, r6
 801bcde:	10d0      	asrs	r0, r2, #3
 801bce0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bce4:	fb0c 4401 	mla	r4, ip, r1, r4
 801bce8:	9902      	ldr	r1, [sp, #8]
 801bcea:	ea43 0e0e 	orr.w	lr, r3, lr
 801bcee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bcf2:	fb01 4505 	mla	r5, r1, r5, r4
 801bcf6:	1211      	asrs	r1, r2, #8
 801bcf8:	00d2      	lsls	r2, r2, #3
 801bcfa:	fb08 5707 	mla	r7, r8, r7, r5
 801bcfe:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801bd02:	b2d2      	uxtb	r2, r2
 801bd04:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801bd08:	fa1f f38e 	uxth.w	r3, lr
 801bd0c:	b2ff      	uxtb	r7, r7
 801bd0e:	4379      	muls	r1, r7
 801bd10:	4378      	muls	r0, r7
 801bd12:	4357      	muls	r7, r2
 801bd14:	1c4a      	adds	r2, r1, #1
 801bd16:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801bd1a:	1219      	asrs	r1, r3, #8
 801bd1c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801bd20:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801bd24:	4a15      	ldr	r2, [pc, #84]	; (801bd7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x32c>)
 801bd26:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801bd2a:	1c42      	adds	r2, r0, #1
 801bd2c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bd30:	10da      	asrs	r2, r3, #3
 801bd32:	00db      	lsls	r3, r3, #3
 801bd34:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801bd38:	b2db      	uxtb	r3, r3
 801bd3a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bd3e:	00d2      	lsls	r2, r2, #3
 801bd40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bd44:	430a      	orrs	r2, r1
 801bd46:	1c79      	adds	r1, r7, #1
 801bd48:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801bd4c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801bd50:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801bd54:	4313      	orrs	r3, r2
 801bd56:	9a03      	ldr	r2, [sp, #12]
 801bd58:	8013      	strh	r3, [r2, #0]
 801bd5a:	b005      	add	sp, #20
 801bd5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd60:	280f      	cmp	r0, #15
 801bd62:	f63f af42 	bhi.w	801bbea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801bd66:	4677      	mov	r7, lr
 801bd68:	4675      	mov	r5, lr
 801bd6a:	4672      	mov	r2, lr
 801bd6c:	46f3      	mov	fp, lr
 801bd6e:	e762      	b.n	801bc36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 801bd70:	080252eb 	.word	0x080252eb
 801bd74:	080258a9 	.word	0x080258a9
 801bd78:	080253d4 	.word	0x080253d4
 801bd7c:	fffff800 	.word	0xfffff800

0801bd80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bd80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd84:	ed2d 8b08 	vpush	{d8-d11}
 801bd88:	b093      	sub	sp, #76	; 0x4c
 801bd8a:	eeb0 aa40 	vmov.f32	s20, s0
 801bd8e:	eef0 9a60 	vmov.f32	s19, s1
 801bd92:	9210      	str	r2, [sp, #64]	; 0x40
 801bd94:	eeb0 9a41 	vmov.f32	s18, s2
 801bd98:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801bd9a:	eeb0 8a62 	vmov.f32	s16, s5
 801bd9e:	9011      	str	r0, [sp, #68]	; 0x44
 801bda0:	eef0 8a43 	vmov.f32	s17, s6
 801bda4:	6850      	ldr	r0, [r2, #4]
 801bda6:	eef0 ba44 	vmov.f32	s23, s8
 801bdaa:	910e      	str	r1, [sp, #56]	; 0x38
 801bdac:	eeb0 ba64 	vmov.f32	s22, s9
 801bdb0:	9306      	str	r3, [sp, #24]
 801bdb2:	eef0 aa45 	vmov.f32	s21, s10
 801bdb6:	6812      	ldr	r2, [r2, #0]
 801bdb8:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801bdbc:	fb00 1303 	mla	r3, r0, r3, r1
 801bdc0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bdc4:	9307      	str	r3, [sp, #28]
 801bdc6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bdc8:	681b      	ldr	r3, [r3, #0]
 801bdca:	9308      	str	r3, [sp, #32]
 801bdcc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bdce:	685b      	ldr	r3, [r3, #4]
 801bdd0:	9309      	str	r3, [sp, #36]	; 0x24
 801bdd2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bdd4:	2b00      	cmp	r3, #0
 801bdd6:	dc03      	bgt.n	801bde0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bdd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bdda:	2b00      	cmp	r3, #0
 801bddc:	f340 83b8 	ble.w	801c550 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d0>
 801bde0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bde2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bde6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bdea:	1e48      	subs	r0, r1, #1
 801bdec:	1e55      	subs	r5, r2, #1
 801bdee:	9b06      	ldr	r3, [sp, #24]
 801bdf0:	2b00      	cmp	r3, #0
 801bdf2:	f340 819b 	ble.w	801c12c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801bdf6:	9e25      	ldr	r6, [sp, #148]	; 0x94
 801bdf8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bdfa:	1436      	asrs	r6, r6, #16
 801bdfc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801be00:	d406      	bmi.n	801be10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801be02:	4286      	cmp	r6, r0
 801be04:	da04      	bge.n	801be10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801be06:	2b00      	cmp	r3, #0
 801be08:	db02      	blt.n	801be10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801be0a:	42ab      	cmp	r3, r5
 801be0c:	f2c0 818f 	blt.w	801c12e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801be10:	3601      	adds	r6, #1
 801be12:	f100 817c 	bmi.w	801c10e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 801be16:	42b1      	cmp	r1, r6
 801be18:	f2c0 8179 	blt.w	801c10e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 801be1c:	3301      	adds	r3, #1
 801be1e:	f100 8176 	bmi.w	801c10e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 801be22:	429a      	cmp	r2, r3
 801be24:	f2c0 8173 	blt.w	801c10e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 801be28:	9b06      	ldr	r3, [sp, #24]
 801be2a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801be2e:	9f07      	ldr	r7, [sp, #28]
 801be30:	930f      	str	r3, [sp, #60]	; 0x3c
 801be32:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801be34:	2b00      	cmp	r3, #0
 801be36:	f340 819c 	ble.w	801c172 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801be3a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801be3c:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801be3e:	1418      	asrs	r0, r3, #16
 801be40:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801be42:	142d      	asrs	r5, r5, #16
 801be44:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801be48:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801be4a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801be4e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801be50:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801be54:	f100 81f0 	bmi.w	801c238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 801be58:	f102 3eff 	add.w	lr, r2, #4294967295
 801be5c:	4575      	cmp	r5, lr
 801be5e:	f280 81eb 	bge.w	801c238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 801be62:	2800      	cmp	r0, #0
 801be64:	f2c0 81e8 	blt.w	801c238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 801be68:	f103 3eff 	add.w	lr, r3, #4294967295
 801be6c:	4570      	cmp	r0, lr
 801be6e:	f280 81e3 	bge.w	801c238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 801be72:	b212      	sxth	r2, r2
 801be74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be76:	fa1f fe81 	uxth.w	lr, r1
 801be7a:	fb00 5002 	mla	r0, r0, r2, r5
 801be7e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801be82:	eb03 0a00 	add.w	sl, r3, r0
 801be86:	f813 9000 	ldrb.w	r9, [r3, r0]
 801be8a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801be8e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801be92:	b29b      	uxth	r3, r3
 801be94:	f1bc 0f00 	cmp.w	ip, #0
 801be98:	f000 81b1 	beq.w	801c1fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47e>
 801be9c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801bea0:	eb0a 0b02 	add.w	fp, sl, r2
 801bea4:	fa1f fa8c 	uxth.w	sl, ip
 801bea8:	940a      	str	r4, [sp, #40]	; 0x28
 801beaa:	fb0a fe0e 	mul.w	lr, sl, lr
 801beae:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801beb2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801beb6:	eba5 050e 	sub.w	r5, r5, lr
 801beba:	940b      	str	r4, [sp, #44]	; 0x2c
 801bebc:	fa1f fa8a 	uxth.w	sl, sl
 801bec0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bec2:	b2ad      	uxth	r5, r5
 801bec4:	eba3 030a 	sub.w	r3, r3, sl
 801bec8:	fb08 f505 	mul.w	r5, r8, r5
 801becc:	b29b      	uxth	r3, r3
 801bece:	fb09 5303 	mla	r3, r9, r3, r5
 801bed2:	fb0a 3304 	mla	r3, sl, r4, r3
 801bed6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bed8:	fb0e 3304 	mla	r3, lr, r4, r3
 801bedc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bee0:	2b00      	cmp	r3, #0
 801bee2:	f000 8107 	beq.w	801c0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801bee6:	9c08      	ldr	r4, [sp, #32]
 801bee8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801beec:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801bef0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801bef4:	f000 8188 	beq.w	801c208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801bef8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801befc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801bf00:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bf04:	fb0a fe0e 	mul.w	lr, sl, lr
 801bf08:	fb09 f000 	mul.w	r0, r9, r0
 801bf0c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801bf10:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801bf14:	f100 0b20 	add.w	fp, r0, #32
 801bf18:	44ce      	add	lr, r9
 801bf1a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801bf1e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801bf22:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bf26:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bf2a:	ea4e 0909 	orr.w	r9, lr, r9
 801bf2e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801bf32:	8868      	ldrh	r0, [r5, #2]
 801bf34:	d019      	beq.n	801bf6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801bf36:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801bf3a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801bf3e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bf42:	fb0a fe0e 	mul.w	lr, sl, lr
 801bf46:	fb08 f800 	mul.w	r8, r8, r0
 801bf4a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801bf4e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801bf52:	f108 0b20 	add.w	fp, r8, #32
 801bf56:	4486      	add	lr, r0
 801bf58:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801bf5c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801bf60:	0a00      	lsrs	r0, r0, #8
 801bf62:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bf66:	ea4e 0000 	orr.w	r0, lr, r0
 801bf6a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801bf6e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801bf72:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bf76:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bf7a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801bf7e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bf82:	ea4e 0909 	orr.w	r9, lr, r9
 801bf86:	ea4a 0000 	orr.w	r0, sl, r0
 801bf8a:	f1bc 0f00 	cmp.w	ip, #0
 801bf8e:	f000 813d 	beq.w	801c20c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801bf92:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801bf96:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bf98:	3a01      	subs	r2, #1
 801bf9a:	2cff      	cmp	r4, #255	; 0xff
 801bf9c:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801bfa0:	f102 0202 	add.w	r2, r2, #2
 801bfa4:	eb05 0e02 	add.w	lr, r5, r2
 801bfa8:	5aaa      	ldrh	r2, [r5, r2]
 801bfaa:	d018      	beq.n	801bfde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 801bfac:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801bfb0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bfb4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bfb8:	fb04 fa02 	mul.w	sl, r4, r2
 801bfbc:	fb08 f805 	mul.w	r8, r8, r5
 801bfc0:	f10a 0520 	add.w	r5, sl, #32
 801bfc4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801bfc8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bfcc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801bfd0:	4442      	add	r2, r8
 801bfd2:	0a2d      	lsrs	r5, r5, #8
 801bfd4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801bfd8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bfdc:	432a      	orrs	r2, r5
 801bfde:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bfe0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801bfe4:	2cff      	cmp	r4, #255	; 0xff
 801bfe6:	d01a      	beq.n	801c01e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 801bfe8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801bfec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bff0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bff4:	fb04 fa05 	mul.w	sl, r4, r5
 801bff8:	fb08 f80e 	mul.w	r8, r8, lr
 801bffc:	f10a 0e20 	add.w	lr, sl, #32
 801c000:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c004:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c008:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c00c:	4445      	add	r5, r8
 801c00e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c012:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c016:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c01a:	ea45 050e 	orr.w	r5, r5, lr
 801c01e:	fb1c fe01 	smulbb	lr, ip, r1
 801c022:	f1cc 0810 	rsb	r8, ip, #16
 801c026:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c02a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c02e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c032:	eba8 0801 	sub.w	r8, r8, r1
 801c036:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c03a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c03e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c042:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c046:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c04a:	ea4a 0202 	orr.w	r2, sl, r2
 801c04e:	4341      	muls	r1, r0
 801c050:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c054:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c058:	fb09 1108 	mla	r1, r9, r8, r1
 801c05c:	ea4b 0505 	orr.w	r5, fp, r5
 801c060:	fb0c 1102 	mla	r1, ip, r2, r1
 801c064:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c068:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c06c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c070:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c074:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c078:	ea42 0e0e 	orr.w	lr, r2, lr
 801c07c:	fa1f f28e 	uxth.w	r2, lr
 801c080:	2bff      	cmp	r3, #255	; 0xff
 801c082:	f000 80d7 	beq.w	801c234 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c086:	f8b7 c000 	ldrh.w	ip, [r7]
 801c08a:	43db      	mvns	r3, r3
 801c08c:	ea4f 202c 	mov.w	r0, ip, asr #8
 801c090:	fa5f fe83 	uxtb.w	lr, r3
 801c094:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c098:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c09c:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801c0a0:	fb00 f00e 	mul.w	r0, r0, lr
 801c0a4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c0a8:	b2db      	uxtb	r3, r3
 801c0aa:	1c41      	adds	r1, r0, #1
 801c0ac:	fb05 f50e 	mul.w	r5, r5, lr
 801c0b0:	fb03 f30e 	mul.w	r3, r3, lr
 801c0b4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801c0b8:	1210      	asrs	r0, r2, #8
 801c0ba:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c0be:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 801c0c2:	496c      	ldr	r1, [pc, #432]	; (801c274 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>)
 801c0c4:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801c0c8:	1c69      	adds	r1, r5, #1
 801c0ca:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801c0ce:	10d1      	asrs	r1, r2, #3
 801c0d0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c0d4:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801c0d8:	00c9      	lsls	r1, r1, #3
 801c0da:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c0de:	4301      	orrs	r1, r0
 801c0e0:	1c58      	adds	r0, r3, #1
 801c0e2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c0e6:	00d3      	lsls	r3, r2, #3
 801c0e8:	b2db      	uxtb	r3, r3
 801c0ea:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c0ee:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 801c0f2:	803b      	strh	r3, [r7, #0]
 801c0f4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c0f6:	3702      	adds	r7, #2
 801c0f8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801c0fa:	4413      	add	r3, r2
 801c0fc:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801c0fe:	9325      	str	r3, [sp, #148]	; 0x94
 801c100:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c102:	441a      	add	r2, r3
 801c104:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c106:	3b01      	subs	r3, #1
 801c108:	9226      	str	r2, [sp, #152]	; 0x98
 801c10a:	930f      	str	r3, [sp, #60]	; 0x3c
 801c10c:	e691      	b.n	801be32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801c10e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c110:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801c112:	9c26      	ldr	r4, [sp, #152]	; 0x98
 801c114:	4433      	add	r3, r6
 801c116:	9325      	str	r3, [sp, #148]	; 0x94
 801c118:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c11a:	441c      	add	r4, r3
 801c11c:	9b06      	ldr	r3, [sp, #24]
 801c11e:	3b01      	subs	r3, #1
 801c120:	9426      	str	r4, [sp, #152]	; 0x98
 801c122:	9306      	str	r3, [sp, #24]
 801c124:	9b07      	ldr	r3, [sp, #28]
 801c126:	3302      	adds	r3, #2
 801c128:	9307      	str	r3, [sp, #28]
 801c12a:	e660      	b.n	801bdee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c12c:	d028      	beq.n	801c180 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 801c12e:	9b06      	ldr	r3, [sp, #24]
 801c130:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801c132:	3b01      	subs	r3, #1
 801c134:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801c136:	fb00 5003 	mla	r0, r0, r3, r5
 801c13a:	1400      	asrs	r0, r0, #16
 801c13c:	f53f ae74 	bmi.w	801be28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c140:	3901      	subs	r1, #1
 801c142:	4288      	cmp	r0, r1
 801c144:	f6bf ae70 	bge.w	801be28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c148:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801c14a:	9826      	ldr	r0, [sp, #152]	; 0x98
 801c14c:	fb01 0303 	mla	r3, r1, r3, r0
 801c150:	141b      	asrs	r3, r3, #16
 801c152:	f53f ae69 	bmi.w	801be28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c156:	3a01      	subs	r2, #1
 801c158:	4293      	cmp	r3, r2
 801c15a:	f6bf ae65 	bge.w	801be28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c15e:	9b06      	ldr	r3, [sp, #24]
 801c160:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c164:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801c168:	930f      	str	r3, [sp, #60]	; 0x3c
 801c16a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c16c:	2b00      	cmp	r3, #0
 801c16e:	f300 8083 	bgt.w	801c278 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f8>
 801c172:	9b06      	ldr	r3, [sp, #24]
 801c174:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c178:	9b07      	ldr	r3, [sp, #28]
 801c17a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c17e:	9307      	str	r3, [sp, #28]
 801c180:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c182:	2b00      	cmp	r3, #0
 801c184:	f340 81e4 	ble.w	801c550 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d0>
 801c188:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c18c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c18e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c192:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c196:	eef0 6a48 	vmov.f32	s13, s16
 801c19a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c19e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c1a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1a6:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801c1aa:	eef0 6a68 	vmov.f32	s13, s17
 801c1ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1b2:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 801c1b6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c1ba:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c1be:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c1c2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c1c6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c1ca:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c1ce:	ee18 2a10 	vmov	r2, s16
 801c1d2:	eeb0 8a47 	vmov.f32	s16, s14
 801c1d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1da:	ee18 2a90 	vmov	r2, s17
 801c1de:	9327      	str	r3, [sp, #156]	; 0x9c
 801c1e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c1e2:	eef0 8a67 	vmov.f32	s17, s15
 801c1e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1ea:	9328      	str	r3, [sp, #160]	; 0xa0
 801c1ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c1ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c1f0:	3b01      	subs	r3, #1
 801c1f2:	930e      	str	r3, [sp, #56]	; 0x38
 801c1f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c1f6:	bf08      	it	eq
 801c1f8:	4613      	moveq	r3, r2
 801c1fa:	9306      	str	r3, [sp, #24]
 801c1fc:	e5e9      	b.n	801bdd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c1fe:	fb08 f505 	mul.w	r5, r8, r5
 801c202:	fb09 5303 	mla	r3, r9, r3, r5
 801c206:	e669      	b.n	801bedc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801c208:	4681      	mov	r9, r0
 801c20a:	e690      	b.n	801bf2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801c20c:	f1c1 0210 	rsb	r2, r1, #16
 801c210:	4341      	muls	r1, r0
 801c212:	fb09 1902 	mla	r9, r9, r2, r1
 801c216:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c21a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c21e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c222:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c226:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c22a:	ea42 0909 	orr.w	r9, r2, r9
 801c22e:	fa1f f289 	uxth.w	r2, r9
 801c232:	e725      	b.n	801c080 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801c234:	803a      	strh	r2, [r7, #0]
 801c236:	e75d      	b.n	801c0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c238:	f115 0e01 	adds.w	lr, r5, #1
 801c23c:	f53f af5a 	bmi.w	801c0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c240:	4572      	cmp	r2, lr
 801c242:	f6ff af57 	blt.w	801c0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c246:	f110 0e01 	adds.w	lr, r0, #1
 801c24a:	f53f af53 	bmi.w	801c0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c24e:	4573      	cmp	r3, lr
 801c250:	f6ff af50 	blt.w	801c0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c254:	b21b      	sxth	r3, r3
 801c256:	b212      	sxth	r2, r2
 801c258:	9301      	str	r3, [sp, #4]
 801c25a:	9200      	str	r2, [sp, #0]
 801c25c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801c260:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801c264:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801c268:	4639      	mov	r1, r7
 801c26a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c26c:	f7ff fbf0 	bl	801ba50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801c270:	e740      	b.n	801c0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c272:	bf00      	nop
 801c274:	fffff800 	.word	0xfffff800
 801c278:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c27a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c27e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c280:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c284:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c286:	fa1f fc82 	uxth.w	ip, r2
 801c28a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c28e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c290:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c294:	141f      	asrs	r7, r3, #16
 801c296:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c298:	141b      	asrs	r3, r3, #16
 801c29a:	fb01 3707 	mla	r7, r1, r7, r3
 801c29e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c2a0:	eb03 0a07 	add.w	sl, r3, r7
 801c2a4:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c2a8:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c2ac:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c2b0:	b29b      	uxth	r3, r3
 801c2b2:	2d00      	cmp	r5, #0
 801c2b4:	f000 8131 	beq.w	801c51a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79a>
 801c2b8:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c2bc:	eb0a 0b01 	add.w	fp, sl, r1
 801c2c0:	fa1f fa85 	uxth.w	sl, r5
 801c2c4:	940c      	str	r4, [sp, #48]	; 0x30
 801c2c6:	fb0a fc0c 	mul.w	ip, sl, ip
 801c2ca:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c2ce:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c2d2:	eba0 000c 	sub.w	r0, r0, ip
 801c2d6:	940d      	str	r4, [sp, #52]	; 0x34
 801c2d8:	fa1f fa8a 	uxth.w	sl, sl
 801c2dc:	b280      	uxth	r0, r0
 801c2de:	eba3 030a 	sub.w	r3, r3, sl
 801c2e2:	fb08 f000 	mul.w	r0, r8, r0
 801c2e6:	b29b      	uxth	r3, r3
 801c2e8:	fb09 0303 	mla	r3, r9, r3, r0
 801c2ec:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c2ee:	fb0a 3300 	mla	r3, sl, r0, r3
 801c2f2:	fb0c 3304 	mla	r3, ip, r4, r3
 801c2f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c2fa:	2b00      	cmp	r3, #0
 801c2fc:	f000 80ff 	beq.w	801c4fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801c300:	9808      	ldr	r0, [sp, #32]
 801c302:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c306:	9c08      	ldr	r4, [sp, #32]
 801c308:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c30c:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c310:	f000 8108 	beq.w	801c524 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801c314:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c318:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c31c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c320:	fb0a fc0c 	mul.w	ip, sl, ip
 801c324:	fb09 f707 	mul.w	r7, r9, r7
 801c328:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c32c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c330:	f107 0b20 	add.w	fp, r7, #32
 801c334:	44cc      	add	ip, r9
 801c336:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c33a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c33e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c342:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c346:	ea4c 0909 	orr.w	r9, ip, r9
 801c34a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c34e:	8847      	ldrh	r7, [r0, #2]
 801c350:	d019      	beq.n	801c386 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x606>
 801c352:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c356:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c35a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c35e:	fb0a fc0c 	mul.w	ip, sl, ip
 801c362:	fb08 f807 	mul.w	r8, r8, r7
 801c366:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c36a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c36e:	f108 0b20 	add.w	fp, r8, #32
 801c372:	44bc      	add	ip, r7
 801c374:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c378:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c37c:	0a3f      	lsrs	r7, r7, #8
 801c37e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c382:	ea4c 0707 	orr.w	r7, ip, r7
 801c386:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c38a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c38e:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c392:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c396:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c39a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c39e:	ea4c 0909 	orr.w	r9, ip, r9
 801c3a2:	ea4a 0707 	orr.w	r7, sl, r7
 801c3a6:	2d00      	cmp	r5, #0
 801c3a8:	f000 80be 	beq.w	801c528 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c3ac:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c3b0:	3901      	subs	r1, #1
 801c3b2:	0049      	lsls	r1, r1, #1
 801c3b4:	3102      	adds	r1, #2
 801c3b6:	eb00 0c01 	add.w	ip, r0, r1
 801c3ba:	5a41      	ldrh	r1, [r0, r1]
 801c3bc:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c3be:	28ff      	cmp	r0, #255	; 0xff
 801c3c0:	d019      	beq.n	801c3f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 801c3c2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c3c6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c3c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c3cc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c3d0:	fb04 fa01 	mul.w	sl, r4, r1
 801c3d4:	fb08 f800 	mul.w	r8, r8, r0
 801c3d8:	f10a 0020 	add.w	r0, sl, #32
 801c3dc:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c3e0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c3e4:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c3e8:	4441      	add	r1, r8
 801c3ea:	0a00      	lsrs	r0, r0, #8
 801c3ec:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c3f0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c3f4:	4301      	orrs	r1, r0
 801c3f6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c3f8:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c3fc:	2cff      	cmp	r4, #255	; 0xff
 801c3fe:	d01a      	beq.n	801c436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801c400:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c404:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c408:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c40c:	fb04 fa00 	mul.w	sl, r4, r0
 801c410:	fb08 f80c 	mul.w	r8, r8, ip
 801c414:	f10a 0c20 	add.w	ip, sl, #32
 801c418:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c41c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c420:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c424:	4440      	add	r0, r8
 801c426:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c42a:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c42e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c432:	ea40 000c 	orr.w	r0, r0, ip
 801c436:	fb15 fc02 	smulbb	ip, r5, r2
 801c43a:	f1c5 0810 	rsb	r8, r5, #16
 801c43e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c442:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c446:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c44a:	eba8 0802 	sub.w	r8, r8, r2
 801c44e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c452:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c456:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c45a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c45e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c462:	ea4a 0101 	orr.w	r1, sl, r1
 801c466:	437a      	muls	r2, r7
 801c468:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c46c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c470:	fb09 2208 	mla	r2, r9, r8, r2
 801c474:	ea4b 0000 	orr.w	r0, fp, r0
 801c478:	fb05 2201 	mla	r2, r5, r1, r2
 801c47c:	fb0c 2200 	mla	r2, ip, r0, r2
 801c480:	0d57      	lsrs	r7, r2, #21
 801c482:	0952      	lsrs	r2, r2, #5
 801c484:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c488:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c48c:	433a      	orrs	r2, r7
 801c48e:	2bff      	cmp	r3, #255	; 0xff
 801c490:	b292      	uxth	r2, r2
 801c492:	d05a      	beq.n	801c54a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ca>
 801c494:	f8be 7000 	ldrh.w	r7, [lr]
 801c498:	43db      	mvns	r3, r3
 801c49a:	4c30      	ldr	r4, [pc, #192]	; (801c55c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>)
 801c49c:	1238      	asrs	r0, r7, #8
 801c49e:	fa5f fc83 	uxtb.w	ip, r3
 801c4a2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c4a6:	10fd      	asrs	r5, r7, #3
 801c4a8:	00fb      	lsls	r3, r7, #3
 801c4aa:	fb00 f00c 	mul.w	r0, r0, ip
 801c4ae:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c4b2:	b2db      	uxtb	r3, r3
 801c4b4:	fb05 f10c 	mul.w	r1, r5, ip
 801c4b8:	1c45      	adds	r5, r0, #1
 801c4ba:	fb03 f30c 	mul.w	r3, r3, ip
 801c4be:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c4c2:	1215      	asrs	r5, r2, #8
 801c4c4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c4c8:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c4cc:	1c4d      	adds	r5, r1, #1
 801c4ce:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801c4d2:	10d1      	asrs	r1, r2, #3
 801c4d4:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801c4d8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c4dc:	00d2      	lsls	r2, r2, #3
 801c4de:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801c4e2:	00c9      	lsls	r1, r1, #3
 801c4e4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c4e8:	4308      	orrs	r0, r1
 801c4ea:	1c59      	adds	r1, r3, #1
 801c4ec:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c4f0:	b2d1      	uxtb	r1, r2
 801c4f2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c4f6:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 801c4fa:	f8ae 0000 	strh.w	r0, [lr]
 801c4fe:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c500:	f10e 0e02 	add.w	lr, lr, #2
 801c504:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801c506:	4413      	add	r3, r2
 801c508:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801c50a:	9325      	str	r3, [sp, #148]	; 0x94
 801c50c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c50e:	441a      	add	r2, r3
 801c510:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c512:	3b01      	subs	r3, #1
 801c514:	9226      	str	r2, [sp, #152]	; 0x98
 801c516:	930f      	str	r3, [sp, #60]	; 0x3c
 801c518:	e627      	b.n	801c16a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c51a:	fb08 f000 	mul.w	r0, r8, r0
 801c51e:	fb09 0303 	mla	r3, r9, r3, r0
 801c522:	e6e8      	b.n	801c2f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x576>
 801c524:	46b9      	mov	r9, r7
 801c526:	e710      	b.n	801c34a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 801c528:	f1c2 0110 	rsb	r1, r2, #16
 801c52c:	437a      	muls	r2, r7
 801c52e:	fb09 2901 	mla	r9, r9, r1, r2
 801c532:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c536:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c53a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c53e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c542:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c546:	4302      	orrs	r2, r0
 801c548:	e7a1      	b.n	801c48e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 801c54a:	f8ae 2000 	strh.w	r2, [lr]
 801c54e:	e7d6      	b.n	801c4fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801c550:	b013      	add	sp, #76	; 0x4c
 801c552:	ecbd 8b08 	vpop	{d8-d11}
 801c556:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c55a:	bf00      	nop
 801c55c:	fffff800 	.word	0xfffff800

0801c560 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801c560:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c564:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 801c568:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801c56c:	fb0c 4e03 	mla	lr, ip, r3, r4
 801c570:	f1bc 0f00 	cmp.w	ip, #0
 801c574:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 801c578:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 801c57c:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 801c580:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801c584:	8808      	ldrh	r0, [r1, #0]
 801c586:	db2f      	blt.n	801c5e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801c588:	45e2      	cmp	sl, ip
 801c58a:	dd2d      	ble.n	801c5e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801c58c:	2c00      	cmp	r4, #0
 801c58e:	db29      	blt.n	801c5e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801c590:	42a3      	cmp	r3, r4
 801c592:	dd27      	ble.n	801c5e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801c594:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 801c598:	1c62      	adds	r2, r4, #1
 801c59a:	d428      	bmi.n	801c5ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801c59c:	4293      	cmp	r3, r2
 801c59e:	dd26      	ble.n	801c5ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801c5a0:	b32f      	cbz	r7, 801c5ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801c5a2:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 801c5a6:	f11c 0c01 	adds.w	ip, ip, #1
 801c5aa:	d424      	bmi.n	801c5f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801c5ac:	45e2      	cmp	sl, ip
 801c5ae:	dd22      	ble.n	801c5f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801c5b0:	2e00      	cmp	r6, #0
 801c5b2:	f000 809c 	beq.w	801c6ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 801c5b6:	2c00      	cmp	r4, #0
 801c5b8:	db1b      	blt.n	801c5f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801c5ba:	42a3      	cmp	r3, r4
 801c5bc:	dd19      	ble.n	801c5f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801c5be:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 801c5c2:	3401      	adds	r4, #1
 801c5c4:	d41a      	bmi.n	801c5fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801c5c6:	42a3      	cmp	r3, r4
 801c5c8:	dd18      	ble.n	801c5fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801c5ca:	b1cf      	cbz	r7, 801c600 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 801c5cc:	3301      	adds	r3, #1
 801c5ce:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 801c5d2:	2f0f      	cmp	r7, #15
 801c5d4:	d915      	bls.n	801c602 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 801c5d6:	4b49      	ldr	r3, [pc, #292]	; (801c6fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 801c5d8:	f240 11ef 	movw	r1, #495	; 0x1ef
 801c5dc:	4a48      	ldr	r2, [pc, #288]	; (801c700 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 801c5de:	4849      	ldr	r0, [pc, #292]	; (801c704 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 801c5e0:	f004 fbc6 	bl	8020d70 <__assert_func>
 801c5e4:	4681      	mov	r9, r0
 801c5e6:	e7d7      	b.n	801c598 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 801c5e8:	4686      	mov	lr, r0
 801c5ea:	4681      	mov	r9, r0
 801c5ec:	e7db      	b.n	801c5a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801c5ee:	4686      	mov	lr, r0
 801c5f0:	e7d9      	b.n	801c5a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801c5f2:	4684      	mov	ip, r0
 801c5f4:	e7e5      	b.n	801c5c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 801c5f6:	4603      	mov	r3, r0
 801c5f8:	4684      	mov	ip, r0
 801c5fa:	e7ea      	b.n	801c5d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801c5fc:	4603      	mov	r3, r0
 801c5fe:	e7e8      	b.n	801c5d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801c600:	4603      	mov	r3, r0
 801c602:	2e0f      	cmp	r6, #15
 801c604:	d8e7      	bhi.n	801c5d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801c606:	fb17 f806 	smulbb	r8, r7, r6
 801c60a:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801c60e:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 801c612:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c616:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c61a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801c61e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c622:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c626:	ea44 0909 	orr.w	r9, r4, r9
 801c62a:	f1c6 0410 	rsb	r4, r6, #16
 801c62e:	041a      	lsls	r2, r3, #16
 801c630:	ea4a 0e0e 	orr.w	lr, sl, lr
 801c634:	1be4      	subs	r4, r4, r7
 801c636:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 801c63a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c63e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c642:	fb07 fe0e 	mul.w	lr, r7, lr
 801c646:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801c64a:	4313      	orrs	r3, r2
 801c64c:	ea4f 420c 	mov.w	r2, ip, lsl #16
 801c650:	fb04 e409 	mla	r4, r4, r9, lr
 801c654:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 801c658:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c65c:	b2af      	uxth	r7, r5
 801c65e:	fb08 4303 	mla	r3, r8, r3, r4
 801c662:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801c666:	43ed      	mvns	r5, r5
 801c668:	4322      	orrs	r2, r4
 801c66a:	b2ed      	uxtb	r5, r5
 801c66c:	fb06 3202 	mla	r2, r6, r2, r3
 801c670:	10c6      	asrs	r6, r0, #3
 801c672:	0d53      	lsrs	r3, r2, #21
 801c674:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c678:	0952      	lsrs	r2, r2, #5
 801c67a:	fb16 f605 	smulbb	r6, r6, r5
 801c67e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c682:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c686:	431a      	orrs	r2, r3
 801c688:	b293      	uxth	r3, r2
 801c68a:	1202      	asrs	r2, r0, #8
 801c68c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c690:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c694:	00dc      	lsls	r4, r3, #3
 801c696:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c69a:	fb12 f205 	smulbb	r2, r2, r5
 801c69e:	b2e4      	uxtb	r4, r4
 801c6a0:	fb0c 2c07 	mla	ip, ip, r7, r2
 801c6a4:	10da      	asrs	r2, r3, #3
 801c6a6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c6aa:	fa1f fc8c 	uxth.w	ip, ip
 801c6ae:	fb02 6207 	mla	r2, r2, r7, r6
 801c6b2:	f10c 0301 	add.w	r3, ip, #1
 801c6b6:	b296      	uxth	r6, r2
 801c6b8:	00c2      	lsls	r2, r0, #3
 801c6ba:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801c6be:	b2d2      	uxtb	r2, r2
 801c6c0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801c6c4:	fb12 f205 	smulbb	r2, r2, r5
 801c6c8:	fb04 2207 	mla	r2, r4, r7, r2
 801c6cc:	b292      	uxth	r2, r2
 801c6ce:	1c50      	adds	r0, r2, #1
 801c6d0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801c6d4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c6d8:	4313      	orrs	r3, r2
 801c6da:	1c72      	adds	r2, r6, #1
 801c6dc:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801c6e0:	0952      	lsrs	r2, r2, #5
 801c6e2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c6e6:	4313      	orrs	r3, r2
 801c6e8:	800b      	strh	r3, [r1, #0]
 801c6ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c6ee:	2f0f      	cmp	r7, #15
 801c6f0:	f63f af71 	bhi.w	801c5d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801c6f4:	4603      	mov	r3, r0
 801c6f6:	4684      	mov	ip, r0
 801c6f8:	e785      	b.n	801c606 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 801c6fa:	bf00      	nop
 801c6fc:	080252eb 	.word	0x080252eb
 801c700:	08025952 	.word	0x08025952
 801c704:	080253d4 	.word	0x080253d4

0801c708 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c70c:	ed2d 8b08 	vpush	{d8-d11}
 801c710:	b093      	sub	sp, #76	; 0x4c
 801c712:	461d      	mov	r5, r3
 801c714:	eeb0 aa40 	vmov.f32	s20, s0
 801c718:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801c71a:	eef0 9a60 	vmov.f32	s19, s1
 801c71e:	9210      	str	r2, [sp, #64]	; 0x40
 801c720:	eeb0 9a41 	vmov.f32	s18, s2
 801c724:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 801c728:	eeb0 8a62 	vmov.f32	s16, s5
 801c72c:	910a      	str	r1, [sp, #40]	; 0x28
 801c72e:	eef0 8a43 	vmov.f32	s17, s6
 801c732:	920b      	str	r2, [sp, #44]	; 0x2c
 801c734:	eef0 ba44 	vmov.f32	s23, s8
 801c738:	6859      	ldr	r1, [r3, #4]
 801c73a:	eeb0 ba64 	vmov.f32	s22, s9
 801c73e:	681b      	ldr	r3, [r3, #0]
 801c740:	eef0 aa45 	vmov.f32	s21, s10
 801c744:	9011      	str	r0, [sp, #68]	; 0x44
 801c746:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 801c74a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801c74e:	fb01 2707 	mla	r7, r1, r7, r2
 801c752:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801c756:	9307      	str	r3, [sp, #28]
 801c758:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c75a:	681b      	ldr	r3, [r3, #0]
 801c75c:	9309      	str	r3, [sp, #36]	; 0x24
 801c75e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c760:	43db      	mvns	r3, r3
 801c762:	b2db      	uxtb	r3, r3
 801c764:	9308      	str	r3, [sp, #32]
 801c766:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c768:	2b00      	cmp	r3, #0
 801c76a:	dc03      	bgt.n	801c774 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c76c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c76e:	2b00      	cmp	r3, #0
 801c770:	f340 8205 	ble.w	801cb7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c774:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c776:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c77a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c77e:	1e48      	subs	r0, r1, #1
 801c780:	f102 3cff 	add.w	ip, r2, #4294967295
 801c784:	2d00      	cmp	r5, #0
 801c786:	f340 80da 	ble.w	801c93e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c78a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c78e:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c792:	d406      	bmi.n	801c7a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c794:	4586      	cmp	lr, r0
 801c796:	da04      	bge.n	801c7a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c798:	2b00      	cmp	r3, #0
 801c79a:	db02      	blt.n	801c7a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c79c:	4563      	cmp	r3, ip
 801c79e:	f2c0 80cf 	blt.w	801c940 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801c7a2:	f11e 0e01 	adds.w	lr, lr, #1
 801c7a6:	f100 80c1 	bmi.w	801c92c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801c7aa:	4571      	cmp	r1, lr
 801c7ac:	f2c0 80be 	blt.w	801c92c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801c7b0:	3301      	adds	r3, #1
 801c7b2:	f100 80bb 	bmi.w	801c92c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801c7b6:	429a      	cmp	r2, r3
 801c7b8:	f2c0 80b8 	blt.w	801c92c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801c7bc:	46a9      	mov	r9, r5
 801c7be:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801c7c2:	f1b9 0f00 	cmp.w	r9, #0
 801c7c6:	f340 80d8 	ble.w	801c97a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801c7ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c7cc:	1421      	asrs	r1, r4, #16
 801c7ce:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c7d2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c7d6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c7da:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801c7de:	f100 8112 	bmi.w	801ca06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801c7e2:	f10e 3aff 	add.w	sl, lr, #4294967295
 801c7e6:	4551      	cmp	r1, sl
 801c7e8:	f280 810d 	bge.w	801ca06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801c7ec:	2800      	cmp	r0, #0
 801c7ee:	f2c0 810a 	blt.w	801ca06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801c7f2:	f103 3aff 	add.w	sl, r3, #4294967295
 801c7f6:	4550      	cmp	r0, sl
 801c7f8:	f280 8105 	bge.w	801ca06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801c7fc:	fa0f f38e 	sxth.w	r3, lr
 801c800:	fb00 1103 	mla	r1, r0, r3, r1
 801c804:	9809      	ldr	r0, [sp, #36]	; 0x24
 801c806:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801c80a:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801c80e:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801c812:	f1bc 0f00 	cmp.w	ip, #0
 801c816:	d007      	beq.n	801c828 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 801c818:	005b      	lsls	r3, r3, #1
 801c81a:	eb0a 0003 	add.w	r0, sl, r3
 801c81e:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801c822:	930c      	str	r3, [sp, #48]	; 0x30
 801c824:	8843      	ldrh	r3, [r0, #2]
 801c826:	930d      	str	r3, [sp, #52]	; 0x34
 801c828:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801c82c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c830:	fb12 f30c 	smulbb	r3, r2, ip
 801c834:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c838:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c83c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c840:	10db      	asrs	r3, r3, #3
 801c842:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c846:	ea40 000e 	orr.w	r0, r0, lr
 801c84a:	f1cc 0e10 	rsb	lr, ip, #16
 801c84e:	ea4a 0101 	orr.w	r1, sl, r1
 801c852:	9f08      	ldr	r7, [sp, #32]
 801c854:	ebae 0e02 	sub.w	lr, lr, r2
 801c858:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801c85c:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801c860:	4351      	muls	r1, r2
 801c862:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c864:	fb0e 1e00 	mla	lr, lr, r0, r1
 801c868:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c86a:	0410      	lsls	r0, r2, #16
 801c86c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c870:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c874:	4310      	orrs	r0, r2
 801c876:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c878:	0412      	lsls	r2, r2, #16
 801c87a:	fb03 e000 	mla	r0, r3, r0, lr
 801c87e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801c882:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801c886:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c88a:	f8b8 c000 	ldrh.w	ip, [r8]
 801c88e:	ea42 020e 	orr.w	r2, r2, lr
 801c892:	ea4f 212c 	mov.w	r1, ip, asr #8
 801c896:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801c89a:	fb03 0302 	mla	r3, r3, r2, r0
 801c89e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c8a2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c8a6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c8aa:	fb11 f107 	smulbb	r1, r1, r7
 801c8ae:	0d5a      	lsrs	r2, r3, #21
 801c8b0:	095b      	lsrs	r3, r3, #5
 801c8b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c8b6:	fa5f fc8c 	uxtb.w	ip, ip
 801c8ba:	fb1e fe07 	smulbb	lr, lr, r7
 801c8be:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c8c2:	fb1c fc07 	smulbb	ip, ip, r7
 801c8c6:	4313      	orrs	r3, r2
 801c8c8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801c8cc:	b29b      	uxth	r3, r3
 801c8ce:	1218      	asrs	r0, r3, #8
 801c8d0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c8d4:	fb00 1002 	mla	r0, r0, r2, r1
 801c8d8:	10d9      	asrs	r1, r3, #3
 801c8da:	00db      	lsls	r3, r3, #3
 801c8dc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c8e0:	b280      	uxth	r0, r0
 801c8e2:	b2db      	uxtb	r3, r3
 801c8e4:	fb01 e102 	mla	r1, r1, r2, lr
 801c8e8:	fb03 c202 	mla	r2, r3, r2, ip
 801c8ec:	1c43      	adds	r3, r0, #1
 801c8ee:	b289      	uxth	r1, r1
 801c8f0:	b292      	uxth	r2, r2
 801c8f2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c8f6:	f102 0c01 	add.w	ip, r2, #1
 801c8fa:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801c8fe:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801c902:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c906:	4313      	orrs	r3, r2
 801c908:	1c4a      	adds	r2, r1, #1
 801c90a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c90e:	0949      	lsrs	r1, r1, #5
 801c910:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c914:	430b      	orrs	r3, r1
 801c916:	f8a8 3000 	strh.w	r3, [r8]
 801c91a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c91c:	f108 0802 	add.w	r8, r8, #2
 801c920:	f109 39ff 	add.w	r9, r9, #4294967295
 801c924:	441c      	add	r4, r3
 801c926:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c928:	441e      	add	r6, r3
 801c92a:	e74a      	b.n	801c7c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801c92c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c92e:	3d01      	subs	r5, #1
 801c930:	441c      	add	r4, r3
 801c932:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c934:	441e      	add	r6, r3
 801c936:	9b07      	ldr	r3, [sp, #28]
 801c938:	3302      	adds	r3, #2
 801c93a:	9307      	str	r3, [sp, #28]
 801c93c:	e722      	b.n	801c784 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c93e:	d022      	beq.n	801c986 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801c940:	1e6b      	subs	r3, r5, #1
 801c942:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801c944:	fb00 4003 	mla	r0, r0, r3, r4
 801c948:	1400      	asrs	r0, r0, #16
 801c94a:	f53f af37 	bmi.w	801c7bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801c94e:	3901      	subs	r1, #1
 801c950:	4288      	cmp	r0, r1
 801c952:	f6bf af33 	bge.w	801c7bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801c956:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801c958:	fb01 6303 	mla	r3, r1, r3, r6
 801c95c:	141b      	asrs	r3, r3, #16
 801c95e:	f53f af2d 	bmi.w	801c7bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801c962:	3a01      	subs	r2, #1
 801c964:	4293      	cmp	r3, r2
 801c966:	f6bf af29 	bge.w	801c7bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801c96a:	46a8      	mov	r8, r5
 801c96c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801c970:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801c974:	f1b8 0f00 	cmp.w	r8, #0
 801c978:	dc60      	bgt.n	801ca3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
 801c97a:	9b07      	ldr	r3, [sp, #28]
 801c97c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c980:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801c984:	9307      	str	r3, [sp, #28]
 801c986:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c988:	2b00      	cmp	r3, #0
 801c98a:	f340 80f8 	ble.w	801cb7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c98e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c992:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c994:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c998:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c99c:	eef0 6a48 	vmov.f32	s13, s16
 801c9a0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c9a4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c9a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c9ac:	ee16 4a90 	vmov	r4, s13
 801c9b0:	eef0 6a68 	vmov.f32	s13, s17
 801c9b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c9b8:	ee16 6a90 	vmov	r6, s13
 801c9bc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c9c0:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c9c4:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c9c8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c9cc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c9d0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c9d4:	ee18 2a10 	vmov	r2, s16
 801c9d8:	eeb0 8a47 	vmov.f32	s16, s14
 801c9dc:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9e0:	ee18 2a90 	vmov	r2, s17
 801c9e4:	9327      	str	r3, [sp, #156]	; 0x9c
 801c9e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c9e8:	eef0 8a67 	vmov.f32	s17, s15
 801c9ec:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9f0:	9328      	str	r3, [sp, #160]	; 0xa0
 801c9f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c9f4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c9f6:	3b01      	subs	r3, #1
 801c9f8:	930a      	str	r3, [sp, #40]	; 0x28
 801c9fa:	bf08      	it	eq
 801c9fc:	4615      	moveq	r5, r2
 801c9fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ca00:	bf18      	it	ne
 801ca02:	461d      	movne	r5, r3
 801ca04:	e6af      	b.n	801c766 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ca06:	f111 0a01 	adds.w	sl, r1, #1
 801ca0a:	d486      	bmi.n	801c91a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801ca0c:	45d6      	cmp	lr, sl
 801ca0e:	db84      	blt.n	801c91a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801ca10:	f110 0a01 	adds.w	sl, r0, #1
 801ca14:	d481      	bmi.n	801c91a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801ca16:	4553      	cmp	r3, sl
 801ca18:	f6ff af7f 	blt.w	801c91a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801ca1c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801ca1e:	b21b      	sxth	r3, r3
 801ca20:	9101      	str	r1, [sp, #4]
 801ca22:	4641      	mov	r1, r8
 801ca24:	9300      	str	r3, [sp, #0]
 801ca26:	fa0f f38e 	sxth.w	r3, lr
 801ca2a:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801ca2e:	e9cd c704 	strd	ip, r7, [sp, #16]
 801ca32:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ca34:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ca36:	f7ff fd93 	bl	801c560 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801ca3a:	e76e      	b.n	801c91a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801ca3c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ca3e:	1430      	asrs	r0, r6, #16
 801ca40:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801ca42:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801ca46:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ca4a:	1423      	asrs	r3, r4, #16
 801ca4c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ca50:	fb01 3000 	mla	r0, r1, r0, r3
 801ca54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ca56:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801ca5a:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801ca5e:	8858      	ldrh	r0, [r3, #2]
 801ca60:	f1be 0f00 	cmp.w	lr, #0
 801ca64:	d00b      	beq.n	801ca7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801ca66:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801ca6a:	3901      	subs	r1, #1
 801ca6c:	0049      	lsls	r1, r1, #1
 801ca6e:	3102      	adds	r1, #2
 801ca70:	eb03 0b01 	add.w	fp, r3, r1
 801ca74:	5a5b      	ldrh	r3, [r3, r1]
 801ca76:	930e      	str	r3, [sp, #56]	; 0x38
 801ca78:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801ca7c:	930f      	str	r3, [sp, #60]	; 0x3c
 801ca7e:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801ca82:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ca86:	fb12 f30e 	smulbb	r3, r2, lr
 801ca8a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801ca8e:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801ca92:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ca96:	10db      	asrs	r3, r3, #3
 801ca98:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ca9c:	ea41 010c 	orr.w	r1, r1, ip
 801caa0:	f1ce 0c10 	rsb	ip, lr, #16
 801caa4:	ea4b 0000 	orr.w	r0, fp, r0
 801caa8:	9f08      	ldr	r7, [sp, #32]
 801caaa:	ebac 0c02 	sub.w	ip, ip, r2
 801caae:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801cab2:	f108 38ff 	add.w	r8, r8, #4294967295
 801cab6:	4350      	muls	r0, r2
 801cab8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801cabc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cabe:	fb0c 0c01 	mla	ip, ip, r1, r0
 801cac2:	980e      	ldr	r0, [sp, #56]	; 0x38
 801cac4:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801cac8:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801cacc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801cace:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cad2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cad6:	0412      	lsls	r2, r2, #16
 801cad8:	ea4b 0101 	orr.w	r1, fp, r1
 801cadc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801cae0:	fb03 c101 	mla	r1, r3, r1, ip
 801cae4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801cae8:	4302      	orrs	r2, r0
 801caea:	fb03 1202 	mla	r2, r3, r2, r1
 801caee:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801caf2:	0952      	lsrs	r2, r2, #5
 801caf4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801caf8:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801cafc:	f8b9 2000 	ldrh.w	r2, [r9]
 801cb00:	ea4b 0303 	orr.w	r3, fp, r3
 801cb04:	1211      	asrs	r1, r2, #8
 801cb06:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801cb0a:	b29b      	uxth	r3, r3
 801cb0c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801cb10:	00d2      	lsls	r2, r2, #3
 801cb12:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801cb16:	fb11 f107 	smulbb	r1, r1, r7
 801cb1a:	1218      	asrs	r0, r3, #8
 801cb1c:	fb1c fc07 	smulbb	ip, ip, r7
 801cb20:	b2d2      	uxtb	r2, r2
 801cb22:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cb26:	fb12 f207 	smulbb	r2, r2, r7
 801cb2a:	fb00 100a 	mla	r0, r0, sl, r1
 801cb2e:	10d9      	asrs	r1, r3, #3
 801cb30:	00db      	lsls	r3, r3, #3
 801cb32:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cb36:	b280      	uxth	r0, r0
 801cb38:	b2db      	uxtb	r3, r3
 801cb3a:	fb01 c10a 	mla	r1, r1, sl, ip
 801cb3e:	fb03 230a 	mla	r3, r3, sl, r2
 801cb42:	1c42      	adds	r2, r0, #1
 801cb44:	b289      	uxth	r1, r1
 801cb46:	b29b      	uxth	r3, r3
 801cb48:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cb4c:	f101 0c01 	add.w	ip, r1, #1
 801cb50:	1c5a      	adds	r2, r3, #1
 801cb52:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801cb56:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801cb5a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cb5e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801cb60:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801cb64:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cb68:	441c      	add	r4, r3
 801cb6a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801cb6e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cb70:	4310      	orrs	r0, r2
 801cb72:	441e      	add	r6, r3
 801cb74:	ea40 000c 	orr.w	r0, r0, ip
 801cb78:	f829 0b02 	strh.w	r0, [r9], #2
 801cb7c:	e6fa      	b.n	801c974 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801cb7e:	b013      	add	sp, #76	; 0x4c
 801cb80:	ecbd 8b08 	vpop	{d8-d11}
 801cb84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cb88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801cb88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801cb8c:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 801cb90:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801cb94:	fb06 5c03 	mla	ip, r6, r3, r5
 801cb98:	2e00      	cmp	r6, #0
 801cb9a:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 801cb9e:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801cba2:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801cba6:	8808      	ldrh	r0, [r1, #0]
 801cba8:	db2e      	blt.n	801cc08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801cbaa:	45b0      	cmp	r8, r6
 801cbac:	dd2c      	ble.n	801cc08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801cbae:	2d00      	cmp	r5, #0
 801cbb0:	db28      	blt.n	801cc04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801cbb2:	42ab      	cmp	r3, r5
 801cbb4:	dd26      	ble.n	801cc04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801cbb6:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 801cbba:	1c6a      	adds	r2, r5, #1
 801cbbc:	d427      	bmi.n	801cc0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801cbbe:	4293      	cmp	r3, r2
 801cbc0:	dd25      	ble.n	801cc0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801cbc2:	b324      	cbz	r4, 801cc0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801cbc4:	f8be 2002 	ldrh.w	r2, [lr, #2]
 801cbc8:	3601      	adds	r6, #1
 801cbca:	d424      	bmi.n	801cc16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801cbcc:	45b0      	cmp	r8, r6
 801cbce:	dd22      	ble.n	801cc16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801cbd0:	b31f      	cbz	r7, 801cc1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 801cbd2:	2d00      	cmp	r5, #0
 801cbd4:	db1d      	blt.n	801cc12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801cbd6:	42ab      	cmp	r3, r5
 801cbd8:	dd1b      	ble.n	801cc12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801cbda:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 801cbde:	3501      	adds	r5, #1
 801cbe0:	d405      	bmi.n	801cbee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801cbe2:	42ab      	cmp	r3, r5
 801cbe4:	dd03      	ble.n	801cbee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801cbe6:	b124      	cbz	r4, 801cbf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 801cbe8:	3301      	adds	r3, #1
 801cbea:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 801cbee:	2c0f      	cmp	r4, #15
 801cbf0:	d801      	bhi.n	801cbf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801cbf2:	2f0f      	cmp	r7, #15
 801cbf4:	d914      	bls.n	801cc20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 801cbf6:	4b27      	ldr	r3, [pc, #156]	; (801cc94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 801cbf8:	f240 11ef 	movw	r1, #495	; 0x1ef
 801cbfc:	4a26      	ldr	r2, [pc, #152]	; (801cc98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 801cbfe:	4827      	ldr	r0, [pc, #156]	; (801cc9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 801cc00:	f004 f8b6 	bl	8020d70 <__assert_func>
 801cc04:	4684      	mov	ip, r0
 801cc06:	e7d8      	b.n	801cbba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 801cc08:	4602      	mov	r2, r0
 801cc0a:	4684      	mov	ip, r0
 801cc0c:	e7dc      	b.n	801cbc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801cc0e:	4602      	mov	r2, r0
 801cc10:	e7da      	b.n	801cbc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801cc12:	4606      	mov	r6, r0
 801cc14:	e7e3      	b.n	801cbde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801cc16:	4606      	mov	r6, r0
 801cc18:	e7e9      	b.n	801cbee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801cc1a:	2c0f      	cmp	r4, #15
 801cc1c:	d8eb      	bhi.n	801cbf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801cc1e:	4606      	mov	r6, r0
 801cc20:	fb14 f307 	smulbb	r3, r4, r7
 801cc24:	ea4f 450c 	mov.w	r5, ip, lsl #16
 801cc28:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801cc2c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801cc30:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801cc34:	10db      	asrs	r3, r3, #3
 801cc36:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801cc3a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cc3e:	ea45 0c0c 	orr.w	ip, r5, ip
 801cc42:	f1c7 0510 	rsb	r5, r7, #16
 801cc46:	ea4e 0202 	orr.w	r2, lr, r2
 801cc4a:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 801cc4e:	1b2d      	subs	r5, r5, r4
 801cc50:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801cc54:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801cc58:	4354      	muls	r4, r2
 801cc5a:	fb05 450c 	mla	r5, r5, ip, r4
 801cc5e:	0404      	lsls	r4, r0, #16
 801cc60:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cc64:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801cc68:	4320      	orrs	r0, r4
 801cc6a:	fb03 5400 	mla	r4, r3, r0, r5
 801cc6e:	0430      	lsls	r0, r6, #16
 801cc70:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801cc74:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801cc78:	4330      	orrs	r0, r6
 801cc7a:	fb07 4000 	mla	r0, r7, r0, r4
 801cc7e:	0d43      	lsrs	r3, r0, #21
 801cc80:	0940      	lsrs	r0, r0, #5
 801cc82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cc86:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cc8a:	4318      	orrs	r0, r3
 801cc8c:	8008      	strh	r0, [r1, #0]
 801cc8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cc92:	bf00      	nop
 801cc94:	080252eb 	.word	0x080252eb
 801cc98:	08025952 	.word	0x08025952
 801cc9c:	080253d4 	.word	0x080253d4

0801cca0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cca4:	ed2d 8b08 	vpush	{d8-d11}
 801cca8:	b08f      	sub	sp, #60	; 0x3c
 801ccaa:	461d      	mov	r5, r3
 801ccac:	eeb0 aa40 	vmov.f32	s20, s0
 801ccb0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ccb2:	eef0 9a60 	vmov.f32	s19, s1
 801ccb6:	9107      	str	r1, [sp, #28]
 801ccb8:	eeb0 9a41 	vmov.f32	s18, s2
 801ccbc:	6859      	ldr	r1, [r3, #4]
 801ccbe:	eeb0 8a62 	vmov.f32	s16, s5
 801ccc2:	920c      	str	r2, [sp, #48]	; 0x30
 801ccc4:	eef0 8a43 	vmov.f32	s17, s6
 801ccc8:	681b      	ldr	r3, [r3, #0]
 801ccca:	eef0 ba44 	vmov.f32	s23, s8
 801ccce:	eeb0 ba64 	vmov.f32	s22, s9
 801ccd2:	900d      	str	r0, [sp, #52]	; 0x34
 801ccd4:	eef0 aa45 	vmov.f32	s21, s10
 801ccd8:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 801ccdc:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801cce0:	fb01 2707 	mla	r7, r1, r7, r2
 801cce4:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801cce8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ccea:	f8d3 8000 	ldr.w	r8, [r3]
 801ccee:	9b07      	ldr	r3, [sp, #28]
 801ccf0:	2b00      	cmp	r3, #0
 801ccf2:	dc03      	bgt.n	801ccfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ccf4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ccf6:	2b00      	cmp	r3, #0
 801ccf8:	f340 8182 	ble.w	801d000 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
 801ccfc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ccfe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cd02:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cd06:	1e48      	subs	r0, r1, #1
 801cd08:	f102 3cff 	add.w	ip, r2, #4294967295
 801cd0c:	2d00      	cmp	r5, #0
 801cd0e:	f340 809b 	ble.w	801ce48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 801cd12:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801cd16:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cd1a:	d406      	bmi.n	801cd2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cd1c:	4586      	cmp	lr, r0
 801cd1e:	da04      	bge.n	801cd2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cd20:	2b00      	cmp	r3, #0
 801cd22:	db02      	blt.n	801cd2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cd24:	4563      	cmp	r3, ip
 801cd26:	f2c0 8090 	blt.w	801ce4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801cd2a:	f11e 0e01 	adds.w	lr, lr, #1
 801cd2e:	f100 8084 	bmi.w	801ce3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801cd32:	4571      	cmp	r1, lr
 801cd34:	f2c0 8081 	blt.w	801ce3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801cd38:	3301      	adds	r3, #1
 801cd3a:	d47e      	bmi.n	801ce3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801cd3c:	429a      	cmp	r2, r3
 801cd3e:	db7c      	blt.n	801ce3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801cd40:	46aa      	mov	sl, r5
 801cd42:	46b9      	mov	r9, r7
 801cd44:	f1ba 0f00 	cmp.w	sl, #0
 801cd48:	f340 8099 	ble.w	801ce7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801cd4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cd4e:	1421      	asrs	r1, r4, #16
 801cd50:	ea4f 4026 	mov.w	r0, r6, asr #16
 801cd54:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cd58:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801cd5c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801cd60:	f100 80d1 	bmi.w	801cf06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801cd64:	f10e 3bff 	add.w	fp, lr, #4294967295
 801cd68:	4559      	cmp	r1, fp
 801cd6a:	f280 80cc 	bge.w	801cf06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801cd6e:	2800      	cmp	r0, #0
 801cd70:	f2c0 80c9 	blt.w	801cf06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801cd74:	f103 3bff 	add.w	fp, r3, #4294967295
 801cd78:	4558      	cmp	r0, fp
 801cd7a:	f280 80c4 	bge.w	801cf06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801cd7e:	fa0f fe8e 	sxth.w	lr, lr
 801cd82:	fb00 110e 	mla	r1, r0, lr, r1
 801cd86:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801cd8a:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801cd8e:	8841      	ldrh	r1, [r0, #2]
 801cd90:	f1bc 0f00 	cmp.w	ip, #0
 801cd94:	d00b      	beq.n	801cdae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801cd96:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801cd9a:	3b01      	subs	r3, #1
 801cd9c:	005b      	lsls	r3, r3, #1
 801cd9e:	3302      	adds	r3, #2
 801cda0:	eb00 0e03 	add.w	lr, r0, r3
 801cda4:	5ac3      	ldrh	r3, [r0, r3]
 801cda6:	9308      	str	r3, [sp, #32]
 801cda8:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801cdac:	9309      	str	r3, [sp, #36]	; 0x24
 801cdae:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801cdb2:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801cdb6:	fb12 f30c 	smulbb	r3, r2, ip
 801cdba:	f1cc 0e10 	rsb	lr, ip, #16
 801cdbe:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801cdc2:	10db      	asrs	r3, r3, #3
 801cdc4:	ebae 0e02 	sub.w	lr, lr, r2
 801cdc8:	ea40 000b 	orr.w	r0, r0, fp
 801cdcc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801cdd0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801cdd4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801cdd8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cddc:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801cde0:	ea4b 0101 	orr.w	r1, fp, r1
 801cde4:	4351      	muls	r1, r2
 801cde6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801cde8:	fb0e 1e00 	mla	lr, lr, r0, r1
 801cdec:	0410      	lsls	r0, r2, #16
 801cdee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cdf2:	9908      	ldr	r1, [sp, #32]
 801cdf4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801cdf8:	4310      	orrs	r0, r2
 801cdfa:	9a08      	ldr	r2, [sp, #32]
 801cdfc:	0412      	lsls	r2, r2, #16
 801cdfe:	fb03 e000 	mla	r0, r3, r0, lr
 801ce02:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801ce06:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801ce0a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ce0e:	ea42 020e 	orr.w	r2, r2, lr
 801ce12:	fb03 0302 	mla	r3, r3, r2, r0
 801ce16:	0d5a      	lsrs	r2, r3, #21
 801ce18:	095b      	lsrs	r3, r3, #5
 801ce1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ce1e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ce22:	4313      	orrs	r3, r2
 801ce24:	f8a9 3000 	strh.w	r3, [r9]
 801ce28:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801ce2a:	f109 0902 	add.w	r9, r9, #2
 801ce2e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ce32:	441c      	add	r4, r3
 801ce34:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ce36:	441e      	add	r6, r3
 801ce38:	e784      	b.n	801cd44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801ce3a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801ce3c:	3d01      	subs	r5, #1
 801ce3e:	3702      	adds	r7, #2
 801ce40:	441c      	add	r4, r3
 801ce42:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ce44:	441e      	add	r6, r3
 801ce46:	e761      	b.n	801cd0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ce48:	d01d      	beq.n	801ce86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ce4a:	1e6b      	subs	r3, r5, #1
 801ce4c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801ce4e:	fb00 4003 	mla	r0, r0, r3, r4
 801ce52:	1400      	asrs	r0, r0, #16
 801ce54:	f53f af74 	bmi.w	801cd40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ce58:	3901      	subs	r1, #1
 801ce5a:	4288      	cmp	r0, r1
 801ce5c:	f6bf af70 	bge.w	801cd40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ce60:	9924      	ldr	r1, [sp, #144]	; 0x90
 801ce62:	fb01 6303 	mla	r3, r1, r3, r6
 801ce66:	141b      	asrs	r3, r3, #16
 801ce68:	f53f af6a 	bmi.w	801cd40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ce6c:	3a01      	subs	r2, #1
 801ce6e:	4293      	cmp	r3, r2
 801ce70:	f6bf af66 	bge.w	801cd40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ce74:	46a9      	mov	r9, r5
 801ce76:	46ba      	mov	sl, r7
 801ce78:	f1b9 0f00 	cmp.w	r9, #0
 801ce7c:	dc5b      	bgt.n	801cf36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801ce7e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ce82:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801ce86:	9b07      	ldr	r3, [sp, #28]
 801ce88:	2b00      	cmp	r3, #0
 801ce8a:	f340 80b9 	ble.w	801d000 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
 801ce8e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ce92:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ce94:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ce98:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ce9c:	eef0 6a48 	vmov.f32	s13, s16
 801cea0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801cea4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801cea8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ceac:	ee16 4a90 	vmov	r4, s13
 801ceb0:	eef0 6a68 	vmov.f32	s13, s17
 801ceb4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ceb8:	ee16 6a90 	vmov	r6, s13
 801cebc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801cec0:	ee69 7a27 	vmul.f32	s15, s18, s15
 801cec4:	ee37 8a48 	vsub.f32	s16, s14, s16
 801cec8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801cecc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801ced0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801ced4:	ee18 2a10 	vmov	r2, s16
 801ced8:	eeb0 8a47 	vmov.f32	s16, s14
 801cedc:	fb92 f3f3 	sdiv	r3, r2, r3
 801cee0:	ee18 2a90 	vmov	r2, s17
 801cee4:	9323      	str	r3, [sp, #140]	; 0x8c
 801cee6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cee8:	eef0 8a67 	vmov.f32	s17, s15
 801ceec:	fb92 f3f3 	sdiv	r3, r2, r3
 801cef0:	9324      	str	r3, [sp, #144]	; 0x90
 801cef2:	9b07      	ldr	r3, [sp, #28]
 801cef4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801cef6:	3b01      	subs	r3, #1
 801cef8:	9307      	str	r3, [sp, #28]
 801cefa:	bf08      	it	eq
 801cefc:	4615      	moveq	r5, r2
 801cefe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cf00:	bf18      	it	ne
 801cf02:	461d      	movne	r5, r3
 801cf04:	e6f3      	b.n	801ccee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801cf06:	f111 0b01 	adds.w	fp, r1, #1
 801cf0a:	d48d      	bmi.n	801ce28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801cf0c:	45de      	cmp	lr, fp
 801cf0e:	db8b      	blt.n	801ce28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801cf10:	f110 0b01 	adds.w	fp, r0, #1
 801cf14:	d488      	bmi.n	801ce28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801cf16:	455b      	cmp	r3, fp
 801cf18:	db86      	blt.n	801ce28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801cf1a:	b21b      	sxth	r3, r3
 801cf1c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801cf20:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801cf24:	9300      	str	r3, [sp, #0]
 801cf26:	4642      	mov	r2, r8
 801cf28:	fa0f f38e 	sxth.w	r3, lr
 801cf2c:	4649      	mov	r1, r9
 801cf2e:	980d      	ldr	r0, [sp, #52]	; 0x34
 801cf30:	f7ff fe2a 	bl	801cb88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801cf34:	e778      	b.n	801ce28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801cf36:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cf38:	1420      	asrs	r0, r4, #16
 801cf3a:	1431      	asrs	r1, r6, #16
 801cf3c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801cf40:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801cf44:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cf48:	fb03 0101 	mla	r1, r3, r1, r0
 801cf4c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801cf50:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801cf54:	8841      	ldrh	r1, [r0, #2]
 801cf56:	f1be 0f00 	cmp.w	lr, #0
 801cf5a:	d00b      	beq.n	801cf74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801cf5c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801cf60:	3b01      	subs	r3, #1
 801cf62:	005b      	lsls	r3, r3, #1
 801cf64:	3302      	adds	r3, #2
 801cf66:	eb00 0b03 	add.w	fp, r0, r3
 801cf6a:	5ac3      	ldrh	r3, [r0, r3]
 801cf6c:	930a      	str	r3, [sp, #40]	; 0x28
 801cf6e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801cf72:	930b      	str	r3, [sp, #44]	; 0x2c
 801cf74:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801cf78:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801cf7c:	fb12 f30e 	smulbb	r3, r2, lr
 801cf80:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801cf84:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801cf88:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801cf8c:	10db      	asrs	r3, r3, #3
 801cf8e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cf92:	ea40 000c 	orr.w	r0, r0, ip
 801cf96:	f1ce 0c10 	rsb	ip, lr, #16
 801cf9a:	ea4b 0101 	orr.w	r1, fp, r1
 801cf9e:	f109 39ff 	add.w	r9, r9, #4294967295
 801cfa2:	ebac 0c02 	sub.w	ip, ip, r2
 801cfa6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801cfaa:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801cfae:	4351      	muls	r1, r2
 801cfb0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801cfb2:	fb0c 1c00 	mla	ip, ip, r0, r1
 801cfb6:	990a      	ldr	r1, [sp, #40]	; 0x28
 801cfb8:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801cfbc:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801cfc0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801cfc2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cfc6:	0412      	lsls	r2, r2, #16
 801cfc8:	ea4b 0000 	orr.w	r0, fp, r0
 801cfcc:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801cfd0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801cfd4:	fb03 c000 	mla	r0, r3, r0, ip
 801cfd8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801cfdc:	ea42 0b0b 	orr.w	fp, r2, fp
 801cfe0:	fb03 000b 	mla	r0, r3, fp, r0
 801cfe4:	0d43      	lsrs	r3, r0, #21
 801cfe6:	0940      	lsrs	r0, r0, #5
 801cfe8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cfec:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cff0:	4318      	orrs	r0, r3
 801cff2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801cff4:	441c      	add	r4, r3
 801cff6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cff8:	f82a 0b02 	strh.w	r0, [sl], #2
 801cffc:	441e      	add	r6, r3
 801cffe:	e73b      	b.n	801ce78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801d000:	b00f      	add	sp, #60	; 0x3c
 801d002:	ecbd 8b08 	vpop	{d8-d11}
 801d006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801d00c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801d00c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d010:	880e      	ldrh	r6, [r1, #0]
 801d012:	b085      	sub	sp, #20
 801d014:	4690      	mov	r8, r2
 801d016:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801d01a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801d01e:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801d022:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 801d026:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 801d02a:	00f6      	lsls	r6, r6, #3
 801d02c:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801d030:	9200      	str	r2, [sp, #0]
 801d032:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 801d036:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801d03a:	9201      	str	r2, [sp, #4]
 801d03c:	b2f2      	uxtb	r2, r6
 801d03e:	2c00      	cmp	r4, #0
 801d040:	fb04 5603 	mla	r6, r4, r3, r5
 801d044:	9202      	str	r2, [sp, #8]
 801d046:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 801d04a:	db36      	blt.n	801d0ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 801d04c:	45a6      	cmp	lr, r4
 801d04e:	dd34      	ble.n	801d0ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 801d050:	2d00      	cmp	r5, #0
 801d052:	db30      	blt.n	801d0b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801d054:	42ab      	cmp	r3, r5
 801d056:	dd2e      	ble.n	801d0b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801d058:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801d05c:	1c6e      	adds	r6, r5, #1
 801d05e:	d42f      	bmi.n	801d0c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801d060:	42b3      	cmp	r3, r6
 801d062:	dd2d      	ble.n	801d0c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801d064:	b370      	cbz	r0, 801d0c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 801d066:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801d06a:	3401      	adds	r4, #1
 801d06c:	d42e      	bmi.n	801d0cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 801d06e:	45a6      	cmp	lr, r4
 801d070:	dd2c      	ble.n	801d0cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 801d072:	b377      	cbz	r7, 801d0d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 801d074:	2d00      	cmp	r5, #0
 801d076:	db27      	blt.n	801d0c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801d078:	42ab      	cmp	r3, r5
 801d07a:	dd25      	ble.n	801d0c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801d07c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801d080:	3501      	adds	r5, #1
 801d082:	d429      	bmi.n	801d0d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801d084:	42ab      	cmp	r3, r5
 801d086:	dd27      	ble.n	801d0d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801d088:	b340      	cbz	r0, 801d0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801d08a:	3301      	adds	r3, #1
 801d08c:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801d090:	280f      	cmp	r0, #15
 801d092:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801d096:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801d09a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801d09e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801d0a2:	d801      	bhi.n	801d0a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801d0a4:	2f0f      	cmp	r7, #15
 801d0a6:	d91b      	bls.n	801d0e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 801d0a8:	4b85      	ldr	r3, [pc, #532]	; (801d2c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801d0aa:	f240 210d 	movw	r1, #525	; 0x20d
 801d0ae:	4a85      	ldr	r2, [pc, #532]	; (801d2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801d0b0:	4885      	ldr	r0, [pc, #532]	; (801d2c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 801d0b2:	f003 fe5d 	bl	8020d70 <__assert_func>
 801d0b6:	2200      	movs	r2, #0
 801d0b8:	e7d0      	b.n	801d05c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 801d0ba:	2600      	movs	r6, #0
 801d0bc:	4632      	mov	r2, r6
 801d0be:	e7d4      	b.n	801d06a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801d0c0:	2600      	movs	r6, #0
 801d0c2:	e7d2      	b.n	801d06a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801d0c4:	4606      	mov	r6, r0
 801d0c6:	e7d0      	b.n	801d06a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801d0c8:	2400      	movs	r4, #0
 801d0ca:	e7d9      	b.n	801d080 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801d0cc:	2300      	movs	r3, #0
 801d0ce:	461c      	mov	r4, r3
 801d0d0:	e7de      	b.n	801d090 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801d0d2:	463b      	mov	r3, r7
 801d0d4:	463c      	mov	r4, r7
 801d0d6:	e7db      	b.n	801d090 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801d0d8:	2300      	movs	r3, #0
 801d0da:	e7d9      	b.n	801d090 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801d0dc:	4603      	mov	r3, r0
 801d0de:	e7d7      	b.n	801d090 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801d0e0:	b280      	uxth	r0, r0
 801d0e2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d0e6:	b2bf      	uxth	r7, r7
 801d0e8:	fb00 fe07 	mul.w	lr, r0, r7
 801d0ec:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801d0f0:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801d0f4:	eba0 0c0e 	sub.w	ip, r0, lr
 801d0f8:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801d0fc:	b2bf      	uxth	r7, r7
 801d0fe:	fa1f fc8c 	uxth.w	ip, ip
 801d102:	eba5 0507 	sub.w	r5, r5, r7
 801d106:	fb0c f00a 	mul.w	r0, ip, sl
 801d10a:	b2ad      	uxth	r5, r5
 801d10c:	fb05 000b 	mla	r0, r5, fp, r0
 801d110:	fb07 0009 	mla	r0, r7, r9, r0
 801d114:	fb0e 0008 	mla	r0, lr, r8, r0
 801d118:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d11c:	9003      	str	r0, [sp, #12]
 801d11e:	d018      	beq.n	801d152 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x146>
 801d120:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801d124:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d128:	fb0b f000 	mul.w	r0, fp, r0
 801d12c:	fb0b fb02 	mul.w	fp, fp, r2
 801d130:	0a02      	lsrs	r2, r0, #8
 801d132:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801d136:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d13a:	4402      	add	r2, r0
 801d13c:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801d140:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801d144:	0a12      	lsrs	r2, r2, #8
 801d146:	0a00      	lsrs	r0, r0, #8
 801d148:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d14c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d150:	4302      	orrs	r2, r0
 801d152:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d156:	d019      	beq.n	801d18c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x180>
 801d158:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801d15c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801d160:	fb0a fb0b 	mul.w	fp, sl, fp
 801d164:	fb0a fa06 	mul.w	sl, sl, r6
 801d168:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801d16c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d170:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801d174:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801d178:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d17c:	445e      	add	r6, fp
 801d17e:	0a00      	lsrs	r0, r0, #8
 801d180:	0a36      	lsrs	r6, r6, #8
 801d182:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d186:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801d18a:	4306      	orrs	r6, r0
 801d18c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d190:	d019      	beq.n	801d1c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1ba>
 801d192:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801d196:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801d19a:	fb09 fa0a 	mul.w	sl, r9, sl
 801d19e:	fb09 f904 	mul.w	r9, r9, r4
 801d1a2:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801d1a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d1aa:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801d1ae:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801d1b2:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801d1b6:	4454      	add	r4, sl
 801d1b8:	0a00      	lsrs	r0, r0, #8
 801d1ba:	0a24      	lsrs	r4, r4, #8
 801d1bc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d1c0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801d1c4:	4304      	orrs	r4, r0
 801d1c6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d1ca:	d019      	beq.n	801d200 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f4>
 801d1cc:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801d1d0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d1d4:	fb08 f909 	mul.w	r9, r8, r9
 801d1d8:	fb08 f803 	mul.w	r8, r8, r3
 801d1dc:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801d1e0:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801d1e4:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801d1e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d1ec:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d1f0:	444b      	add	r3, r9
 801d1f2:	0a00      	lsrs	r0, r0, #8
 801d1f4:	0a1b      	lsrs	r3, r3, #8
 801d1f6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d1fa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d1fe:	4303      	orrs	r3, r0
 801d200:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801d204:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801d208:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801d20c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d210:	fb0c f808 	mul.w	r8, ip, r8
 801d214:	fb0c f606 	mul.w	r6, ip, r6
 801d218:	fb05 8800 	mla	r8, r5, r0, r8
 801d21c:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801d220:	fb05 6202 	mla	r2, r5, r2, r6
 801d224:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 801d228:	fb07 8800 	mla	r8, r7, r0, r8
 801d22c:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801d230:	b2ad      	uxth	r5, r5
 801d232:	fb0e 8000 	mla	r0, lr, r0, r8
 801d236:	0a00      	lsrs	r0, r0, #8
 801d238:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801d23c:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801d240:	9c00      	ldr	r4, [sp, #0]
 801d242:	fb07 2700 	mla	r7, r7, r0, r2
 801d246:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801d24a:	9b03      	ldr	r3, [sp, #12]
 801d24c:	fb0e 7000 	mla	r0, lr, r0, r7
 801d250:	436b      	muls	r3, r5
 801d252:	0a00      	lsrs	r0, r0, #8
 801d254:	1c5a      	adds	r2, r3, #1
 801d256:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d25a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d25e:	ea48 0000 	orr.w	r0, r8, r0
 801d262:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801d266:	0c03      	lsrs	r3, r0, #16
 801d268:	b2d2      	uxtb	r2, r2
 801d26a:	fb14 f602 	smulbb	r6, r4, r2
 801d26e:	f3c0 2407 	ubfx	r4, r0, #8, #8
 801d272:	b2c0      	uxtb	r0, r0
 801d274:	fb03 6305 	mla	r3, r3, r5, r6
 801d278:	b29e      	uxth	r6, r3
 801d27a:	9b01      	ldr	r3, [sp, #4]
 801d27c:	fb13 f302 	smulbb	r3, r3, r2
 801d280:	fb04 3405 	mla	r4, r4, r5, r3
 801d284:	9b02      	ldr	r3, [sp, #8]
 801d286:	fb13 f202 	smulbb	r2, r3, r2
 801d28a:	b2a4      	uxth	r4, r4
 801d28c:	1c73      	adds	r3, r6, #1
 801d28e:	fb00 2005 	mla	r0, r0, r5, r2
 801d292:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801d296:	b280      	uxth	r0, r0
 801d298:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801d29c:	1c42      	adds	r2, r0, #1
 801d29e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d2a2:	1c62      	adds	r2, r4, #1
 801d2a4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801d2a8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801d2ac:	0952      	lsrs	r2, r2, #5
 801d2ae:	4303      	orrs	r3, r0
 801d2b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d2b4:	4313      	orrs	r3, r2
 801d2b6:	800b      	strh	r3, [r1, #0]
 801d2b8:	b005      	add	sp, #20
 801d2ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2be:	bf00      	nop
 801d2c0:	080252eb 	.word	0x080252eb
 801d2c4:	080258a9 	.word	0x080258a9
 801d2c8:	080253d4 	.word	0x080253d4

0801d2cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d2cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d2d0:	ed2d 8b08 	vpush	{d8-d11}
 801d2d4:	b09d      	sub	sp, #116	; 0x74
 801d2d6:	eeb0 aa40 	vmov.f32	s20, s0
 801d2da:	eef0 9a60 	vmov.f32	s19, s1
 801d2de:	9219      	str	r2, [sp, #100]	; 0x64
 801d2e0:	eeb0 9a41 	vmov.f32	s18, s2
 801d2e4:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801d2e6:	eeb0 8a62 	vmov.f32	s16, s5
 801d2ea:	9307      	str	r3, [sp, #28]
 801d2ec:	eef0 8a43 	vmov.f32	s17, s6
 801d2f0:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801d2f4:	eef0 ba44 	vmov.f32	s23, s8
 801d2f8:	901b      	str	r0, [sp, #108]	; 0x6c
 801d2fa:	eeb0 ba64 	vmov.f32	s22, s9
 801d2fe:	931a      	str	r3, [sp, #104]	; 0x68
 801d300:	eef0 aa45 	vmov.f32	s21, s10
 801d304:	6850      	ldr	r0, [r2, #4]
 801d306:	9117      	str	r1, [sp, #92]	; 0x5c
 801d308:	6812      	ldr	r2, [r2, #0]
 801d30a:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 801d30e:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 801d312:	fb00 1303 	mla	r3, r0, r3, r1
 801d316:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d31a:	930a      	str	r3, [sp, #40]	; 0x28
 801d31c:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801d31e:	681b      	ldr	r3, [r3, #0]
 801d320:	9310      	str	r3, [sp, #64]	; 0x40
 801d322:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d326:	930b      	str	r3, [sp, #44]	; 0x2c
 801d328:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d32a:	2b00      	cmp	r3, #0
 801d32c:	dc03      	bgt.n	801d336 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801d32e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801d330:	2b00      	cmp	r3, #0
 801d332:	f340 837b 	ble.w	801da2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 801d336:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801d338:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d33c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d340:	1e48      	subs	r0, r1, #1
 801d342:	1e57      	subs	r7, r2, #1
 801d344:	9b07      	ldr	r3, [sp, #28]
 801d346:	2b00      	cmp	r3, #0
 801d348:	f340 8194 	ble.w	801d674 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801d34c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d350:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d354:	d406      	bmi.n	801d364 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d356:	4584      	cmp	ip, r0
 801d358:	da04      	bge.n	801d364 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d35a:	2b00      	cmp	r3, #0
 801d35c:	db02      	blt.n	801d364 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d35e:	42bb      	cmp	r3, r7
 801d360:	f2c0 8189 	blt.w	801d676 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801d364:	f11c 0c01 	adds.w	ip, ip, #1
 801d368:	f100 8179 	bmi.w	801d65e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801d36c:	4561      	cmp	r1, ip
 801d36e:	f2c0 8176 	blt.w	801d65e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801d372:	3301      	adds	r3, #1
 801d374:	f100 8173 	bmi.w	801d65e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801d378:	429a      	cmp	r2, r3
 801d37a:	f2c0 8170 	blt.w	801d65e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801d37e:	9b07      	ldr	r3, [sp, #28]
 801d380:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d382:	9318      	str	r3, [sp, #96]	; 0x60
 801d384:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d386:	2b00      	cmp	r3, #0
 801d388:	f340 8192 	ble.w	801d6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801d38c:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801d38e:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801d392:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801d394:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801d398:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d39c:	1422      	asrs	r2, r4, #16
 801d39e:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d3a2:	689b      	ldr	r3, [r3, #8]
 801d3a4:	f100 81d3 	bmi.w	801d74e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801d3a8:	f103 38ff 	add.w	r8, r3, #4294967295
 801d3ac:	4542      	cmp	r2, r8
 801d3ae:	f280 81ce 	bge.w	801d74e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801d3b2:	f1bc 0f00 	cmp.w	ip, #0
 801d3b6:	f2c0 81ca 	blt.w	801d74e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801d3ba:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d3be:	45c4      	cmp	ip, r8
 801d3c0:	f280 81c5 	bge.w	801d74e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801d3c4:	b21b      	sxth	r3, r3
 801d3c6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d3c8:	fb0c 2203 	mla	r2, ip, r3, r2
 801d3cc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801d3d0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801d3d4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801d3d8:	2800      	cmp	r0, #0
 801d3da:	f000 81af 	beq.w	801d73c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801d3de:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801d3e2:	950c      	str	r5, [sp, #48]	; 0x30
 801d3e4:	0e2d      	lsrs	r5, r5, #24
 801d3e6:	9513      	str	r5, [sp, #76]	; 0x4c
 801d3e8:	b181      	cbz	r1, 801d40c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801d3ea:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801d3ee:	3b01      	subs	r3, #1
 801d3f0:	009b      	lsls	r3, r3, #2
 801d3f2:	3304      	adds	r3, #4
 801d3f4:	eb08 0c03 	add.w	ip, r8, r3
 801d3f8:	f858 3003 	ldr.w	r3, [r8, r3]
 801d3fc:	9308      	str	r3, [sp, #32]
 801d3fe:	0e1b      	lsrs	r3, r3, #24
 801d400:	9311      	str	r3, [sp, #68]	; 0x44
 801d402:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801d406:	930d      	str	r3, [sp, #52]	; 0x34
 801d408:	0e1b      	lsrs	r3, r3, #24
 801d40a:	9314      	str	r3, [sp, #80]	; 0x50
 801d40c:	b280      	uxth	r0, r0
 801d40e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d410:	b289      	uxth	r1, r1
 801d412:	fb00 f901 	mul.w	r9, r0, r1
 801d416:	0100      	lsls	r0, r0, #4
 801d418:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d41c:	eba0 0809 	sub.w	r8, r0, r9
 801d420:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d424:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d426:	b289      	uxth	r1, r1
 801d428:	fa1f f888 	uxth.w	r8, r8
 801d42c:	1a5b      	subs	r3, r3, r1
 801d42e:	fb08 f000 	mul.w	r0, r8, r0
 801d432:	b29b      	uxth	r3, r3
 801d434:	fb03 000e 	mla	r0, r3, lr, r0
 801d438:	fb01 0005 	mla	r0, r1, r5, r0
 801d43c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d43e:	fb09 0005 	mla	r0, r9, r5, r0
 801d442:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d446:	2800      	cmp	r0, #0
 801d448:	f000 8100 	beq.w	801d64c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801d44c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801d450:	d01b      	beq.n	801d48a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801d452:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801d456:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d45a:	fb0e fa0a 	mul.w	sl, lr, sl
 801d45e:	fb0e fe02 	mul.w	lr, lr, r2
 801d462:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801d466:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d46a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801d46e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d472:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d476:	4452      	add	r2, sl
 801d478:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d47c:	0a12      	lsrs	r2, r2, #8
 801d47e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d482:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d486:	ea42 020c 	orr.w	r2, r2, ip
 801d48a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d48c:	2dff      	cmp	r5, #255	; 0xff
 801d48e:	d021      	beq.n	801d4d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801d490:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d492:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d496:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d498:	fb05 fb0b 	mul.w	fp, r5, fp
 801d49c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d49e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d4a2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d4a4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d4a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d4ac:	fb05 fa0a 	mul.w	sl, r5, sl
 801d4b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d4b4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d4b8:	44de      	add	lr, fp
 801d4ba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d4be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d4c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d4c6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d4ca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d4ce:	ea4e 050a 	orr.w	r5, lr, sl
 801d4d2:	950c      	str	r5, [sp, #48]	; 0x30
 801d4d4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d4d6:	2dff      	cmp	r5, #255	; 0xff
 801d4d8:	d021      	beq.n	801d51e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d4da:	9d08      	ldr	r5, [sp, #32]
 801d4dc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d4e0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d4e2:	fb05 fb0b 	mul.w	fp, r5, fp
 801d4e6:	9d08      	ldr	r5, [sp, #32]
 801d4e8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d4ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d4ee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d4f2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d4f6:	fb05 fa0a 	mul.w	sl, r5, sl
 801d4fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d4fe:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d502:	44de      	add	lr, fp
 801d504:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d508:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d50c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d510:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d514:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d518:	ea4e 050a 	orr.w	r5, lr, sl
 801d51c:	9508      	str	r5, [sp, #32]
 801d51e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d520:	2dff      	cmp	r5, #255	; 0xff
 801d522:	d021      	beq.n	801d568 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801d524:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d526:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d52a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d52c:	fb05 fb0b 	mul.w	fp, r5, fp
 801d530:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d532:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d536:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d538:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d53c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d540:	fb05 fa0a 	mul.w	sl, r5, sl
 801d544:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d548:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d54c:	44de      	add	lr, fp
 801d54e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d552:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d556:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d55a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d55e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d562:	ea4e 050a 	orr.w	r5, lr, sl
 801d566:	950d      	str	r5, [sp, #52]	; 0x34
 801d568:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d56a:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801d56e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d572:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d576:	9d08      	ldr	r5, [sp, #32]
 801d578:	fb08 fc0c 	mul.w	ip, r8, ip
 801d57c:	fb03 cc0e 	mla	ip, r3, lr, ip
 801d580:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801d584:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d586:	fb01 cc0e 	mla	ip, r1, lr, ip
 801d58a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801d58e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d590:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d594:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801d598:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d59a:	fb08 f80e 	mul.w	r8, r8, lr
 801d59e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d5a2:	f8b7 e000 	ldrh.w	lr, [r7]
 801d5a6:	fb03 8202 	mla	r2, r3, r2, r8
 801d5aa:	9b08      	ldr	r3, [sp, #32]
 801d5ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d5b0:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801d5b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d5b6:	fb01 220a 	mla	r2, r1, sl, r2
 801d5ba:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801d5be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d5c0:	fb09 2901 	mla	r9, r9, r1, r2
 801d5c4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d5c6:	4343      	muls	r3, r0
 801d5c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d5cc:	1c58      	adds	r0, r3, #1
 801d5ce:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801d5d2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d5d6:	ea4c 0c09 	orr.w	ip, ip, r9
 801d5da:	ea4f 232e 	mov.w	r3, lr, asr #8
 801d5de:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801d5e2:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801d5e6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801d5ea:	b2c0      	uxtb	r0, r0
 801d5ec:	fb11 f102 	smulbb	r1, r1, r2
 801d5f0:	ea4f 02ee 	mov.w	r2, lr, asr #3
 801d5f4:	fb03 1300 	mla	r3, r3, r0, r1
 801d5f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d5fc:	b299      	uxth	r1, r3
 801d5fe:	f3cc 2307 	ubfx	r3, ip, #8, #8
 801d602:	fa5f fc8c 	uxtb.w	ip, ip
 801d606:	fb13 f305 	smulbb	r3, r3, r5
 801d60a:	fb1c fc05 	smulbb	ip, ip, r5
 801d60e:	fb02 3200 	mla	r2, r2, r0, r3
 801d612:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 801d616:	b2db      	uxtb	r3, r3
 801d618:	b292      	uxth	r2, r2
 801d61a:	fb03 cc00 	mla	ip, r3, r0, ip
 801d61e:	1c4b      	adds	r3, r1, #1
 801d620:	fa1f fc8c 	uxth.w	ip, ip
 801d624:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d628:	1c51      	adds	r1, r2, #1
 801d62a:	f10c 0001 	add.w	r0, ip, #1
 801d62e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d632:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801d636:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 801d63a:	0952      	lsrs	r2, r2, #5
 801d63c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d640:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d644:	ea43 030c 	orr.w	r3, r3, ip
 801d648:	4313      	orrs	r3, r2
 801d64a:	803b      	strh	r3, [r7, #0]
 801d64c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801d64e:	3702      	adds	r7, #2
 801d650:	441c      	add	r4, r3
 801d652:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801d654:	441e      	add	r6, r3
 801d656:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d658:	3b01      	subs	r3, #1
 801d65a:	9318      	str	r3, [sp, #96]	; 0x60
 801d65c:	e692      	b.n	801d384 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801d65e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801d660:	441c      	add	r4, r3
 801d662:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801d664:	441e      	add	r6, r3
 801d666:	9b07      	ldr	r3, [sp, #28]
 801d668:	3b01      	subs	r3, #1
 801d66a:	9307      	str	r3, [sp, #28]
 801d66c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d66e:	3302      	adds	r3, #2
 801d670:	930a      	str	r3, [sp, #40]	; 0x28
 801d672:	e667      	b.n	801d344 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d674:	d023      	beq.n	801d6be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801d676:	9b07      	ldr	r3, [sp, #28]
 801d678:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801d67a:	3b01      	subs	r3, #1
 801d67c:	fb00 4003 	mla	r0, r0, r3, r4
 801d680:	1400      	asrs	r0, r0, #16
 801d682:	f53f ae7c 	bmi.w	801d37e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d686:	3901      	subs	r1, #1
 801d688:	4288      	cmp	r0, r1
 801d68a:	f6bf ae78 	bge.w	801d37e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d68e:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801d690:	fb01 6303 	mla	r3, r1, r3, r6
 801d694:	141b      	asrs	r3, r3, #16
 801d696:	f53f ae72 	bmi.w	801d37e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d69a:	3a01      	subs	r2, #1
 801d69c:	4293      	cmp	r3, r2
 801d69e:	f6bf ae6e 	bge.w	801d37e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d6a2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801d6a6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801d6aa:	f1bb 0f00 	cmp.w	fp, #0
 801d6ae:	dc6c      	bgt.n	801d78a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801d6b0:	9b07      	ldr	r3, [sp, #28]
 801d6b2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801d6b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d6b8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d6bc:	930a      	str	r3, [sp, #40]	; 0x28
 801d6be:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d6c0:	2b00      	cmp	r3, #0
 801d6c2:	f340 81b3 	ble.w	801da2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 801d6c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d6ca:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d6cc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801d6d0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801d6d4:	eef0 6a48 	vmov.f32	s13, s16
 801d6d8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801d6dc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801d6e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d6e4:	ee16 4a90 	vmov	r4, s13
 801d6e8:	eef0 6a68 	vmov.f32	s13, s17
 801d6ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d6f0:	ee16 6a90 	vmov	r6, s13
 801d6f4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801d6f8:	ee69 7a27 	vmul.f32	s15, s18, s15
 801d6fc:	ee37 8a48 	vsub.f32	s16, s14, s16
 801d700:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801d704:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801d708:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801d70c:	ee18 2a10 	vmov	r2, s16
 801d710:	eeb0 8a47 	vmov.f32	s16, s14
 801d714:	fb92 f3f3 	sdiv	r3, r2, r3
 801d718:	ee18 2a90 	vmov	r2, s17
 801d71c:	9331      	str	r3, [sp, #196]	; 0xc4
 801d71e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d720:	eef0 8a67 	vmov.f32	s17, s15
 801d724:	fb92 f3f3 	sdiv	r3, r2, r3
 801d728:	9332      	str	r3, [sp, #200]	; 0xc8
 801d72a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d72c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801d72e:	3b01      	subs	r3, #1
 801d730:	9317      	str	r3, [sp, #92]	; 0x5c
 801d732:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d734:	bf08      	it	eq
 801d736:	4613      	moveq	r3, r2
 801d738:	9307      	str	r3, [sp, #28]
 801d73a:	e5f5      	b.n	801d328 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801d73c:	2900      	cmp	r1, #0
 801d73e:	f43f ae65 	beq.w	801d40c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801d742:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801d746:	9308      	str	r3, [sp, #32]
 801d748:	0e1b      	lsrs	r3, r3, #24
 801d74a:	9311      	str	r3, [sp, #68]	; 0x44
 801d74c:	e65e      	b.n	801d40c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801d74e:	f112 0801 	adds.w	r8, r2, #1
 801d752:	f53f af7b 	bmi.w	801d64c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801d756:	4543      	cmp	r3, r8
 801d758:	f6ff af78 	blt.w	801d64c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801d75c:	f11c 0801 	adds.w	r8, ip, #1
 801d760:	f53f af74 	bmi.w	801d64c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801d764:	45c6      	cmp	lr, r8
 801d766:	f6ff af71 	blt.w	801d64c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801d76a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d76c:	b21b      	sxth	r3, r3
 801d76e:	9201      	str	r2, [sp, #4]
 801d770:	fa0f f28e 	sxth.w	r2, lr
 801d774:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801d778:	e9cd c002 	strd	ip, r0, [sp, #8]
 801d77c:	9200      	str	r2, [sp, #0]
 801d77e:	4639      	mov	r1, r7
 801d780:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d782:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801d784:	f7ff fc42 	bl	801d00c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801d788:	e760      	b.n	801d64c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801d78a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801d78c:	1427      	asrs	r7, r4, #16
 801d78e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d790:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d794:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d798:	1433      	asrs	r3, r6, #16
 801d79a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d79e:	fb01 7303 	mla	r3, r1, r3, r7
 801d7a2:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801d7a6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801d7aa:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d7ae:	2a00      	cmp	r2, #0
 801d7b0:	f000 8133 	beq.w	801da1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74e>
 801d7b4:	687d      	ldr	r5, [r7, #4]
 801d7b6:	950e      	str	r5, [sp, #56]	; 0x38
 801d7b8:	0e2d      	lsrs	r5, r5, #24
 801d7ba:	9515      	str	r5, [sp, #84]	; 0x54
 801d7bc:	b178      	cbz	r0, 801d7de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801d7be:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801d7c2:	3901      	subs	r1, #1
 801d7c4:	0089      	lsls	r1, r1, #2
 801d7c6:	3104      	adds	r1, #4
 801d7c8:	eb07 0e01 	add.w	lr, r7, r1
 801d7cc:	5879      	ldr	r1, [r7, r1]
 801d7ce:	9109      	str	r1, [sp, #36]	; 0x24
 801d7d0:	0e09      	lsrs	r1, r1, #24
 801d7d2:	9112      	str	r1, [sp, #72]	; 0x48
 801d7d4:	f8de 1004 	ldr.w	r1, [lr, #4]
 801d7d8:	910f      	str	r1, [sp, #60]	; 0x3c
 801d7da:	0e09      	lsrs	r1, r1, #24
 801d7dc:	9116      	str	r1, [sp, #88]	; 0x58
 801d7de:	b292      	uxth	r2, r2
 801d7e0:	9915      	ldr	r1, [sp, #84]	; 0x54
 801d7e2:	b280      	uxth	r0, r0
 801d7e4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d7e6:	fb02 f800 	mul.w	r8, r2, r0
 801d7ea:	0112      	lsls	r2, r2, #4
 801d7ec:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801d7f0:	eba2 0e08 	sub.w	lr, r2, r8
 801d7f4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801d7f8:	b280      	uxth	r0, r0
 801d7fa:	fa1f fe8e 	uxth.w	lr, lr
 801d7fe:	1a12      	subs	r2, r2, r0
 801d800:	fb0e f101 	mul.w	r1, lr, r1
 801d804:	b292      	uxth	r2, r2
 801d806:	fb02 110c 	mla	r1, r2, ip, r1
 801d80a:	fb00 1105 	mla	r1, r0, r5, r1
 801d80e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d810:	fb08 1105 	mla	r1, r8, r5, r1
 801d814:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d818:	2900      	cmp	r1, #0
 801d81a:	f000 80f5 	beq.w	801da08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 801d81e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801d822:	d019      	beq.n	801d858 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 801d824:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801d828:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d82c:	fb0c fa0a 	mul.w	sl, ip, sl
 801d830:	fb0c fc03 	mul.w	ip, ip, r3
 801d834:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d838:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d83c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801d840:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d844:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d848:	4453      	add	r3, sl
 801d84a:	0a3f      	lsrs	r7, r7, #8
 801d84c:	0a1b      	lsrs	r3, r3, #8
 801d84e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801d852:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d856:	433b      	orrs	r3, r7
 801d858:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d85a:	2dff      	cmp	r5, #255	; 0xff
 801d85c:	d020      	beq.n	801d8a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 801d85e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d860:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d864:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d866:	436f      	muls	r7, r5
 801d868:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d86a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d86e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d872:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d874:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d878:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d87c:	fb05 fa0a 	mul.w	sl, r5, sl
 801d880:	44bc      	add	ip, r7
 801d882:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d886:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d88a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d88e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d892:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d896:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d89a:	ea4c 050a 	orr.w	r5, ip, sl
 801d89e:	950e      	str	r5, [sp, #56]	; 0x38
 801d8a0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d8a2:	2dff      	cmp	r5, #255	; 0xff
 801d8a4:	d020      	beq.n	801d8e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 801d8a6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d8a8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d8ac:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d8ae:	436f      	muls	r7, r5
 801d8b0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d8b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d8b6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d8ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d8bc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d8c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d8c4:	fb05 fa0a 	mul.w	sl, r5, sl
 801d8c8:	44bc      	add	ip, r7
 801d8ca:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d8ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d8d2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d8d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d8da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d8de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d8e2:	ea4c 050a 	orr.w	r5, ip, sl
 801d8e6:	9509      	str	r5, [sp, #36]	; 0x24
 801d8e8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d8ea:	2dff      	cmp	r5, #255	; 0xff
 801d8ec:	d020      	beq.n	801d930 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 801d8ee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d8f0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d8f4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d8f6:	436f      	muls	r7, r5
 801d8f8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d8fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d8fe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d902:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d904:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d908:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d90c:	fb05 fa0a 	mul.w	sl, r5, sl
 801d910:	44bc      	add	ip, r7
 801d912:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d916:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d91a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d91e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d922:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d926:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d92a:	ea4c 050a 	orr.w	r5, ip, sl
 801d92e:	950f      	str	r5, [sp, #60]	; 0x3c
 801d930:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d932:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801d936:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d93a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d93e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d940:	fb0e f707 	mul.w	r7, lr, r7
 801d944:	fb02 770c 	mla	r7, r2, ip, r7
 801d948:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d94c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d94e:	fb00 770c 	mla	r7, r0, ip, r7
 801d952:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d956:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d958:	fb08 770c 	mla	r7, r8, ip, r7
 801d95c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801d960:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d962:	fb0e fe0c 	mul.w	lr, lr, ip
 801d966:	0a3f      	lsrs	r7, r7, #8
 801d968:	fb02 e303 	mla	r3, r2, r3, lr
 801d96c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d96e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801d972:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801d976:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d978:	fb00 330a 	mla	r3, r0, sl, r3
 801d97c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801d980:	f8b9 0000 	ldrh.w	r0, [r9]
 801d984:	fb08 3c0c 	mla	ip, r8, ip, r3
 801d988:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d98a:	1202      	asrs	r2, r0, #8
 801d98c:	4359      	muls	r1, r3
 801d98e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d992:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d996:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d99a:	1c4b      	adds	r3, r1, #1
 801d99c:	ea47 070c 	orr.w	r7, r7, ip
 801d9a0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d9a4:	0c3b      	lsrs	r3, r7, #16
 801d9a6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801d9aa:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801d9ae:	b2ff      	uxtb	r7, r7
 801d9b0:	fb13 f305 	smulbb	r3, r3, r5
 801d9b4:	b2c9      	uxtb	r1, r1
 801d9b6:	fb17 f705 	smulbb	r7, r7, r5
 801d9ba:	fb02 3201 	mla	r2, r2, r1, r3
 801d9be:	10c3      	asrs	r3, r0, #3
 801d9c0:	fb1c fc05 	smulbb	ip, ip, r5
 801d9c4:	00c0      	lsls	r0, r0, #3
 801d9c6:	b292      	uxth	r2, r2
 801d9c8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801d9cc:	b2c0      	uxtb	r0, r0
 801d9ce:	fb03 c301 	mla	r3, r3, r1, ip
 801d9d2:	fb00 7001 	mla	r0, r0, r1, r7
 801d9d6:	1c51      	adds	r1, r2, #1
 801d9d8:	b29b      	uxth	r3, r3
 801d9da:	b280      	uxth	r0, r0
 801d9dc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d9e0:	f100 0c01 	add.w	ip, r0, #1
 801d9e4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801d9e8:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801d9ec:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d9f0:	ea42 020c 	orr.w	r2, r2, ip
 801d9f4:	f103 0c01 	add.w	ip, r3, #1
 801d9f8:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801d9fc:	095b      	lsrs	r3, r3, #5
 801d9fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801da02:	431a      	orrs	r2, r3
 801da04:	f8a9 2000 	strh.w	r2, [r9]
 801da08:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801da0a:	f109 0902 	add.w	r9, r9, #2
 801da0e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801da12:	441c      	add	r4, r3
 801da14:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801da16:	441e      	add	r6, r3
 801da18:	e647      	b.n	801d6aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801da1a:	2800      	cmp	r0, #0
 801da1c:	f43f aedf 	beq.w	801d7de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801da20:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801da24:	9109      	str	r1, [sp, #36]	; 0x24
 801da26:	0e09      	lsrs	r1, r1, #24
 801da28:	9112      	str	r1, [sp, #72]	; 0x48
 801da2a:	e6d8      	b.n	801d7de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801da2c:	b01d      	add	sp, #116	; 0x74
 801da2e:	ecbd 8b08 	vpop	{d8-d11}
 801da32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801da38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801da38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da3c:	880e      	ldrh	r6, [r1, #0]
 801da3e:	b085      	sub	sp, #20
 801da40:	4690      	mov	r8, r2
 801da42:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801da46:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801da4a:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801da4e:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 801da52:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 801da56:	00f6      	lsls	r6, r6, #3
 801da58:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801da5c:	9200      	str	r2, [sp, #0]
 801da5e:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 801da62:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801da66:	9201      	str	r2, [sp, #4]
 801da68:	b2f2      	uxtb	r2, r6
 801da6a:	2c00      	cmp	r4, #0
 801da6c:	fb04 5603 	mla	r6, r4, r3, r5
 801da70:	9202      	str	r2, [sp, #8]
 801da72:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 801da76:	db36      	blt.n	801dae6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801da78:	45a6      	cmp	lr, r4
 801da7a:	dd34      	ble.n	801dae6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801da7c:	2d00      	cmp	r5, #0
 801da7e:	db30      	blt.n	801dae2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 801da80:	42ab      	cmp	r3, r5
 801da82:	dd2e      	ble.n	801dae2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 801da84:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801da88:	1c6e      	adds	r6, r5, #1
 801da8a:	d42f      	bmi.n	801daec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 801da8c:	42b3      	cmp	r3, r6
 801da8e:	dd2d      	ble.n	801daec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 801da90:	b370      	cbz	r0, 801daf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb8>
 801da92:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801da96:	3401      	adds	r4, #1
 801da98:	d42e      	bmi.n	801daf8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 801da9a:	45a6      	cmp	lr, r4
 801da9c:	dd2c      	ble.n	801daf8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 801da9e:	b377      	cbz	r7, 801dafe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc6>
 801daa0:	2d00      	cmp	r5, #0
 801daa2:	db27      	blt.n	801daf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 801daa4:	42ab      	cmp	r3, r5
 801daa6:	dd25      	ble.n	801daf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 801daa8:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801daac:	3501      	adds	r5, #1
 801daae:	d429      	bmi.n	801db04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801dab0:	42ab      	cmp	r3, r5
 801dab2:	dd27      	ble.n	801db04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801dab4:	b340      	cbz	r0, 801db08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801dab6:	3301      	adds	r3, #1
 801dab8:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801dabc:	280f      	cmp	r0, #15
 801dabe:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801dac2:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801dac6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801daca:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801dace:	d801      	bhi.n	801dad4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9c>
 801dad0:	2f0f      	cmp	r7, #15
 801dad2:	d91b      	bls.n	801db0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 801dad4:	4b7e      	ldr	r3, [pc, #504]	; (801dcd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 801dad6:	f240 210d 	movw	r1, #525	; 0x20d
 801dada:	4a7e      	ldr	r2, [pc, #504]	; (801dcd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801dadc:	487e      	ldr	r0, [pc, #504]	; (801dcd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801dade:	f003 f947 	bl	8020d70 <__assert_func>
 801dae2:	2200      	movs	r2, #0
 801dae4:	e7d0      	b.n	801da88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 801dae6:	2600      	movs	r6, #0
 801dae8:	4632      	mov	r2, r6
 801daea:	e7d4      	b.n	801da96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801daec:	2600      	movs	r6, #0
 801daee:	e7d2      	b.n	801da96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801daf0:	4606      	mov	r6, r0
 801daf2:	e7d0      	b.n	801da96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801daf4:	2400      	movs	r4, #0
 801daf6:	e7d9      	b.n	801daac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x74>
 801daf8:	2300      	movs	r3, #0
 801dafa:	461c      	mov	r4, r3
 801dafc:	e7de      	b.n	801dabc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801dafe:	463b      	mov	r3, r7
 801db00:	463c      	mov	r4, r7
 801db02:	e7db      	b.n	801dabc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801db04:	2300      	movs	r3, #0
 801db06:	e7d9      	b.n	801dabc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801db08:	4603      	mov	r3, r0
 801db0a:	e7d7      	b.n	801dabc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801db0c:	b280      	uxth	r0, r0
 801db0e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801db12:	b2bf      	uxth	r7, r7
 801db14:	fb00 fe07 	mul.w	lr, r0, r7
 801db18:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801db1c:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801db20:	eba0 0c0e 	sub.w	ip, r0, lr
 801db24:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801db28:	b2bf      	uxth	r7, r7
 801db2a:	fa1f fc8c 	uxth.w	ip, ip
 801db2e:	eba5 0507 	sub.w	r5, r5, r7
 801db32:	fb0c f00a 	mul.w	r0, ip, sl
 801db36:	b2ad      	uxth	r5, r5
 801db38:	fb05 000b 	mla	r0, r5, fp, r0
 801db3c:	fb07 0009 	mla	r0, r7, r9, r0
 801db40:	fb0e 0008 	mla	r0, lr, r8, r0
 801db44:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801db48:	9003      	str	r0, [sp, #12]
 801db4a:	d018      	beq.n	801db7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x146>
 801db4c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801db50:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801db54:	fb0b f000 	mul.w	r0, fp, r0
 801db58:	fb0b fb02 	mul.w	fp, fp, r2
 801db5c:	0a02      	lsrs	r2, r0, #8
 801db5e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801db62:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801db66:	4402      	add	r2, r0
 801db68:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801db6c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801db70:	0a12      	lsrs	r2, r2, #8
 801db72:	0a00      	lsrs	r0, r0, #8
 801db74:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801db78:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801db7c:	4302      	orrs	r2, r0
 801db7e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801db82:	d019      	beq.n	801dbb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x180>
 801db84:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801db88:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801db8c:	fb0a fb0b 	mul.w	fp, sl, fp
 801db90:	fb0a fa06 	mul.w	sl, sl, r6
 801db94:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801db98:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801db9c:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801dba0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801dba4:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801dba8:	445e      	add	r6, fp
 801dbaa:	0a00      	lsrs	r0, r0, #8
 801dbac:	0a36      	lsrs	r6, r6, #8
 801dbae:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801dbb2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801dbb6:	4306      	orrs	r6, r0
 801dbb8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dbbc:	d019      	beq.n	801dbf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1ba>
 801dbbe:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801dbc2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801dbc6:	fb09 fa0a 	mul.w	sl, r9, sl
 801dbca:	fb09 f904 	mul.w	r9, r9, r4
 801dbce:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801dbd2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801dbd6:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801dbda:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801dbde:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801dbe2:	4454      	add	r4, sl
 801dbe4:	0a00      	lsrs	r0, r0, #8
 801dbe6:	0a24      	lsrs	r4, r4, #8
 801dbe8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801dbec:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801dbf0:	4304      	orrs	r4, r0
 801dbf2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801dbf6:	d019      	beq.n	801dc2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f4>
 801dbf8:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801dbfc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dc00:	fb08 f909 	mul.w	r9, r8, r9
 801dc04:	fb08 f803 	mul.w	r8, r8, r3
 801dc08:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801dc0c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801dc10:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801dc14:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dc18:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801dc1c:	444b      	add	r3, r9
 801dc1e:	0a00      	lsrs	r0, r0, #8
 801dc20:	0a1b      	lsrs	r3, r3, #8
 801dc22:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801dc26:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dc2a:	4303      	orrs	r3, r0
 801dc2c:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801dc30:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801dc34:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801dc38:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801dc3c:	fb0c f808 	mul.w	r8, ip, r8
 801dc40:	fb0c f606 	mul.w	r6, ip, r6
 801dc44:	fb05 8800 	mla	r8, r5, r0, r8
 801dc48:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801dc4c:	fb05 6202 	mla	r2, r5, r2, r6
 801dc50:	9d01      	ldr	r5, [sp, #4]
 801dc52:	fb07 8800 	mla	r8, r7, r0, r8
 801dc56:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801dc5a:	fb0e 8000 	mla	r0, lr, r0, r8
 801dc5e:	0a00      	lsrs	r0, r0, #8
 801dc60:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801dc64:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801dc68:	9c02      	ldr	r4, [sp, #8]
 801dc6a:	fb07 2700 	mla	r7, r7, r0, r2
 801dc6e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801dc72:	9b03      	ldr	r3, [sp, #12]
 801dc74:	fb0e 7000 	mla	r0, lr, r0, r7
 801dc78:	43da      	mvns	r2, r3
 801dc7a:	9b00      	ldr	r3, [sp, #0]
 801dc7c:	0a00      	lsrs	r0, r0, #8
 801dc7e:	b2d2      	uxtb	r2, r2
 801dc80:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801dc84:	4353      	muls	r3, r2
 801dc86:	4354      	muls	r4, r2
 801dc88:	ea48 0000 	orr.w	r0, r8, r0
 801dc8c:	4355      	muls	r5, r2
 801dc8e:	4622      	mov	r2, r4
 801dc90:	1c5c      	adds	r4, r3, #1
 801dc92:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 801dc96:	0c03      	lsrs	r3, r0, #16
 801dc98:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801dc9c:	4b0f      	ldr	r3, [pc, #60]	; (801dcdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 801dc9e:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 801dca2:	1c54      	adds	r4, r2, #1
 801dca4:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 801dca8:	b2c2      	uxtb	r2, r0
 801dcaa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801dcae:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801dcb2:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801dcb6:	1c6a      	adds	r2, r5, #1
 801dcb8:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801dcbc:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801dcc0:	00c0      	lsls	r0, r0, #3
 801dcc2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dcc6:	4318      	orrs	r0, r3
 801dcc8:	8008      	strh	r0, [r1, #0]
 801dcca:	b005      	add	sp, #20
 801dccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dcd0:	080252eb 	.word	0x080252eb
 801dcd4:	080258a9 	.word	0x080258a9
 801dcd8:	080253d4 	.word	0x080253d4
 801dcdc:	fffff800 	.word	0xfffff800

0801dce0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dce4:	ed2d 8b08 	vpush	{d8-d11}
 801dce8:	b09b      	sub	sp, #108	; 0x6c
 801dcea:	eeb0 aa40 	vmov.f32	s20, s0
 801dcee:	eef0 9a60 	vmov.f32	s19, s1
 801dcf2:	9218      	str	r2, [sp, #96]	; 0x60
 801dcf4:	eeb0 9a41 	vmov.f32	s18, s2
 801dcf8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801dcfa:	eeb0 8a62 	vmov.f32	s16, s5
 801dcfe:	9019      	str	r0, [sp, #100]	; 0x64
 801dd00:	eef0 8a43 	vmov.f32	s17, s6
 801dd04:	6850      	ldr	r0, [r2, #4]
 801dd06:	eef0 ba44 	vmov.f32	s23, s8
 801dd0a:	9116      	str	r1, [sp, #88]	; 0x58
 801dd0c:	eeb0 ba64 	vmov.f32	s22, s9
 801dd10:	9307      	str	r3, [sp, #28]
 801dd12:	eef0 aa45 	vmov.f32	s21, s10
 801dd16:	6812      	ldr	r2, [r2, #0]
 801dd18:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801dd1c:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801dd20:	fb00 1303 	mla	r3, r0, r3, r1
 801dd24:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dd28:	930a      	str	r3, [sp, #40]	; 0x28
 801dd2a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801dd2c:	681b      	ldr	r3, [r3, #0]
 801dd2e:	930f      	str	r3, [sp, #60]	; 0x3c
 801dd30:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801dd32:	2b00      	cmp	r3, #0
 801dd34:	dc03      	bgt.n	801dd3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801dd36:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dd38:	2b00      	cmp	r3, #0
 801dd3a:	f340 838b 	ble.w	801e454 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>
 801dd3e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801dd40:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dd44:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dd48:	1e48      	subs	r0, r1, #1
 801dd4a:	1e57      	subs	r7, r2, #1
 801dd4c:	9b07      	ldr	r3, [sp, #28]
 801dd4e:	2b00      	cmp	r3, #0
 801dd50:	f340 818b 	ble.w	801e06a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801dd54:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801dd58:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dd5c:	d406      	bmi.n	801dd6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801dd5e:	4584      	cmp	ip, r0
 801dd60:	da04      	bge.n	801dd6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801dd62:	2b00      	cmp	r3, #0
 801dd64:	db02      	blt.n	801dd6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801dd66:	42bb      	cmp	r3, r7
 801dd68:	f2c0 8180 	blt.w	801e06c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801dd6c:	f11c 0c01 	adds.w	ip, ip, #1
 801dd70:	f100 8170 	bmi.w	801e054 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801dd74:	4561      	cmp	r1, ip
 801dd76:	f2c0 816d 	blt.w	801e054 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801dd7a:	3301      	adds	r3, #1
 801dd7c:	f100 816a 	bmi.w	801e054 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801dd80:	429a      	cmp	r2, r3
 801dd82:	f2c0 8167 	blt.w	801e054 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801dd86:	9b07      	ldr	r3, [sp, #28]
 801dd88:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801dd8a:	9317      	str	r3, [sp, #92]	; 0x5c
 801dd8c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801dd8e:	2b00      	cmp	r3, #0
 801dd90:	f340 8189 	ble.w	801e0a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801dd94:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801dd96:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801dd9a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801dd9c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801dda0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801dda4:	1422      	asrs	r2, r4, #16
 801dda6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ddaa:	689b      	ldr	r3, [r3, #8]
 801ddac:	f100 81d8 	bmi.w	801e160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801ddb0:	f103 38ff 	add.w	r8, r3, #4294967295
 801ddb4:	4542      	cmp	r2, r8
 801ddb6:	f280 81d3 	bge.w	801e160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801ddba:	f1bc 0f00 	cmp.w	ip, #0
 801ddbe:	f2c0 81cf 	blt.w	801e160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801ddc2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ddc6:	45c4      	cmp	ip, r8
 801ddc8:	f280 81ca 	bge.w	801e160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801ddcc:	b21b      	sxth	r3, r3
 801ddce:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ddd0:	fb0c 2203 	mla	r2, ip, r3, r2
 801ddd4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ddd8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801dddc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801dde0:	2900      	cmp	r1, #0
 801dde2:	f000 81a6 	beq.w	801e132 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801dde6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ddea:	950b      	str	r5, [sp, #44]	; 0x2c
 801ddec:	0e2d      	lsrs	r5, r5, #24
 801ddee:	9512      	str	r5, [sp, #72]	; 0x48
 801ddf0:	b180      	cbz	r0, 801de14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801ddf2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ddf6:	3b01      	subs	r3, #1
 801ddf8:	009b      	lsls	r3, r3, #2
 801ddfa:	3304      	adds	r3, #4
 801ddfc:	eb08 0c03 	add.w	ip, r8, r3
 801de00:	f858 3003 	ldr.w	r3, [r8, r3]
 801de04:	9308      	str	r3, [sp, #32]
 801de06:	0e1b      	lsrs	r3, r3, #24
 801de08:	9310      	str	r3, [sp, #64]	; 0x40
 801de0a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801de0e:	930c      	str	r3, [sp, #48]	; 0x30
 801de10:	0e1b      	lsrs	r3, r3, #24
 801de12:	9313      	str	r3, [sp, #76]	; 0x4c
 801de14:	b289      	uxth	r1, r1
 801de16:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801de18:	b280      	uxth	r0, r0
 801de1a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801de1c:	fb01 f900 	mul.w	r9, r1, r0
 801de20:	0109      	lsls	r1, r1, #4
 801de22:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801de26:	eba1 0809 	sub.w	r8, r1, r9
 801de2a:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801de2e:	b280      	uxth	r0, r0
 801de30:	fa1f f888 	uxth.w	r8, r8
 801de34:	1a09      	subs	r1, r1, r0
 801de36:	fb08 f303 	mul.w	r3, r8, r3
 801de3a:	b289      	uxth	r1, r1
 801de3c:	fb01 330e 	mla	r3, r1, lr, r3
 801de40:	fb00 3305 	mla	r3, r0, r5, r3
 801de44:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801de46:	fb09 3305 	mla	r3, r9, r5, r3
 801de4a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801de4e:	2b00      	cmp	r3, #0
 801de50:	f000 80f7 	beq.w	801e042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801de54:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801de58:	d01b      	beq.n	801de92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801de5a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801de5e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801de62:	fb0e fa0a 	mul.w	sl, lr, sl
 801de66:	fb0e fe02 	mul.w	lr, lr, r2
 801de6a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801de6e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801de72:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801de76:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801de7a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801de7e:	4452      	add	r2, sl
 801de80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801de84:	0a12      	lsrs	r2, r2, #8
 801de86:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801de8a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801de8e:	ea42 020c 	orr.w	r2, r2, ip
 801de92:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801de94:	2dff      	cmp	r5, #255	; 0xff
 801de96:	d021      	beq.n	801dedc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801de98:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801de9a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801de9e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801dea0:	fb05 fb0b 	mul.w	fp, r5, fp
 801dea4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801dea6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801deaa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801deac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801deb0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801deb4:	fb05 fa0a 	mul.w	sl, r5, sl
 801deb8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801debc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801dec0:	44de      	add	lr, fp
 801dec2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dec6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801deca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dece:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ded2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ded6:	ea4e 050a 	orr.w	r5, lr, sl
 801deda:	950b      	str	r5, [sp, #44]	; 0x2c
 801dedc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801dede:	2dff      	cmp	r5, #255	; 0xff
 801dee0:	d021      	beq.n	801df26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801dee2:	9d08      	ldr	r5, [sp, #32]
 801dee4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801dee8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801deea:	fb05 fb0b 	mul.w	fp, r5, fp
 801deee:	9d08      	ldr	r5, [sp, #32]
 801def0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801def4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801def6:	fb05 fa0e 	mul.w	sl, r5, lr
 801defa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801defe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801df02:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df06:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801df0a:	44de      	add	lr, fp
 801df0c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801df10:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801df14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801df18:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df1c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801df20:	ea4e 050a 	orr.w	r5, lr, sl
 801df24:	9508      	str	r5, [sp, #32]
 801df26:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801df28:	2dff      	cmp	r5, #255	; 0xff
 801df2a:	d021      	beq.n	801df70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801df2c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801df2e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801df32:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801df34:	fb05 fb0b 	mul.w	fp, r5, fp
 801df38:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801df3a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801df3e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801df40:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801df44:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801df48:	fb05 fa0a 	mul.w	sl, r5, sl
 801df4c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df50:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801df54:	44de      	add	lr, fp
 801df56:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801df5a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801df5e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801df62:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df66:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801df6a:	ea4e 050a 	orr.w	r5, lr, sl
 801df6e:	950c      	str	r5, [sp, #48]	; 0x30
 801df70:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801df72:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801df76:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801df7a:	2bff      	cmp	r3, #255	; 0xff
 801df7c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801df80:	9d08      	ldr	r5, [sp, #32]
 801df82:	fb08 fc0c 	mul.w	ip, r8, ip
 801df86:	fb01 cc0e 	mla	ip, r1, lr, ip
 801df8a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801df8e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801df90:	fb00 cc0e 	mla	ip, r0, lr, ip
 801df94:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801df98:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801df9a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801df9e:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801dfa2:	fb08 f80e 	mul.w	r8, r8, lr
 801dfa6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dfaa:	fb01 8202 	mla	r2, r1, r2, r8
 801dfae:	9908      	ldr	r1, [sp, #32]
 801dfb0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dfb4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801dfb8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dfba:	fb00 220a 	mla	r2, r0, sl, r2
 801dfbe:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801dfc2:	fb09 2900 	mla	r9, r9, r0, r2
 801dfc6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dfca:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801dfce:	ea4c 0c09 	orr.w	ip, ip, r9
 801dfd2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801dfd6:	f000 80b5 	beq.w	801e144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801dfda:	8839      	ldrh	r1, [r7, #0]
 801dfdc:	43db      	mvns	r3, r3
 801dfde:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801dfe2:	fa5f f883 	uxtb.w	r8, r3
 801dfe6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801dfea:	10c8      	asrs	r0, r1, #3
 801dfec:	00cb      	lsls	r3, r1, #3
 801dfee:	fb0e fe08 	mul.w	lr, lr, r8
 801dff2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801dff6:	b2db      	uxtb	r3, r3
 801dff8:	f10e 0101 	add.w	r1, lr, #1
 801dffc:	fb00 f008 	mul.w	r0, r0, r8
 801e000:	fb03 f308 	mul.w	r3, r3, r8
 801e004:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801e008:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 801e00c:	fa5f fc8c 	uxtb.w	ip, ip
 801e010:	eb0e 2e11 	add.w	lr, lr, r1, lsr #8
 801e014:	4960      	ldr	r1, [pc, #384]	; (801e198 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>)
 801e016:	ea01 2e0e 	and.w	lr, r1, lr, lsl #8
 801e01a:	1c59      	adds	r1, r3, #1
 801e01c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e020:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e024:	1c43      	adds	r3, r0, #1
 801e026:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e02a:	b2d3      	uxtb	r3, r2
 801e02c:	ea4e 0cdc 	orr.w	ip, lr, ip, lsr #3
 801e030:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e034:	00db      	lsls	r3, r3, #3
 801e036:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e03a:	ea4c 0c03 	orr.w	ip, ip, r3
 801e03e:	f8a7 c000 	strh.w	ip, [r7]
 801e042:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801e044:	3702      	adds	r7, #2
 801e046:	441c      	add	r4, r3
 801e048:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e04a:	441e      	add	r6, r3
 801e04c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e04e:	3b01      	subs	r3, #1
 801e050:	9317      	str	r3, [sp, #92]	; 0x5c
 801e052:	e69b      	b.n	801dd8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801e054:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801e056:	441c      	add	r4, r3
 801e058:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e05a:	441e      	add	r6, r3
 801e05c:	9b07      	ldr	r3, [sp, #28]
 801e05e:	3b01      	subs	r3, #1
 801e060:	9307      	str	r3, [sp, #28]
 801e062:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e064:	3302      	adds	r3, #2
 801e066:	930a      	str	r3, [sp, #40]	; 0x28
 801e068:	e670      	b.n	801dd4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e06a:	d023      	beq.n	801e0b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801e06c:	9b07      	ldr	r3, [sp, #28]
 801e06e:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801e070:	3b01      	subs	r3, #1
 801e072:	fb00 4003 	mla	r0, r0, r3, r4
 801e076:	1400      	asrs	r0, r0, #16
 801e078:	f53f ae85 	bmi.w	801dd86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e07c:	3901      	subs	r1, #1
 801e07e:	4288      	cmp	r0, r1
 801e080:	f6bf ae81 	bge.w	801dd86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e084:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801e086:	fb01 6303 	mla	r3, r1, r3, r6
 801e08a:	141b      	asrs	r3, r3, #16
 801e08c:	f53f ae7b 	bmi.w	801dd86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e090:	3a01      	subs	r2, #1
 801e092:	4293      	cmp	r3, r2
 801e094:	f6bf ae77 	bge.w	801dd86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e098:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e09c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801e0a0:	f1bb 0f00 	cmp.w	fp, #0
 801e0a4:	dc7a      	bgt.n	801e19c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 801e0a6:	9b07      	ldr	r3, [sp, #28]
 801e0a8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e0ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e0ae:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e0b2:	930a      	str	r3, [sp, #40]	; 0x28
 801e0b4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e0b6:	2b00      	cmp	r3, #0
 801e0b8:	f340 81cc 	ble.w	801e454 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>
 801e0bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e0c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e0c2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801e0c6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801e0ca:	eef0 6a48 	vmov.f32	s13, s16
 801e0ce:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801e0d2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801e0d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e0da:	ee16 4a90 	vmov	r4, s13
 801e0de:	eef0 6a68 	vmov.f32	s13, s17
 801e0e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e0e6:	ee16 6a90 	vmov	r6, s13
 801e0ea:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801e0ee:	ee69 7a27 	vmul.f32	s15, s18, s15
 801e0f2:	ee37 8a48 	vsub.f32	s16, s14, s16
 801e0f6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801e0fa:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801e0fe:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801e102:	ee18 2a10 	vmov	r2, s16
 801e106:	eeb0 8a47 	vmov.f32	s16, s14
 801e10a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e10e:	ee18 2a90 	vmov	r2, s17
 801e112:	932f      	str	r3, [sp, #188]	; 0xbc
 801e114:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e116:	eef0 8a67 	vmov.f32	s17, s15
 801e11a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e11e:	9330      	str	r3, [sp, #192]	; 0xc0
 801e120:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e122:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e124:	3b01      	subs	r3, #1
 801e126:	9316      	str	r3, [sp, #88]	; 0x58
 801e128:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e12a:	bf08      	it	eq
 801e12c:	4613      	moveq	r3, r2
 801e12e:	9307      	str	r3, [sp, #28]
 801e130:	e5fe      	b.n	801dd30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801e132:	2800      	cmp	r0, #0
 801e134:	f43f ae6e 	beq.w	801de14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801e138:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e13c:	9308      	str	r3, [sp, #32]
 801e13e:	0e1b      	lsrs	r3, r3, #24
 801e140:	9310      	str	r3, [sp, #64]	; 0x40
 801e142:	e667      	b.n	801de14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801e144:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801e148:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801e14c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801e150:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e154:	f022 0207 	bic.w	r2, r2, #7
 801e158:	431a      	orrs	r2, r3
 801e15a:	ea42 0c0c 	orr.w	ip, r2, ip
 801e15e:	e76e      	b.n	801e03e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801e160:	f112 0801 	adds.w	r8, r2, #1
 801e164:	f53f af6d 	bmi.w	801e042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e168:	4543      	cmp	r3, r8
 801e16a:	f6ff af6a 	blt.w	801e042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e16e:	f11c 0801 	adds.w	r8, ip, #1
 801e172:	f53f af66 	bmi.w	801e042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e176:	45c6      	cmp	lr, r8
 801e178:	f6ff af63 	blt.w	801e042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e17c:	b21b      	sxth	r3, r3
 801e17e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801e182:	fa0f f28e 	sxth.w	r2, lr
 801e186:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801e18a:	9200      	str	r2, [sp, #0]
 801e18c:	4639      	mov	r1, r7
 801e18e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e190:	9819      	ldr	r0, [sp, #100]	; 0x64
 801e192:	f7ff fc51 	bl	801da38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801e196:	e754      	b.n	801e042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e198:	fffff800 	.word	0xfffff800
 801e19c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801e19e:	1421      	asrs	r1, r4, #16
 801e1a0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e1a2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e1a6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801e1aa:	1433      	asrs	r3, r6, #16
 801e1ac:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e1b0:	fb07 1303 	mla	r3, r7, r3, r1
 801e1b4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801e1b6:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801e1ba:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e1be:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e1c2:	2a00      	cmp	r2, #0
 801e1c4:	f000 812f 	beq.w	801e426 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e1c8:	684d      	ldr	r5, [r1, #4]
 801e1ca:	950d      	str	r5, [sp, #52]	; 0x34
 801e1cc:	0e2d      	lsrs	r5, r5, #24
 801e1ce:	9514      	str	r5, [sp, #80]	; 0x50
 801e1d0:	b178      	cbz	r0, 801e1f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801e1d2:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801e1d6:	3f01      	subs	r7, #1
 801e1d8:	00bf      	lsls	r7, r7, #2
 801e1da:	3704      	adds	r7, #4
 801e1dc:	eb01 0e07 	add.w	lr, r1, r7
 801e1e0:	59c9      	ldr	r1, [r1, r7]
 801e1e2:	9109      	str	r1, [sp, #36]	; 0x24
 801e1e4:	0e09      	lsrs	r1, r1, #24
 801e1e6:	9111      	str	r1, [sp, #68]	; 0x44
 801e1e8:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e1ec:	910e      	str	r1, [sp, #56]	; 0x38
 801e1ee:	0e09      	lsrs	r1, r1, #24
 801e1f0:	9115      	str	r1, [sp, #84]	; 0x54
 801e1f2:	b292      	uxth	r2, r2
 801e1f4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e1f6:	b280      	uxth	r0, r0
 801e1f8:	fb02 f900 	mul.w	r9, r2, r0
 801e1fc:	0112      	lsls	r2, r2, #4
 801e1fe:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e202:	eba2 0e09 	sub.w	lr, r2, r9
 801e206:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801e20a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e20c:	b280      	uxth	r0, r0
 801e20e:	fa1f fe8e 	uxth.w	lr, lr
 801e212:	1a09      	subs	r1, r1, r0
 801e214:	fb0e f202 	mul.w	r2, lr, r2
 801e218:	b289      	uxth	r1, r1
 801e21a:	fb01 220c 	mla	r2, r1, ip, r2
 801e21e:	fb00 2205 	mla	r2, r0, r5, r2
 801e222:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e224:	fb09 2205 	mla	r2, r9, r5, r2
 801e228:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801e22c:	2a00      	cmp	r2, #0
 801e22e:	f000 80f1 	beq.w	801e414 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801e232:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e236:	d019      	beq.n	801e26c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 801e238:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e23c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e240:	fb0c fa0a 	mul.w	sl, ip, sl
 801e244:	fb0c fc03 	mul.w	ip, ip, r3
 801e248:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e24c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e250:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e254:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e258:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e25c:	4453      	add	r3, sl
 801e25e:	0a3f      	lsrs	r7, r7, #8
 801e260:	0a1b      	lsrs	r3, r3, #8
 801e262:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e266:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e26a:	433b      	orrs	r3, r7
 801e26c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e26e:	2dff      	cmp	r5, #255	; 0xff
 801e270:	d020      	beq.n	801e2b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 801e272:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e274:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e278:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e27a:	436f      	muls	r7, r5
 801e27c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e27e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e282:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e286:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e288:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e28c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e290:	fb05 fa0a 	mul.w	sl, r5, sl
 801e294:	44bc      	add	ip, r7
 801e296:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e29a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e29e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e2a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e2a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e2aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e2ae:	ea4c 050a 	orr.w	r5, ip, sl
 801e2b2:	950d      	str	r5, [sp, #52]	; 0x34
 801e2b4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e2b6:	2dff      	cmp	r5, #255	; 0xff
 801e2b8:	d020      	beq.n	801e2fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 801e2ba:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e2bc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e2c0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e2c2:	436f      	muls	r7, r5
 801e2c4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e2c6:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e2ca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e2cc:	fb05 fa0c 	mul.w	sl, r5, ip
 801e2d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e2d4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e2d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e2dc:	44bc      	add	ip, r7
 801e2de:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e2e2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e2e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e2ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e2ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e2f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e2f6:	ea4c 050a 	orr.w	r5, ip, sl
 801e2fa:	9509      	str	r5, [sp, #36]	; 0x24
 801e2fc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e2fe:	2dff      	cmp	r5, #255	; 0xff
 801e300:	d020      	beq.n	801e344 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 801e302:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e304:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e308:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e30a:	436f      	muls	r7, r5
 801e30c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e30e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e312:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e316:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e318:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e31c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e320:	fb05 fa0a 	mul.w	sl, r5, sl
 801e324:	44bc      	add	ip, r7
 801e326:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e32a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e32e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e332:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e336:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e33a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e33e:	ea4c 050a 	orr.w	r5, ip, sl
 801e342:	950e      	str	r5, [sp, #56]	; 0x38
 801e344:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e346:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e34a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e34e:	2aff      	cmp	r2, #255	; 0xff
 801e350:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e354:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e356:	fb0e f707 	mul.w	r7, lr, r7
 801e35a:	fb01 770c 	mla	r7, r1, ip, r7
 801e35e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e362:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e364:	fb00 770c 	mla	r7, r0, ip, r7
 801e368:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e36c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e36e:	fb09 770c 	mla	r7, r9, ip, r7
 801e372:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e376:	fb0e fe0c 	mul.w	lr, lr, ip
 801e37a:	ea4f 2717 	mov.w	r7, r7, lsr #8
 801e37e:	fb01 e303 	mla	r3, r1, r3, lr
 801e382:	9909      	ldr	r1, [sp, #36]	; 0x24
 801e384:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e388:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801e38c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e38e:	fb00 330a 	mla	r3, r0, sl, r3
 801e392:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801e396:	fb09 3c0c 	mla	ip, r9, ip, r3
 801e39a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e39e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e3a2:	ea47 070c 	orr.w	r7, r7, ip
 801e3a6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801e3aa:	d045      	beq.n	801e438 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801e3ac:	f8b8 1000 	ldrh.w	r1, [r8]
 801e3b0:	43d2      	mvns	r2, r2
 801e3b2:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801e3b6:	fa5f fe82 	uxtb.w	lr, r2
 801e3ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e3be:	10c8      	asrs	r0, r1, #3
 801e3c0:	00ca      	lsls	r2, r1, #3
 801e3c2:	fb0c fc0e 	mul.w	ip, ip, lr
 801e3c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e3ca:	b2d2      	uxtb	r2, r2
 801e3cc:	f10c 0101 	add.w	r1, ip, #1
 801e3d0:	fb00 f00e 	mul.w	r0, r0, lr
 801e3d4:	fb02 f20e 	mul.w	r2, r2, lr
 801e3d8:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801e3dc:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801e3e0:	b2ff      	uxtb	r7, r7
 801e3e2:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801e3e6:	491e      	ldr	r1, [pc, #120]	; (801e460 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x780>)
 801e3e8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801e3ec:	1c51      	adds	r1, r2, #1
 801e3ee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e3f2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e3f6:	1c42      	adds	r2, r0, #1
 801e3f8:	ea4c 0cd7 	orr.w	ip, ip, r7, lsr #3
 801e3fc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e400:	b2df      	uxtb	r7, r3
 801e402:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801e406:	00ff      	lsls	r7, r7, #3
 801e408:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e40c:	ea4c 0c07 	orr.w	ip, ip, r7
 801e410:	f8a8 c000 	strh.w	ip, [r8]
 801e414:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801e416:	f108 0802 	add.w	r8, r8, #2
 801e41a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e41e:	441c      	add	r4, r3
 801e420:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e422:	441e      	add	r6, r3
 801e424:	e63c      	b.n	801e0a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801e426:	2800      	cmp	r0, #0
 801e428:	f43f aee3 	beq.w	801e1f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801e42c:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801e430:	9109      	str	r1, [sp, #36]	; 0x24
 801e432:	0e09      	lsrs	r1, r1, #24
 801e434:	9111      	str	r1, [sp, #68]	; 0x44
 801e436:	e6dc      	b.n	801e1f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801e438:	097a      	lsrs	r2, r7, #5
 801e43a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801e43e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801e442:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e446:	f023 0307 	bic.w	r3, r3, #7
 801e44a:	4313      	orrs	r3, r2
 801e44c:	431f      	orrs	r7, r3
 801e44e:	f8a8 7000 	strh.w	r7, [r8]
 801e452:	e7df      	b.n	801e414 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801e454:	b01b      	add	sp, #108	; 0x6c
 801e456:	ecbd 8b08 	vpop	{d8-d11}
 801e45a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e45e:	bf00      	nop
 801e460:	fffff800 	.word	0xfffff800

0801e464 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801e464:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e468:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801e46c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801e470:	2c00      	cmp	r4, #0
 801e472:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801e476:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801e47a:	fb04 ce03 	mla	lr, r4, r3, ip
 801e47e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801e482:	db60      	blt.n	801e546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801e484:	45a1      	cmp	r9, r4
 801e486:	dd5e      	ble.n	801e546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801e488:	f1bc 0f00 	cmp.w	ip, #0
 801e48c:	db59      	blt.n	801e542 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801e48e:	45e0      	cmp	r8, ip
 801e490:	dd57      	ble.n	801e542 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801e492:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801e496:	f01e 0f01 	tst.w	lr, #1
 801e49a:	5c16      	ldrb	r6, [r2, r0]
 801e49c:	bf0c      	ite	eq
 801e49e:	f006 060f 	andeq.w	r6, r6, #15
 801e4a2:	1136      	asrne	r6, r6, #4
 801e4a4:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801e4a8:	b2f6      	uxtb	r6, r6
 801e4aa:	f11c 0001 	adds.w	r0, ip, #1
 801e4ae:	d44d      	bmi.n	801e54c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801e4b0:	4580      	cmp	r8, r0
 801e4b2:	dd4b      	ble.n	801e54c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801e4b4:	2d00      	cmp	r5, #0
 801e4b6:	d04b      	beq.n	801e550 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801e4b8:	f10e 0a01 	add.w	sl, lr, #1
 801e4bc:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801e4c0:	f01a 0f01 	tst.w	sl, #1
 801e4c4:	5c10      	ldrb	r0, [r2, r0]
 801e4c6:	bf0c      	ite	eq
 801e4c8:	f000 000f 	andeq.w	r0, r0, #15
 801e4cc:	1100      	asrne	r0, r0, #4
 801e4ce:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e4d2:	b2c0      	uxtb	r0, r0
 801e4d4:	3401      	adds	r4, #1
 801e4d6:	d43f      	bmi.n	801e558 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801e4d8:	45a1      	cmp	r9, r4
 801e4da:	dd3d      	ble.n	801e558 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801e4dc:	2f00      	cmp	r7, #0
 801e4de:	f000 809e 	beq.w	801e61e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 801e4e2:	f1bc 0f00 	cmp.w	ip, #0
 801e4e6:	db35      	blt.n	801e554 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801e4e8:	45e0      	cmp	r8, ip
 801e4ea:	dd33      	ble.n	801e554 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801e4ec:	eb03 090e 	add.w	r9, r3, lr
 801e4f0:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801e4f4:	f019 0f01 	tst.w	r9, #1
 801e4f8:	5d14      	ldrb	r4, [r2, r4]
 801e4fa:	bf0c      	ite	eq
 801e4fc:	f004 040f 	andeq.w	r4, r4, #15
 801e500:	1124      	asrne	r4, r4, #4
 801e502:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801e506:	b2e4      	uxtb	r4, r4
 801e508:	f11c 0c01 	adds.w	ip, ip, #1
 801e50c:	d427      	bmi.n	801e55e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801e50e:	45e0      	cmp	r8, ip
 801e510:	dd25      	ble.n	801e55e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801e512:	b335      	cbz	r5, 801e562 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801e514:	3301      	adds	r3, #1
 801e516:	449e      	add	lr, r3
 801e518:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801e51c:	f01e 0f01 	tst.w	lr, #1
 801e520:	5cd2      	ldrb	r2, [r2, r3]
 801e522:	bf0c      	ite	eq
 801e524:	f002 020f 	andeq.w	r2, r2, #15
 801e528:	1112      	asrne	r2, r2, #4
 801e52a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e52e:	b2d3      	uxtb	r3, r2
 801e530:	2d0f      	cmp	r5, #15
 801e532:	d917      	bls.n	801e564 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801e534:	4b3c      	ldr	r3, [pc, #240]	; (801e628 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 801e536:	f240 210d 	movw	r1, #525	; 0x20d
 801e53a:	4a3c      	ldr	r2, [pc, #240]	; (801e62c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801e53c:	483c      	ldr	r0, [pc, #240]	; (801e630 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801e53e:	f002 fc17 	bl	8020d70 <__assert_func>
 801e542:	2600      	movs	r6, #0
 801e544:	e7b1      	b.n	801e4aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801e546:	2000      	movs	r0, #0
 801e548:	4606      	mov	r6, r0
 801e54a:	e7c3      	b.n	801e4d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801e54c:	2000      	movs	r0, #0
 801e54e:	e7c1      	b.n	801e4d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801e550:	4628      	mov	r0, r5
 801e552:	e7bf      	b.n	801e4d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801e554:	2400      	movs	r4, #0
 801e556:	e7d7      	b.n	801e508 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801e558:	2300      	movs	r3, #0
 801e55a:	461c      	mov	r4, r3
 801e55c:	e7e8      	b.n	801e530 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801e55e:	2300      	movs	r3, #0
 801e560:	e7e6      	b.n	801e530 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801e562:	462b      	mov	r3, r5
 801e564:	2f0f      	cmp	r7, #15
 801e566:	d8e5      	bhi.n	801e534 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801e568:	b2ad      	uxth	r5, r5
 801e56a:	b2bf      	uxth	r7, r7
 801e56c:	fb05 fc07 	mul.w	ip, r5, r7
 801e570:	012d      	lsls	r5, r5, #4
 801e572:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801e576:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801e57a:	eba5 050c 	sub.w	r5, r5, ip
 801e57e:	b2bf      	uxth	r7, r7
 801e580:	b2ad      	uxth	r5, r5
 801e582:	1bd2      	subs	r2, r2, r7
 801e584:	4368      	muls	r0, r5
 801e586:	b292      	uxth	r2, r2
 801e588:	fb06 0002 	mla	r0, r6, r2, r0
 801e58c:	fb07 0404 	mla	r4, r7, r4, r0
 801e590:	fb0c 4303 	mla	r3, ip, r3, r4
 801e594:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e598:	2b00      	cmp	r3, #0
 801e59a:	d03e      	beq.n	801e61a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 801e59c:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 801e5a0:	4a24      	ldr	r2, [pc, #144]	; (801e634 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 801e5a2:	4343      	muls	r3, r0
 801e5a4:	6816      	ldr	r6, [r2, #0]
 801e5a6:	1c58      	adds	r0, r3, #1
 801e5a8:	880a      	ldrh	r2, [r1, #0]
 801e5aa:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e5ae:	1215      	asrs	r5, r2, #8
 801e5b0:	1200      	asrs	r0, r0, #8
 801e5b2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e5b6:	10d7      	asrs	r7, r2, #3
 801e5b8:	b284      	uxth	r4, r0
 801e5ba:	43c0      	mvns	r0, r0
 801e5bc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e5c0:	00d2      	lsls	r2, r2, #3
 801e5c2:	b2c3      	uxtb	r3, r0
 801e5c4:	0a30      	lsrs	r0, r6, #8
 801e5c6:	fb15 f503 	smulbb	r5, r5, r3
 801e5ca:	b2d2      	uxtb	r2, r2
 801e5cc:	fb17 f703 	smulbb	r7, r7, r3
 801e5d0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e5d4:	fb12 f303 	smulbb	r3, r2, r3
 801e5d8:	fb00 5004 	mla	r0, r0, r4, r5
 801e5dc:	08f5      	lsrs	r5, r6, #3
 801e5de:	00f6      	lsls	r6, r6, #3
 801e5e0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e5e4:	b280      	uxth	r0, r0
 801e5e6:	b2f6      	uxtb	r6, r6
 801e5e8:	fb05 7504 	mla	r5, r5, r4, r7
 801e5ec:	fb06 3304 	mla	r3, r6, r4, r3
 801e5f0:	1c44      	adds	r4, r0, #1
 801e5f2:	b2ad      	uxth	r5, r5
 801e5f4:	b29a      	uxth	r2, r3
 801e5f6:	1c6b      	adds	r3, r5, #1
 801e5f8:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801e5fc:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801e600:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e604:	095b      	lsrs	r3, r3, #5
 801e606:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e60a:	4303      	orrs	r3, r0
 801e60c:	1c50      	adds	r0, r2, #1
 801e60e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e612:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e616:	4313      	orrs	r3, r2
 801e618:	800b      	strh	r3, [r1, #0]
 801e61a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e61e:	2d0f      	cmp	r5, #15
 801e620:	d888      	bhi.n	801e534 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801e622:	463b      	mov	r3, r7
 801e624:	463c      	mov	r4, r7
 801e626:	e79f      	b.n	801e568 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801e628:	080252eb 	.word	0x080252eb
 801e62c:	080258a9 	.word	0x080258a9
 801e630:	080253d4 	.word	0x080253d4
 801e634:	200125b8 	.word	0x200125b8

0801e638 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e63c:	ed2d 8b08 	vpush	{d8-d11}
 801e640:	b097      	sub	sp, #92	; 0x5c
 801e642:	eeb0 aa40 	vmov.f32	s20, s0
 801e646:	eef0 9a60 	vmov.f32	s19, s1
 801e64a:	9214      	str	r2, [sp, #80]	; 0x50
 801e64c:	eeb0 9a41 	vmov.f32	s18, s2
 801e650:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801e652:	eeb0 8a62 	vmov.f32	s16, s5
 801e656:	9309      	str	r3, [sp, #36]	; 0x24
 801e658:	eef0 8a43 	vmov.f32	s17, s6
 801e65c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801e660:	eef0 ba44 	vmov.f32	s23, s8
 801e664:	9015      	str	r0, [sp, #84]	; 0x54
 801e666:	eeb0 ba64 	vmov.f32	s22, s9
 801e66a:	6850      	ldr	r0, [r2, #4]
 801e66c:	eef0 aa45 	vmov.f32	s21, s10
 801e670:	910d      	str	r1, [sp, #52]	; 0x34
 801e672:	930e      	str	r3, [sp, #56]	; 0x38
 801e674:	6812      	ldr	r2, [r2, #0]
 801e676:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801e67a:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801e67e:	fb00 1303 	mla	r3, r0, r3, r1
 801e682:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 801e686:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e688:	689b      	ldr	r3, [r3, #8]
 801e68a:	3301      	adds	r3, #1
 801e68c:	f023 0301 	bic.w	r3, r3, #1
 801e690:	930a      	str	r3, [sp, #40]	; 0x28
 801e692:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e694:	681f      	ldr	r7, [r3, #0]
 801e696:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e698:	2b00      	cmp	r3, #0
 801e69a:	dc03      	bgt.n	801e6a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e69c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801e69e:	2b00      	cmp	r3, #0
 801e6a0:	f340 826b 	ble.w	801eb7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x542>
 801e6a4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e6a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e6aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e6ae:	1e48      	subs	r0, r1, #1
 801e6b0:	f102 3cff 	add.w	ip, r2, #4294967295
 801e6b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e6b6:	2b00      	cmp	r3, #0
 801e6b8:	f340 80f4 	ble.w	801e8a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801e6bc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e6c0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e6c4:	d406      	bmi.n	801e6d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801e6c6:	4586      	cmp	lr, r0
 801e6c8:	da04      	bge.n	801e6d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801e6ca:	2b00      	cmp	r3, #0
 801e6cc:	db02      	blt.n	801e6d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801e6ce:	4563      	cmp	r3, ip
 801e6d0:	f2c0 80e9 	blt.w	801e8a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26e>
 801e6d4:	f11e 0e01 	adds.w	lr, lr, #1
 801e6d8:	f100 80da 	bmi.w	801e890 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801e6dc:	4571      	cmp	r1, lr
 801e6de:	f2c0 80d7 	blt.w	801e890 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801e6e2:	3301      	adds	r3, #1
 801e6e4:	f100 80d4 	bmi.w	801e890 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801e6e8:	429a      	cmp	r2, r3
 801e6ea:	f2c0 80d1 	blt.w	801e890 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801e6ee:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e6f2:	46d0      	mov	r8, sl
 801e6f4:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801e6f8:	930f      	str	r3, [sp, #60]	; 0x3c
 801e6fa:	f1b9 0f00 	cmp.w	r9, #0
 801e6fe:	f340 80f1 	ble.w	801e8e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 801e702:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e704:	1430      	asrs	r0, r6, #16
 801e706:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e70a:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e70e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801e712:	1423      	asrs	r3, r4, #16
 801e714:	f100 813b 	bmi.w	801e98e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e718:	f10c 3bff 	add.w	fp, ip, #4294967295
 801e71c:	455b      	cmp	r3, fp
 801e71e:	f280 8136 	bge.w	801e98e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e722:	2800      	cmp	r0, #0
 801e724:	f2c0 8133 	blt.w	801e98e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e728:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e72c:	4558      	cmp	r0, fp
 801e72e:	f280 812e 	bge.w	801e98e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e732:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e734:	fb00 3305 	mla	r3, r0, r5, r3
 801e738:	0858      	lsrs	r0, r3, #1
 801e73a:	07dd      	lsls	r5, r3, #31
 801e73c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801e740:	bf54      	ite	pl
 801e742:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e746:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e74a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e74e:	fa5f fc8c 	uxtb.w	ip, ip
 801e752:	2a00      	cmp	r2, #0
 801e754:	f000 810a 	beq.w	801e96c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
 801e758:	1c58      	adds	r0, r3, #1
 801e75a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801e75e:	07c0      	lsls	r0, r0, #31
 801e760:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e764:	bf54      	ite	pl
 801e766:	f00e 0e0f 	andpl.w	lr, lr, #15
 801e76a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801e76e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801e772:	fa5f f08e 	uxtb.w	r0, lr
 801e776:	9010      	str	r0, [sp, #64]	; 0x40
 801e778:	b1e1      	cbz	r1, 801e7b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e77a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e77c:	4403      	add	r3, r0
 801e77e:	0858      	lsrs	r0, r3, #1
 801e780:	07dd      	lsls	r5, r3, #31
 801e782:	f103 0301 	add.w	r3, r3, #1
 801e786:	5c38      	ldrb	r0, [r7, r0]
 801e788:	bf54      	ite	pl
 801e78a:	f000 000f 	andpl.w	r0, r0, #15
 801e78e:	1100      	asrmi	r0, r0, #4
 801e790:	07dd      	lsls	r5, r3, #31
 801e792:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e796:	b2c0      	uxtb	r0, r0
 801e798:	900b      	str	r0, [sp, #44]	; 0x2c
 801e79a:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801e79e:	f817 e000 	ldrb.w	lr, [r7, r0]
 801e7a2:	bf54      	ite	pl
 801e7a4:	f00e 030f 	andpl.w	r3, lr, #15
 801e7a8:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801e7ac:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e7b0:	b2db      	uxtb	r3, r3
 801e7b2:	9311      	str	r3, [sp, #68]	; 0x44
 801e7b4:	b292      	uxth	r2, r2
 801e7b6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e7b8:	b289      	uxth	r1, r1
 801e7ba:	fb02 f301 	mul.w	r3, r2, r1
 801e7be:	0112      	lsls	r2, r2, #4
 801e7c0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801e7c4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801e7c8:	1ad2      	subs	r2, r2, r3
 801e7ca:	b289      	uxth	r1, r1
 801e7cc:	b292      	uxth	r2, r2
 801e7ce:	1a40      	subs	r0, r0, r1
 801e7d0:	436a      	muls	r2, r5
 801e7d2:	b280      	uxth	r0, r0
 801e7d4:	fb0c 2c00 	mla	ip, ip, r0, r2
 801e7d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e7da:	fb01 c102 	mla	r1, r1, r2, ip
 801e7de:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e7e0:	fb03 1302 	mla	r3, r3, r2, r1
 801e7e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e7e8:	2b00      	cmp	r3, #0
 801e7ea:	d048      	beq.n	801e87e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801e7ec:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e7ee:	4a78      	ldr	r2, [pc, #480]	; (801e9d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 801e7f0:	434b      	muls	r3, r1
 801e7f2:	f8d2 e000 	ldr.w	lr, [r2]
 801e7f6:	1c59      	adds	r1, r3, #1
 801e7f8:	f8b8 2000 	ldrh.w	r2, [r8]
 801e7fc:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801e800:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e804:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e808:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e80c:	121b      	asrs	r3, r3, #8
 801e80e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e812:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801e816:	b299      	uxth	r1, r3
 801e818:	43db      	mvns	r3, r3
 801e81a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801e81e:	00d2      	lsls	r2, r2, #3
 801e820:	b2db      	uxtb	r3, r3
 801e822:	b2d2      	uxtb	r2, r2
 801e824:	fb1c fc03 	smulbb	ip, ip, r3
 801e828:	fb1b fb03 	smulbb	fp, fp, r3
 801e82c:	fb00 c001 	mla	r0, r0, r1, ip
 801e830:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801e834:	fb12 f303 	smulbb	r3, r2, r3
 801e838:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e83c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e840:	b280      	uxth	r0, r0
 801e842:	fa5f fe8e 	uxtb.w	lr, lr
 801e846:	fb0c bc01 	mla	ip, ip, r1, fp
 801e84a:	fb0e 3101 	mla	r1, lr, r1, r3
 801e84e:	1c43      	adds	r3, r0, #1
 801e850:	fa1f fc8c 	uxth.w	ip, ip
 801e854:	b289      	uxth	r1, r1
 801e856:	f10c 0201 	add.w	r2, ip, #1
 801e85a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e85e:	1c4b      	adds	r3, r1, #1
 801e860:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 801e864:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e868:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e86c:	0952      	lsrs	r2, r2, #5
 801e86e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801e872:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e876:	4310      	orrs	r0, r2
 801e878:	4308      	orrs	r0, r1
 801e87a:	f8a8 0000 	strh.w	r0, [r8]
 801e87e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801e880:	f108 0802 	add.w	r8, r8, #2
 801e884:	f109 39ff 	add.w	r9, r9, #4294967295
 801e888:	441c      	add	r4, r3
 801e88a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e88c:	441e      	add	r6, r3
 801e88e:	e734      	b.n	801e6fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 801e890:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801e892:	f10a 0a02 	add.w	sl, sl, #2
 801e896:	441c      	add	r4, r3
 801e898:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e89a:	441e      	add	r6, r3
 801e89c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e89e:	3b01      	subs	r3, #1
 801e8a0:	9309      	str	r3, [sp, #36]	; 0x24
 801e8a2:	e707      	b.n	801e6b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e8a4:	d023      	beq.n	801e8ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801e8a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e8a8:	982b      	ldr	r0, [sp, #172]	; 0xac
 801e8aa:	3b01      	subs	r3, #1
 801e8ac:	fb00 4003 	mla	r0, r0, r3, r4
 801e8b0:	1400      	asrs	r0, r0, #16
 801e8b2:	f53f af1c 	bmi.w	801e6ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801e8b6:	3901      	subs	r1, #1
 801e8b8:	4288      	cmp	r0, r1
 801e8ba:	f6bf af18 	bge.w	801e6ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801e8be:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801e8c0:	fb01 6303 	mla	r3, r1, r3, r6
 801e8c4:	141b      	asrs	r3, r3, #16
 801e8c6:	f53f af12 	bmi.w	801e6ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801e8ca:	3a01      	subs	r2, #1
 801e8cc:	4293      	cmp	r3, r2
 801e8ce:	f6bf af0e 	bge.w	801e6ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801e8d2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e8d6:	46d1      	mov	r9, sl
 801e8d8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e8dc:	930f      	str	r3, [sp, #60]	; 0x3c
 801e8de:	f1bb 0f00 	cmp.w	fp, #0
 801e8e2:	dc77      	bgt.n	801e9d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801e8e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e8e6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e8ea:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801e8ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e8f0:	2b00      	cmp	r3, #0
 801e8f2:	f340 8142 	ble.w	801eb7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x542>
 801e8f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e8fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e8fc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801e900:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801e904:	eef0 6a48 	vmov.f32	s13, s16
 801e908:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801e90c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801e910:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e914:	ee16 4a90 	vmov	r4, s13
 801e918:	eef0 6a68 	vmov.f32	s13, s17
 801e91c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e920:	ee16 6a90 	vmov	r6, s13
 801e924:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801e928:	ee69 7a27 	vmul.f32	s15, s18, s15
 801e92c:	ee37 8a48 	vsub.f32	s16, s14, s16
 801e930:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801e934:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801e938:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801e93c:	ee18 2a10 	vmov	r2, s16
 801e940:	eeb0 8a47 	vmov.f32	s16, s14
 801e944:	fb92 f3f3 	sdiv	r3, r2, r3
 801e948:	ee18 2a90 	vmov	r2, s17
 801e94c:	932b      	str	r3, [sp, #172]	; 0xac
 801e94e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e950:	eef0 8a67 	vmov.f32	s17, s15
 801e954:	fb92 f3f3 	sdiv	r3, r2, r3
 801e958:	932c      	str	r3, [sp, #176]	; 0xb0
 801e95a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e95c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e95e:	3b01      	subs	r3, #1
 801e960:	930d      	str	r3, [sp, #52]	; 0x34
 801e962:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e964:	bf08      	it	eq
 801e966:	4613      	moveq	r3, r2
 801e968:	9309      	str	r3, [sp, #36]	; 0x24
 801e96a:	e694      	b.n	801e696 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801e96c:	2900      	cmp	r1, #0
 801e96e:	f43f af21 	beq.w	801e7b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e972:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e974:	4418      	add	r0, r3
 801e976:	0843      	lsrs	r3, r0, #1
 801e978:	07c0      	lsls	r0, r0, #31
 801e97a:	5cfb      	ldrb	r3, [r7, r3]
 801e97c:	bf54      	ite	pl
 801e97e:	f003 030f 	andpl.w	r3, r3, #15
 801e982:	111b      	asrmi	r3, r3, #4
 801e984:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e988:	b2db      	uxtb	r3, r3
 801e98a:	930b      	str	r3, [sp, #44]	; 0x2c
 801e98c:	e712      	b.n	801e7b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e98e:	f113 0b01 	adds.w	fp, r3, #1
 801e992:	f53f af74 	bmi.w	801e87e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801e996:	45dc      	cmp	ip, fp
 801e998:	f6ff af71 	blt.w	801e87e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801e99c:	f110 0b01 	adds.w	fp, r0, #1
 801e9a0:	f53f af6d 	bmi.w	801e87e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801e9a4:	45de      	cmp	lr, fp
 801e9a6:	f6ff af6a 	blt.w	801e87e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801e9aa:	9302      	str	r3, [sp, #8]
 801e9ac:	fa0f f38e 	sxth.w	r3, lr
 801e9b0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e9b2:	9301      	str	r3, [sp, #4]
 801e9b4:	fa0f f38c 	sxth.w	r3, ip
 801e9b8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801e9bc:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e9c0:	9300      	str	r3, [sp, #0]
 801e9c2:	463a      	mov	r2, r7
 801e9c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e9c6:	4641      	mov	r1, r8
 801e9c8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e9ca:	f7ff fd4b 	bl	801e464 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801e9ce:	e756      	b.n	801e87e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801e9d0:	200125b8 	.word	0x200125b8
 801e9d4:	1422      	asrs	r2, r4, #16
 801e9d6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e9d8:	1433      	asrs	r3, r6, #16
 801e9da:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e9de:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e9e2:	fb05 2303 	mla	r3, r5, r3, r2
 801e9e6:	085a      	lsrs	r2, r3, #1
 801e9e8:	07dd      	lsls	r5, r3, #31
 801e9ea:	5cba      	ldrb	r2, [r7, r2]
 801e9ec:	bf54      	ite	pl
 801e9ee:	f002 020f 	andpl.w	r2, r2, #15
 801e9f2:	1112      	asrmi	r2, r2, #4
 801e9f4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e9f8:	b2d2      	uxtb	r2, r2
 801e9fa:	2900      	cmp	r1, #0
 801e9fc:	f000 80a9 	beq.w	801eb52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51a>
 801ea00:	f103 0e01 	add.w	lr, r3, #1
 801ea04:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801ea08:	f01e 0f01 	tst.w	lr, #1
 801ea0c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ea10:	bf0c      	ite	eq
 801ea12:	f00c 0c0f 	andeq.w	ip, ip, #15
 801ea16:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801ea1a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ea1e:	fa5f f58c 	uxtb.w	r5, ip
 801ea22:	9512      	str	r5, [sp, #72]	; 0x48
 801ea24:	b308      	cbz	r0, 801ea6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 801ea26:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ea28:	442b      	add	r3, r5
 801ea2a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ea2e:	07dd      	lsls	r5, r3, #31
 801ea30:	f103 0301 	add.w	r3, r3, #1
 801ea34:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ea38:	bf54      	ite	pl
 801ea3a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ea3e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ea42:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ea46:	fa5f f58c 	uxtb.w	r5, ip
 801ea4a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ea4e:	950c      	str	r5, [sp, #48]	; 0x30
 801ea50:	07dd      	lsls	r5, r3, #31
 801ea52:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ea56:	bf54      	ite	pl
 801ea58:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ea5c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ea60:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ea64:	fa5f f38c 	uxtb.w	r3, ip
 801ea68:	9313      	str	r3, [sp, #76]	; 0x4c
 801ea6a:	b289      	uxth	r1, r1
 801ea6c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ea6e:	b280      	uxth	r0, r0
 801ea70:	fb01 f300 	mul.w	r3, r1, r0
 801ea74:	0109      	lsls	r1, r1, #4
 801ea76:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801ea7a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801ea7e:	1ac9      	subs	r1, r1, r3
 801ea80:	b280      	uxth	r0, r0
 801ea82:	b289      	uxth	r1, r1
 801ea84:	ebac 0c00 	sub.w	ip, ip, r0
 801ea88:	4369      	muls	r1, r5
 801ea8a:	fa1f fc8c 	uxth.w	ip, ip
 801ea8e:	fb02 120c 	mla	r2, r2, ip, r1
 801ea92:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ea94:	fb00 2001 	mla	r0, r0, r1, r2
 801ea98:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ea9a:	fb03 0302 	mla	r3, r3, r2, r0
 801ea9e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eaa2:	2b00      	cmp	r3, #0
 801eaa4:	d04c      	beq.n	801eb40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801eaa6:	990e      	ldr	r1, [sp, #56]	; 0x38
 801eaa8:	4a36      	ldr	r2, [pc, #216]	; (801eb84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>)
 801eaaa:	434b      	muls	r3, r1
 801eaac:	f8d2 e000 	ldr.w	lr, [r2]
 801eab0:	1c59      	adds	r1, r3, #1
 801eab2:	f8b9 2000 	ldrh.w	r2, [r9]
 801eab6:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801eaba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801eabe:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801eac2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801eac6:	121b      	asrs	r3, r3, #8
 801eac8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801eacc:	ea4f 08e2 	mov.w	r8, r2, asr #3
 801ead0:	b299      	uxth	r1, r3
 801ead2:	43db      	mvns	r3, r3
 801ead4:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801ead8:	00d2      	lsls	r2, r2, #3
 801eada:	b2db      	uxtb	r3, r3
 801eadc:	b2d2      	uxtb	r2, r2
 801eade:	fb1c fc03 	smulbb	ip, ip, r3
 801eae2:	fb18 f803 	smulbb	r8, r8, r3
 801eae6:	fb00 c001 	mla	r0, r0, r1, ip
 801eaea:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801eaee:	fb12 f203 	smulbb	r2, r2, r3
 801eaf2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801eaf6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801eafa:	b280      	uxth	r0, r0
 801eafc:	fa5f fe8e 	uxtb.w	lr, lr
 801eb00:	fb0c 8c01 	mla	ip, ip, r1, r8
 801eb04:	fb0e 2201 	mla	r2, lr, r1, r2
 801eb08:	fa1f fc8c 	uxth.w	ip, ip
 801eb0c:	b292      	uxth	r2, r2
 801eb0e:	f10c 0801 	add.w	r8, ip, #1
 801eb12:	1c51      	adds	r1, r2, #1
 801eb14:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801eb18:	f100 0801 	add.w	r8, r0, #1
 801eb1c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801eb20:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801eb24:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801eb28:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801eb2c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801eb30:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801eb34:	ea4c 0c00 	orr.w	ip, ip, r0
 801eb38:	ea4c 0c02 	orr.w	ip, ip, r2
 801eb3c:	f8a9 c000 	strh.w	ip, [r9]
 801eb40:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801eb42:	f109 0902 	add.w	r9, r9, #2
 801eb46:	f10b 3bff 	add.w	fp, fp, #4294967295
 801eb4a:	441c      	add	r4, r3
 801eb4c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801eb4e:	441e      	add	r6, r3
 801eb50:	e6c5      	b.n	801e8de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801eb52:	2800      	cmp	r0, #0
 801eb54:	d089      	beq.n	801ea6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 801eb56:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801eb58:	442b      	add	r3, r5
 801eb5a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801eb5e:	07db      	lsls	r3, r3, #31
 801eb60:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801eb64:	bf54      	ite	pl
 801eb66:	f00c 0c0f 	andpl.w	ip, ip, #15
 801eb6a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801eb6e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801eb72:	fa5f f38c 	uxtb.w	r3, ip
 801eb76:	930c      	str	r3, [sp, #48]	; 0x30
 801eb78:	e777      	b.n	801ea6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 801eb7a:	b017      	add	sp, #92	; 0x5c
 801eb7c:	ecbd 8b08 	vpop	{d8-d11}
 801eb80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb84:	200125b8 	.word	0x200125b8

0801eb88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801eb88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eb8c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801eb90:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801eb94:	2c00      	cmp	r4, #0
 801eb96:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801eb9a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801eb9e:	fb04 ce03 	mla	lr, r4, r3, ip
 801eba2:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801eba6:	db60      	blt.n	801ec6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801eba8:	45a1      	cmp	r9, r4
 801ebaa:	dd5e      	ble.n	801ec6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801ebac:	f1bc 0f00 	cmp.w	ip, #0
 801ebb0:	db59      	blt.n	801ec66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801ebb2:	45e0      	cmp	r8, ip
 801ebb4:	dd57      	ble.n	801ec66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801ebb6:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801ebba:	f01e 0f01 	tst.w	lr, #1
 801ebbe:	5c16      	ldrb	r6, [r2, r0]
 801ebc0:	bf0c      	ite	eq
 801ebc2:	f006 060f 	andeq.w	r6, r6, #15
 801ebc6:	1136      	asrne	r6, r6, #4
 801ebc8:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ebcc:	b2f6      	uxtb	r6, r6
 801ebce:	f11c 0001 	adds.w	r0, ip, #1
 801ebd2:	d44d      	bmi.n	801ec70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801ebd4:	4580      	cmp	r8, r0
 801ebd6:	dd4b      	ble.n	801ec70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801ebd8:	2d00      	cmp	r5, #0
 801ebda:	d04b      	beq.n	801ec74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801ebdc:	f10e 0a01 	add.w	sl, lr, #1
 801ebe0:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801ebe4:	f01a 0f01 	tst.w	sl, #1
 801ebe8:	5c10      	ldrb	r0, [r2, r0]
 801ebea:	bf0c      	ite	eq
 801ebec:	f000 000f 	andeq.w	r0, r0, #15
 801ebf0:	1100      	asrne	r0, r0, #4
 801ebf2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ebf6:	b2c0      	uxtb	r0, r0
 801ebf8:	3401      	adds	r4, #1
 801ebfa:	d43f      	bmi.n	801ec7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801ebfc:	45a1      	cmp	r9, r4
 801ebfe:	dd3d      	ble.n	801ec7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801ec00:	2f00      	cmp	r7, #0
 801ec02:	f000 8097 	beq.w	801ed34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801ec06:	f1bc 0f00 	cmp.w	ip, #0
 801ec0a:	db35      	blt.n	801ec78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801ec0c:	45e0      	cmp	r8, ip
 801ec0e:	dd33      	ble.n	801ec78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801ec10:	eb03 090e 	add.w	r9, r3, lr
 801ec14:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801ec18:	f019 0f01 	tst.w	r9, #1
 801ec1c:	5d14      	ldrb	r4, [r2, r4]
 801ec1e:	bf0c      	ite	eq
 801ec20:	f004 040f 	andeq.w	r4, r4, #15
 801ec24:	1124      	asrne	r4, r4, #4
 801ec26:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ec2a:	b2e4      	uxtb	r4, r4
 801ec2c:	f11c 0c01 	adds.w	ip, ip, #1
 801ec30:	d427      	bmi.n	801ec82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801ec32:	45e0      	cmp	r8, ip
 801ec34:	dd25      	ble.n	801ec82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801ec36:	b335      	cbz	r5, 801ec86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801ec38:	3301      	adds	r3, #1
 801ec3a:	449e      	add	lr, r3
 801ec3c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ec40:	f01e 0f01 	tst.w	lr, #1
 801ec44:	5cd2      	ldrb	r2, [r2, r3]
 801ec46:	bf0c      	ite	eq
 801ec48:	f002 020f 	andeq.w	r2, r2, #15
 801ec4c:	1112      	asrne	r2, r2, #4
 801ec4e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ec52:	b2d3      	uxtb	r3, r2
 801ec54:	2d0f      	cmp	r5, #15
 801ec56:	d917      	bls.n	801ec88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801ec58:	4b39      	ldr	r3, [pc, #228]	; (801ed40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801ec5a:	f240 210d 	movw	r1, #525	; 0x20d
 801ec5e:	4a39      	ldr	r2, [pc, #228]	; (801ed44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801ec60:	4839      	ldr	r0, [pc, #228]	; (801ed48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801ec62:	f002 f885 	bl	8020d70 <__assert_func>
 801ec66:	2600      	movs	r6, #0
 801ec68:	e7b1      	b.n	801ebce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801ec6a:	2000      	movs	r0, #0
 801ec6c:	4606      	mov	r6, r0
 801ec6e:	e7c3      	b.n	801ebf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ec70:	2000      	movs	r0, #0
 801ec72:	e7c1      	b.n	801ebf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ec74:	4628      	mov	r0, r5
 801ec76:	e7bf      	b.n	801ebf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ec78:	2400      	movs	r4, #0
 801ec7a:	e7d7      	b.n	801ec2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801ec7c:	2300      	movs	r3, #0
 801ec7e:	461c      	mov	r4, r3
 801ec80:	e7e8      	b.n	801ec54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801ec82:	2300      	movs	r3, #0
 801ec84:	e7e6      	b.n	801ec54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801ec86:	462b      	mov	r3, r5
 801ec88:	2f0f      	cmp	r7, #15
 801ec8a:	d8e5      	bhi.n	801ec58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801ec8c:	b2ad      	uxth	r5, r5
 801ec8e:	b2bf      	uxth	r7, r7
 801ec90:	fb05 fc07 	mul.w	ip, r5, r7
 801ec94:	012d      	lsls	r5, r5, #4
 801ec96:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801ec9a:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801ec9e:	eba5 050c 	sub.w	r5, r5, ip
 801eca2:	b2bf      	uxth	r7, r7
 801eca4:	b2ad      	uxth	r5, r5
 801eca6:	1bd2      	subs	r2, r2, r7
 801eca8:	4368      	muls	r0, r5
 801ecaa:	b292      	uxth	r2, r2
 801ecac:	fb06 0002 	mla	r0, r6, r2, r0
 801ecb0:	fb07 0404 	mla	r4, r7, r4, r0
 801ecb4:	fb0c 4303 	mla	r3, ip, r3, r4
 801ecb8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ecbc:	2b00      	cmp	r3, #0
 801ecbe:	d037      	beq.n	801ed30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 801ecc0:	4a22      	ldr	r2, [pc, #136]	; (801ed4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801ecc2:	b298      	uxth	r0, r3
 801ecc4:	43db      	mvns	r3, r3
 801ecc6:	6816      	ldr	r6, [r2, #0]
 801ecc8:	880a      	ldrh	r2, [r1, #0]
 801ecca:	b2db      	uxtb	r3, r3
 801eccc:	0a34      	lsrs	r4, r6, #8
 801ecce:	1215      	asrs	r5, r2, #8
 801ecd0:	10d7      	asrs	r7, r2, #3
 801ecd2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801ecd6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ecda:	00d2      	lsls	r2, r2, #3
 801ecdc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ece0:	fb15 f503 	smulbb	r5, r5, r3
 801ece4:	b2d2      	uxtb	r2, r2
 801ece6:	fb17 f703 	smulbb	r7, r7, r3
 801ecea:	fb04 5400 	mla	r4, r4, r0, r5
 801ecee:	08f5      	lsrs	r5, r6, #3
 801ecf0:	fb12 f303 	smulbb	r3, r2, r3
 801ecf4:	00f6      	lsls	r6, r6, #3
 801ecf6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ecfa:	b2a4      	uxth	r4, r4
 801ecfc:	b2f6      	uxtb	r6, r6
 801ecfe:	fb05 7500 	mla	r5, r5, r0, r7
 801ed02:	1c62      	adds	r2, r4, #1
 801ed04:	fb06 3000 	mla	r0, r6, r0, r3
 801ed08:	b2ad      	uxth	r5, r5
 801ed0a:	b280      	uxth	r0, r0
 801ed0c:	1c6b      	adds	r3, r5, #1
 801ed0e:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801ed12:	1c42      	adds	r2, r0, #1
 801ed14:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801ed18:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ed1c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ed20:	095b      	lsrs	r3, r3, #5
 801ed22:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ed26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ed2a:	4323      	orrs	r3, r4
 801ed2c:	4303      	orrs	r3, r0
 801ed2e:	800b      	strh	r3, [r1, #0]
 801ed30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ed34:	2d0f      	cmp	r5, #15
 801ed36:	d88f      	bhi.n	801ec58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801ed38:	463b      	mov	r3, r7
 801ed3a:	463c      	mov	r4, r7
 801ed3c:	e7a6      	b.n	801ec8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801ed3e:	bf00      	nop
 801ed40:	080252eb 	.word	0x080252eb
 801ed44:	080258a9 	.word	0x080258a9
 801ed48:	080253d4 	.word	0x080253d4
 801ed4c:	200125b8 	.word	0x200125b8

0801ed50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ed50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ed54:	ed2d 8b08 	vpush	{d8-d11}
 801ed58:	b093      	sub	sp, #76	; 0x4c
 801ed5a:	461d      	mov	r5, r3
 801ed5c:	eeb0 aa40 	vmov.f32	s20, s0
 801ed60:	920c      	str	r2, [sp, #48]	; 0x30
 801ed62:	eef0 9a60 	vmov.f32	s19, s1
 801ed66:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ed68:	eeb0 9a41 	vmov.f32	s18, s2
 801ed6c:	9011      	str	r0, [sp, #68]	; 0x44
 801ed6e:	eeb0 8a62 	vmov.f32	s16, s5
 801ed72:	6850      	ldr	r0, [r2, #4]
 801ed74:	eef0 8a43 	vmov.f32	s17, s6
 801ed78:	9107      	str	r1, [sp, #28]
 801ed7a:	eef0 ba44 	vmov.f32	s23, s8
 801ed7e:	6812      	ldr	r2, [r2, #0]
 801ed80:	eeb0 ba64 	vmov.f32	s22, s9
 801ed84:	eef0 aa45 	vmov.f32	s21, s10
 801ed88:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801ed8c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801ed90:	fb00 1303 	mla	r3, r0, r3, r1
 801ed94:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ed98:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ed9a:	689b      	ldr	r3, [r3, #8]
 801ed9c:	3301      	adds	r3, #1
 801ed9e:	f023 0301 	bic.w	r3, r3, #1
 801eda2:	9306      	str	r3, [sp, #24]
 801eda4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801eda6:	681f      	ldr	r7, [r3, #0]
 801eda8:	9b07      	ldr	r3, [sp, #28]
 801edaa:	2b00      	cmp	r3, #0
 801edac:	dc03      	bgt.n	801edb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801edae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801edb0:	2b00      	cmp	r3, #0
 801edb2:	f340 8262 	ble.w	801f27a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 801edb6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801edb8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801edbc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801edc0:	1e48      	subs	r0, r1, #1
 801edc2:	f102 3cff 	add.w	ip, r2, #4294967295
 801edc6:	2d00      	cmp	r5, #0
 801edc8:	f340 80ee 	ble.w	801efa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801edcc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801edd0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801edd4:	d406      	bmi.n	801ede4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801edd6:	4586      	cmp	lr, r0
 801edd8:	da04      	bge.n	801ede4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801edda:	2b00      	cmp	r3, #0
 801eddc:	db02      	blt.n	801ede4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801edde:	4563      	cmp	r3, ip
 801ede0:	f2c0 80e3 	blt.w	801efaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801ede4:	f11e 0e01 	adds.w	lr, lr, #1
 801ede8:	f100 80d6 	bmi.w	801ef98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801edec:	4571      	cmp	r1, lr
 801edee:	f2c0 80d3 	blt.w	801ef98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801edf2:	3301      	adds	r3, #1
 801edf4:	f100 80d0 	bmi.w	801ef98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801edf8:	429a      	cmp	r2, r3
 801edfa:	f2c0 80cd 	blt.w	801ef98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801edfe:	46c8      	mov	r8, r9
 801ee00:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801ee04:	9509      	str	r5, [sp, #36]	; 0x24
 801ee06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee08:	2b00      	cmp	r3, #0
 801ee0a:	f340 80eb 	ble.w	801efe4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ee0e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801ee12:	1430      	asrs	r0, r6, #16
 801ee14:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ee18:	9308      	str	r3, [sp, #32]
 801ee1a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ee1c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801ee20:	1423      	asrs	r3, r4, #16
 801ee22:	f100 813c 	bmi.w	801f09e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801ee26:	f10c 3bff 	add.w	fp, ip, #4294967295
 801ee2a:	455b      	cmp	r3, fp
 801ee2c:	f280 8137 	bge.w	801f09e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801ee30:	2800      	cmp	r0, #0
 801ee32:	f2c0 8134 	blt.w	801f09e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801ee36:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ee3a:	4558      	cmp	r0, fp
 801ee3c:	f280 812f 	bge.w	801f09e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801ee40:	9a06      	ldr	r2, [sp, #24]
 801ee42:	fb00 3302 	mla	r3, r0, r2, r3
 801ee46:	0858      	lsrs	r0, r3, #1
 801ee48:	07da      	lsls	r2, r3, #31
 801ee4a:	9a08      	ldr	r2, [sp, #32]
 801ee4c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801ee50:	bf54      	ite	pl
 801ee52:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ee56:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ee5a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ee5e:	fa5f fc8c 	uxtb.w	ip, ip
 801ee62:	2a00      	cmp	r2, #0
 801ee64:	f000 8102 	beq.w	801f06c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ee68:	1c58      	adds	r0, r3, #1
 801ee6a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801ee6e:	07c0      	lsls	r0, r0, #31
 801ee70:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ee74:	bf54      	ite	pl
 801ee76:	f00e 0e0f 	andpl.w	lr, lr, #15
 801ee7a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ee7e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ee82:	fa5f fe8e 	uxtb.w	lr, lr
 801ee86:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801ee8a:	b1b9      	cbz	r1, 801eebc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801ee8c:	4453      	add	r3, sl
 801ee8e:	0858      	lsrs	r0, r3, #1
 801ee90:	07da      	lsls	r2, r3, #31
 801ee92:	5c38      	ldrb	r0, [r7, r0]
 801ee94:	bf54      	ite	pl
 801ee96:	f000 000f 	andpl.w	r0, r0, #15
 801ee9a:	1100      	asrmi	r0, r0, #4
 801ee9c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801eea0:	b2c0      	uxtb	r0, r0
 801eea2:	900a      	str	r0, [sp, #40]	; 0x28
 801eea4:	1c58      	adds	r0, r3, #1
 801eea6:	0843      	lsrs	r3, r0, #1
 801eea8:	07c2      	lsls	r2, r0, #31
 801eeaa:	5cfb      	ldrb	r3, [r7, r3]
 801eeac:	bf54      	ite	pl
 801eeae:	f003 030f 	andpl.w	r3, r3, #15
 801eeb2:	111b      	asrmi	r3, r3, #4
 801eeb4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801eeb8:	b2db      	uxtb	r3, r3
 801eeba:	930e      	str	r3, [sp, #56]	; 0x38
 801eebc:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801eec0:	b289      	uxth	r1, r1
 801eec2:	fb02 f301 	mul.w	r3, r2, r1
 801eec6:	0112      	lsls	r2, r2, #4
 801eec8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801eecc:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801eed0:	1ad2      	subs	r2, r2, r3
 801eed2:	b289      	uxth	r1, r1
 801eed4:	b292      	uxth	r2, r2
 801eed6:	1a40      	subs	r0, r0, r1
 801eed8:	fa1f fe80 	uxth.w	lr, r0
 801eedc:	980d      	ldr	r0, [sp, #52]	; 0x34
 801eede:	4342      	muls	r2, r0
 801eee0:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801eee4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801eee6:	fb01 c102 	mla	r1, r1, r2, ip
 801eeea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801eeec:	fb03 1302 	mla	r3, r3, r2, r1
 801eef0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eef4:	2b00      	cmp	r3, #0
 801eef6:	d045      	beq.n	801ef84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801eef8:	4a79      	ldr	r2, [pc, #484]	; (801f0e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>)
 801eefa:	2bff      	cmp	r3, #255	; 0xff
 801eefc:	6811      	ldr	r1, [r2, #0]
 801eefe:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801ef02:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801ef06:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801ef0a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ef0e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ef12:	b2c9      	uxtb	r1, r1
 801ef14:	f000 80bb 	beq.w	801f08e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ef18:	f8b8 c000 	ldrh.w	ip, [r8]
 801ef1c:	fa1f fb83 	uxth.w	fp, r3
 801ef20:	43db      	mvns	r3, r3
 801ef22:	fb1e fe0b 	smulbb	lr, lr, fp
 801ef26:	ea4f 202c 	mov.w	r0, ip, asr #8
 801ef2a:	fb12 f20b 	smulbb	r2, r2, fp
 801ef2e:	b2db      	uxtb	r3, r3
 801ef30:	fb11 f10b 	smulbb	r1, r1, fp
 801ef34:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ef38:	fb00 e003 	mla	r0, r0, r3, lr
 801ef3c:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801ef40:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ef44:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ef48:	b280      	uxth	r0, r0
 801ef4a:	fa5f fc8c 	uxtb.w	ip, ip
 801ef4e:	fb0e 2203 	mla	r2, lr, r3, r2
 801ef52:	fb0c 1303 	mla	r3, ip, r3, r1
 801ef56:	1c41      	adds	r1, r0, #1
 801ef58:	b292      	uxth	r2, r2
 801ef5a:	b29b      	uxth	r3, r3
 801ef5c:	f102 0e01 	add.w	lr, r2, #1
 801ef60:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ef64:	1c59      	adds	r1, r3, #1
 801ef66:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801ef6a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ef6e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ef72:	0952      	lsrs	r2, r2, #5
 801ef74:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ef78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ef7c:	4310      	orrs	r0, r2
 801ef7e:	4318      	orrs	r0, r3
 801ef80:	f8a8 0000 	strh.w	r0, [r8]
 801ef84:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ef86:	f108 0802 	add.w	r8, r8, #2
 801ef8a:	441c      	add	r4, r3
 801ef8c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ef8e:	441e      	add	r6, r3
 801ef90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef92:	3b01      	subs	r3, #1
 801ef94:	9309      	str	r3, [sp, #36]	; 0x24
 801ef96:	e736      	b.n	801ee06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801ef98:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ef9a:	3d01      	subs	r5, #1
 801ef9c:	f109 0902 	add.w	r9, r9, #2
 801efa0:	441c      	add	r4, r3
 801efa2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801efa4:	441e      	add	r6, r3
 801efa6:	e70e      	b.n	801edc6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801efa8:	d020      	beq.n	801efec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801efaa:	1e6b      	subs	r3, r5, #1
 801efac:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801efae:	fb00 4003 	mla	r0, r0, r3, r4
 801efb2:	1400      	asrs	r0, r0, #16
 801efb4:	f53f af23 	bmi.w	801edfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801efb8:	3901      	subs	r1, #1
 801efba:	4288      	cmp	r0, r1
 801efbc:	f6bf af1f 	bge.w	801edfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801efc0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801efc2:	fb01 6303 	mla	r3, r1, r3, r6
 801efc6:	141b      	asrs	r3, r3, #16
 801efc8:	f53f af19 	bmi.w	801edfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801efcc:	3a01      	subs	r2, #1
 801efce:	4293      	cmp	r3, r2
 801efd0:	f6bf af15 	bge.w	801edfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801efd4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801efd8:	46aa      	mov	sl, r5
 801efda:	46c8      	mov	r8, r9
 801efdc:	9308      	str	r3, [sp, #32]
 801efde:	f1ba 0f00 	cmp.w	sl, #0
 801efe2:	dc7f      	bgt.n	801f0e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801efe4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801efe8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801efec:	9b07      	ldr	r3, [sp, #28]
 801efee:	2b00      	cmp	r3, #0
 801eff0:	f340 8143 	ble.w	801f27a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 801eff4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801eff8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801effa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801effe:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801f002:	eef0 6a48 	vmov.f32	s13, s16
 801f006:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801f00a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801f00e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f012:	ee16 4a90 	vmov	r4, s13
 801f016:	eef0 6a68 	vmov.f32	s13, s17
 801f01a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f01e:	ee16 6a90 	vmov	r6, s13
 801f022:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801f026:	ee69 7a27 	vmul.f32	s15, s18, s15
 801f02a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801f02e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801f032:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801f036:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801f03a:	ee18 2a10 	vmov	r2, s16
 801f03e:	eeb0 8a47 	vmov.f32	s16, s14
 801f042:	fb92 f3f3 	sdiv	r3, r2, r3
 801f046:	ee18 2a90 	vmov	r2, s17
 801f04a:	9327      	str	r3, [sp, #156]	; 0x9c
 801f04c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f04e:	eef0 8a67 	vmov.f32	s17, s15
 801f052:	fb92 f3f3 	sdiv	r3, r2, r3
 801f056:	9328      	str	r3, [sp, #160]	; 0xa0
 801f058:	9b07      	ldr	r3, [sp, #28]
 801f05a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f05c:	3b01      	subs	r3, #1
 801f05e:	9307      	str	r3, [sp, #28]
 801f060:	bf08      	it	eq
 801f062:	4615      	moveq	r5, r2
 801f064:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f066:	bf18      	it	ne
 801f068:	461d      	movne	r5, r3
 801f06a:	e69d      	b.n	801eda8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f06c:	2900      	cmp	r1, #0
 801f06e:	f43f af25 	beq.w	801eebc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801f072:	eb0a 0003 	add.w	r0, sl, r3
 801f076:	0843      	lsrs	r3, r0, #1
 801f078:	07c0      	lsls	r0, r0, #31
 801f07a:	5cfb      	ldrb	r3, [r7, r3]
 801f07c:	bf54      	ite	pl
 801f07e:	f003 030f 	andpl.w	r3, r3, #15
 801f082:	111b      	asrmi	r3, r3, #4
 801f084:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f088:	b2db      	uxtb	r3, r3
 801f08a:	930a      	str	r3, [sp, #40]	; 0x28
 801f08c:	e716      	b.n	801eebc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801f08e:	00d2      	lsls	r2, r2, #3
 801f090:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801f094:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801f098:	f8a8 1000 	strh.w	r1, [r8]
 801f09c:	e772      	b.n	801ef84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f09e:	f113 0b01 	adds.w	fp, r3, #1
 801f0a2:	f53f af6f 	bmi.w	801ef84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f0a6:	45dc      	cmp	ip, fp
 801f0a8:	f6ff af6c 	blt.w	801ef84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f0ac:	f110 0b01 	adds.w	fp, r0, #1
 801f0b0:	f53f af68 	bmi.w	801ef84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f0b4:	45de      	cmp	lr, fp
 801f0b6:	f6ff af65 	blt.w	801ef84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f0ba:	9302      	str	r3, [sp, #8]
 801f0bc:	fa0f f38e 	sxth.w	r3, lr
 801f0c0:	9a08      	ldr	r2, [sp, #32]
 801f0c2:	9301      	str	r3, [sp, #4]
 801f0c4:	fa0f f38c 	sxth.w	r3, ip
 801f0c8:	9105      	str	r1, [sp, #20]
 801f0ca:	4641      	mov	r1, r8
 801f0cc:	9300      	str	r3, [sp, #0]
 801f0ce:	4653      	mov	r3, sl
 801f0d0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f0d4:	463a      	mov	r2, r7
 801f0d6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801f0d8:	f7ff fd56 	bl	801eb88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801f0dc:	e752      	b.n	801ef84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f0de:	bf00      	nop
 801f0e0:	200125b8 	.word	0x200125b8
 801f0e4:	1422      	asrs	r2, r4, #16
 801f0e6:	9906      	ldr	r1, [sp, #24]
 801f0e8:	1433      	asrs	r3, r6, #16
 801f0ea:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f0ee:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801f0f2:	fb01 2303 	mla	r3, r1, r3, r2
 801f0f6:	085a      	lsrs	r2, r3, #1
 801f0f8:	07d9      	lsls	r1, r3, #31
 801f0fa:	5cba      	ldrb	r2, [r7, r2]
 801f0fc:	bf54      	ite	pl
 801f0fe:	f002 020f 	andpl.w	r2, r2, #15
 801f102:	1112      	asrmi	r2, r2, #4
 801f104:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f108:	b2d2      	uxtb	r2, r2
 801f10a:	2800      	cmp	r0, #0
 801f10c:	f000 809c 	beq.w	801f248 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f8>
 801f110:	f103 0e01 	add.w	lr, r3, #1
 801f114:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801f118:	f01e 0f01 	tst.w	lr, #1
 801f11c:	5c79      	ldrb	r1, [r7, r1]
 801f11e:	bf0c      	ite	eq
 801f120:	f001 010f 	andeq.w	r1, r1, #15
 801f124:	1109      	asrne	r1, r1, #4
 801f126:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f12a:	b2c9      	uxtb	r1, r1
 801f12c:	910f      	str	r1, [sp, #60]	; 0x3c
 801f12e:	f1bc 0f00 	cmp.w	ip, #0
 801f132:	d01a      	beq.n	801f16a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41a>
 801f134:	9908      	ldr	r1, [sp, #32]
 801f136:	440b      	add	r3, r1
 801f138:	0859      	lsrs	r1, r3, #1
 801f13a:	f013 0f01 	tst.w	r3, #1
 801f13e:	f103 0301 	add.w	r3, r3, #1
 801f142:	5c79      	ldrb	r1, [r7, r1]
 801f144:	bf0c      	ite	eq
 801f146:	f001 010f 	andeq.w	r1, r1, #15
 801f14a:	1109      	asrne	r1, r1, #4
 801f14c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f150:	b2c9      	uxtb	r1, r1
 801f152:	910b      	str	r1, [sp, #44]	; 0x2c
 801f154:	0859      	lsrs	r1, r3, #1
 801f156:	07db      	lsls	r3, r3, #31
 801f158:	5c79      	ldrb	r1, [r7, r1]
 801f15a:	bf54      	ite	pl
 801f15c:	f001 010f 	andpl.w	r1, r1, #15
 801f160:	1109      	asrmi	r1, r1, #4
 801f162:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f166:	b2c9      	uxtb	r1, r1
 801f168:	9110      	str	r1, [sp, #64]	; 0x40
 801f16a:	b280      	uxth	r0, r0
 801f16c:	fa1f fc8c 	uxth.w	ip, ip
 801f170:	fb00 f30c 	mul.w	r3, r0, ip
 801f174:	0100      	lsls	r0, r0, #4
 801f176:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801f17a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801f17e:	1ac0      	subs	r0, r0, r3
 801f180:	fa1f fc8c 	uxth.w	ip, ip
 801f184:	b280      	uxth	r0, r0
 801f186:	eba1 010c 	sub.w	r1, r1, ip
 801f18a:	fa1f fe81 	uxth.w	lr, r1
 801f18e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f190:	4348      	muls	r0, r1
 801f192:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f194:	fb02 020e 	mla	r2, r2, lr, r0
 801f198:	fb0c 2c01 	mla	ip, ip, r1, r2
 801f19c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801f19e:	fb03 c302 	mla	r3, r3, r2, ip
 801f1a2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f1a6:	2b00      	cmp	r3, #0
 801f1a8:	d045      	beq.n	801f236 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801f1aa:	4a36      	ldr	r2, [pc, #216]	; (801f284 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>)
 801f1ac:	2bff      	cmp	r3, #255	; 0xff
 801f1ae:	6811      	ldr	r1, [r2, #0]
 801f1b0:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801f1b4:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801f1b8:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801f1bc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f1c0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f1c4:	b2c9      	uxtb	r1, r1
 801f1c6:	d050      	beq.n	801f26a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51a>
 801f1c8:	f8b8 c000 	ldrh.w	ip, [r8]
 801f1cc:	fa1f fb83 	uxth.w	fp, r3
 801f1d0:	43db      	mvns	r3, r3
 801f1d2:	fb1e fe0b 	smulbb	lr, lr, fp
 801f1d6:	ea4f 202c 	mov.w	r0, ip, asr #8
 801f1da:	fb12 f20b 	smulbb	r2, r2, fp
 801f1de:	b2db      	uxtb	r3, r3
 801f1e0:	fb11 f10b 	smulbb	r1, r1, fp
 801f1e4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f1e8:	fb00 e003 	mla	r0, r0, r3, lr
 801f1ec:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801f1f0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f1f4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f1f8:	b280      	uxth	r0, r0
 801f1fa:	fa5f fc8c 	uxtb.w	ip, ip
 801f1fe:	fb0e 2203 	mla	r2, lr, r3, r2
 801f202:	fb0c 1103 	mla	r1, ip, r3, r1
 801f206:	b292      	uxth	r2, r2
 801f208:	b289      	uxth	r1, r1
 801f20a:	f102 0e01 	add.w	lr, r2, #1
 801f20e:	1c4b      	adds	r3, r1, #1
 801f210:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801f214:	f100 0e01 	add.w	lr, r0, #1
 801f218:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f21c:	0952      	lsrs	r2, r2, #5
 801f21e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801f222:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f226:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f22a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f22e:	4302      	orrs	r2, r0
 801f230:	430a      	orrs	r2, r1
 801f232:	f8a8 2000 	strh.w	r2, [r8]
 801f236:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f238:	f108 0802 	add.w	r8, r8, #2
 801f23c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801f240:	441c      	add	r4, r3
 801f242:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f244:	441e      	add	r6, r3
 801f246:	e6ca      	b.n	801efde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 801f248:	f1bc 0f00 	cmp.w	ip, #0
 801f24c:	d08d      	beq.n	801f16a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41a>
 801f24e:	9908      	ldr	r1, [sp, #32]
 801f250:	440b      	add	r3, r1
 801f252:	0859      	lsrs	r1, r3, #1
 801f254:	07db      	lsls	r3, r3, #31
 801f256:	5c79      	ldrb	r1, [r7, r1]
 801f258:	bf54      	ite	pl
 801f25a:	f001 010f 	andpl.w	r1, r1, #15
 801f25e:	1109      	asrmi	r1, r1, #4
 801f260:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f264:	b2c9      	uxtb	r1, r1
 801f266:	910b      	str	r1, [sp, #44]	; 0x2c
 801f268:	e77f      	b.n	801f16a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41a>
 801f26a:	00d2      	lsls	r2, r2, #3
 801f26c:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801f270:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801f274:	f8a8 1000 	strh.w	r1, [r8]
 801f278:	e7dd      	b.n	801f236 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801f27a:	b013      	add	sp, #76	; 0x4c
 801f27c:	ecbd 8b08 	vpop	{d8-d11}
 801f280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f284:	200125b8 	.word	0x200125b8

0801f288 <CRC_Lock>:
 801f288:	4a1d      	ldr	r2, [pc, #116]	; (801f300 <CRC_Lock+0x78>)
 801f28a:	b530      	push	{r4, r5, lr}
 801f28c:	6813      	ldr	r3, [r2, #0]
 801f28e:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801f292:	f24c 2540 	movw	r5, #49728	; 0xc240
 801f296:	f023 0301 	bic.w	r3, r3, #1
 801f29a:	6013      	str	r3, [r2, #0]
 801f29c:	4b19      	ldr	r3, [pc, #100]	; (801f304 <CRC_Lock+0x7c>)
 801f29e:	681a      	ldr	r2, [r3, #0]
 801f2a0:	4022      	ands	r2, r4
 801f2a2:	42aa      	cmp	r2, r5
 801f2a4:	d005      	beq.n	801f2b2 <CRC_Lock+0x2a>
 801f2a6:	681b      	ldr	r3, [r3, #0]
 801f2a8:	f24c 2270 	movw	r2, #49776	; 0xc270
 801f2ac:	4023      	ands	r3, r4
 801f2ae:	4293      	cmp	r3, r2
 801f2b0:	d11d      	bne.n	801f2ee <CRC_Lock+0x66>
 801f2b2:	4b15      	ldr	r3, [pc, #84]	; (801f308 <CRC_Lock+0x80>)
 801f2b4:	681b      	ldr	r3, [r3, #0]
 801f2b6:	b9d3      	cbnz	r3, 801f2ee <CRC_Lock+0x66>
 801f2b8:	4a14      	ldr	r2, [pc, #80]	; (801f30c <CRC_Lock+0x84>)
 801f2ba:	6813      	ldr	r3, [r2, #0]
 801f2bc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801f2c0:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801f2c4:	d006      	beq.n	801f2d4 <CRC_Lock+0x4c>
 801f2c6:	6813      	ldr	r3, [r2, #0]
 801f2c8:	f240 4283 	movw	r2, #1155	; 0x483
 801f2cc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801f2d0:	4293      	cmp	r3, r2
 801f2d2:	d10c      	bne.n	801f2ee <CRC_Lock+0x66>
 801f2d4:	4b0e      	ldr	r3, [pc, #56]	; (801f310 <CRC_Lock+0x88>)
 801f2d6:	2201      	movs	r2, #1
 801f2d8:	601a      	str	r2, [r3, #0]
 801f2da:	681a      	ldr	r2, [r3, #0]
 801f2dc:	2a00      	cmp	r2, #0
 801f2de:	d1fc      	bne.n	801f2da <CRC_Lock+0x52>
 801f2e0:	4b0c      	ldr	r3, [pc, #48]	; (801f314 <CRC_Lock+0x8c>)
 801f2e2:	6018      	str	r0, [r3, #0]
 801f2e4:	6818      	ldr	r0, [r3, #0]
 801f2e6:	1a43      	subs	r3, r0, r1
 801f2e8:	4258      	negs	r0, r3
 801f2ea:	4158      	adcs	r0, r3
 801f2ec:	bd30      	pop	{r4, r5, pc}
 801f2ee:	4b0a      	ldr	r3, [pc, #40]	; (801f318 <CRC_Lock+0x90>)
 801f2f0:	2201      	movs	r2, #1
 801f2f2:	601a      	str	r2, [r3, #0]
 801f2f4:	681a      	ldr	r2, [r3, #0]
 801f2f6:	2a00      	cmp	r2, #0
 801f2f8:	d1fc      	bne.n	801f2f4 <CRC_Lock+0x6c>
 801f2fa:	4b08      	ldr	r3, [pc, #32]	; (801f31c <CRC_Lock+0x94>)
 801f2fc:	e7f1      	b.n	801f2e2 <CRC_Lock+0x5a>
 801f2fe:	bf00      	nop
 801f300:	e0002000 	.word	0xe0002000
 801f304:	e000ed00 	.word	0xe000ed00
 801f308:	e0042000 	.word	0xe0042000
 801f30c:	5c001000 	.word	0x5c001000
 801f310:	58024c08 	.word	0x58024c08
 801f314:	58024c00 	.word	0x58024c00
 801f318:	40023008 	.word	0x40023008
 801f31c:	40023000 	.word	0x40023000

0801f320 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801f320:	6101      	str	r1, [r0, #16]
 801f322:	4770      	bx	lr

0801f324 <_ZN8touchgfx8Gestures4tickEv>:
 801f324:	7b83      	ldrb	r3, [r0, #14]
 801f326:	b14b      	cbz	r3, 801f33c <_ZN8touchgfx8Gestures4tickEv+0x18>
 801f328:	8903      	ldrh	r3, [r0, #8]
 801f32a:	3301      	adds	r3, #1
 801f32c:	b29b      	uxth	r3, r3
 801f32e:	2b07      	cmp	r3, #7
 801f330:	8103      	strh	r3, [r0, #8]
 801f332:	bf81      	itttt	hi
 801f334:	2300      	movhi	r3, #0
 801f336:	8143      	strhhi	r3, [r0, #10]
 801f338:	8183      	strhhi	r3, [r0, #12]
 801f33a:	7383      	strbhi	r3, [r0, #14]
 801f33c:	4770      	bx	lr
	...

0801f340 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801f340:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801f344:	4604      	mov	r4, r0
 801f346:	4698      	mov	r8, r3
 801f348:	8880      	ldrh	r0, [r0, #4]
 801f34a:	4617      	mov	r7, r2
 801f34c:	4b1d      	ldr	r3, [pc, #116]	; (801f3c4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801f34e:	460e      	mov	r6, r1
 801f350:	f8ad 0006 	strh.w	r0, [sp, #6]
 801f354:	eba8 0000 	sub.w	r0, r8, r0
 801f358:	9300      	str	r3, [sp, #0]
 801f35a:	2300      	movs	r3, #0
 801f35c:	b280      	uxth	r0, r0
 801f35e:	8aa2      	ldrh	r2, [r4, #20]
 801f360:	f88d 3004 	strb.w	r3, [sp, #4]
 801f364:	b203      	sxth	r3, r0
 801f366:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801f36a:	88e1      	ldrh	r1, [r4, #6]
 801f36c:	2b00      	cmp	r3, #0
 801f36e:	f8ad 800a 	strh.w	r8, [sp, #10]
 801f372:	f8ad 1008 	strh.w	r1, [sp, #8]
 801f376:	bfb8      	it	lt
 801f378:	4240      	neglt	r0, r0
 801f37a:	f8ad 500c 	strh.w	r5, [sp, #12]
 801f37e:	bfb8      	it	lt
 801f380:	b203      	sxthlt	r3, r0
 801f382:	4293      	cmp	r3, r2
 801f384:	dc08      	bgt.n	801f398 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801f386:	1a69      	subs	r1, r5, r1
 801f388:	b289      	uxth	r1, r1
 801f38a:	b20b      	sxth	r3, r1
 801f38c:	2b00      	cmp	r3, #0
 801f38e:	bfbc      	itt	lt
 801f390:	4249      	neglt	r1, r1
 801f392:	b20b      	sxthlt	r3, r1
 801f394:	429a      	cmp	r2, r3
 801f396:	da13      	bge.n	801f3c0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801f398:	6920      	ldr	r0, [r4, #16]
 801f39a:	4669      	mov	r1, sp
 801f39c:	eba8 0606 	sub.w	r6, r8, r6
 801f3a0:	1bef      	subs	r7, r5, r7
 801f3a2:	6803      	ldr	r3, [r0, #0]
 801f3a4:	685b      	ldr	r3, [r3, #4]
 801f3a6:	4798      	blx	r3
 801f3a8:	2300      	movs	r3, #0
 801f3aa:	2001      	movs	r0, #1
 801f3ac:	8166      	strh	r6, [r4, #10]
 801f3ae:	8123      	strh	r3, [r4, #8]
 801f3b0:	81a7      	strh	r7, [r4, #12]
 801f3b2:	f8a4 8004 	strh.w	r8, [r4, #4]
 801f3b6:	80e5      	strh	r5, [r4, #6]
 801f3b8:	73a0      	strb	r0, [r4, #14]
 801f3ba:	b004      	add	sp, #16
 801f3bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f3c0:	2000      	movs	r0, #0
 801f3c2:	e7fa      	b.n	801f3ba <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801f3c4:	08024770 	.word	0x08024770

0801f3c8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801f3c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f3ca:	461e      	mov	r6, r3
 801f3cc:	1e4b      	subs	r3, r1, #1
 801f3ce:	b085      	sub	sp, #20
 801f3d0:	4604      	mov	r4, r0
 801f3d2:	2b01      	cmp	r3, #1
 801f3d4:	460d      	mov	r5, r1
 801f3d6:	4617      	mov	r7, r2
 801f3d8:	d84b      	bhi.n	801f472 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801f3da:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801f3de:	1cd3      	adds	r3, r2, #3
 801f3e0:	b29b      	uxth	r3, r3
 801f3e2:	2b06      	cmp	r3, #6
 801f3e4:	d916      	bls.n	801f414 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801f3e6:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801f488 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801f3ea:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f3ee:	f8cd c004 	str.w	ip, [sp, #4]
 801f3f2:	f04f 0c00 	mov.w	ip, #0
 801f3f6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801f3fa:	6900      	ldr	r0, [r0, #16]
 801f3fc:	f8ad 100c 	strh.w	r1, [sp, #12]
 801f400:	a901      	add	r1, sp, #4
 801f402:	f88d c008 	strb.w	ip, [sp, #8]
 801f406:	f8ad 200a 	strh.w	r2, [sp, #10]
 801f40a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801f40e:	6803      	ldr	r3, [r0, #0]
 801f410:	689b      	ldr	r3, [r3, #8]
 801f412:	4798      	blx	r3
 801f414:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801f418:	1cd3      	adds	r3, r2, #3
 801f41a:	b29b      	uxth	r3, r3
 801f41c:	2b06      	cmp	r3, #6
 801f41e:	d916      	bls.n	801f44e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801f420:	f8df c064 	ldr.w	ip, [pc, #100]	; 801f488 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801f424:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f428:	f8cd c004 	str.w	ip, [sp, #4]
 801f42c:	f04f 0c01 	mov.w	ip, #1
 801f430:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801f434:	6920      	ldr	r0, [r4, #16]
 801f436:	f8ad 100c 	strh.w	r1, [sp, #12]
 801f43a:	a901      	add	r1, sp, #4
 801f43c:	f88d c008 	strb.w	ip, [sp, #8]
 801f440:	f8ad 200a 	strh.w	r2, [sp, #10]
 801f444:	f8ad 300e 	strh.w	r3, [sp, #14]
 801f448:	6803      	ldr	r3, [r0, #0]
 801f44a:	689b      	ldr	r3, [r3, #8]
 801f44c:	4798      	blx	r3
 801f44e:	4b0d      	ldr	r3, [pc, #52]	; (801f484 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801f450:	a901      	add	r1, sp, #4
 801f452:	6920      	ldr	r0, [r4, #16]
 801f454:	9301      	str	r3, [sp, #4]
 801f456:	2300      	movs	r3, #0
 801f458:	f88d 5008 	strb.w	r5, [sp, #8]
 801f45c:	f8ad 700a 	strh.w	r7, [sp, #10]
 801f460:	f8ad 600c 	strh.w	r6, [sp, #12]
 801f464:	f8ad 300e 	strh.w	r3, [sp, #14]
 801f468:	6803      	ldr	r3, [r0, #0]
 801f46a:	681b      	ldr	r3, [r3, #0]
 801f46c:	4798      	blx	r3
 801f46e:	b005      	add	sp, #20
 801f470:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f472:	2900      	cmp	r1, #0
 801f474:	d1eb      	bne.n	801f44e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801f476:	80a2      	strh	r2, [r4, #4]
 801f478:	80c6      	strh	r6, [r0, #6]
 801f47a:	60a1      	str	r1, [r4, #8]
 801f47c:	81a1      	strh	r1, [r4, #12]
 801f47e:	73a1      	strb	r1, [r4, #14]
 801f480:	e7e5      	b.n	801f44e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801f482:	bf00      	nop
 801f484:	0802475c 	.word	0x0802475c
 801f488:	08024784 	.word	0x08024784

0801f48c <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>:
 801f48c:	6281      	str	r1, [r0, #40]	; 0x28
 801f48e:	4770      	bx	lr

0801f490 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801f490:	b513      	push	{r0, r1, r4, lr}
 801f492:	6803      	ldr	r3, [r0, #0]
 801f494:	4604      	mov	r4, r0
 801f496:	4601      	mov	r1, r0
 801f498:	4668      	mov	r0, sp
 801f49a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801f49c:	4798      	blx	r3
 801f49e:	6823      	ldr	r3, [r4, #0]
 801f4a0:	4669      	mov	r1, sp
 801f4a2:	4620      	mov	r0, r4
 801f4a4:	691b      	ldr	r3, [r3, #16]
 801f4a6:	4798      	blx	r3
 801f4a8:	b002      	add	sp, #8
 801f4aa:	bd10      	pop	{r4, pc}

0801f4ac <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 801f4ac:	b510      	push	{r4, lr}
 801f4ae:	2200      	movs	r2, #0
 801f4b0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 801f4b4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 801f4b8:	8002      	strh	r2, [r0, #0]
 801f4ba:	8042      	strh	r2, [r0, #2]
 801f4bc:	8084      	strh	r4, [r0, #4]
 801f4be:	80c1      	strh	r1, [r0, #6]
 801f4c0:	bd10      	pop	{r4, pc}

0801f4c2 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 801f4c2:	2200      	movs	r2, #0
 801f4c4:	8002      	strh	r2, [r0, #0]
 801f4c6:	8042      	strh	r2, [r0, #2]
 801f4c8:	8082      	strh	r2, [r0, #4]
 801f4ca:	80c2      	strh	r2, [r0, #6]
 801f4cc:	4770      	bx	lr
	...

0801f4d0 <_ZNK8touchgfx12CanvasWidget10getPainterEv>:
 801f4d0:	b508      	push	{r3, lr}
 801f4d2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801f4d4:	b928      	cbnz	r0, 801f4e2 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x12>
 801f4d6:	4b03      	ldr	r3, [pc, #12]	; (801f4e4 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x14>)
 801f4d8:	2123      	movs	r1, #35	; 0x23
 801f4da:	4a03      	ldr	r2, [pc, #12]	; (801f4e8 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x18>)
 801f4dc:	4803      	ldr	r0, [pc, #12]	; (801f4ec <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x1c>)
 801f4de:	f001 fc47 	bl	8020d70 <__assert_func>
 801f4e2:	bd08      	pop	{r3, pc}
 801f4e4:	08025b43 	.word	0x08025b43
 801f4e8:	08025c20 	.word	0x08025c20
 801f4ec:	08025b6a 	.word	0x08025b6a

0801f4f0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801f4f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f4f4:	b089      	sub	sp, #36	; 0x24
 801f4f6:	4604      	mov	r4, r0
 801f4f8:	6808      	ldr	r0, [r1, #0]
 801f4fa:	f04f 0a00 	mov.w	sl, #0
 801f4fe:	6849      	ldr	r1, [r1, #4]
 801f500:	ab02      	add	r3, sp, #8
 801f502:	f04f 0b01 	mov.w	fp, #1
 801f506:	c303      	stmia	r3!, {r0, r1}
 801f508:	4b3f      	ldr	r3, [pc, #252]	; (801f608 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x118>)
 801f50a:	4621      	mov	r1, r4
 801f50c:	a804      	add	r0, sp, #16
 801f50e:	781b      	ldrb	r3, [r3, #0]
 801f510:	2b01      	cmp	r3, #1
 801f512:	6823      	ldr	r3, [r4, #0]
 801f514:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801f516:	bf1f      	itttt	ne
 801f518:	f10d 0906 	addne.w	r9, sp, #6
 801f51c:	ae03      	addne	r6, sp, #12
 801f51e:	f10d 050e 	addne.w	r5, sp, #14
 801f522:	f10d 080a 	addne.w	r8, sp, #10
 801f526:	bf01      	itttt	eq
 801f528:	f10d 090e 	addeq.w	r9, sp, #14
 801f52c:	f10d 0606 	addeq.w	r6, sp, #6
 801f530:	ad03      	addeq	r5, sp, #12
 801f532:	f10d 0808 	addeq.w	r8, sp, #8
 801f536:	4798      	blx	r3
 801f538:	f9b5 3000 	ldrsh.w	r3, [r5]
 801f53c:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 801f540:	2b00      	cmp	r3, #0
 801f542:	d056      	beq.n	801f5f2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x102>
 801f544:	4293      	cmp	r3, r2
 801f546:	bfa8      	it	ge
 801f548:	4613      	movge	r3, r2
 801f54a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801f54e:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 801f552:	2f00      	cmp	r7, #0
 801f554:	dd34      	ble.n	801f5c0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd0>
 801f556:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 801f55a:	f8bd c014 	ldrh.w	ip, [sp, #20]
 801f55e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801f562:	4484      	add	ip, r0
 801f564:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801f568:	f9b6 e000 	ldrsh.w	lr, [r6]
 801f56c:	fa0f fc8c 	sxth.w	ip, ip
 801f570:	f9b9 1000 	ldrsh.w	r1, [r9]
 801f574:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f578:	4562      	cmp	r2, ip
 801f57a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801f57e:	f8ad e01c 	strh.w	lr, [sp, #28]
 801f582:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f586:	da29      	bge.n	801f5dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 801f588:	4472      	add	r2, lr
 801f58a:	b212      	sxth	r2, r2
 801f58c:	4290      	cmp	r0, r2
 801f58e:	da25      	bge.n	801f5dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 801f590:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f594:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801f598:	4402      	add	r2, r0
 801f59a:	b212      	sxth	r2, r2
 801f59c:	4293      	cmp	r3, r2
 801f59e:	da1d      	bge.n	801f5dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 801f5a0:	440b      	add	r3, r1
 801f5a2:	b21b      	sxth	r3, r3
 801f5a4:	4298      	cmp	r0, r3
 801f5a6:	da19      	bge.n	801f5dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 801f5a8:	6823      	ldr	r3, [r4, #0]
 801f5aa:	a906      	add	r1, sp, #24
 801f5ac:	4620      	mov	r0, r4
 801f5ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801f5b0:	4798      	blx	r3
 801f5b2:	b998      	cbnz	r0, 801f5dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 801f5b4:	107f      	asrs	r7, r7, #1
 801f5b6:	f04f 0a01 	mov.w	sl, #1
 801f5ba:	f8ad 7006 	strh.w	r7, [sp, #6]
 801f5be:	e7c6      	b.n	801f54e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 801f5c0:	d10c      	bne.n	801f5dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 801f5c2:	f8ad b006 	strh.w	fp, [sp, #6]
 801f5c6:	f8b8 2000 	ldrh.w	r2, [r8]
 801f5ca:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 801f5ce:	440a      	add	r2, r1
 801f5d0:	f8a8 2000 	strh.w	r2, [r8]
 801f5d4:	882b      	ldrh	r3, [r5, #0]
 801f5d6:	1a5b      	subs	r3, r3, r1
 801f5d8:	802b      	strh	r3, [r5, #0]
 801f5da:	e7ad      	b.n	801f538 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801f5dc:	f1ba 0f00 	cmp.w	sl, #0
 801f5e0:	d0f1      	beq.n	801f5c6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd6>
 801f5e2:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 801f5e6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801f5ea:	429a      	cmp	r2, r3
 801f5ec:	bf08      	it	eq
 801f5ee:	85a7      	strheq	r7, [r4, #44]	; 0x2c
 801f5f0:	e7e9      	b.n	801f5c6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd6>
 801f5f2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801f5f6:	429a      	cmp	r2, r3
 801f5f8:	bf04      	itt	eq
 801f5fa:	f647 73fe 	movweq	r3, #32766	; 0x7ffe
 801f5fe:	85a3      	strheq	r3, [r4, #44]	; 0x2c
 801f600:	b009      	add	sp, #36	; 0x24
 801f602:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f606:	bf00      	nop
 801f608:	200125a8 	.word	0x200125a8

0801f60c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 801f60c:	2200      	movs	r2, #0
 801f60e:	2101      	movs	r1, #1
 801f610:	8082      	strh	r2, [r0, #4]
 801f612:	80c2      	strh	r2, [r0, #6]
 801f614:	8102      	strh	r2, [r0, #8]
 801f616:	8142      	strh	r2, [r0, #10]
 801f618:	8182      	strh	r2, [r0, #12]
 801f61a:	81c2      	strh	r2, [r0, #14]
 801f61c:	8202      	strh	r2, [r0, #16]
 801f61e:	8242      	strh	r2, [r0, #18]
 801f620:	61c2      	str	r2, [r0, #28]
 801f622:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 801f626:	6282      	str	r2, [r0, #40]	; 0x28
 801f628:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801f62c:	4905      	ldr	r1, [pc, #20]	; (801f644 <_ZN8touchgfx12CanvasWidgetC1Ev+0x38>)
 801f62e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801f632:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801f636:	6001      	str	r1, [r0, #0]
 801f638:	8582      	strh	r2, [r0, #44]	; 0x2c
 801f63a:	22ff      	movs	r2, #255	; 0xff
 801f63c:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 801f640:	4770      	bx	lr
 801f642:	bf00      	nop
 801f644:	08025bac 	.word	0x08025bac

0801f648 <__aeabi_atexit>:
 801f648:	460b      	mov	r3, r1
 801f64a:	4601      	mov	r1, r0
 801f64c:	4618      	mov	r0, r3
 801f64e:	f001 bbb3 	b.w	8020db8 <__cxa_atexit>

0801f652 <__cxa_pure_virtual>:
 801f652:	b508      	push	{r3, lr}
 801f654:	f000 f838 	bl	801f6c8 <_ZSt9terminatev>

0801f658 <_ZdlPvj>:
 801f658:	f000 b828 	b.w	801f6ac <_ZdlPv>

0801f65c <_Znwj>:
 801f65c:	b510      	push	{r4, lr}
 801f65e:	2800      	cmp	r0, #0
 801f660:	bf14      	ite	ne
 801f662:	4604      	movne	r4, r0
 801f664:	2401      	moveq	r4, #1
 801f666:	4620      	mov	r0, r4
 801f668:	f001 fbf0 	bl	8020e4c <malloc>
 801f66c:	b930      	cbnz	r0, 801f67c <_Znwj+0x20>
 801f66e:	f000 f815 	bl	801f69c <_ZSt15get_new_handlerv>
 801f672:	b908      	cbnz	r0, 801f678 <_Znwj+0x1c>
 801f674:	f001 fb75 	bl	8020d62 <abort>
 801f678:	4780      	blx	r0
 801f67a:	e7f4      	b.n	801f666 <_Znwj+0xa>
 801f67c:	bd10      	pop	{r4, pc}

0801f67e <__cxa_guard_acquire>:
 801f67e:	6803      	ldr	r3, [r0, #0]
 801f680:	07db      	lsls	r3, r3, #31
 801f682:	d406      	bmi.n	801f692 <__cxa_guard_acquire+0x14>
 801f684:	7843      	ldrb	r3, [r0, #1]
 801f686:	b103      	cbz	r3, 801f68a <__cxa_guard_acquire+0xc>
 801f688:	deff      	udf	#255	; 0xff
 801f68a:	2301      	movs	r3, #1
 801f68c:	7043      	strb	r3, [r0, #1]
 801f68e:	4618      	mov	r0, r3
 801f690:	4770      	bx	lr
 801f692:	2000      	movs	r0, #0
 801f694:	4770      	bx	lr

0801f696 <__cxa_guard_release>:
 801f696:	2301      	movs	r3, #1
 801f698:	6003      	str	r3, [r0, #0]
 801f69a:	4770      	bx	lr

0801f69c <_ZSt15get_new_handlerv>:
 801f69c:	4b02      	ldr	r3, [pc, #8]	; (801f6a8 <_ZSt15get_new_handlerv+0xc>)
 801f69e:	6818      	ldr	r0, [r3, #0]
 801f6a0:	f3bf 8f5b 	dmb	ish
 801f6a4:	4770      	bx	lr
 801f6a6:	bf00      	nop
 801f6a8:	200126ac 	.word	0x200126ac

0801f6ac <_ZdlPv>:
 801f6ac:	f001 bbd6 	b.w	8020e5c <free>

0801f6b0 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801f6b0:	b508      	push	{r3, lr}
 801f6b2:	4780      	blx	r0
 801f6b4:	f001 fb55 	bl	8020d62 <abort>

0801f6b8 <_ZSt13get_terminatev>:
 801f6b8:	4b02      	ldr	r3, [pc, #8]	; (801f6c4 <_ZSt13get_terminatev+0xc>)
 801f6ba:	6818      	ldr	r0, [r3, #0]
 801f6bc:	f3bf 8f5b 	dmb	ish
 801f6c0:	4770      	bx	lr
 801f6c2:	bf00      	nop
 801f6c4:	200000e8 	.word	0x200000e8

0801f6c8 <_ZSt9terminatev>:
 801f6c8:	b508      	push	{r3, lr}
 801f6ca:	f7ff fff5 	bl	801f6b8 <_ZSt13get_terminatev>
 801f6ce:	f7ff ffef 	bl	801f6b0 <_ZN10__cxxabiv111__terminateEPFvvE>

0801f6d2 <_ZSt20__throw_length_errorPKc>:
 801f6d2:	b508      	push	{r3, lr}
 801f6d4:	f001 fb45 	bl	8020d62 <abort>

0801f6d8 <sin>:
 801f6d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801f6da:	eeb0 7b40 	vmov.f64	d7, d0
 801f6de:	ee17 3a90 	vmov	r3, s15
 801f6e2:	4a19      	ldr	r2, [pc, #100]	; (801f748 <sin+0x70>)
 801f6e4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801f6e8:	4293      	cmp	r3, r2
 801f6ea:	dc05      	bgt.n	801f6f8 <sin+0x20>
 801f6ec:	ed9f 1b14 	vldr	d1, [pc, #80]	; 801f740 <sin+0x68>
 801f6f0:	2000      	movs	r0, #0
 801f6f2:	f001 f92d 	bl	8020950 <__kernel_sin>
 801f6f6:	e004      	b.n	801f702 <sin+0x2a>
 801f6f8:	4a14      	ldr	r2, [pc, #80]	; (801f74c <sin+0x74>)
 801f6fa:	4293      	cmp	r3, r2
 801f6fc:	dd04      	ble.n	801f708 <sin+0x30>
 801f6fe:	ee30 0b40 	vsub.f64	d0, d0, d0
 801f702:	b005      	add	sp, #20
 801f704:	f85d fb04 	ldr.w	pc, [sp], #4
 801f708:	4668      	mov	r0, sp
 801f70a:	f000 fcd9 	bl	80200c0 <__ieee754_rem_pio2>
 801f70e:	f000 0003 	and.w	r0, r0, #3
 801f712:	2801      	cmp	r0, #1
 801f714:	ed9d 1b02 	vldr	d1, [sp, #8]
 801f718:	ed9d 0b00 	vldr	d0, [sp]
 801f71c:	d004      	beq.n	801f728 <sin+0x50>
 801f71e:	2802      	cmp	r0, #2
 801f720:	d005      	beq.n	801f72e <sin+0x56>
 801f722:	b950      	cbnz	r0, 801f73a <sin+0x62>
 801f724:	2001      	movs	r0, #1
 801f726:	e7e4      	b.n	801f6f2 <sin+0x1a>
 801f728:	f000 fe0a 	bl	8020340 <__kernel_cos>
 801f72c:	e7e9      	b.n	801f702 <sin+0x2a>
 801f72e:	2001      	movs	r0, #1
 801f730:	f001 f90e 	bl	8020950 <__kernel_sin>
 801f734:	eeb1 0b40 	vneg.f64	d0, d0
 801f738:	e7e3      	b.n	801f702 <sin+0x2a>
 801f73a:	f000 fe01 	bl	8020340 <__kernel_cos>
 801f73e:	e7f9      	b.n	801f734 <sin+0x5c>
	...
 801f748:	3fe921fb 	.word	0x3fe921fb
 801f74c:	7fefffff 	.word	0x7fefffff

0801f750 <pow>:
 801f750:	b570      	push	{r4, r5, r6, lr}
 801f752:	ed2d 8b0a 	vpush	{d8-d12}
 801f756:	eeb0 9b40 	vmov.f64	d9, d0
 801f75a:	eeb0 8b41 	vmov.f64	d8, d1
 801f75e:	4c8c      	ldr	r4, [pc, #560]	; (801f990 <pow+0x240>)
 801f760:	b08a      	sub	sp, #40	; 0x28
 801f762:	f000 f925 	bl	801f9b0 <__ieee754_pow>
 801f766:	f994 3000 	ldrsb.w	r3, [r4]
 801f76a:	eeb0 ab40 	vmov.f64	d10, d0
 801f76e:	1c5a      	adds	r2, r3, #1
 801f770:	4626      	mov	r6, r4
 801f772:	d04b      	beq.n	801f80c <pow+0xbc>
 801f774:	eeb4 8b48 	vcmp.f64	d8, d8
 801f778:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f77c:	d646      	bvs.n	801f80c <pow+0xbc>
 801f77e:	eeb4 9b49 	vcmp.f64	d9, d9
 801f782:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f786:	d719      	bvc.n	801f7bc <pow+0x6c>
 801f788:	eeb5 8b40 	vcmp.f64	d8, #0.0
 801f78c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f790:	d13c      	bne.n	801f80c <pow+0xbc>
 801f792:	2201      	movs	r2, #1
 801f794:	9200      	str	r2, [sp, #0]
 801f796:	497f      	ldr	r1, [pc, #508]	; (801f994 <pow+0x244>)
 801f798:	4a7f      	ldr	r2, [pc, #508]	; (801f998 <pow+0x248>)
 801f79a:	9201      	str	r2, [sp, #4]
 801f79c:	2000      	movs	r0, #0
 801f79e:	2200      	movs	r2, #0
 801f7a0:	2b02      	cmp	r3, #2
 801f7a2:	9208      	str	r2, [sp, #32]
 801f7a4:	ed8d 9b02 	vstr	d9, [sp, #8]
 801f7a8:	ed8d 8b04 	vstr	d8, [sp, #16]
 801f7ac:	e9cd 0106 	strd	r0, r1, [sp, #24]
 801f7b0:	d02a      	beq.n	801f808 <pow+0xb8>
 801f7b2:	4668      	mov	r0, sp
 801f7b4:	f001 f9b0 	bl	8020b18 <matherr>
 801f7b8:	bb00      	cbnz	r0, 801f7fc <pow+0xac>
 801f7ba:	e04e      	b.n	801f85a <pow+0x10a>
 801f7bc:	ed9f bb72 	vldr	d11, [pc, #456]	; 801f988 <pow+0x238>
 801f7c0:	eeb4 9b4b 	vcmp.f64	d9, d11
 801f7c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7c8:	eeb0 cb4b 	vmov.f64	d12, d11
 801f7cc:	d14a      	bne.n	801f864 <pow+0x114>
 801f7ce:	eeb4 8b4b 	vcmp.f64	d8, d11
 801f7d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f7d6:	d11f      	bne.n	801f818 <pow+0xc8>
 801f7d8:	2201      	movs	r2, #1
 801f7da:	9200      	str	r2, [sp, #0]
 801f7dc:	4a6e      	ldr	r2, [pc, #440]	; (801f998 <pow+0x248>)
 801f7de:	9201      	str	r2, [sp, #4]
 801f7e0:	2200      	movs	r2, #0
 801f7e2:	9208      	str	r2, [sp, #32]
 801f7e4:	ed8d 9b02 	vstr	d9, [sp, #8]
 801f7e8:	ed8d 8b04 	vstr	d8, [sp, #16]
 801f7ec:	ed8d bb06 	vstr	d11, [sp, #24]
 801f7f0:	2b00      	cmp	r3, #0
 801f7f2:	d0de      	beq.n	801f7b2 <pow+0x62>
 801f7f4:	4b67      	ldr	r3, [pc, #412]	; (801f994 <pow+0x244>)
 801f7f6:	2200      	movs	r2, #0
 801f7f8:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801f7fc:	9b08      	ldr	r3, [sp, #32]
 801f7fe:	b11b      	cbz	r3, 801f808 <pow+0xb8>
 801f800:	f001 fae8 	bl	8020dd4 <__errno>
 801f804:	9b08      	ldr	r3, [sp, #32]
 801f806:	6003      	str	r3, [r0, #0]
 801f808:	ed9d ab06 	vldr	d10, [sp, #24]
 801f80c:	eeb0 0b4a 	vmov.f64	d0, d10
 801f810:	b00a      	add	sp, #40	; 0x28
 801f812:	ecbd 8b0a 	vpop	{d8-d12}
 801f816:	bd70      	pop	{r4, r5, r6, pc}
 801f818:	eeb0 0b48 	vmov.f64	d0, d8
 801f81c:	f001 f8f9 	bl	8020a12 <finite>
 801f820:	2800      	cmp	r0, #0
 801f822:	d0f3      	beq.n	801f80c <pow+0xbc>
 801f824:	eeb5 8bc0 	vcmpe.f64	d8, #0.0
 801f828:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f82c:	d5ee      	bpl.n	801f80c <pow+0xbc>
 801f82e:	2301      	movs	r3, #1
 801f830:	9300      	str	r3, [sp, #0]
 801f832:	4b59      	ldr	r3, [pc, #356]	; (801f998 <pow+0x248>)
 801f834:	9301      	str	r3, [sp, #4]
 801f836:	2300      	movs	r3, #0
 801f838:	9308      	str	r3, [sp, #32]
 801f83a:	f994 3000 	ldrsb.w	r3, [r4]
 801f83e:	ed8d 9b02 	vstr	d9, [sp, #8]
 801f842:	ed8d 8b04 	vstr	d8, [sp, #16]
 801f846:	b913      	cbnz	r3, 801f84e <pow+0xfe>
 801f848:	ed8d bb06 	vstr	d11, [sp, #24]
 801f84c:	e7b1      	b.n	801f7b2 <pow+0x62>
 801f84e:	4953      	ldr	r1, [pc, #332]	; (801f99c <pow+0x24c>)
 801f850:	2000      	movs	r0, #0
 801f852:	e9cd 0106 	strd	r0, r1, [sp, #24]
 801f856:	2b02      	cmp	r3, #2
 801f858:	d1ab      	bne.n	801f7b2 <pow+0x62>
 801f85a:	f001 fabb 	bl	8020dd4 <__errno>
 801f85e:	2321      	movs	r3, #33	; 0x21
 801f860:	6003      	str	r3, [r0, #0]
 801f862:	e7cb      	b.n	801f7fc <pow+0xac>
 801f864:	f001 f8d5 	bl	8020a12 <finite>
 801f868:	4605      	mov	r5, r0
 801f86a:	2800      	cmp	r0, #0
 801f86c:	d164      	bne.n	801f938 <pow+0x1e8>
 801f86e:	eeb0 0b49 	vmov.f64	d0, d9
 801f872:	f001 f8ce 	bl	8020a12 <finite>
 801f876:	2800      	cmp	r0, #0
 801f878:	d05e      	beq.n	801f938 <pow+0x1e8>
 801f87a:	eeb0 0b48 	vmov.f64	d0, d8
 801f87e:	f001 f8c8 	bl	8020a12 <finite>
 801f882:	2800      	cmp	r0, #0
 801f884:	d058      	beq.n	801f938 <pow+0x1e8>
 801f886:	eeb4 ab4a 	vcmp.f64	d10, d10
 801f88a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f88e:	f994 3000 	ldrsb.w	r3, [r4]
 801f892:	4a41      	ldr	r2, [pc, #260]	; (801f998 <pow+0x248>)
 801f894:	d70e      	bvc.n	801f8b4 <pow+0x164>
 801f896:	2101      	movs	r1, #1
 801f898:	e9cd 1200 	strd	r1, r2, [sp]
 801f89c:	9508      	str	r5, [sp, #32]
 801f89e:	ed8d 9b02 	vstr	d9, [sp, #8]
 801f8a2:	ed8d 8b04 	vstr	d8, [sp, #16]
 801f8a6:	2b00      	cmp	r3, #0
 801f8a8:	d0ce      	beq.n	801f848 <pow+0xf8>
 801f8aa:	ee8b 7b0b 	vdiv.f64	d7, d11, d11
 801f8ae:	ed8d 7b06 	vstr	d7, [sp, #24]
 801f8b2:	e7d0      	b.n	801f856 <pow+0x106>
 801f8b4:	2103      	movs	r1, #3
 801f8b6:	ed8d 8b04 	vstr	d8, [sp, #16]
 801f8ba:	eeb6 7b00 	vmov.f64	d7, #96	; 0x3f000000  0.5
 801f8be:	ee28 8b07 	vmul.f64	d8, d8, d7
 801f8c2:	e9cd 1200 	strd	r1, r2, [sp]
 801f8c6:	9508      	str	r5, [sp, #32]
 801f8c8:	ed8d 9b02 	vstr	d9, [sp, #8]
 801f8cc:	b9fb      	cbnz	r3, 801f90e <pow+0x1be>
 801f8ce:	eeb5 9bc0 	vcmpe.f64	d9, #0.0
 801f8d2:	4b33      	ldr	r3, [pc, #204]	; (801f9a0 <pow+0x250>)
 801f8d4:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 801f8d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8dc:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801f8e0:	d54b      	bpl.n	801f97a <pow+0x22a>
 801f8e2:	eeb0 0b48 	vmov.f64	d0, d8
 801f8e6:	f001 f923 	bl	8020b30 <rint>
 801f8ea:	eeb4 0b48 	vcmp.f64	d0, d8
 801f8ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f8f2:	d004      	beq.n	801f8fe <pow+0x1ae>
 801f8f4:	4b2b      	ldr	r3, [pc, #172]	; (801f9a4 <pow+0x254>)
 801f8f6:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 801f8fa:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801f8fe:	f996 3000 	ldrsb.w	r3, [r6]
 801f902:	2b02      	cmp	r3, #2
 801f904:	d139      	bne.n	801f97a <pow+0x22a>
 801f906:	f001 fa65 	bl	8020dd4 <__errno>
 801f90a:	2322      	movs	r3, #34	; 0x22
 801f90c:	e7a8      	b.n	801f860 <pow+0x110>
 801f90e:	4b26      	ldr	r3, [pc, #152]	; (801f9a8 <pow+0x258>)
 801f910:	eeb5 9bc0 	vcmpe.f64	d9, #0.0
 801f914:	2200      	movs	r2, #0
 801f916:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f91a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801f91e:	d5ee      	bpl.n	801f8fe <pow+0x1ae>
 801f920:	eeb0 0b48 	vmov.f64	d0, d8
 801f924:	f001 f904 	bl	8020b30 <rint>
 801f928:	eeb4 0b48 	vcmp.f64	d0, d8
 801f92c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f930:	d0e5      	beq.n	801f8fe <pow+0x1ae>
 801f932:	2200      	movs	r2, #0
 801f934:	4b19      	ldr	r3, [pc, #100]	; (801f99c <pow+0x24c>)
 801f936:	e7e0      	b.n	801f8fa <pow+0x1aa>
 801f938:	eeb5 ab40 	vcmp.f64	d10, #0.0
 801f93c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801f940:	f47f af64 	bne.w	801f80c <pow+0xbc>
 801f944:	eeb0 0b49 	vmov.f64	d0, d9
 801f948:	f001 f863 	bl	8020a12 <finite>
 801f94c:	2800      	cmp	r0, #0
 801f94e:	f43f af5d 	beq.w	801f80c <pow+0xbc>
 801f952:	eeb0 0b48 	vmov.f64	d0, d8
 801f956:	f001 f85c 	bl	8020a12 <finite>
 801f95a:	2800      	cmp	r0, #0
 801f95c:	f43f af56 	beq.w	801f80c <pow+0xbc>
 801f960:	2304      	movs	r3, #4
 801f962:	9300      	str	r3, [sp, #0]
 801f964:	4b0c      	ldr	r3, [pc, #48]	; (801f998 <pow+0x248>)
 801f966:	9301      	str	r3, [sp, #4]
 801f968:	2300      	movs	r3, #0
 801f96a:	9308      	str	r3, [sp, #32]
 801f96c:	ed8d 9b02 	vstr	d9, [sp, #8]
 801f970:	ed8d 8b04 	vstr	d8, [sp, #16]
 801f974:	ed8d cb06 	vstr	d12, [sp, #24]
 801f978:	e7c1      	b.n	801f8fe <pow+0x1ae>
 801f97a:	4668      	mov	r0, sp
 801f97c:	f001 f8cc 	bl	8020b18 <matherr>
 801f980:	2800      	cmp	r0, #0
 801f982:	f47f af3b 	bne.w	801f7fc <pow+0xac>
 801f986:	e7be      	b.n	801f906 <pow+0x1b6>
	...
 801f990:	200000ec 	.word	0x200000ec
 801f994:	3ff00000 	.word	0x3ff00000
 801f998:	08025c6e 	.word	0x08025c6e
 801f99c:	fff00000 	.word	0xfff00000
 801f9a0:	47efffff 	.word	0x47efffff
 801f9a4:	c7efffff 	.word	0xc7efffff
 801f9a8:	7ff00000 	.word	0x7ff00000
 801f9ac:	00000000 	.word	0x00000000

0801f9b0 <__ieee754_pow>:
 801f9b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f9b4:	ec57 6b11 	vmov	r6, r7, d1
 801f9b8:	ed2d 8b02 	vpush	{d8}
 801f9bc:	eeb0 8b40 	vmov.f64	d8, d0
 801f9c0:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 801f9c4:	ea58 0306 	orrs.w	r3, r8, r6
 801f9c8:	b085      	sub	sp, #20
 801f9ca:	46b9      	mov	r9, r7
 801f9cc:	ee11 2a10 	vmov	r2, s2
 801f9d0:	f000 8306 	beq.w	801ffe0 <__ieee754_pow+0x630>
 801f9d4:	ee18 aa90 	vmov	sl, s17
 801f9d8:	4bb9      	ldr	r3, [pc, #740]	; (801fcc0 <__ieee754_pow+0x310>)
 801f9da:	f02a 4400 	bic.w	r4, sl, #2147483648	; 0x80000000
 801f9de:	429c      	cmp	r4, r3
 801f9e0:	ee10 ba10 	vmov	fp, s0
 801f9e4:	dc0b      	bgt.n	801f9fe <__ieee754_pow+0x4e>
 801f9e6:	d105      	bne.n	801f9f4 <__ieee754_pow+0x44>
 801f9e8:	f1bb 0f00 	cmp.w	fp, #0
 801f9ec:	d107      	bne.n	801f9fe <__ieee754_pow+0x4e>
 801f9ee:	45a0      	cmp	r8, r4
 801f9f0:	dc0d      	bgt.n	801fa0e <__ieee754_pow+0x5e>
 801f9f2:	e001      	b.n	801f9f8 <__ieee754_pow+0x48>
 801f9f4:	4598      	cmp	r8, r3
 801f9f6:	dc02      	bgt.n	801f9fe <__ieee754_pow+0x4e>
 801f9f8:	4598      	cmp	r8, r3
 801f9fa:	d110      	bne.n	801fa1e <__ieee754_pow+0x6e>
 801f9fc:	b17a      	cbz	r2, 801fa1e <__ieee754_pow+0x6e>
 801f9fe:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 801fa02:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 801fa06:	ea54 030b 	orrs.w	r3, r4, fp
 801fa0a:	f000 82e9 	beq.w	801ffe0 <__ieee754_pow+0x630>
 801fa0e:	48ad      	ldr	r0, [pc, #692]	; (801fcc4 <__ieee754_pow+0x314>)
 801fa10:	b005      	add	sp, #20
 801fa12:	ecbd 8b02 	vpop	{d8}
 801fa16:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa1a:	f001 b881 	b.w	8020b20 <nan>
 801fa1e:	f1ba 0f00 	cmp.w	sl, #0
 801fa22:	da4e      	bge.n	801fac2 <__ieee754_pow+0x112>
 801fa24:	4ba8      	ldr	r3, [pc, #672]	; (801fcc8 <__ieee754_pow+0x318>)
 801fa26:	4598      	cmp	r8, r3
 801fa28:	dc49      	bgt.n	801fabe <__ieee754_pow+0x10e>
 801fa2a:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 801fa2e:	4598      	cmp	r8, r3
 801fa30:	dd47      	ble.n	801fac2 <__ieee754_pow+0x112>
 801fa32:	ea4f 5328 	mov.w	r3, r8, asr #20
 801fa36:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 801fa3a:	2b14      	cmp	r3, #20
 801fa3c:	dd24      	ble.n	801fa88 <__ieee754_pow+0xd8>
 801fa3e:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 801fa42:	fa22 f503 	lsr.w	r5, r2, r3
 801fa46:	fa05 f303 	lsl.w	r3, r5, r3
 801fa4a:	4293      	cmp	r3, r2
 801fa4c:	d139      	bne.n	801fac2 <__ieee754_pow+0x112>
 801fa4e:	f005 0501 	and.w	r5, r5, #1
 801fa52:	f1c5 0502 	rsb	r5, r5, #2
 801fa56:	2a00      	cmp	r2, #0
 801fa58:	d15a      	bne.n	801fb10 <__ieee754_pow+0x160>
 801fa5a:	4b99      	ldr	r3, [pc, #612]	; (801fcc0 <__ieee754_pow+0x310>)
 801fa5c:	4598      	cmp	r8, r3
 801fa5e:	d122      	bne.n	801faa6 <__ieee754_pow+0xf6>
 801fa60:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 801fa64:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 801fa68:	ea53 030b 	orrs.w	r3, r3, fp
 801fa6c:	f000 82b8 	beq.w	801ffe0 <__ieee754_pow+0x630>
 801fa70:	4b96      	ldr	r3, [pc, #600]	; (801fccc <__ieee754_pow+0x31c>)
 801fa72:	429c      	cmp	r4, r3
 801fa74:	dd27      	ble.n	801fac6 <__ieee754_pow+0x116>
 801fa76:	f1b9 0f00 	cmp.w	r9, #0
 801fa7a:	f280 82b4 	bge.w	801ffe6 <__ieee754_pow+0x636>
 801fa7e:	ed9f 7b84 	vldr	d7, [pc, #528]	; 801fc90 <__ieee754_pow+0x2e0>
 801fa82:	ed8d 7b00 	vstr	d7, [sp]
 801fa86:	e026      	b.n	801fad6 <__ieee754_pow+0x126>
 801fa88:	2a00      	cmp	r2, #0
 801fa8a:	d140      	bne.n	801fb0e <__ieee754_pow+0x15e>
 801fa8c:	f1c3 0314 	rsb	r3, r3, #20
 801fa90:	fa48 f503 	asr.w	r5, r8, r3
 801fa94:	fa05 f303 	lsl.w	r3, r5, r3
 801fa98:	4543      	cmp	r3, r8
 801fa9a:	f040 82aa 	bne.w	801fff2 <__ieee754_pow+0x642>
 801fa9e:	f005 0501 	and.w	r5, r5, #1
 801faa2:	f1c5 0502 	rsb	r5, r5, #2
 801faa6:	4b8a      	ldr	r3, [pc, #552]	; (801fcd0 <__ieee754_pow+0x320>)
 801faa8:	4598      	cmp	r8, r3
 801faaa:	d11b      	bne.n	801fae4 <__ieee754_pow+0x134>
 801faac:	f1b9 0f00 	cmp.w	r9, #0
 801fab0:	f280 829c 	bge.w	801ffec <__ieee754_pow+0x63c>
 801fab4:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
 801fab8:	ee87 7b08 	vdiv.f64	d7, d7, d8
 801fabc:	e7e1      	b.n	801fa82 <__ieee754_pow+0xd2>
 801fabe:	2502      	movs	r5, #2
 801fac0:	e7c9      	b.n	801fa56 <__ieee754_pow+0xa6>
 801fac2:	2500      	movs	r5, #0
 801fac4:	e7c7      	b.n	801fa56 <__ieee754_pow+0xa6>
 801fac6:	f1b9 0f00 	cmp.w	r9, #0
 801faca:	dad8      	bge.n	801fa7e <__ieee754_pow+0xce>
 801facc:	f087 4400 	eor.w	r4, r7, #2147483648	; 0x80000000
 801fad0:	4633      	mov	r3, r6
 801fad2:	e9cd 3400 	strd	r3, r4, [sp]
 801fad6:	ed9d 0b00 	vldr	d0, [sp]
 801fada:	b005      	add	sp, #20
 801fadc:	ecbd 8b02 	vpop	{d8}
 801fae0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fae4:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 801fae8:	d102      	bne.n	801faf0 <__ieee754_pow+0x140>
 801faea:	ee28 7b08 	vmul.f64	d7, d8, d8
 801faee:	e7c8      	b.n	801fa82 <__ieee754_pow+0xd2>
 801faf0:	4b78      	ldr	r3, [pc, #480]	; (801fcd4 <__ieee754_pow+0x324>)
 801faf2:	4599      	cmp	r9, r3
 801faf4:	d10c      	bne.n	801fb10 <__ieee754_pow+0x160>
 801faf6:	f1ba 0f00 	cmp.w	sl, #0
 801fafa:	db09      	blt.n	801fb10 <__ieee754_pow+0x160>
 801fafc:	eeb0 0b48 	vmov.f64	d0, d8
 801fb00:	b005      	add	sp, #20
 801fb02:	ecbd 8b02 	vpop	{d8}
 801fb06:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb0a:	f000 bc15 	b.w	8020338 <__ieee754_sqrt>
 801fb0e:	2500      	movs	r5, #0
 801fb10:	eeb0 0b48 	vmov.f64	d0, d8
 801fb14:	f000 ff74 	bl	8020a00 <fabs>
 801fb18:	ed8d 0b00 	vstr	d0, [sp]
 801fb1c:	f1bb 0f00 	cmp.w	fp, #0
 801fb20:	d128      	bne.n	801fb74 <__ieee754_pow+0x1c4>
 801fb22:	b124      	cbz	r4, 801fb2e <__ieee754_pow+0x17e>
 801fb24:	4b6a      	ldr	r3, [pc, #424]	; (801fcd0 <__ieee754_pow+0x320>)
 801fb26:	f02a 4240 	bic.w	r2, sl, #3221225472	; 0xc0000000
 801fb2a:	429a      	cmp	r2, r3
 801fb2c:	d122      	bne.n	801fb74 <__ieee754_pow+0x1c4>
 801fb2e:	f1b9 0f00 	cmp.w	r9, #0
 801fb32:	da07      	bge.n	801fb44 <__ieee754_pow+0x194>
 801fb34:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
 801fb38:	ed9d 6b00 	vldr	d6, [sp]
 801fb3c:	ee87 7b06 	vdiv.f64	d7, d7, d6
 801fb40:	ed8d 7b00 	vstr	d7, [sp]
 801fb44:	f1ba 0f00 	cmp.w	sl, #0
 801fb48:	dac5      	bge.n	801fad6 <__ieee754_pow+0x126>
 801fb4a:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 801fb4e:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 801fb52:	ea54 0305 	orrs.w	r3, r4, r5
 801fb56:	d106      	bne.n	801fb66 <__ieee754_pow+0x1b6>
 801fb58:	ed9d 7b00 	vldr	d7, [sp]
 801fb5c:	ee37 7b47 	vsub.f64	d7, d7, d7
 801fb60:	ee87 7b07 	vdiv.f64	d7, d7, d7
 801fb64:	e78d      	b.n	801fa82 <__ieee754_pow+0xd2>
 801fb66:	2d01      	cmp	r5, #1
 801fb68:	d1b5      	bne.n	801fad6 <__ieee754_pow+0x126>
 801fb6a:	ed9d 7b00 	vldr	d7, [sp]
 801fb6e:	eeb1 7b47 	vneg.f64	d7, d7
 801fb72:	e786      	b.n	801fa82 <__ieee754_pow+0xd2>
 801fb74:	ea4f 7ada 	mov.w	sl, sl, lsr #31
 801fb78:	f10a 3aff 	add.w	sl, sl, #4294967295
 801fb7c:	ea55 030a 	orrs.w	r3, r5, sl
 801fb80:	d104      	bne.n	801fb8c <__ieee754_pow+0x1dc>
 801fb82:	ee38 8b48 	vsub.f64	d8, d8, d8
 801fb86:	ee88 7b08 	vdiv.f64	d7, d8, d8
 801fb8a:	e77a      	b.n	801fa82 <__ieee754_pow+0xd2>
 801fb8c:	4b52      	ldr	r3, [pc, #328]	; (801fcd8 <__ieee754_pow+0x328>)
 801fb8e:	4598      	cmp	r8, r3
 801fb90:	f340 80a8 	ble.w	801fce4 <__ieee754_pow+0x334>
 801fb94:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 801fb98:	4598      	cmp	r8, r3
 801fb9a:	dd0b      	ble.n	801fbb4 <__ieee754_pow+0x204>
 801fb9c:	4b4b      	ldr	r3, [pc, #300]	; (801fccc <__ieee754_pow+0x31c>)
 801fb9e:	429c      	cmp	r4, r3
 801fba0:	dc0e      	bgt.n	801fbc0 <__ieee754_pow+0x210>
 801fba2:	f1b9 0f00 	cmp.w	r9, #0
 801fba6:	f6bf af6a 	bge.w	801fa7e <__ieee754_pow+0xce>
 801fbaa:	ed9f 7b3b 	vldr	d7, [pc, #236]	; 801fc98 <__ieee754_pow+0x2e8>
 801fbae:	ee27 7b07 	vmul.f64	d7, d7, d7
 801fbb2:	e766      	b.n	801fa82 <__ieee754_pow+0xd2>
 801fbb4:	4b49      	ldr	r3, [pc, #292]	; (801fcdc <__ieee754_pow+0x32c>)
 801fbb6:	429c      	cmp	r4, r3
 801fbb8:	ddf3      	ble.n	801fba2 <__ieee754_pow+0x1f2>
 801fbba:	4b45      	ldr	r3, [pc, #276]	; (801fcd0 <__ieee754_pow+0x320>)
 801fbbc:	429c      	cmp	r4, r3
 801fbbe:	dd03      	ble.n	801fbc8 <__ieee754_pow+0x218>
 801fbc0:	f1b9 0f00 	cmp.w	r9, #0
 801fbc4:	dcf1      	bgt.n	801fbaa <__ieee754_pow+0x1fa>
 801fbc6:	e75a      	b.n	801fa7e <__ieee754_pow+0xce>
 801fbc8:	ed9d 7b00 	vldr	d7, [sp]
 801fbcc:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 801fbd0:	ed9f 5b33 	vldr	d5, [pc, #204]	; 801fca0 <__ieee754_pow+0x2f0>
 801fbd4:	ee37 6b46 	vsub.f64	d6, d7, d6
 801fbd8:	eeb5 7b00 	vmov.f64	d7, #80	; 0x3e800000  0.250
 801fbdc:	eeb1 3b46 	vneg.f64	d3, d6
 801fbe0:	eea3 5b07 	vfma.f64	d5, d3, d7
 801fbe4:	eeb6 7b00 	vmov.f64	d7, #96	; 0x3f000000  0.5
 801fbe8:	eea5 7b46 	vfms.f64	d7, d5, d6
 801fbec:	ee26 5b06 	vmul.f64	d5, d6, d6
 801fbf0:	ee27 5b05 	vmul.f64	d5, d7, d5
 801fbf4:	ed9f 7b2c 	vldr	d7, [pc, #176]	; 801fca8 <__ieee754_pow+0x2f8>
 801fbf8:	ee27 7b45 	vnmul.f64	d7, d7, d5
 801fbfc:	ed9f 5b2c 	vldr	d5, [pc, #176]	; 801fcb0 <__ieee754_pow+0x300>
 801fc00:	eea6 7b05 	vfma.f64	d7, d6, d5
 801fc04:	ed9f 5b2c 	vldr	d5, [pc, #176]	; 801fcb8 <__ieee754_pow+0x308>
 801fc08:	eeb0 4b47 	vmov.f64	d4, d7
 801fc0c:	eea6 4b05 	vfma.f64	d4, d6, d5
 801fc10:	ec53 2b14 	vmov	r2, r3, d4
 801fc14:	2200      	movs	r2, #0
 801fc16:	ec43 2b14 	vmov	d4, r2, r3
 801fc1a:	eeb0 6b44 	vmov.f64	d6, d4
 801fc1e:	eea3 6b05 	vfma.f64	d6, d3, d5
 801fc22:	ee37 7b46 	vsub.f64	d7, d7, d6
 801fc26:	3d01      	subs	r5, #1
 801fc28:	ea55 030a 	orrs.w	r3, r5, sl
 801fc2c:	f04f 0200 	mov.w	r2, #0
 801fc30:	463b      	mov	r3, r7
 801fc32:	eebf 6b00 	vmov.f64	d6, #240	; 0xbf800000 -1.0
 801fc36:	eeb7 8b00 	vmov.f64	d8, #112	; 0x3f800000  1.0
 801fc3a:	ec47 6b15 	vmov	d5, r6, r7
 801fc3e:	fe06 8b08 	vseleq.f64	d8, d6, d8
 801fc42:	ec47 6b13 	vmov	d3, r6, r7
 801fc46:	ec43 2b16 	vmov	d6, r2, r3
 801fc4a:	ee27 7b03 	vmul.f64	d7, d7, d3
 801fc4e:	ee35 5b46 	vsub.f64	d5, d5, d6
 801fc52:	4b23      	ldr	r3, [pc, #140]	; (801fce0 <__ieee754_pow+0x330>)
 801fc54:	eea5 7b04 	vfma.f64	d7, d5, d4
 801fc58:	ee24 6b06 	vmul.f64	d6, d4, d6
 801fc5c:	ee37 5b06 	vadd.f64	d5, d7, d6
 801fc60:	ee15 1a90 	vmov	r1, s11
 801fc64:	4299      	cmp	r1, r3
 801fc66:	ee15 2a10 	vmov	r2, s10
 801fc6a:	f340 819b 	ble.w	801ffa4 <__ieee754_pow+0x5f4>
 801fc6e:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 801fc72:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 801fc76:	4313      	orrs	r3, r2
 801fc78:	f000 810a 	beq.w	801fe90 <__ieee754_pow+0x4e0>
 801fc7c:	ed9f 7b06 	vldr	d7, [pc, #24]	; 801fc98 <__ieee754_pow+0x2e8>
 801fc80:	ee28 8b07 	vmul.f64	d8, d8, d7
 801fc84:	ee28 7b07 	vmul.f64	d7, d8, d7
 801fc88:	e6fb      	b.n	801fa82 <__ieee754_pow+0xd2>
 801fc8a:	bf00      	nop
 801fc8c:	f3af 8000 	nop.w
	...
 801fc98:	8800759c 	.word	0x8800759c
 801fc9c:	7e37e43c 	.word	0x7e37e43c
 801fca0:	55555555 	.word	0x55555555
 801fca4:	3fd55555 	.word	0x3fd55555
 801fca8:	652b82fe 	.word	0x652b82fe
 801fcac:	3ff71547 	.word	0x3ff71547
 801fcb0:	f85ddf44 	.word	0xf85ddf44
 801fcb4:	3e54ae0b 	.word	0x3e54ae0b
 801fcb8:	60000000 	.word	0x60000000
 801fcbc:	3ff71547 	.word	0x3ff71547
 801fcc0:	7ff00000 	.word	0x7ff00000
 801fcc4:	08025ecb 	.word	0x08025ecb
 801fcc8:	433fffff 	.word	0x433fffff
 801fccc:	3fefffff 	.word	0x3fefffff
 801fcd0:	3ff00000 	.word	0x3ff00000
 801fcd4:	3fe00000 	.word	0x3fe00000
 801fcd8:	41e00000 	.word	0x41e00000
 801fcdc:	3feffffe 	.word	0x3feffffe
 801fce0:	408fffff 	.word	0x408fffff
 801fce4:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 801fce8:	f280 80ce 	bge.w	801fe88 <__ieee754_pow+0x4d8>
 801fcec:	ed9d 6b00 	vldr	d6, [sp]
 801fcf0:	ed9f 7bc1 	vldr	d7, [pc, #772]	; 801fff8 <__ieee754_pow+0x648>
 801fcf4:	ee26 7b07 	vmul.f64	d7, d6, d7
 801fcf8:	ed8d 7b00 	vstr	d7, [sp]
 801fcfc:	9c01      	ldr	r4, [sp, #4]
 801fcfe:	f06f 0334 	mvn.w	r3, #52	; 0x34
 801fd02:	1521      	asrs	r1, r4, #20
 801fd04:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 801fd08:	4419      	add	r1, r3
 801fd0a:	4be3      	ldr	r3, [pc, #908]	; (8020098 <__ieee754_pow+0x6e8>)
 801fd0c:	f3c4 0413 	ubfx	r4, r4, #0, #20
 801fd10:	f044 507f 	orr.w	r0, r4, #1069547520	; 0x3fc00000
 801fd14:	429c      	cmp	r4, r3
 801fd16:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 801fd1a:	dd06      	ble.n	801fd2a <__ieee754_pow+0x37a>
 801fd1c:	4bdf      	ldr	r3, [pc, #892]	; (802009c <__ieee754_pow+0x6ec>)
 801fd1e:	429c      	cmp	r4, r3
 801fd20:	f340 80b4 	ble.w	801fe8c <__ieee754_pow+0x4dc>
 801fd24:	3101      	adds	r1, #1
 801fd26:	f5a0 1080 	sub.w	r0, r0, #1048576	; 0x100000
 801fd2a:	2400      	movs	r4, #0
 801fd2c:	e9dd 2300 	ldrd	r2, r3, [sp]
 801fd30:	eeb7 4b00 	vmov.f64	d4, #112	; 0x3f800000  1.0
 801fd34:	4603      	mov	r3, r0
 801fd36:	ec43 2b17 	vmov	d7, r2, r3
 801fd3a:	4bd9      	ldr	r3, [pc, #868]	; (80200a0 <__ieee754_pow+0x6f0>)
 801fd3c:	ea4f 0cc4 	mov.w	ip, r4, lsl #3
 801fd40:	4463      	add	r3, ip
 801fd42:	ed93 5b00 	vldr	d5, [r3]
 801fd46:	1040      	asrs	r0, r0, #1
 801fd48:	ee37 2b45 	vsub.f64	d2, d7, d5
 801fd4c:	ee35 6b07 	vadd.f64	d6, d5, d7
 801fd50:	ee84 1b06 	vdiv.f64	d1, d4, d6
 801fd54:	ee22 6b01 	vmul.f64	d6, d2, d1
 801fd58:	ed8d 6b00 	vstr	d6, [sp]
 801fd5c:	e9dd 8900 	ldrd	r8, r9, [sp]
 801fd60:	f040 5000 	orr.w	r0, r0, #536870912	; 0x20000000
 801fd64:	f500 2000 	add.w	r0, r0, #524288	; 0x80000
 801fd68:	f04f 0800 	mov.w	r8, #0
 801fd6c:	eb00 4384 	add.w	r3, r0, r4, lsl #18
 801fd70:	2200      	movs	r2, #0
 801fd72:	ec49 8b14 	vmov	d4, r8, r9
 801fd76:	ec43 2b16 	vmov	d6, r2, r3
 801fd7a:	eeb1 3b44 	vneg.f64	d3, d4
 801fd7e:	eea3 2b06 	vfma.f64	d2, d3, d6
 801fd82:	ee36 6b45 	vsub.f64	d6, d6, d5
 801fd86:	ee37 7b46 	vsub.f64	d7, d7, d6
 801fd8a:	eea3 2b07 	vfma.f64	d2, d3, d7
 801fd8e:	ed9d 7b00 	vldr	d7, [sp]
 801fd92:	ee22 2b01 	vmul.f64	d2, d2, d1
 801fd96:	ee27 5b07 	vmul.f64	d5, d7, d7
 801fd9a:	ee37 6b04 	vadd.f64	d6, d7, d4
 801fd9e:	ed9f 1b98 	vldr	d1, [pc, #608]	; 8020000 <__ieee754_pow+0x650>
 801fda2:	ee25 0b05 	vmul.f64	d0, d5, d5
 801fda6:	ee26 6b02 	vmul.f64	d6, d6, d2
 801fdaa:	ed9f 7b97 	vldr	d7, [pc, #604]	; 8020008 <__ieee754_pow+0x658>
 801fdae:	eea5 7b01 	vfma.f64	d7, d5, d1
 801fdb2:	ed9f 1b97 	vldr	d1, [pc, #604]	; 8020010 <__ieee754_pow+0x660>
 801fdb6:	eea7 1b05 	vfma.f64	d1, d7, d5
 801fdba:	ed9f 7b97 	vldr	d7, [pc, #604]	; 8020018 <__ieee754_pow+0x668>
 801fdbe:	eea1 7b05 	vfma.f64	d7, d1, d5
 801fdc2:	ed9f 1b97 	vldr	d1, [pc, #604]	; 8020020 <__ieee754_pow+0x670>
 801fdc6:	eea7 1b05 	vfma.f64	d1, d7, d5
 801fdca:	ed9f 7b97 	vldr	d7, [pc, #604]	; 8020028 <__ieee754_pow+0x678>
 801fdce:	eea1 7b05 	vfma.f64	d7, d1, d5
 801fdd2:	eea0 6b07 	vfma.f64	d6, d0, d7
 801fdd6:	eeb0 7b08 	vmov.f64	d7, #8	; 0x40400000  3.0
 801fdda:	eeb0 5b47 	vmov.f64	d5, d7
 801fdde:	eea4 5b04 	vfma.f64	d5, d4, d4
 801fde2:	ee35 5b06 	vadd.f64	d5, d5, d6
 801fde6:	ed8d 5b02 	vstr	d5, [sp, #8]
 801fdea:	f8cd 8008 	str.w	r8, [sp, #8]
 801fdee:	ed9d 5b02 	vldr	d5, [sp, #8]
 801fdf2:	ee35 7b47 	vsub.f64	d7, d5, d7
 801fdf6:	eea3 7b04 	vfma.f64	d7, d3, d4
 801fdfa:	ee36 7b47 	vsub.f64	d7, d6, d7
 801fdfe:	ed9d 6b00 	vldr	d6, [sp]
 801fe02:	ee27 7b06 	vmul.f64	d7, d7, d6
 801fe06:	eea2 7b05 	vfma.f64	d7, d2, d5
 801fe0a:	eeb0 6b47 	vmov.f64	d6, d7
 801fe0e:	eea4 6b05 	vfma.f64	d6, d4, d5
 801fe12:	ed8d 6b00 	vstr	d6, [sp]
 801fe16:	f8cd 8000 	str.w	r8, [sp]
 801fe1a:	ed9d 2b00 	vldr	d2, [sp]
 801fe1e:	eeb0 6b42 	vmov.f64	d6, d2
 801fe22:	eea3 6b05 	vfma.f64	d6, d3, d5
 801fe26:	ee37 7b46 	vsub.f64	d7, d7, d6
 801fe2a:	ed9f 6b81 	vldr	d6, [pc, #516]	; 8020030 <__ieee754_pow+0x680>
 801fe2e:	4b9d      	ldr	r3, [pc, #628]	; (80200a4 <__ieee754_pow+0x6f4>)
 801fe30:	ee27 7b06 	vmul.f64	d7, d7, d6
 801fe34:	ed9f 6b80 	vldr	d6, [pc, #512]	; 8020038 <__ieee754_pow+0x688>
 801fe38:	4463      	add	r3, ip
 801fe3a:	eea2 7b06 	vfma.f64	d7, d2, d6
 801fe3e:	ed93 6b00 	vldr	d6, [r3]
 801fe42:	4b99      	ldr	r3, [pc, #612]	; (80200a8 <__ieee754_pow+0x6f8>)
 801fe44:	ee37 6b06 	vadd.f64	d6, d7, d6
 801fe48:	449c      	add	ip, r3
 801fe4a:	ed9c 1b00 	vldr	d1, [ip]
 801fe4e:	eeb0 4b46 	vmov.f64	d4, d6
 801fe52:	ed9f 3b7b 	vldr	d3, [pc, #492]	; 8020040 <__ieee754_pow+0x690>
 801fe56:	ee07 1a90 	vmov	s15, r1
 801fe5a:	eea2 4b03 	vfma.f64	d4, d2, d3
 801fe5e:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 801fe62:	ee34 4b01 	vadd.f64	d4, d4, d1
 801fe66:	ee34 5b07 	vadd.f64	d5, d4, d7
 801fe6a:	ed8d 5b00 	vstr	d5, [sp]
 801fe6e:	f8cd 8000 	str.w	r8, [sp]
 801fe72:	ed9d 4b00 	vldr	d4, [sp]
 801fe76:	ee34 7b47 	vsub.f64	d7, d4, d7
 801fe7a:	ee37 7b41 	vsub.f64	d7, d7, d1
 801fe7e:	eea2 7b43 	vfms.f64	d7, d2, d3
 801fe82:	ee36 7b47 	vsub.f64	d7, d6, d7
 801fe86:	e6ce      	b.n	801fc26 <__ieee754_pow+0x276>
 801fe88:	2300      	movs	r3, #0
 801fe8a:	e73a      	b.n	801fd02 <__ieee754_pow+0x352>
 801fe8c:	2401      	movs	r4, #1
 801fe8e:	e74d      	b.n	801fd2c <__ieee754_pow+0x37c>
 801fe90:	ed9f 4b6d 	vldr	d4, [pc, #436]	; 8020048 <__ieee754_pow+0x698>
 801fe94:	ee35 5b46 	vsub.f64	d5, d5, d6
 801fe98:	ee37 4b04 	vadd.f64	d4, d7, d4
 801fe9c:	eeb4 4bc5 	vcmpe.f64	d4, d5
 801fea0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fea4:	f73f aeea 	bgt.w	801fc7c <__ieee754_pow+0x2cc>
 801fea8:	4a80      	ldr	r2, [pc, #512]	; (80200ac <__ieee754_pow+0x6fc>)
 801feaa:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 801feae:	4293      	cmp	r3, r2
 801feb0:	f340 808e 	ble.w	801ffd0 <__ieee754_pow+0x620>
 801feb4:	151b      	asrs	r3, r3, #20
 801feb6:	f2a3 30fe 	subw	r0, r3, #1022	; 0x3fe
 801feba:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 801febe:	4103      	asrs	r3, r0
 801fec0:	440b      	add	r3, r1
 801fec2:	f3c3 520a 	ubfx	r2, r3, #20, #11
 801fec6:	487a      	ldr	r0, [pc, #488]	; (80200b0 <__ieee754_pow+0x700>)
 801fec8:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 801fecc:	4110      	asrs	r0, r2
 801fece:	ea23 0500 	bic.w	r5, r3, r0
 801fed2:	f3c3 0013 	ubfx	r0, r3, #0, #20
 801fed6:	2400      	movs	r4, #0
 801fed8:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 801fedc:	f1c2 0214 	rsb	r2, r2, #20
 801fee0:	ec45 4b15 	vmov	d5, r4, r5
 801fee4:	4110      	asrs	r0, r2
 801fee6:	2900      	cmp	r1, #0
 801fee8:	bfb8      	it	lt
 801feea:	4240      	neglt	r0, r0
 801feec:	ee36 6b45 	vsub.f64	d6, d6, d5
 801fef0:	ee36 5b07 	vadd.f64	d5, d6, d7
 801fef4:	ec53 2b15 	vmov	r2, r3, d5
 801fef8:	2200      	movs	r2, #0
 801fefa:	ec43 2b15 	vmov	d5, r2, r3
 801fefe:	ed9f 4b54 	vldr	d4, [pc, #336]	; 8020050 <__ieee754_pow+0x6a0>
 801ff02:	ee35 6b46 	vsub.f64	d6, d5, d6
 801ff06:	ee37 6b46 	vsub.f64	d6, d7, d6
 801ff0a:	ed9f 7b53 	vldr	d7, [pc, #332]	; 8020058 <__ieee754_pow+0x6a8>
 801ff0e:	ee25 7b07 	vmul.f64	d7, d5, d7
 801ff12:	eea6 7b04 	vfma.f64	d7, d6, d4
 801ff16:	ed9f 6b52 	vldr	d6, [pc, #328]	; 8020060 <__ieee754_pow+0x6b0>
 801ff1a:	eeb0 4b47 	vmov.f64	d4, d7
 801ff1e:	eea5 4b06 	vfma.f64	d4, d5, d6
 801ff22:	eeb0 3b44 	vmov.f64	d3, d4
 801ff26:	eea5 3b46 	vfms.f64	d3, d5, d6
 801ff2a:	ed9f 5b4f 	vldr	d5, [pc, #316]	; 8020068 <__ieee754_pow+0x6b8>
 801ff2e:	ee37 7b43 	vsub.f64	d7, d7, d3
 801ff32:	ee24 6b04 	vmul.f64	d6, d4, d4
 801ff36:	ed9f 3b4e 	vldr	d3, [pc, #312]	; 8020070 <__ieee754_pow+0x6c0>
 801ff3a:	eea4 7b07 	vfma.f64	d7, d4, d7
 801ff3e:	eea6 3b05 	vfma.f64	d3, d6, d5
 801ff42:	ed9f 5b4d 	vldr	d5, [pc, #308]	; 8020078 <__ieee754_pow+0x6c8>
 801ff46:	eea3 5b06 	vfma.f64	d5, d3, d6
 801ff4a:	ed9f 3b4d 	vldr	d3, [pc, #308]	; 8020080 <__ieee754_pow+0x6d0>
 801ff4e:	eea5 3b06 	vfma.f64	d3, d5, d6
 801ff52:	ed9f 5b4d 	vldr	d5, [pc, #308]	; 8020088 <__ieee754_pow+0x6d8>
 801ff56:	eea3 5b06 	vfma.f64	d5, d3, d6
 801ff5a:	eeb0 3b44 	vmov.f64	d3, d4
 801ff5e:	eea5 3b46 	vfms.f64	d3, d5, d6
 801ff62:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 801ff66:	eeb0 6b43 	vmov.f64	d6, d3
 801ff6a:	ee24 3b03 	vmul.f64	d3, d4, d3
 801ff6e:	ee36 5b45 	vsub.f64	d5, d6, d5
 801ff72:	ee83 6b05 	vdiv.f64	d6, d3, d5
 801ff76:	ee36 7b47 	vsub.f64	d7, d6, d7
 801ff7a:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 801ff7e:	ee37 7b44 	vsub.f64	d7, d7, d4
 801ff82:	ee36 7b47 	vsub.f64	d7, d6, d7
 801ff86:	ed8d 7b00 	vstr	d7, [sp]
 801ff8a:	9901      	ldr	r1, [sp, #4]
 801ff8c:	eb01 5100 	add.w	r1, r1, r0, lsl #20
 801ff90:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 801ff94:	da1e      	bge.n	801ffd4 <__ieee754_pow+0x624>
 801ff96:	eeb0 0b47 	vmov.f64	d0, d7
 801ff9a:	f000 fe55 	bl	8020c48 <scalbn>
 801ff9e:	ee20 7b08 	vmul.f64	d7, d0, d8
 801ffa2:	e56e      	b.n	801fa82 <__ieee754_pow+0xd2>
 801ffa4:	4b43      	ldr	r3, [pc, #268]	; (80200b4 <__ieee754_pow+0x704>)
 801ffa6:	f021 4000 	bic.w	r0, r1, #2147483648	; 0x80000000
 801ffaa:	4298      	cmp	r0, r3
 801ffac:	f77f af7c 	ble.w	801fea8 <__ieee754_pow+0x4f8>
 801ffb0:	4b41      	ldr	r3, [pc, #260]	; (80200b8 <__ieee754_pow+0x708>)
 801ffb2:	440b      	add	r3, r1
 801ffb4:	4313      	orrs	r3, r2
 801ffb6:	d002      	beq.n	801ffbe <__ieee754_pow+0x60e>
 801ffb8:	ed9f 7b35 	vldr	d7, [pc, #212]	; 8020090 <__ieee754_pow+0x6e0>
 801ffbc:	e660      	b.n	801fc80 <__ieee754_pow+0x2d0>
 801ffbe:	ee35 5b46 	vsub.f64	d5, d5, d6
 801ffc2:	eeb4 5bc7 	vcmpe.f64	d5, d7
 801ffc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ffca:	f6ff af6d 	blt.w	801fea8 <__ieee754_pow+0x4f8>
 801ffce:	e7f3      	b.n	801ffb8 <__ieee754_pow+0x608>
 801ffd0:	2000      	movs	r0, #0
 801ffd2:	e78d      	b.n	801fef0 <__ieee754_pow+0x540>
 801ffd4:	e9dd 2300 	ldrd	r2, r3, [sp]
 801ffd8:	460b      	mov	r3, r1
 801ffda:	ec43 2b10 	vmov	d0, r2, r3
 801ffde:	e7de      	b.n	801ff9e <__ieee754_pow+0x5ee>
 801ffe0:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
 801ffe4:	e54d      	b.n	801fa82 <__ieee754_pow+0xd2>
 801ffe6:	e9cd 6700 	strd	r6, r7, [sp]
 801ffea:	e574      	b.n	801fad6 <__ieee754_pow+0x126>
 801ffec:	ed8d 8b00 	vstr	d8, [sp]
 801fff0:	e571      	b.n	801fad6 <__ieee754_pow+0x126>
 801fff2:	4615      	mov	r5, r2
 801fff4:	e557      	b.n	801faa6 <__ieee754_pow+0xf6>
 801fff6:	bf00      	nop
 801fff8:	00000000 	.word	0x00000000
 801fffc:	43400000 	.word	0x43400000
 8020000:	4a454eef 	.word	0x4a454eef
 8020004:	3fca7e28 	.word	0x3fca7e28
 8020008:	93c9db65 	.word	0x93c9db65
 802000c:	3fcd864a 	.word	0x3fcd864a
 8020010:	a91d4101 	.word	0xa91d4101
 8020014:	3fd17460 	.word	0x3fd17460
 8020018:	518f264d 	.word	0x518f264d
 802001c:	3fd55555 	.word	0x3fd55555
 8020020:	db6fabff 	.word	0xdb6fabff
 8020024:	3fdb6db6 	.word	0x3fdb6db6
 8020028:	33333303 	.word	0x33333303
 802002c:	3fe33333 	.word	0x3fe33333
 8020030:	dc3a03fd 	.word	0xdc3a03fd
 8020034:	3feec709 	.word	0x3feec709
 8020038:	145b01f5 	.word	0x145b01f5
 802003c:	be3e2fe0 	.word	0xbe3e2fe0
 8020040:	e0000000 	.word	0xe0000000
 8020044:	3feec709 	.word	0x3feec709
 8020048:	652b82fe 	.word	0x652b82fe
 802004c:	3c971547 	.word	0x3c971547
 8020050:	fefa39ef 	.word	0xfefa39ef
 8020054:	3fe62e42 	.word	0x3fe62e42
 8020058:	0ca86c39 	.word	0x0ca86c39
 802005c:	be205c61 	.word	0xbe205c61
 8020060:	00000000 	.word	0x00000000
 8020064:	3fe62e43 	.word	0x3fe62e43
 8020068:	72bea4d0 	.word	0x72bea4d0
 802006c:	3e663769 	.word	0x3e663769
 8020070:	c5d26bf1 	.word	0xc5d26bf1
 8020074:	bebbbd41 	.word	0xbebbbd41
 8020078:	af25de2c 	.word	0xaf25de2c
 802007c:	3f11566a 	.word	0x3f11566a
 8020080:	16bebd93 	.word	0x16bebd93
 8020084:	bf66c16c 	.word	0xbf66c16c
 8020088:	5555553e 	.word	0x5555553e
 802008c:	3fc55555 	.word	0x3fc55555
 8020090:	c2f8f359 	.word	0xc2f8f359
 8020094:	01a56e1f 	.word	0x01a56e1f
 8020098:	0003988e 	.word	0x0003988e
 802009c:	000bb679 	.word	0x000bb679
 80200a0:	08025c78 	.word	0x08025c78
 80200a4:	08025c98 	.word	0x08025c98
 80200a8:	08025c88 	.word	0x08025c88
 80200ac:	3fe00000 	.word	0x3fe00000
 80200b0:	000fffff 	.word	0x000fffff
 80200b4:	4090cbff 	.word	0x4090cbff
 80200b8:	3f6f3400 	.word	0x3f6f3400
 80200bc:	00000000 	.word	0x00000000

080200c0 <__ieee754_rem_pio2>:
 80200c0:	b570      	push	{r4, r5, r6, lr}
 80200c2:	eeb0 7b40 	vmov.f64	d7, d0
 80200c6:	ee17 5a90 	vmov	r5, s15
 80200ca:	4b95      	ldr	r3, [pc, #596]	; (8020320 <__ieee754_rem_pio2+0x260>)
 80200cc:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 80200d0:	429e      	cmp	r6, r3
 80200d2:	b088      	sub	sp, #32
 80200d4:	4604      	mov	r4, r0
 80200d6:	dc07      	bgt.n	80200e8 <__ieee754_rem_pio2+0x28>
 80200d8:	2200      	movs	r2, #0
 80200da:	2300      	movs	r3, #0
 80200dc:	ed84 0b00 	vstr	d0, [r4]
 80200e0:	e9c0 2302 	strd	r2, r3, [r0, #8]
 80200e4:	2000      	movs	r0, #0
 80200e6:	e01b      	b.n	8020120 <__ieee754_rem_pio2+0x60>
 80200e8:	4b8e      	ldr	r3, [pc, #568]	; (8020324 <__ieee754_rem_pio2+0x264>)
 80200ea:	429e      	cmp	r6, r3
 80200ec:	dc3b      	bgt.n	8020166 <__ieee754_rem_pio2+0xa6>
 80200ee:	f5a3 231b 	sub.w	r3, r3, #634880	; 0x9b000
 80200f2:	2d00      	cmp	r5, #0
 80200f4:	ed9f 6b7a 	vldr	d6, [pc, #488]	; 80202e0 <__ieee754_rem_pio2+0x220>
 80200f8:	f5a3 63f0 	sub.w	r3, r3, #1920	; 0x780
 80200fc:	dd19      	ble.n	8020132 <__ieee754_rem_pio2+0x72>
 80200fe:	ee30 7b46 	vsub.f64	d7, d0, d6
 8020102:	429e      	cmp	r6, r3
 8020104:	d00e      	beq.n	8020124 <__ieee754_rem_pio2+0x64>
 8020106:	ed9f 6b78 	vldr	d6, [pc, #480]	; 80202e8 <__ieee754_rem_pio2+0x228>
 802010a:	ee37 5b46 	vsub.f64	d5, d7, d6
 802010e:	ee37 7b45 	vsub.f64	d7, d7, d5
 8020112:	ed84 5b00 	vstr	d5, [r4]
 8020116:	ee37 7b46 	vsub.f64	d7, d7, d6
 802011a:	ed84 7b02 	vstr	d7, [r4, #8]
 802011e:	2001      	movs	r0, #1
 8020120:	b008      	add	sp, #32
 8020122:	bd70      	pop	{r4, r5, r6, pc}
 8020124:	ed9f 6b72 	vldr	d6, [pc, #456]	; 80202f0 <__ieee754_rem_pio2+0x230>
 8020128:	ee37 7b46 	vsub.f64	d7, d7, d6
 802012c:	ed9f 6b72 	vldr	d6, [pc, #456]	; 80202f8 <__ieee754_rem_pio2+0x238>
 8020130:	e7eb      	b.n	802010a <__ieee754_rem_pio2+0x4a>
 8020132:	429e      	cmp	r6, r3
 8020134:	ee30 7b06 	vadd.f64	d7, d0, d6
 8020138:	d00e      	beq.n	8020158 <__ieee754_rem_pio2+0x98>
 802013a:	ed9f 6b6b 	vldr	d6, [pc, #428]	; 80202e8 <__ieee754_rem_pio2+0x228>
 802013e:	ee37 5b06 	vadd.f64	d5, d7, d6
 8020142:	ee37 7b45 	vsub.f64	d7, d7, d5
 8020146:	ed84 5b00 	vstr	d5, [r4]
 802014a:	ee37 7b06 	vadd.f64	d7, d7, d6
 802014e:	f04f 30ff 	mov.w	r0, #4294967295
 8020152:	ed84 7b02 	vstr	d7, [r4, #8]
 8020156:	e7e3      	b.n	8020120 <__ieee754_rem_pio2+0x60>
 8020158:	ed9f 6b65 	vldr	d6, [pc, #404]	; 80202f0 <__ieee754_rem_pio2+0x230>
 802015c:	ee37 7b06 	vadd.f64	d7, d7, d6
 8020160:	ed9f 6b65 	vldr	d6, [pc, #404]	; 80202f8 <__ieee754_rem_pio2+0x238>
 8020164:	e7eb      	b.n	802013e <__ieee754_rem_pio2+0x7e>
 8020166:	4b70      	ldr	r3, [pc, #448]	; (8020328 <__ieee754_rem_pio2+0x268>)
 8020168:	429e      	cmp	r6, r3
 802016a:	dc6c      	bgt.n	8020246 <__ieee754_rem_pio2+0x186>
 802016c:	f000 fc48 	bl	8020a00 <fabs>
 8020170:	eeb6 7b00 	vmov.f64	d7, #96	; 0x3f000000  0.5
 8020174:	ed9f 6b62 	vldr	d6, [pc, #392]	; 8020300 <__ieee754_rem_pio2+0x240>
 8020178:	eea0 7b06 	vfma.f64	d7, d0, d6
 802017c:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 8020180:	eeb8 4be7 	vcvt.f64.s32	d4, s15
 8020184:	ee17 0a90 	vmov	r0, s15
 8020188:	eeb1 5b44 	vneg.f64	d5, d4
 802018c:	ed9f 7b54 	vldr	d7, [pc, #336]	; 80202e0 <__ieee754_rem_pio2+0x220>
 8020190:	eea5 0b07 	vfma.f64	d0, d5, d7
 8020194:	ed9f 7b54 	vldr	d7, [pc, #336]	; 80202e8 <__ieee754_rem_pio2+0x228>
 8020198:	281f      	cmp	r0, #31
 802019a:	ee24 7b07 	vmul.f64	d7, d4, d7
 802019e:	ee30 6b47 	vsub.f64	d6, d0, d7
 80201a2:	dc08      	bgt.n	80201b6 <__ieee754_rem_pio2+0xf6>
 80201a4:	1e42      	subs	r2, r0, #1
 80201a6:	4b61      	ldr	r3, [pc, #388]	; (802032c <__ieee754_rem_pio2+0x26c>)
 80201a8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80201ac:	42b3      	cmp	r3, r6
 80201ae:	d002      	beq.n	80201b6 <__ieee754_rem_pio2+0xf6>
 80201b0:	ed84 6b00 	vstr	d6, [r4]
 80201b4:	e022      	b.n	80201fc <__ieee754_rem_pio2+0x13c>
 80201b6:	ee16 3a90 	vmov	r3, s13
 80201ba:	1536      	asrs	r6, r6, #20
 80201bc:	f3c3 530a 	ubfx	r3, r3, #20, #11
 80201c0:	1af3      	subs	r3, r6, r3
 80201c2:	2b10      	cmp	r3, #16
 80201c4:	ddf4      	ble.n	80201b0 <__ieee754_rem_pio2+0xf0>
 80201c6:	eeb0 6b40 	vmov.f64	d6, d0
 80201ca:	ed9f 3b49 	vldr	d3, [pc, #292]	; 80202f0 <__ieee754_rem_pio2+0x230>
 80201ce:	eea5 6b03 	vfma.f64	d6, d5, d3
 80201d2:	ee30 7b46 	vsub.f64	d7, d0, d6
 80201d6:	eea5 7b03 	vfma.f64	d7, d5, d3
 80201da:	ed9f 3b47 	vldr	d3, [pc, #284]	; 80202f8 <__ieee754_rem_pio2+0x238>
 80201de:	ee94 7b03 	vfnms.f64	d7, d4, d3
 80201e2:	ee36 3b47 	vsub.f64	d3, d6, d7
 80201e6:	ee13 3a90 	vmov	r3, s7
 80201ea:	f3c3 530a 	ubfx	r3, r3, #20, #11
 80201ee:	1af6      	subs	r6, r6, r3
 80201f0:	2e31      	cmp	r6, #49	; 0x31
 80201f2:	dc17      	bgt.n	8020224 <__ieee754_rem_pio2+0x164>
 80201f4:	eeb0 0b46 	vmov.f64	d0, d6
 80201f8:	ed84 3b00 	vstr	d3, [r4]
 80201fc:	ed94 6b00 	vldr	d6, [r4]
 8020200:	2d00      	cmp	r5, #0
 8020202:	ee30 0b46 	vsub.f64	d0, d0, d6
 8020206:	ee30 7b47 	vsub.f64	d7, d0, d7
 802020a:	ed84 7b02 	vstr	d7, [r4, #8]
 802020e:	da87      	bge.n	8020120 <__ieee754_rem_pio2+0x60>
 8020210:	eeb1 6b46 	vneg.f64	d6, d6
 8020214:	ed84 6b00 	vstr	d6, [r4]
 8020218:	eeb1 7b47 	vneg.f64	d7, d7
 802021c:	4240      	negs	r0, r0
 802021e:	ed84 7b02 	vstr	d7, [r4, #8]
 8020222:	e77d      	b.n	8020120 <__ieee754_rem_pio2+0x60>
 8020224:	ed9f 3b38 	vldr	d3, [pc, #224]	; 8020308 <__ieee754_rem_pio2+0x248>
 8020228:	eeb0 0b46 	vmov.f64	d0, d6
 802022c:	eea5 0b03 	vfma.f64	d0, d5, d3
 8020230:	ee36 7b40 	vsub.f64	d7, d6, d0
 8020234:	ed9f 6b36 	vldr	d6, [pc, #216]	; 8020310 <__ieee754_rem_pio2+0x250>
 8020238:	eea5 7b03 	vfma.f64	d7, d5, d3
 802023c:	ee94 7b06 	vfnms.f64	d7, d4, d6
 8020240:	ee30 6b47 	vsub.f64	d6, d0, d7
 8020244:	e7b4      	b.n	80201b0 <__ieee754_rem_pio2+0xf0>
 8020246:	4b3a      	ldr	r3, [pc, #232]	; (8020330 <__ieee754_rem_pio2+0x270>)
 8020248:	429e      	cmp	r6, r3
 802024a:	dd06      	ble.n	802025a <__ieee754_rem_pio2+0x19a>
 802024c:	ee30 7b40 	vsub.f64	d7, d0, d0
 8020250:	ed80 7b02 	vstr	d7, [r0, #8]
 8020254:	ed80 7b00 	vstr	d7, [r0]
 8020258:	e744      	b.n	80200e4 <__ieee754_rem_pio2+0x24>
 802025a:	1532      	asrs	r2, r6, #20
 802025c:	f2a2 4216 	subw	r2, r2, #1046	; 0x416
 8020260:	ee10 0a10 	vmov	r0, s0
 8020264:	eba6 5102 	sub.w	r1, r6, r2, lsl #20
 8020268:	ec41 0b17 	vmov	d7, r0, r1
 802026c:	eebd 6bc7 	vcvt.s32.f64	s12, d7
 8020270:	ed9f 5b29 	vldr	d5, [pc, #164]	; 8020318 <__ieee754_rem_pio2+0x258>
 8020274:	eeb8 6bc6 	vcvt.f64.s32	d6, s12
 8020278:	ee37 7b46 	vsub.f64	d7, d7, d6
 802027c:	ed8d 6b02 	vstr	d6, [sp, #8]
 8020280:	ee27 7b05 	vmul.f64	d7, d7, d5
 8020284:	eebd 6bc7 	vcvt.s32.f64	s12, d7
 8020288:	a908      	add	r1, sp, #32
 802028a:	eeb8 6bc6 	vcvt.f64.s32	d6, s12
 802028e:	ee37 7b46 	vsub.f64	d7, d7, d6
 8020292:	ed8d 6b04 	vstr	d6, [sp, #16]
 8020296:	ee27 7b05 	vmul.f64	d7, d7, d5
 802029a:	ed8d 7b06 	vstr	d7, [sp, #24]
 802029e:	2303      	movs	r3, #3
 80202a0:	ed31 7b02 	vldmdb	r1!, {d7}
 80202a4:	eeb5 7b40 	vcmp.f64	d7, #0.0
 80202a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80202ac:	f103 30ff 	add.w	r0, r3, #4294967295
 80202b0:	d013      	beq.n	80202da <__ieee754_rem_pio2+0x21a>
 80202b2:	4920      	ldr	r1, [pc, #128]	; (8020334 <__ieee754_rem_pio2+0x274>)
 80202b4:	9101      	str	r1, [sp, #4]
 80202b6:	2102      	movs	r1, #2
 80202b8:	9100      	str	r1, [sp, #0]
 80202ba:	a802      	add	r0, sp, #8
 80202bc:	4621      	mov	r1, r4
 80202be:	f000 f8ab 	bl	8020418 <__kernel_rem_pio2>
 80202c2:	2d00      	cmp	r5, #0
 80202c4:	f6bf af2c 	bge.w	8020120 <__ieee754_rem_pio2+0x60>
 80202c8:	ed94 7b00 	vldr	d7, [r4]
 80202cc:	eeb1 7b47 	vneg.f64	d7, d7
 80202d0:	ed84 7b00 	vstr	d7, [r4]
 80202d4:	ed94 7b02 	vldr	d7, [r4, #8]
 80202d8:	e79e      	b.n	8020218 <__ieee754_rem_pio2+0x158>
 80202da:	4603      	mov	r3, r0
 80202dc:	e7e0      	b.n	80202a0 <__ieee754_rem_pio2+0x1e0>
 80202de:	bf00      	nop
 80202e0:	54400000 	.word	0x54400000
 80202e4:	3ff921fb 	.word	0x3ff921fb
 80202e8:	1a626331 	.word	0x1a626331
 80202ec:	3dd0b461 	.word	0x3dd0b461
 80202f0:	1a600000 	.word	0x1a600000
 80202f4:	3dd0b461 	.word	0x3dd0b461
 80202f8:	2e037073 	.word	0x2e037073
 80202fc:	3ba3198a 	.word	0x3ba3198a
 8020300:	6dc9c883 	.word	0x6dc9c883
 8020304:	3fe45f30 	.word	0x3fe45f30
 8020308:	2e000000 	.word	0x2e000000
 802030c:	3ba3198a 	.word	0x3ba3198a
 8020310:	252049c1 	.word	0x252049c1
 8020314:	397b839a 	.word	0x397b839a
 8020318:	00000000 	.word	0x00000000
 802031c:	41700000 	.word	0x41700000
 8020320:	3fe921fb 	.word	0x3fe921fb
 8020324:	4002d97b 	.word	0x4002d97b
 8020328:	413921fb 	.word	0x413921fb
 802032c:	08025ca8 	.word	0x08025ca8
 8020330:	7fefffff 	.word	0x7fefffff
 8020334:	08025d28 	.word	0x08025d28

08020338 <__ieee754_sqrt>:
 8020338:	eeb1 0bc0 	vsqrt.f64	d0, d0
 802033c:	4770      	bx	lr
	...

08020340 <__kernel_cos>:
 8020340:	ee10 1a90 	vmov	r1, s1
 8020344:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
 8020348:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 802034c:	f1b1 5f79 	cmp.w	r1, #1044381696	; 0x3e400000
 8020350:	da05      	bge.n	802035e <__kernel_cos+0x1e>
 8020352:	eefd 6bc0 	vcvt.s32.f64	s13, d0
 8020356:	ee16 3a90 	vmov	r3, s13
 802035a:	2b00      	cmp	r3, #0
 802035c:	d03d      	beq.n	80203da <__kernel_cos+0x9a>
 802035e:	ee20 4b00 	vmul.f64	d4, d0, d0
 8020362:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
 8020366:	ed9f 3b1e 	vldr	d3, [pc, #120]	; 80203e0 <__kernel_cos+0xa0>
 802036a:	ee21 1b40 	vnmul.f64	d1, d1, d0
 802036e:	ee24 6b06 	vmul.f64	d6, d4, d6
 8020372:	ed9f 5b1d 	vldr	d5, [pc, #116]	; 80203e8 <__kernel_cos+0xa8>
 8020376:	eea4 5b03 	vfma.f64	d5, d4, d3
 802037a:	ed9f 3b1d 	vldr	d3, [pc, #116]	; 80203f0 <__kernel_cos+0xb0>
 802037e:	eea5 3b04 	vfma.f64	d3, d5, d4
 8020382:	ed9f 5b1d 	vldr	d5, [pc, #116]	; 80203f8 <__kernel_cos+0xb8>
 8020386:	eea3 5b04 	vfma.f64	d5, d3, d4
 802038a:	ed9f 3b1d 	vldr	d3, [pc, #116]	; 8020400 <__kernel_cos+0xc0>
 802038e:	4b20      	ldr	r3, [pc, #128]	; (8020410 <__kernel_cos+0xd0>)
 8020390:	eea5 3b04 	vfma.f64	d3, d5, d4
 8020394:	ed9f 5b1c 	vldr	d5, [pc, #112]	; 8020408 <__kernel_cos+0xc8>
 8020398:	4299      	cmp	r1, r3
 802039a:	eea3 5b04 	vfma.f64	d5, d3, d4
 802039e:	ee25 5b04 	vmul.f64	d5, d5, d4
 80203a2:	eea4 1b05 	vfma.f64	d1, d4, d5
 80203a6:	dc04      	bgt.n	80203b2 <__kernel_cos+0x72>
 80203a8:	ee36 6b41 	vsub.f64	d6, d6, d1
 80203ac:	ee37 0b46 	vsub.f64	d0, d7, d6
 80203b0:	4770      	bx	lr
 80203b2:	4b18      	ldr	r3, [pc, #96]	; (8020414 <__kernel_cos+0xd4>)
 80203b4:	4299      	cmp	r1, r3
 80203b6:	dc0d      	bgt.n	80203d4 <__kernel_cos+0x94>
 80203b8:	2200      	movs	r2, #0
 80203ba:	f5a1 1300 	sub.w	r3, r1, #2097152	; 0x200000
 80203be:	ec43 2b15 	vmov	d5, r2, r3
 80203c2:	ee37 0b45 	vsub.f64	d0, d7, d5
 80203c6:	ee36 6b45 	vsub.f64	d6, d6, d5
 80203ca:	ee36 6b41 	vsub.f64	d6, d6, d1
 80203ce:	ee30 0b46 	vsub.f64	d0, d0, d6
 80203d2:	4770      	bx	lr
 80203d4:	eeb5 5b02 	vmov.f64	d5, #82	; 0x3e900000  0.2812500
 80203d8:	e7f3      	b.n	80203c2 <__kernel_cos+0x82>
 80203da:	eeb0 0b47 	vmov.f64	d0, d7
 80203de:	4770      	bx	lr
 80203e0:	be8838d4 	.word	0xbe8838d4
 80203e4:	bda8fae9 	.word	0xbda8fae9
 80203e8:	bdb4b1c4 	.word	0xbdb4b1c4
 80203ec:	3e21ee9e 	.word	0x3e21ee9e
 80203f0:	809c52ad 	.word	0x809c52ad
 80203f4:	be927e4f 	.word	0xbe927e4f
 80203f8:	19cb1590 	.word	0x19cb1590
 80203fc:	3efa01a0 	.word	0x3efa01a0
 8020400:	16c15177 	.word	0x16c15177
 8020404:	bf56c16c 	.word	0xbf56c16c
 8020408:	5555554c 	.word	0x5555554c
 802040c:	3fa55555 	.word	0x3fa55555
 8020410:	3fd33332 	.word	0x3fd33332
 8020414:	3fe90000 	.word	0x3fe90000

08020418 <__kernel_rem_pio2>:
 8020418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802041c:	ed2d 8b06 	vpush	{d8-d10}
 8020420:	f5ad 7d13 	sub.w	sp, sp, #588	; 0x24c
 8020424:	469b      	mov	fp, r3
 8020426:	460e      	mov	r6, r1
 8020428:	4bc7      	ldr	r3, [pc, #796]	; (8020748 <__kernel_rem_pio2+0x330>)
 802042a:	99a2      	ldr	r1, [sp, #648]	; 0x288
 802042c:	9002      	str	r0, [sp, #8]
 802042e:	f853 9021 	ldr.w	r9, [r3, r1, lsl #2]
 8020432:	98a3      	ldr	r0, [sp, #652]	; 0x28c
 8020434:	1ed1      	subs	r1, r2, #3
 8020436:	2318      	movs	r3, #24
 8020438:	f06f 0417 	mvn.w	r4, #23
 802043c:	fb91 f1f3 	sdiv	r1, r1, r3
 8020440:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8020444:	f10b 3aff 	add.w	sl, fp, #4294967295
 8020448:	fb01 4404 	mla	r4, r1, r4, r4
 802044c:	ed9f 6bb8 	vldr	d6, [pc, #736]	; 8020730 <__kernel_rem_pio2+0x318>
 8020450:	4414      	add	r4, r2
 8020452:	eba1 050a 	sub.w	r5, r1, sl
 8020456:	aa1a      	add	r2, sp, #104	; 0x68
 8020458:	eb09 070a 	add.w	r7, r9, sl
 802045c:	eb00 0c85 	add.w	ip, r0, r5, lsl #2
 8020460:	4696      	mov	lr, r2
 8020462:	2300      	movs	r3, #0
 8020464:	42bb      	cmp	r3, r7
 8020466:	dd0f      	ble.n	8020488 <__kernel_rem_pio2+0x70>
 8020468:	af6a      	add	r7, sp, #424	; 0x1a8
 802046a:	2200      	movs	r2, #0
 802046c:	454a      	cmp	r2, r9
 802046e:	dc28      	bgt.n	80204c2 <__kernel_rem_pio2+0xaa>
 8020470:	f10d 0c68 	add.w	ip, sp, #104	; 0x68
 8020474:	eb0b 0302 	add.w	r3, fp, r2
 8020478:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
 802047c:	9d02      	ldr	r5, [sp, #8]
 802047e:	ed9f 7bac 	vldr	d7, [pc, #688]	; 8020730 <__kernel_rem_pio2+0x318>
 8020482:	f04f 0c00 	mov.w	ip, #0
 8020486:	e016      	b.n	80204b6 <__kernel_rem_pio2+0x9e>
 8020488:	42dd      	cmn	r5, r3
 802048a:	d409      	bmi.n	80204a0 <__kernel_rem_pio2+0x88>
 802048c:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8020490:	ee07 2a90 	vmov	s15, r2
 8020494:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 8020498:	ecae 7b02 	vstmia	lr!, {d7}
 802049c:	3301      	adds	r3, #1
 802049e:	e7e1      	b.n	8020464 <__kernel_rem_pio2+0x4c>
 80204a0:	eeb0 7b46 	vmov.f64	d7, d6
 80204a4:	e7f8      	b.n	8020498 <__kernel_rem_pio2+0x80>
 80204a6:	ecb5 5b02 	vldmia	r5!, {d5}
 80204aa:	ed33 6b02 	vldmdb	r3!, {d6}
 80204ae:	f10c 0c01 	add.w	ip, ip, #1
 80204b2:	eea5 7b06 	vfma.f64	d7, d5, d6
 80204b6:	45d4      	cmp	ip, sl
 80204b8:	ddf5      	ble.n	80204a6 <__kernel_rem_pio2+0x8e>
 80204ba:	eca7 7b02 	vstmia	r7!, {d7}
 80204be:	3201      	adds	r2, #1
 80204c0:	e7d4      	b.n	802046c <__kernel_rem_pio2+0x54>
 80204c2:	ab06      	add	r3, sp, #24
 80204c4:	eb03 0389 	add.w	r3, r3, r9, lsl #2
 80204c8:	ed9f 9b9b 	vldr	d9, [pc, #620]	; 8020738 <__kernel_rem_pio2+0x320>
 80204cc:	ed9f ab9c 	vldr	d10, [pc, #624]	; 8020740 <__kernel_rem_pio2+0x328>
 80204d0:	9304      	str	r3, [sp, #16]
 80204d2:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 80204d6:	9303      	str	r3, [sp, #12]
 80204d8:	464d      	mov	r5, r9
 80204da:	ab92      	add	r3, sp, #584	; 0x248
 80204dc:	f105 5700 	add.w	r7, r5, #536870912	; 0x20000000
 80204e0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80204e4:	3f01      	subs	r7, #1
 80204e6:	ed13 0b28 	vldr	d0, [r3, #-160]	; 0xffffff60
 80204ea:	00ff      	lsls	r7, r7, #3
 80204ec:	ab92      	add	r3, sp, #584	; 0x248
 80204ee:	19da      	adds	r2, r3, r7
 80204f0:	3a98      	subs	r2, #152	; 0x98
 80204f2:	2300      	movs	r3, #0
 80204f4:	1ae9      	subs	r1, r5, r3
 80204f6:	2900      	cmp	r1, #0
 80204f8:	dc4e      	bgt.n	8020598 <__kernel_rem_pio2+0x180>
 80204fa:	4620      	mov	r0, r4
 80204fc:	f000 fba4 	bl	8020c48 <scalbn>
 8020500:	eeb0 8b40 	vmov.f64	d8, d0
 8020504:	eeb4 0b00 	vmov.f64	d0, #64	; 0x3e000000  0.125
 8020508:	ee28 0b00 	vmul.f64	d0, d8, d0
 802050c:	f000 fa8c 	bl	8020a28 <floor>
 8020510:	eeb2 7b00 	vmov.f64	d7, #32	; 0x41000000  8.0
 8020514:	eea0 8b47 	vfms.f64	d8, d0, d7
 8020518:	eefd 7bc8 	vcvt.s32.f64	s15, d8
 802051c:	2c00      	cmp	r4, #0
 802051e:	edcd 7a01 	vstr	s15, [sp, #4]
 8020522:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 8020526:	ee38 8b47 	vsub.f64	d8, d8, d7
 802052a:	dd4a      	ble.n	80205c2 <__kernel_rem_pio2+0x1aa>
 802052c:	1e69      	subs	r1, r5, #1
 802052e:	ab06      	add	r3, sp, #24
 8020530:	f1c4 0018 	rsb	r0, r4, #24
 8020534:	f853 c021 	ldr.w	ip, [r3, r1, lsl #2]
 8020538:	9a01      	ldr	r2, [sp, #4]
 802053a:	fa4c f300 	asr.w	r3, ip, r0
 802053e:	441a      	add	r2, r3
 8020540:	4083      	lsls	r3, r0
 8020542:	9201      	str	r2, [sp, #4]
 8020544:	ebac 0203 	sub.w	r2, ip, r3
 8020548:	ab06      	add	r3, sp, #24
 802054a:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 802054e:	f1c4 0317 	rsb	r3, r4, #23
 8020552:	fa42 f803 	asr.w	r8, r2, r3
 8020556:	f1b8 0f00 	cmp.w	r8, #0
 802055a:	dd43      	ble.n	80205e4 <__kernel_rem_pio2+0x1cc>
 802055c:	9b01      	ldr	r3, [sp, #4]
 802055e:	2000      	movs	r0, #0
 8020560:	3301      	adds	r3, #1
 8020562:	9301      	str	r3, [sp, #4]
 8020564:	4601      	mov	r1, r0
 8020566:	f06f 4c7f 	mvn.w	ip, #4278190080	; 0xff000000
 802056a:	4285      	cmp	r5, r0
 802056c:	dc6e      	bgt.n	802064c <__kernel_rem_pio2+0x234>
 802056e:	2c00      	cmp	r4, #0
 8020570:	dd04      	ble.n	802057c <__kernel_rem_pio2+0x164>
 8020572:	2c01      	cmp	r4, #1
 8020574:	d07f      	beq.n	8020676 <__kernel_rem_pio2+0x25e>
 8020576:	2c02      	cmp	r4, #2
 8020578:	f000 8087 	beq.w	802068a <__kernel_rem_pio2+0x272>
 802057c:	f1b8 0f02 	cmp.w	r8, #2
 8020580:	d130      	bne.n	80205e4 <__kernel_rem_pio2+0x1cc>
 8020582:	eeb7 0b00 	vmov.f64	d0, #112	; 0x3f800000  1.0
 8020586:	ee30 8b48 	vsub.f64	d8, d0, d8
 802058a:	b359      	cbz	r1, 80205e4 <__kernel_rem_pio2+0x1cc>
 802058c:	4620      	mov	r0, r4
 802058e:	f000 fb5b 	bl	8020c48 <scalbn>
 8020592:	ee38 8b40 	vsub.f64	d8, d8, d0
 8020596:	e025      	b.n	80205e4 <__kernel_rem_pio2+0x1cc>
 8020598:	ee20 7b09 	vmul.f64	d7, d0, d9
 802059c:	eebd 7bc7 	vcvt.s32.f64	s14, d7
 80205a0:	a806      	add	r0, sp, #24
 80205a2:	eeb8 7bc7 	vcvt.f64.s32	d7, s14
 80205a6:	eea7 0b4a 	vfms.f64	d0, d7, d10
 80205aa:	eebd 0bc0 	vcvt.s32.f64	s0, d0
 80205ae:	ee10 1a10 	vmov	r1, s0
 80205b2:	ed32 0b02 	vldmdb	r2!, {d0}
 80205b6:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
 80205ba:	ee37 0b00 	vadd.f64	d0, d7, d0
 80205be:	3301      	adds	r3, #1
 80205c0:	e798      	b.n	80204f4 <__kernel_rem_pio2+0xdc>
 80205c2:	d106      	bne.n	80205d2 <__kernel_rem_pio2+0x1ba>
 80205c4:	1e6b      	subs	r3, r5, #1
 80205c6:	aa06      	add	r2, sp, #24
 80205c8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80205cc:	ea4f 58e2 	mov.w	r8, r2, asr #23
 80205d0:	e7c1      	b.n	8020556 <__kernel_rem_pio2+0x13e>
 80205d2:	eeb6 7b00 	vmov.f64	d7, #96	; 0x3f000000  0.5
 80205d6:	eeb4 8bc7 	vcmpe.f64	d8, d7
 80205da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205de:	da32      	bge.n	8020646 <__kernel_rem_pio2+0x22e>
 80205e0:	f04f 0800 	mov.w	r8, #0
 80205e4:	eeb5 8b40 	vcmp.f64	d8, #0.0
 80205e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205ec:	f040 80b0 	bne.w	8020750 <__kernel_rem_pio2+0x338>
 80205f0:	1e6b      	subs	r3, r5, #1
 80205f2:	4618      	mov	r0, r3
 80205f4:	2200      	movs	r2, #0
 80205f6:	4548      	cmp	r0, r9
 80205f8:	da4e      	bge.n	8020698 <__kernel_rem_pio2+0x280>
 80205fa:	2a00      	cmp	r2, #0
 80205fc:	f000 8088 	beq.w	8020710 <__kernel_rem_pio2+0x2f8>
 8020600:	aa06      	add	r2, sp, #24
 8020602:	3c18      	subs	r4, #24
 8020604:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8020608:	2900      	cmp	r1, #0
 802060a:	f000 808e 	beq.w	802072a <__kernel_rem_pio2+0x312>
 802060e:	eeb7 0b00 	vmov.f64	d0, #112	; 0x3f800000  1.0
 8020612:	4620      	mov	r0, r4
 8020614:	9302      	str	r3, [sp, #8]
 8020616:	f000 fb17 	bl	8020c48 <scalbn>
 802061a:	9b02      	ldr	r3, [sp, #8]
 802061c:	aa6a      	add	r2, sp, #424	; 0x1a8
 802061e:	00d9      	lsls	r1, r3, #3
 8020620:	ed9f 6b45 	vldr	d6, [pc, #276]	; 8020738 <__kernel_rem_pio2+0x320>
 8020624:	1850      	adds	r0, r2, r1
 8020626:	f100 0508 	add.w	r5, r0, #8
 802062a:	461c      	mov	r4, r3
 802062c:	2c00      	cmp	r4, #0
 802062e:	f280 80bd 	bge.w	80207ac <__kernel_rem_pio2+0x394>
 8020632:	2500      	movs	r5, #0
 8020634:	1b5c      	subs	r4, r3, r5
 8020636:	2c00      	cmp	r4, #0
 8020638:	f2c0 80dd 	blt.w	80207f6 <__kernel_rem_pio2+0x3de>
 802063c:	4f43      	ldr	r7, [pc, #268]	; (802074c <__kernel_rem_pio2+0x334>)
 802063e:	ed9f 7b3c 	vldr	d7, [pc, #240]	; 8020730 <__kernel_rem_pio2+0x318>
 8020642:	2400      	movs	r4, #0
 8020644:	e0cb      	b.n	80207de <__kernel_rem_pio2+0x3c6>
 8020646:	f04f 0802 	mov.w	r8, #2
 802064a:	e787      	b.n	802055c <__kernel_rem_pio2+0x144>
 802064c:	ab06      	add	r3, sp, #24
 802064e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8020652:	b949      	cbnz	r1, 8020668 <__kernel_rem_pio2+0x250>
 8020654:	b12b      	cbz	r3, 8020662 <__kernel_rem_pio2+0x24a>
 8020656:	aa06      	add	r2, sp, #24
 8020658:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 802065c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 8020660:	2301      	movs	r3, #1
 8020662:	3001      	adds	r0, #1
 8020664:	4619      	mov	r1, r3
 8020666:	e780      	b.n	802056a <__kernel_rem_pio2+0x152>
 8020668:	aa06      	add	r2, sp, #24
 802066a:	ebac 0303 	sub.w	r3, ip, r3
 802066e:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 8020672:	460b      	mov	r3, r1
 8020674:	e7f5      	b.n	8020662 <__kernel_rem_pio2+0x24a>
 8020676:	1e68      	subs	r0, r5, #1
 8020678:	ab06      	add	r3, sp, #24
 802067a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 802067e:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8020682:	aa06      	add	r2, sp, #24
 8020684:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 8020688:	e778      	b.n	802057c <__kernel_rem_pio2+0x164>
 802068a:	1e68      	subs	r0, r5, #1
 802068c:	ab06      	add	r3, sp, #24
 802068e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8020692:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8020696:	e7f4      	b.n	8020682 <__kernel_rem_pio2+0x26a>
 8020698:	a906      	add	r1, sp, #24
 802069a:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 802069e:	3801      	subs	r0, #1
 80206a0:	430a      	orrs	r2, r1
 80206a2:	e7a8      	b.n	80205f6 <__kernel_rem_pio2+0x1de>
 80206a4:	f10c 0c01 	add.w	ip, ip, #1
 80206a8:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80206ac:	2a00      	cmp	r2, #0
 80206ae:	d0f9      	beq.n	80206a4 <__kernel_rem_pio2+0x28c>
 80206b0:	eb0b 0305 	add.w	r3, fp, r5
 80206b4:	aa1a      	add	r2, sp, #104	; 0x68
 80206b6:	00db      	lsls	r3, r3, #3
 80206b8:	1898      	adds	r0, r3, r2
 80206ba:	3008      	adds	r0, #8
 80206bc:	1c69      	adds	r1, r5, #1
 80206be:	3708      	adds	r7, #8
 80206c0:	2200      	movs	r2, #0
 80206c2:	4465      	add	r5, ip
 80206c4:	9005      	str	r0, [sp, #20]
 80206c6:	428d      	cmp	r5, r1
 80206c8:	f6ff af07 	blt.w	80204da <__kernel_rem_pio2+0xc2>
 80206cc:	a81a      	add	r0, sp, #104	; 0x68
 80206ce:	eb02 0c03 	add.w	ip, r2, r3
 80206d2:	4484      	add	ip, r0
 80206d4:	9803      	ldr	r0, [sp, #12]
 80206d6:	f8dd e008 	ldr.w	lr, [sp, #8]
 80206da:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 80206de:	9001      	str	r0, [sp, #4]
 80206e0:	ee07 0a90 	vmov	s15, r0
 80206e4:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 80206e8:	9805      	ldr	r0, [sp, #20]
 80206ea:	ed8c 7b00 	vstr	d7, [ip]
 80206ee:	ed9f 7b10 	vldr	d7, [pc, #64]	; 8020730 <__kernel_rem_pio2+0x318>
 80206f2:	eb00 0802 	add.w	r8, r0, r2
 80206f6:	f04f 0c00 	mov.w	ip, #0
 80206fa:	45d4      	cmp	ip, sl
 80206fc:	dd0c      	ble.n	8020718 <__kernel_rem_pio2+0x300>
 80206fe:	eb02 0c07 	add.w	ip, r2, r7
 8020702:	a86a      	add	r0, sp, #424	; 0x1a8
 8020704:	4484      	add	ip, r0
 8020706:	ed8c 7b02 	vstr	d7, [ip, #8]
 802070a:	3101      	adds	r1, #1
 802070c:	3208      	adds	r2, #8
 802070e:	e7da      	b.n	80206c6 <__kernel_rem_pio2+0x2ae>
 8020710:	9b04      	ldr	r3, [sp, #16]
 8020712:	f04f 0c01 	mov.w	ip, #1
 8020716:	e7c7      	b.n	80206a8 <__kernel_rem_pio2+0x290>
 8020718:	ecbe 5b02 	vldmia	lr!, {d5}
 802071c:	ed38 6b02 	vldmdb	r8!, {d6}
 8020720:	f10c 0c01 	add.w	ip, ip, #1
 8020724:	eea5 7b06 	vfma.f64	d7, d5, d6
 8020728:	e7e7      	b.n	80206fa <__kernel_rem_pio2+0x2e2>
 802072a:	3b01      	subs	r3, #1
 802072c:	e768      	b.n	8020600 <__kernel_rem_pio2+0x1e8>
 802072e:	bf00      	nop
	...
 802073c:	3e700000 	.word	0x3e700000
 8020740:	00000000 	.word	0x00000000
 8020744:	41700000 	.word	0x41700000
 8020748:	08025e70 	.word	0x08025e70
 802074c:	08025e30 	.word	0x08025e30
 8020750:	4260      	negs	r0, r4
 8020752:	eeb0 0b48 	vmov.f64	d0, d8
 8020756:	f000 fa77 	bl	8020c48 <scalbn>
 802075a:	ed9f 6b77 	vldr	d6, [pc, #476]	; 8020938 <__kernel_rem_pio2+0x520>
 802075e:	eeb4 0bc6 	vcmpe.f64	d0, d6
 8020762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020766:	db18      	blt.n	802079a <__kernel_rem_pio2+0x382>
 8020768:	ed9f 7b75 	vldr	d7, [pc, #468]	; 8020940 <__kernel_rem_pio2+0x528>
 802076c:	ee20 7b07 	vmul.f64	d7, d0, d7
 8020770:	eebd 7bc7 	vcvt.s32.f64	s14, d7
 8020774:	aa06      	add	r2, sp, #24
 8020776:	eeb8 5bc7 	vcvt.f64.s32	d5, s14
 802077a:	eea5 0b46 	vfms.f64	d0, d5, d6
 802077e:	eebd 0bc0 	vcvt.s32.f64	s0, d0
 8020782:	a906      	add	r1, sp, #24
 8020784:	ee10 3a10 	vmov	r3, s0
 8020788:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
 802078c:	1c6b      	adds	r3, r5, #1
 802078e:	ee17 2a10 	vmov	r2, s14
 8020792:	3418      	adds	r4, #24
 8020794:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8020798:	e739      	b.n	802060e <__kernel_rem_pio2+0x1f6>
 802079a:	eebd 0bc0 	vcvt.s32.f64	s0, d0
 802079e:	aa06      	add	r2, sp, #24
 80207a0:	ee10 3a10 	vmov	r3, s0
 80207a4:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
 80207a8:	462b      	mov	r3, r5
 80207aa:	e730      	b.n	802060e <__kernel_rem_pio2+0x1f6>
 80207ac:	aa06      	add	r2, sp, #24
 80207ae:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
 80207b2:	9202      	str	r2, [sp, #8]
 80207b4:	ee07 2a90 	vmov	s15, r2
 80207b8:	3c01      	subs	r4, #1
 80207ba:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 80207be:	ee27 7b00 	vmul.f64	d7, d7, d0
 80207c2:	ee20 0b06 	vmul.f64	d0, d0, d6
 80207c6:	ed25 7b02 	vstmdb	r5!, {d7}
 80207ca:	e72f      	b.n	802062c <__kernel_rem_pio2+0x214>
 80207cc:	eb00 0cc4 	add.w	ip, r0, r4, lsl #3
 80207d0:	ecb7 5b02 	vldmia	r7!, {d5}
 80207d4:	ed9c 6b00 	vldr	d6, [ip]
 80207d8:	3401      	adds	r4, #1
 80207da:	eea5 7b06 	vfma.f64	d7, d5, d6
 80207de:	454c      	cmp	r4, r9
 80207e0:	dc01      	bgt.n	80207e6 <__kernel_rem_pio2+0x3ce>
 80207e2:	42a5      	cmp	r5, r4
 80207e4:	daf2      	bge.n	80207cc <__kernel_rem_pio2+0x3b4>
 80207e6:	aa42      	add	r2, sp, #264	; 0x108
 80207e8:	eb02 04c5 	add.w	r4, r2, r5, lsl #3
 80207ec:	ed84 7b00 	vstr	d7, [r4]
 80207f0:	3501      	adds	r5, #1
 80207f2:	3808      	subs	r0, #8
 80207f4:	e71e      	b.n	8020634 <__kernel_rem_pio2+0x21c>
 80207f6:	9aa2      	ldr	r2, [sp, #648]	; 0x288
 80207f8:	2a03      	cmp	r2, #3
 80207fa:	d84e      	bhi.n	802089a <__kernel_rem_pio2+0x482>
 80207fc:	e8df f002 	tbb	[pc, r2]
 8020800:	021f1f3e 	.word	0x021f1f3e
 8020804:	3108      	adds	r1, #8
 8020806:	aa42      	add	r2, sp, #264	; 0x108
 8020808:	4411      	add	r1, r2
 802080a:	4608      	mov	r0, r1
 802080c:	461c      	mov	r4, r3
 802080e:	2c00      	cmp	r4, #0
 8020810:	dc61      	bgt.n	80208d6 <__kernel_rem_pio2+0x4be>
 8020812:	4608      	mov	r0, r1
 8020814:	461c      	mov	r4, r3
 8020816:	2c01      	cmp	r4, #1
 8020818:	dc6d      	bgt.n	80208f6 <__kernel_rem_pio2+0x4de>
 802081a:	ed9f 7b4b 	vldr	d7, [pc, #300]	; 8020948 <__kernel_rem_pio2+0x530>
 802081e:	2b01      	cmp	r3, #1
 8020820:	dc79      	bgt.n	8020916 <__kernel_rem_pio2+0x4fe>
 8020822:	ed9d 5b42 	vldr	d5, [sp, #264]	; 0x108
 8020826:	ed9d 6b44 	vldr	d6, [sp, #272]	; 0x110
 802082a:	f1b8 0f00 	cmp.w	r8, #0
 802082e:	d178      	bne.n	8020922 <__kernel_rem_pio2+0x50a>
 8020830:	ed86 5b00 	vstr	d5, [r6]
 8020834:	ed86 6b02 	vstr	d6, [r6, #8]
 8020838:	ed86 7b04 	vstr	d7, [r6, #16]
 802083c:	e02d      	b.n	802089a <__kernel_rem_pio2+0x482>
 802083e:	ed9f 6b42 	vldr	d6, [pc, #264]	; 8020948 <__kernel_rem_pio2+0x530>
 8020842:	3108      	adds	r1, #8
 8020844:	aa42      	add	r2, sp, #264	; 0x108
 8020846:	4411      	add	r1, r2
 8020848:	4618      	mov	r0, r3
 802084a:	2800      	cmp	r0, #0
 802084c:	da34      	bge.n	80208b8 <__kernel_rem_pio2+0x4a0>
 802084e:	f1b8 0f00 	cmp.w	r8, #0
 8020852:	d037      	beq.n	80208c4 <__kernel_rem_pio2+0x4ac>
 8020854:	eeb1 7b46 	vneg.f64	d7, d6
 8020858:	ed86 7b00 	vstr	d7, [r6]
 802085c:	ed9d 7b42 	vldr	d7, [sp, #264]	; 0x108
 8020860:	a844      	add	r0, sp, #272	; 0x110
 8020862:	2101      	movs	r1, #1
 8020864:	ee37 7b46 	vsub.f64	d7, d7, d6
 8020868:	428b      	cmp	r3, r1
 802086a:	da2e      	bge.n	80208ca <__kernel_rem_pio2+0x4b2>
 802086c:	f1b8 0f00 	cmp.w	r8, #0
 8020870:	d001      	beq.n	8020876 <__kernel_rem_pio2+0x45e>
 8020872:	eeb1 7b47 	vneg.f64	d7, d7
 8020876:	ed86 7b02 	vstr	d7, [r6, #8]
 802087a:	e00e      	b.n	802089a <__kernel_rem_pio2+0x482>
 802087c:	aa92      	add	r2, sp, #584	; 0x248
 802087e:	ed9f 7b32 	vldr	d7, [pc, #200]	; 8020948 <__kernel_rem_pio2+0x530>
 8020882:	4411      	add	r1, r2
 8020884:	f5a1 719c 	sub.w	r1, r1, #312	; 0x138
 8020888:	2b00      	cmp	r3, #0
 802088a:	da0f      	bge.n	80208ac <__kernel_rem_pio2+0x494>
 802088c:	f1b8 0f00 	cmp.w	r8, #0
 8020890:	d001      	beq.n	8020896 <__kernel_rem_pio2+0x47e>
 8020892:	eeb1 7b47 	vneg.f64	d7, d7
 8020896:	ed86 7b00 	vstr	d7, [r6]
 802089a:	9b01      	ldr	r3, [sp, #4]
 802089c:	f003 0007 	and.w	r0, r3, #7
 80208a0:	f50d 7d13 	add.w	sp, sp, #588	; 0x24c
 80208a4:	ecbd 8b06 	vpop	{d8-d10}
 80208a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80208ac:	ed31 6b02 	vldmdb	r1!, {d6}
 80208b0:	3b01      	subs	r3, #1
 80208b2:	ee37 7b06 	vadd.f64	d7, d7, d6
 80208b6:	e7e7      	b.n	8020888 <__kernel_rem_pio2+0x470>
 80208b8:	ed31 7b02 	vldmdb	r1!, {d7}
 80208bc:	3801      	subs	r0, #1
 80208be:	ee36 6b07 	vadd.f64	d6, d6, d7
 80208c2:	e7c2      	b.n	802084a <__kernel_rem_pio2+0x432>
 80208c4:	eeb0 7b46 	vmov.f64	d7, d6
 80208c8:	e7c6      	b.n	8020858 <__kernel_rem_pio2+0x440>
 80208ca:	ecb0 6b02 	vldmia	r0!, {d6}
 80208ce:	3101      	adds	r1, #1
 80208d0:	ee37 7b06 	vadd.f64	d7, d7, d6
 80208d4:	e7c8      	b.n	8020868 <__kernel_rem_pio2+0x450>
 80208d6:	ed10 7b04 	vldr	d7, [r0, #-16]
 80208da:	ed30 5b02 	vldmdb	r0!, {d5}
 80208de:	3c01      	subs	r4, #1
 80208e0:	ee37 6b05 	vadd.f64	d6, d7, d5
 80208e4:	ee37 7b46 	vsub.f64	d7, d7, d6
 80208e8:	ed00 6b02 	vstr	d6, [r0, #-8]
 80208ec:	ee37 7b05 	vadd.f64	d7, d7, d5
 80208f0:	ed80 7b00 	vstr	d7, [r0]
 80208f4:	e78b      	b.n	802080e <__kernel_rem_pio2+0x3f6>
 80208f6:	ed10 7b04 	vldr	d7, [r0, #-16]
 80208fa:	ed30 5b02 	vldmdb	r0!, {d5}
 80208fe:	3c01      	subs	r4, #1
 8020900:	ee37 6b05 	vadd.f64	d6, d7, d5
 8020904:	ee37 7b46 	vsub.f64	d7, d7, d6
 8020908:	ed00 6b02 	vstr	d6, [r0, #-8]
 802090c:	ee37 7b05 	vadd.f64	d7, d7, d5
 8020910:	ed80 7b00 	vstr	d7, [r0]
 8020914:	e77f      	b.n	8020816 <__kernel_rem_pio2+0x3fe>
 8020916:	ed31 6b02 	vldmdb	r1!, {d6}
 802091a:	3b01      	subs	r3, #1
 802091c:	ee37 7b06 	vadd.f64	d7, d7, d6
 8020920:	e77d      	b.n	802081e <__kernel_rem_pio2+0x406>
 8020922:	eeb1 5b45 	vneg.f64	d5, d5
 8020926:	eeb1 6b46 	vneg.f64	d6, d6
 802092a:	ed86 5b00 	vstr	d5, [r6]
 802092e:	eeb1 7b47 	vneg.f64	d7, d7
 8020932:	ed86 6b02 	vstr	d6, [r6, #8]
 8020936:	e77f      	b.n	8020838 <__kernel_rem_pio2+0x420>
 8020938:	00000000 	.word	0x00000000
 802093c:	41700000 	.word	0x41700000
 8020940:	00000000 	.word	0x00000000
 8020944:	3e700000 	.word	0x3e700000
	...

08020950 <__kernel_sin>:
 8020950:	ee10 3a90 	vmov	r3, s1
 8020954:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8020958:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 802095c:	da04      	bge.n	8020968 <__kernel_sin+0x18>
 802095e:	eefd 7bc0 	vcvt.s32.f64	s15, d0
 8020962:	ee17 3a90 	vmov	r3, s15
 8020966:	b35b      	cbz	r3, 80209c0 <__kernel_sin+0x70>
 8020968:	ee20 6b00 	vmul.f64	d6, d0, d0
 802096c:	ee20 5b06 	vmul.f64	d5, d0, d6
 8020970:	ed9f 7b15 	vldr	d7, [pc, #84]	; 80209c8 <__kernel_sin+0x78>
 8020974:	ed9f 4b16 	vldr	d4, [pc, #88]	; 80209d0 <__kernel_sin+0x80>
 8020978:	eea6 4b07 	vfma.f64	d4, d6, d7
 802097c:	ed9f 7b16 	vldr	d7, [pc, #88]	; 80209d8 <__kernel_sin+0x88>
 8020980:	eea4 7b06 	vfma.f64	d7, d4, d6
 8020984:	ed9f 4b16 	vldr	d4, [pc, #88]	; 80209e0 <__kernel_sin+0x90>
 8020988:	eea7 4b06 	vfma.f64	d4, d7, d6
 802098c:	ed9f 7b16 	vldr	d7, [pc, #88]	; 80209e8 <__kernel_sin+0x98>
 8020990:	eea4 7b06 	vfma.f64	d7, d4, d6
 8020994:	b930      	cbnz	r0, 80209a4 <__kernel_sin+0x54>
 8020996:	ed9f 4b16 	vldr	d4, [pc, #88]	; 80209f0 <__kernel_sin+0xa0>
 802099a:	eea6 4b07 	vfma.f64	d4, d6, d7
 802099e:	eea4 0b05 	vfma.f64	d0, d4, d5
 80209a2:	4770      	bx	lr
 80209a4:	ee27 7b45 	vnmul.f64	d7, d7, d5
 80209a8:	eeb6 4b00 	vmov.f64	d4, #96	; 0x3f000000  0.5
 80209ac:	eea1 7b04 	vfma.f64	d7, d1, d4
 80209b0:	ee97 1b06 	vfnms.f64	d1, d7, d6
 80209b4:	ed9f 7b10 	vldr	d7, [pc, #64]	; 80209f8 <__kernel_sin+0xa8>
 80209b8:	eea5 1b07 	vfma.f64	d1, d5, d7
 80209bc:	ee30 0b41 	vsub.f64	d0, d0, d1
 80209c0:	4770      	bx	lr
 80209c2:	bf00      	nop
 80209c4:	f3af 8000 	nop.w
 80209c8:	5acfd57c 	.word	0x5acfd57c
 80209cc:	3de5d93a 	.word	0x3de5d93a
 80209d0:	8a2b9ceb 	.word	0x8a2b9ceb
 80209d4:	be5ae5e6 	.word	0xbe5ae5e6
 80209d8:	57b1fe7d 	.word	0x57b1fe7d
 80209dc:	3ec71de3 	.word	0x3ec71de3
 80209e0:	19c161d5 	.word	0x19c161d5
 80209e4:	bf2a01a0 	.word	0xbf2a01a0
 80209e8:	1110f8a6 	.word	0x1110f8a6
 80209ec:	3f811111 	.word	0x3f811111
 80209f0:	55555549 	.word	0x55555549
 80209f4:	bfc55555 	.word	0xbfc55555
 80209f8:	55555549 	.word	0x55555549
 80209fc:	3fc55555 	.word	0x3fc55555

08020a00 <fabs>:
 8020a00:	ec51 0b10 	vmov	r0, r1, d0
 8020a04:	ee10 2a10 	vmov	r2, s0
 8020a08:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8020a0c:	ec43 2b10 	vmov	d0, r2, r3
 8020a10:	4770      	bx	lr

08020a12 <finite>:
 8020a12:	ee10 3a90 	vmov	r3, s1
 8020a16:	f043 4000 	orr.w	r0, r3, #2147483648	; 0x80000000
 8020a1a:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8020a1e:	0fc0      	lsrs	r0, r0, #31
 8020a20:	4770      	bx	lr
 8020a22:	0000      	movs	r0, r0
 8020a24:	0000      	movs	r0, r0
	...

08020a28 <floor>:
 8020a28:	ee10 1a90 	vmov	r1, s1
 8020a2c:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8020a30:	f2a2 33ff 	subw	r3, r2, #1023	; 0x3ff
 8020a34:	2b13      	cmp	r3, #19
 8020a36:	b530      	push	{r4, r5, lr}
 8020a38:	ee10 0a10 	vmov	r0, s0
 8020a3c:	ee10 5a10 	vmov	r5, s0
 8020a40:	dc33      	bgt.n	8020aaa <floor+0x82>
 8020a42:	2b00      	cmp	r3, #0
 8020a44:	da17      	bge.n	8020a76 <floor+0x4e>
 8020a46:	ed9f 7b30 	vldr	d7, [pc, #192]	; 8020b08 <floor+0xe0>
 8020a4a:	ee30 0b07 	vadd.f64	d0, d0, d7
 8020a4e:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 8020a52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020a56:	dd09      	ble.n	8020a6c <floor+0x44>
 8020a58:	2900      	cmp	r1, #0
 8020a5a:	da50      	bge.n	8020afe <floor+0xd6>
 8020a5c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8020a60:	4a2b      	ldr	r2, [pc, #172]	; (8020b10 <floor+0xe8>)
 8020a62:	4303      	orrs	r3, r0
 8020a64:	2000      	movs	r0, #0
 8020a66:	4283      	cmp	r3, r0
 8020a68:	bf18      	it	ne
 8020a6a:	4611      	movne	r1, r2
 8020a6c:	460b      	mov	r3, r1
 8020a6e:	4602      	mov	r2, r0
 8020a70:	ec43 2b10 	vmov	d0, r2, r3
 8020a74:	e020      	b.n	8020ab8 <floor+0x90>
 8020a76:	4a27      	ldr	r2, [pc, #156]	; (8020b14 <floor+0xec>)
 8020a78:	411a      	asrs	r2, r3
 8020a7a:	ea01 0402 	and.w	r4, r1, r2
 8020a7e:	4304      	orrs	r4, r0
 8020a80:	d01a      	beq.n	8020ab8 <floor+0x90>
 8020a82:	ed9f 7b21 	vldr	d7, [pc, #132]	; 8020b08 <floor+0xe0>
 8020a86:	ee30 0b07 	vadd.f64	d0, d0, d7
 8020a8a:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 8020a8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020a92:	ddeb      	ble.n	8020a6c <floor+0x44>
 8020a94:	2900      	cmp	r1, #0
 8020a96:	bfbe      	ittt	lt
 8020a98:	f44f 1080 	movlt.w	r0, #1048576	; 0x100000
 8020a9c:	fa40 f303 	asrlt.w	r3, r0, r3
 8020aa0:	18c9      	addlt	r1, r1, r3
 8020aa2:	ea21 0102 	bic.w	r1, r1, r2
 8020aa6:	2000      	movs	r0, #0
 8020aa8:	e7e0      	b.n	8020a6c <floor+0x44>
 8020aaa:	2b33      	cmp	r3, #51	; 0x33
 8020aac:	dd05      	ble.n	8020aba <floor+0x92>
 8020aae:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8020ab2:	d101      	bne.n	8020ab8 <floor+0x90>
 8020ab4:	ee30 0b00 	vadd.f64	d0, d0, d0
 8020ab8:	bd30      	pop	{r4, r5, pc}
 8020aba:	f2a2 4413 	subw	r4, r2, #1043	; 0x413
 8020abe:	f04f 32ff 	mov.w	r2, #4294967295
 8020ac2:	40e2      	lsrs	r2, r4
 8020ac4:	4202      	tst	r2, r0
 8020ac6:	d0f7      	beq.n	8020ab8 <floor+0x90>
 8020ac8:	ed9f 7b0f 	vldr	d7, [pc, #60]	; 8020b08 <floor+0xe0>
 8020acc:	ee30 0b07 	vadd.f64	d0, d0, d7
 8020ad0:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 8020ad4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020ad8:	ddc8      	ble.n	8020a6c <floor+0x44>
 8020ada:	2900      	cmp	r1, #0
 8020adc:	da02      	bge.n	8020ae4 <floor+0xbc>
 8020ade:	2b14      	cmp	r3, #20
 8020ae0:	d103      	bne.n	8020aea <floor+0xc2>
 8020ae2:	3101      	adds	r1, #1
 8020ae4:	ea20 0002 	bic.w	r0, r0, r2
 8020ae8:	e7c0      	b.n	8020a6c <floor+0x44>
 8020aea:	2401      	movs	r4, #1
 8020aec:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 8020af0:	fa04 f303 	lsl.w	r3, r4, r3
 8020af4:	4418      	add	r0, r3
 8020af6:	42a8      	cmp	r0, r5
 8020af8:	bf38      	it	cc
 8020afa:	1909      	addcc	r1, r1, r4
 8020afc:	e7f2      	b.n	8020ae4 <floor+0xbc>
 8020afe:	2000      	movs	r0, #0
 8020b00:	4601      	mov	r1, r0
 8020b02:	e7b3      	b.n	8020a6c <floor+0x44>
 8020b04:	f3af 8000 	nop.w
 8020b08:	8800759c 	.word	0x8800759c
 8020b0c:	7e37e43c 	.word	0x7e37e43c
 8020b10:	bff00000 	.word	0xbff00000
 8020b14:	000fffff 	.word	0x000fffff

08020b18 <matherr>:
 8020b18:	2000      	movs	r0, #0
 8020b1a:	4770      	bx	lr
 8020b1c:	0000      	movs	r0, r0
	...

08020b20 <nan>:
 8020b20:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8020b28 <nan+0x8>
 8020b24:	4770      	bx	lr
 8020b26:	bf00      	nop
 8020b28:	00000000 	.word	0x00000000
 8020b2c:	7ff80000 	.word	0x7ff80000

08020b30 <rint>:
 8020b30:	b530      	push	{r4, r5, lr}
 8020b32:	b085      	sub	sp, #20
 8020b34:	ed8d 0b00 	vstr	d0, [sp]
 8020b38:	e9dd 2300 	ldrd	r2, r3, [sp]
 8020b3c:	f3c3 510a 	ubfx	r1, r3, #20, #11
 8020b40:	f2a1 30ff 	subw	r0, r1, #1023	; 0x3ff
 8020b44:	2813      	cmp	r0, #19
 8020b46:	ea4f 74d3 	mov.w	r4, r3, lsr #31
 8020b4a:	dc5a      	bgt.n	8020c02 <rint+0xd2>
 8020b4c:	2800      	cmp	r0, #0
 8020b4e:	da2f      	bge.n	8020bb0 <rint+0x80>
 8020b50:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8020b54:	4311      	orrs	r1, r2
 8020b56:	d027      	beq.n	8020ba8 <rint+0x78>
 8020b58:	f3c3 0513 	ubfx	r5, r3, #0, #20
 8020b5c:	4315      	orrs	r5, r2
 8020b5e:	426a      	negs	r2, r5
 8020b60:	432a      	orrs	r2, r5
 8020b62:	0b12      	lsrs	r2, r2, #12
 8020b64:	0c5b      	lsrs	r3, r3, #17
 8020b66:	045b      	lsls	r3, r3, #17
 8020b68:	f402 2200 	and.w	r2, r2, #524288	; 0x80000
 8020b6c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020b70:	ea42 0103 	orr.w	r1, r2, r3
 8020b74:	4b31      	ldr	r3, [pc, #196]	; (8020c3c <rint+0x10c>)
 8020b76:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8020b7a:	ed93 6b00 	vldr	d6, [r3]
 8020b7e:	ec41 0b17 	vmov	d7, r0, r1
 8020b82:	ee36 7b07 	vadd.f64	d7, d6, d7
 8020b86:	ed8d 7b02 	vstr	d7, [sp, #8]
 8020b8a:	ed9d 7b02 	vldr	d7, [sp, #8]
 8020b8e:	ee37 7b46 	vsub.f64	d7, d7, d6
 8020b92:	ed8d 7b00 	vstr	d7, [sp]
 8020b96:	9b01      	ldr	r3, [sp, #4]
 8020b98:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020b9c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8020ba0:	ea43 71c4 	orr.w	r1, r3, r4, lsl #31
 8020ba4:	e9cd 0100 	strd	r0, r1, [sp]
 8020ba8:	ed9d 0b00 	vldr	d0, [sp]
 8020bac:	b005      	add	sp, #20
 8020bae:	bd30      	pop	{r4, r5, pc}
 8020bb0:	4923      	ldr	r1, [pc, #140]	; (8020c40 <rint+0x110>)
 8020bb2:	4101      	asrs	r1, r0
 8020bb4:	ea03 0501 	and.w	r5, r3, r1
 8020bb8:	4315      	orrs	r5, r2
 8020bba:	d0f5      	beq.n	8020ba8 <rint+0x78>
 8020bbc:	0849      	lsrs	r1, r1, #1
 8020bbe:	ea03 0501 	and.w	r5, r3, r1
 8020bc2:	432a      	orrs	r2, r5
 8020bc4:	d00b      	beq.n	8020bde <rint+0xae>
 8020bc6:	ea23 0101 	bic.w	r1, r3, r1
 8020bca:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8020bce:	2813      	cmp	r0, #19
 8020bd0:	fa43 f300 	asr.w	r3, r3, r0
 8020bd4:	bf0c      	ite	eq
 8020bd6:	f04f 4200 	moveq.w	r2, #2147483648	; 0x80000000
 8020bda:	2200      	movne	r2, #0
 8020bdc:	430b      	orrs	r3, r1
 8020bde:	4619      	mov	r1, r3
 8020be0:	4b16      	ldr	r3, [pc, #88]	; (8020c3c <rint+0x10c>)
 8020be2:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 8020be6:	ed94 6b00 	vldr	d6, [r4]
 8020bea:	4610      	mov	r0, r2
 8020bec:	ec41 0b17 	vmov	d7, r0, r1
 8020bf0:	ee36 7b07 	vadd.f64	d7, d6, d7
 8020bf4:	ed8d 7b02 	vstr	d7, [sp, #8]
 8020bf8:	ed9d 7b02 	vldr	d7, [sp, #8]
 8020bfc:	ee37 7b46 	vsub.f64	d7, d7, d6
 8020c00:	e008      	b.n	8020c14 <rint+0xe4>
 8020c02:	2833      	cmp	r0, #51	; 0x33
 8020c04:	dd09      	ble.n	8020c1a <rint+0xea>
 8020c06:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8020c0a:	d1cd      	bne.n	8020ba8 <rint+0x78>
 8020c0c:	ed9d 7b00 	vldr	d7, [sp]
 8020c10:	ee37 7b07 	vadd.f64	d7, d7, d7
 8020c14:	ed8d 7b00 	vstr	d7, [sp]
 8020c18:	e7c6      	b.n	8020ba8 <rint+0x78>
 8020c1a:	f2a1 4013 	subw	r0, r1, #1043	; 0x413
 8020c1e:	f04f 31ff 	mov.w	r1, #4294967295
 8020c22:	40c1      	lsrs	r1, r0
 8020c24:	420a      	tst	r2, r1
 8020c26:	d0bf      	beq.n	8020ba8 <rint+0x78>
 8020c28:	0849      	lsrs	r1, r1, #1
 8020c2a:	420a      	tst	r2, r1
 8020c2c:	bf1f      	itttt	ne
 8020c2e:	ea22 0101 	bicne.w	r1, r2, r1
 8020c32:	f04f 4280 	movne.w	r2, #1073741824	; 0x40000000
 8020c36:	4102      	asrne	r2, r0
 8020c38:	430a      	orrne	r2, r1
 8020c3a:	e7d0      	b.n	8020bde <rint+0xae>
 8020c3c:	08025e80 	.word	0x08025e80
 8020c40:	000fffff 	.word	0x000fffff
 8020c44:	00000000 	.word	0x00000000

08020c48 <scalbn>:
 8020c48:	b500      	push	{lr}
 8020c4a:	ed2d 8b02 	vpush	{d8}
 8020c4e:	b083      	sub	sp, #12
 8020c50:	ed8d 0b00 	vstr	d0, [sp]
 8020c54:	9b01      	ldr	r3, [sp, #4]
 8020c56:	f3c3 520a 	ubfx	r2, r3, #20, #11
 8020c5a:	b9a2      	cbnz	r2, 8020c86 <scalbn+0x3e>
 8020c5c:	9a00      	ldr	r2, [sp, #0]
 8020c5e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8020c62:	4313      	orrs	r3, r2
 8020c64:	d03a      	beq.n	8020cdc <scalbn+0x94>
 8020c66:	ed9f 7b2e 	vldr	d7, [pc, #184]	; 8020d20 <scalbn+0xd8>
 8020c6a:	4b35      	ldr	r3, [pc, #212]	; (8020d40 <scalbn+0xf8>)
 8020c6c:	ee20 7b07 	vmul.f64	d7, d0, d7
 8020c70:	4298      	cmp	r0, r3
 8020c72:	ed8d 7b00 	vstr	d7, [sp]
 8020c76:	da11      	bge.n	8020c9c <scalbn+0x54>
 8020c78:	ed9f 7b2b 	vldr	d7, [pc, #172]	; 8020d28 <scalbn+0xe0>
 8020c7c:	ed9d 6b00 	vldr	d6, [sp]
 8020c80:	ee27 7b06 	vmul.f64	d7, d7, d6
 8020c84:	e007      	b.n	8020c96 <scalbn+0x4e>
 8020c86:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8020c8a:	428a      	cmp	r2, r1
 8020c8c:	d10a      	bne.n	8020ca4 <scalbn+0x5c>
 8020c8e:	ed9d 7b00 	vldr	d7, [sp]
 8020c92:	ee37 7b07 	vadd.f64	d7, d7, d7
 8020c96:	ed8d 7b00 	vstr	d7, [sp]
 8020c9a:	e01f      	b.n	8020cdc <scalbn+0x94>
 8020c9c:	9b01      	ldr	r3, [sp, #4]
 8020c9e:	f3c3 520a 	ubfx	r2, r3, #20, #11
 8020ca2:	3a36      	subs	r2, #54	; 0x36
 8020ca4:	4402      	add	r2, r0
 8020ca6:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8020caa:	428a      	cmp	r2, r1
 8020cac:	dd0a      	ble.n	8020cc4 <scalbn+0x7c>
 8020cae:	ed9f 8b20 	vldr	d8, [pc, #128]	; 8020d30 <scalbn+0xe8>
 8020cb2:	eeb0 0b48 	vmov.f64	d0, d8
 8020cb6:	ed9d 1b00 	vldr	d1, [sp]
 8020cba:	f000 f843 	bl	8020d44 <copysign>
 8020cbe:	ee20 7b08 	vmul.f64	d7, d0, d8
 8020cc2:	e7e8      	b.n	8020c96 <scalbn+0x4e>
 8020cc4:	2a00      	cmp	r2, #0
 8020cc6:	dd10      	ble.n	8020cea <scalbn+0xa2>
 8020cc8:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020ccc:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8020cd0:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8020cd4:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8020cd8:	e9cd 0100 	strd	r0, r1, [sp]
 8020cdc:	ed9d 0b00 	vldr	d0, [sp]
 8020ce0:	b003      	add	sp, #12
 8020ce2:	ecbd 8b02 	vpop	{d8}
 8020ce6:	f85d fb04 	ldr.w	pc, [sp], #4
 8020cea:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8020cee:	da06      	bge.n	8020cfe <scalbn+0xb6>
 8020cf0:	f24c 3350 	movw	r3, #50000	; 0xc350
 8020cf4:	4298      	cmp	r0, r3
 8020cf6:	dcda      	bgt.n	8020cae <scalbn+0x66>
 8020cf8:	ed9f 8b0b 	vldr	d8, [pc, #44]	; 8020d28 <scalbn+0xe0>
 8020cfc:	e7d9      	b.n	8020cb2 <scalbn+0x6a>
 8020cfe:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020d02:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8020d06:	3236      	adds	r2, #54	; 0x36
 8020d08:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8020d0c:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8020d10:	ec41 0b17 	vmov	d7, r0, r1
 8020d14:	ed9f 6b08 	vldr	d6, [pc, #32]	; 8020d38 <scalbn+0xf0>
 8020d18:	e7b2      	b.n	8020c80 <scalbn+0x38>
 8020d1a:	bf00      	nop
 8020d1c:	f3af 8000 	nop.w
 8020d20:	00000000 	.word	0x00000000
 8020d24:	43500000 	.word	0x43500000
 8020d28:	c2f8f359 	.word	0xc2f8f359
 8020d2c:	01a56e1f 	.word	0x01a56e1f
 8020d30:	8800759c 	.word	0x8800759c
 8020d34:	7e37e43c 	.word	0x7e37e43c
 8020d38:	00000000 	.word	0x00000000
 8020d3c:	3c900000 	.word	0x3c900000
 8020d40:	ffff3cb0 	.word	0xffff3cb0

08020d44 <copysign>:
 8020d44:	ec51 0b10 	vmov	r0, r1, d0
 8020d48:	ee11 0a90 	vmov	r0, s3
 8020d4c:	ee10 2a10 	vmov	r2, s0
 8020d50:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8020d54:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8020d58:	ea41 0300 	orr.w	r3, r1, r0
 8020d5c:	ec43 2b10 	vmov	d0, r2, r3
 8020d60:	4770      	bx	lr

08020d62 <abort>:
 8020d62:	b508      	push	{r3, lr}
 8020d64:	2006      	movs	r0, #6
 8020d66:	f000 fc55 	bl	8021614 <raise>
 8020d6a:	2001      	movs	r0, #1
 8020d6c:	f7e1 f83c 	bl	8001de8 <_exit>

08020d70 <__assert_func>:
 8020d70:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020d72:	461c      	mov	r4, r3
 8020d74:	4b09      	ldr	r3, [pc, #36]	; (8020d9c <__assert_func+0x2c>)
 8020d76:	681b      	ldr	r3, [r3, #0]
 8020d78:	4605      	mov	r5, r0
 8020d7a:	68d8      	ldr	r0, [r3, #12]
 8020d7c:	b152      	cbz	r2, 8020d94 <__assert_func+0x24>
 8020d7e:	4b08      	ldr	r3, [pc, #32]	; (8020da0 <__assert_func+0x30>)
 8020d80:	9100      	str	r1, [sp, #0]
 8020d82:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8020d86:	4907      	ldr	r1, [pc, #28]	; (8020da4 <__assert_func+0x34>)
 8020d88:	462b      	mov	r3, r5
 8020d8a:	4622      	mov	r2, r4
 8020d8c:	f000 f828 	bl	8020de0 <fiprintf>
 8020d90:	f7ff ffe7 	bl	8020d62 <abort>
 8020d94:	4b04      	ldr	r3, [pc, #16]	; (8020da8 <__assert_func+0x38>)
 8020d96:	461a      	mov	r2, r3
 8020d98:	e7f2      	b.n	8020d80 <__assert_func+0x10>
 8020d9a:	bf00      	nop
 8020d9c:	200000f0 	.word	0x200000f0
 8020da0:	08025e90 	.word	0x08025e90
 8020da4:	08025e9d 	.word	0x08025e9d
 8020da8:	08025ecb 	.word	0x08025ecb

08020dac <atexit>:
 8020dac:	2300      	movs	r3, #0
 8020dae:	4601      	mov	r1, r0
 8020db0:	461a      	mov	r2, r3
 8020db2:	4618      	mov	r0, r3
 8020db4:	f000 bd0a 	b.w	80217cc <__register_exitproc>

08020db8 <__cxa_atexit>:
 8020db8:	b510      	push	{r4, lr}
 8020dba:	4c05      	ldr	r4, [pc, #20]	; (8020dd0 <__cxa_atexit+0x18>)
 8020dbc:	4613      	mov	r3, r2
 8020dbe:	b12c      	cbz	r4, 8020dcc <__cxa_atexit+0x14>
 8020dc0:	460a      	mov	r2, r1
 8020dc2:	4601      	mov	r1, r0
 8020dc4:	2002      	movs	r0, #2
 8020dc6:	f000 fd01 	bl	80217cc <__register_exitproc>
 8020dca:	bd10      	pop	{r4, pc}
 8020dcc:	4620      	mov	r0, r4
 8020dce:	e7fc      	b.n	8020dca <__cxa_atexit+0x12>
 8020dd0:	080217cd 	.word	0x080217cd

08020dd4 <__errno>:
 8020dd4:	4b01      	ldr	r3, [pc, #4]	; (8020ddc <__errno+0x8>)
 8020dd6:	6818      	ldr	r0, [r3, #0]
 8020dd8:	4770      	bx	lr
 8020dda:	bf00      	nop
 8020ddc:	200000f0 	.word	0x200000f0

08020de0 <fiprintf>:
 8020de0:	b40e      	push	{r1, r2, r3}
 8020de2:	b503      	push	{r0, r1, lr}
 8020de4:	4601      	mov	r1, r0
 8020de6:	ab03      	add	r3, sp, #12
 8020de8:	4805      	ldr	r0, [pc, #20]	; (8020e00 <fiprintf+0x20>)
 8020dea:	f853 2b04 	ldr.w	r2, [r3], #4
 8020dee:	6800      	ldr	r0, [r0, #0]
 8020df0:	9301      	str	r3, [sp, #4]
 8020df2:	f000 f939 	bl	8021068 <_vfiprintf_r>
 8020df6:	b002      	add	sp, #8
 8020df8:	f85d eb04 	ldr.w	lr, [sp], #4
 8020dfc:	b003      	add	sp, #12
 8020dfe:	4770      	bx	lr
 8020e00:	200000f0 	.word	0x200000f0

08020e04 <__libc_init_array>:
 8020e04:	b570      	push	{r4, r5, r6, lr}
 8020e06:	4e0d      	ldr	r6, [pc, #52]	; (8020e3c <__libc_init_array+0x38>)
 8020e08:	4c0d      	ldr	r4, [pc, #52]	; (8020e40 <__libc_init_array+0x3c>)
 8020e0a:	1ba4      	subs	r4, r4, r6
 8020e0c:	10a4      	asrs	r4, r4, #2
 8020e0e:	2500      	movs	r5, #0
 8020e10:	42a5      	cmp	r5, r4
 8020e12:	d109      	bne.n	8020e28 <__libc_init_array+0x24>
 8020e14:	4e0b      	ldr	r6, [pc, #44]	; (8020e44 <__libc_init_array+0x40>)
 8020e16:	4c0c      	ldr	r4, [pc, #48]	; (8020e48 <__libc_init_array+0x44>)
 8020e18:	f000 ffc8 	bl	8021dac <_init>
 8020e1c:	1ba4      	subs	r4, r4, r6
 8020e1e:	10a4      	asrs	r4, r4, #2
 8020e20:	2500      	movs	r5, #0
 8020e22:	42a5      	cmp	r5, r4
 8020e24:	d105      	bne.n	8020e32 <__libc_init_array+0x2e>
 8020e26:	bd70      	pop	{r4, r5, r6, pc}
 8020e28:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8020e2c:	4798      	blx	r3
 8020e2e:	3501      	adds	r5, #1
 8020e30:	e7ee      	b.n	8020e10 <__libc_init_array+0xc>
 8020e32:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8020e36:	4798      	blx	r3
 8020e38:	3501      	adds	r5, #1
 8020e3a:	e7f2      	b.n	8020e22 <__libc_init_array+0x1e>
 8020e3c:	08025f7c 	.word	0x08025f7c
 8020e40:	08025f7c 	.word	0x08025f7c
 8020e44:	08025f7c 	.word	0x08025f7c
 8020e48:	08025f9c 	.word	0x08025f9c

08020e4c <malloc>:
 8020e4c:	4b02      	ldr	r3, [pc, #8]	; (8020e58 <malloc+0xc>)
 8020e4e:	4601      	mov	r1, r0
 8020e50:	6818      	ldr	r0, [r3, #0]
 8020e52:	f000 b885 	b.w	8020f60 <_malloc_r>
 8020e56:	bf00      	nop
 8020e58:	200000f0 	.word	0x200000f0

08020e5c <free>:
 8020e5c:	4b02      	ldr	r3, [pc, #8]	; (8020e68 <free+0xc>)
 8020e5e:	4601      	mov	r1, r0
 8020e60:	6818      	ldr	r0, [r3, #0]
 8020e62:	f000 b82f 	b.w	8020ec4 <_free_r>
 8020e66:	bf00      	nop
 8020e68:	200000f0 	.word	0x200000f0

08020e6c <memcpy>:
 8020e6c:	b510      	push	{r4, lr}
 8020e6e:	1e43      	subs	r3, r0, #1
 8020e70:	440a      	add	r2, r1
 8020e72:	4291      	cmp	r1, r2
 8020e74:	d100      	bne.n	8020e78 <memcpy+0xc>
 8020e76:	bd10      	pop	{r4, pc}
 8020e78:	f811 4b01 	ldrb.w	r4, [r1], #1
 8020e7c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8020e80:	e7f7      	b.n	8020e72 <memcpy+0x6>

08020e82 <memmove>:
 8020e82:	4288      	cmp	r0, r1
 8020e84:	b510      	push	{r4, lr}
 8020e86:	eb01 0302 	add.w	r3, r1, r2
 8020e8a:	d807      	bhi.n	8020e9c <memmove+0x1a>
 8020e8c:	1e42      	subs	r2, r0, #1
 8020e8e:	4299      	cmp	r1, r3
 8020e90:	d00a      	beq.n	8020ea8 <memmove+0x26>
 8020e92:	f811 4b01 	ldrb.w	r4, [r1], #1
 8020e96:	f802 4f01 	strb.w	r4, [r2, #1]!
 8020e9a:	e7f8      	b.n	8020e8e <memmove+0xc>
 8020e9c:	4283      	cmp	r3, r0
 8020e9e:	d9f5      	bls.n	8020e8c <memmove+0xa>
 8020ea0:	1881      	adds	r1, r0, r2
 8020ea2:	1ad2      	subs	r2, r2, r3
 8020ea4:	42d3      	cmn	r3, r2
 8020ea6:	d100      	bne.n	8020eaa <memmove+0x28>
 8020ea8:	bd10      	pop	{r4, pc}
 8020eaa:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8020eae:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8020eb2:	e7f7      	b.n	8020ea4 <memmove+0x22>

08020eb4 <memset>:
 8020eb4:	4402      	add	r2, r0
 8020eb6:	4603      	mov	r3, r0
 8020eb8:	4293      	cmp	r3, r2
 8020eba:	d100      	bne.n	8020ebe <memset+0xa>
 8020ebc:	4770      	bx	lr
 8020ebe:	f803 1b01 	strb.w	r1, [r3], #1
 8020ec2:	e7f9      	b.n	8020eb8 <memset+0x4>

08020ec4 <_free_r>:
 8020ec4:	b538      	push	{r3, r4, r5, lr}
 8020ec6:	4605      	mov	r5, r0
 8020ec8:	2900      	cmp	r1, #0
 8020eca:	d045      	beq.n	8020f58 <_free_r+0x94>
 8020ecc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020ed0:	1f0c      	subs	r4, r1, #4
 8020ed2:	2b00      	cmp	r3, #0
 8020ed4:	bfb8      	it	lt
 8020ed6:	18e4      	addlt	r4, r4, r3
 8020ed8:	f000 feba 	bl	8021c50 <__malloc_lock>
 8020edc:	4a1f      	ldr	r2, [pc, #124]	; (8020f5c <_free_r+0x98>)
 8020ede:	6813      	ldr	r3, [r2, #0]
 8020ee0:	4610      	mov	r0, r2
 8020ee2:	b933      	cbnz	r3, 8020ef2 <_free_r+0x2e>
 8020ee4:	6063      	str	r3, [r4, #4]
 8020ee6:	6014      	str	r4, [r2, #0]
 8020ee8:	4628      	mov	r0, r5
 8020eea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020eee:	f000 beb0 	b.w	8021c52 <__malloc_unlock>
 8020ef2:	42a3      	cmp	r3, r4
 8020ef4:	d90c      	bls.n	8020f10 <_free_r+0x4c>
 8020ef6:	6821      	ldr	r1, [r4, #0]
 8020ef8:	1862      	adds	r2, r4, r1
 8020efa:	4293      	cmp	r3, r2
 8020efc:	bf04      	itt	eq
 8020efe:	681a      	ldreq	r2, [r3, #0]
 8020f00:	685b      	ldreq	r3, [r3, #4]
 8020f02:	6063      	str	r3, [r4, #4]
 8020f04:	bf04      	itt	eq
 8020f06:	1852      	addeq	r2, r2, r1
 8020f08:	6022      	streq	r2, [r4, #0]
 8020f0a:	6004      	str	r4, [r0, #0]
 8020f0c:	e7ec      	b.n	8020ee8 <_free_r+0x24>
 8020f0e:	4613      	mov	r3, r2
 8020f10:	685a      	ldr	r2, [r3, #4]
 8020f12:	b10a      	cbz	r2, 8020f18 <_free_r+0x54>
 8020f14:	42a2      	cmp	r2, r4
 8020f16:	d9fa      	bls.n	8020f0e <_free_r+0x4a>
 8020f18:	6819      	ldr	r1, [r3, #0]
 8020f1a:	1858      	adds	r0, r3, r1
 8020f1c:	42a0      	cmp	r0, r4
 8020f1e:	d10b      	bne.n	8020f38 <_free_r+0x74>
 8020f20:	6820      	ldr	r0, [r4, #0]
 8020f22:	4401      	add	r1, r0
 8020f24:	1858      	adds	r0, r3, r1
 8020f26:	4282      	cmp	r2, r0
 8020f28:	6019      	str	r1, [r3, #0]
 8020f2a:	d1dd      	bne.n	8020ee8 <_free_r+0x24>
 8020f2c:	6810      	ldr	r0, [r2, #0]
 8020f2e:	6852      	ldr	r2, [r2, #4]
 8020f30:	605a      	str	r2, [r3, #4]
 8020f32:	4401      	add	r1, r0
 8020f34:	6019      	str	r1, [r3, #0]
 8020f36:	e7d7      	b.n	8020ee8 <_free_r+0x24>
 8020f38:	d902      	bls.n	8020f40 <_free_r+0x7c>
 8020f3a:	230c      	movs	r3, #12
 8020f3c:	602b      	str	r3, [r5, #0]
 8020f3e:	e7d3      	b.n	8020ee8 <_free_r+0x24>
 8020f40:	6820      	ldr	r0, [r4, #0]
 8020f42:	1821      	adds	r1, r4, r0
 8020f44:	428a      	cmp	r2, r1
 8020f46:	bf04      	itt	eq
 8020f48:	6811      	ldreq	r1, [r2, #0]
 8020f4a:	6852      	ldreq	r2, [r2, #4]
 8020f4c:	6062      	str	r2, [r4, #4]
 8020f4e:	bf04      	itt	eq
 8020f50:	1809      	addeq	r1, r1, r0
 8020f52:	6021      	streq	r1, [r4, #0]
 8020f54:	605c      	str	r4, [r3, #4]
 8020f56:	e7c7      	b.n	8020ee8 <_free_r+0x24>
 8020f58:	bd38      	pop	{r3, r4, r5, pc}
 8020f5a:	bf00      	nop
 8020f5c:	200126b0 	.word	0x200126b0

08020f60 <_malloc_r>:
 8020f60:	b570      	push	{r4, r5, r6, lr}
 8020f62:	1ccd      	adds	r5, r1, #3
 8020f64:	f025 0503 	bic.w	r5, r5, #3
 8020f68:	3508      	adds	r5, #8
 8020f6a:	2d0c      	cmp	r5, #12
 8020f6c:	bf38      	it	cc
 8020f6e:	250c      	movcc	r5, #12
 8020f70:	2d00      	cmp	r5, #0
 8020f72:	4606      	mov	r6, r0
 8020f74:	db01      	blt.n	8020f7a <_malloc_r+0x1a>
 8020f76:	42a9      	cmp	r1, r5
 8020f78:	d903      	bls.n	8020f82 <_malloc_r+0x22>
 8020f7a:	230c      	movs	r3, #12
 8020f7c:	6033      	str	r3, [r6, #0]
 8020f7e:	2000      	movs	r0, #0
 8020f80:	bd70      	pop	{r4, r5, r6, pc}
 8020f82:	f000 fe65 	bl	8021c50 <__malloc_lock>
 8020f86:	4a21      	ldr	r2, [pc, #132]	; (802100c <_malloc_r+0xac>)
 8020f88:	6814      	ldr	r4, [r2, #0]
 8020f8a:	4621      	mov	r1, r4
 8020f8c:	b991      	cbnz	r1, 8020fb4 <_malloc_r+0x54>
 8020f8e:	4c20      	ldr	r4, [pc, #128]	; (8021010 <_malloc_r+0xb0>)
 8020f90:	6823      	ldr	r3, [r4, #0]
 8020f92:	b91b      	cbnz	r3, 8020f9c <_malloc_r+0x3c>
 8020f94:	4630      	mov	r0, r6
 8020f96:	f000 fb05 	bl	80215a4 <_sbrk_r>
 8020f9a:	6020      	str	r0, [r4, #0]
 8020f9c:	4629      	mov	r1, r5
 8020f9e:	4630      	mov	r0, r6
 8020fa0:	f000 fb00 	bl	80215a4 <_sbrk_r>
 8020fa4:	1c43      	adds	r3, r0, #1
 8020fa6:	d124      	bne.n	8020ff2 <_malloc_r+0x92>
 8020fa8:	230c      	movs	r3, #12
 8020faa:	6033      	str	r3, [r6, #0]
 8020fac:	4630      	mov	r0, r6
 8020fae:	f000 fe50 	bl	8021c52 <__malloc_unlock>
 8020fb2:	e7e4      	b.n	8020f7e <_malloc_r+0x1e>
 8020fb4:	680b      	ldr	r3, [r1, #0]
 8020fb6:	1b5b      	subs	r3, r3, r5
 8020fb8:	d418      	bmi.n	8020fec <_malloc_r+0x8c>
 8020fba:	2b0b      	cmp	r3, #11
 8020fbc:	d90f      	bls.n	8020fde <_malloc_r+0x7e>
 8020fbe:	600b      	str	r3, [r1, #0]
 8020fc0:	50cd      	str	r5, [r1, r3]
 8020fc2:	18cc      	adds	r4, r1, r3
 8020fc4:	4630      	mov	r0, r6
 8020fc6:	f000 fe44 	bl	8021c52 <__malloc_unlock>
 8020fca:	f104 000b 	add.w	r0, r4, #11
 8020fce:	1d23      	adds	r3, r4, #4
 8020fd0:	f020 0007 	bic.w	r0, r0, #7
 8020fd4:	1ac3      	subs	r3, r0, r3
 8020fd6:	d0d3      	beq.n	8020f80 <_malloc_r+0x20>
 8020fd8:	425a      	negs	r2, r3
 8020fda:	50e2      	str	r2, [r4, r3]
 8020fdc:	e7d0      	b.n	8020f80 <_malloc_r+0x20>
 8020fde:	428c      	cmp	r4, r1
 8020fe0:	684b      	ldr	r3, [r1, #4]
 8020fe2:	bf16      	itet	ne
 8020fe4:	6063      	strne	r3, [r4, #4]
 8020fe6:	6013      	streq	r3, [r2, #0]
 8020fe8:	460c      	movne	r4, r1
 8020fea:	e7eb      	b.n	8020fc4 <_malloc_r+0x64>
 8020fec:	460c      	mov	r4, r1
 8020fee:	6849      	ldr	r1, [r1, #4]
 8020ff0:	e7cc      	b.n	8020f8c <_malloc_r+0x2c>
 8020ff2:	1cc4      	adds	r4, r0, #3
 8020ff4:	f024 0403 	bic.w	r4, r4, #3
 8020ff8:	42a0      	cmp	r0, r4
 8020ffa:	d005      	beq.n	8021008 <_malloc_r+0xa8>
 8020ffc:	1a21      	subs	r1, r4, r0
 8020ffe:	4630      	mov	r0, r6
 8021000:	f000 fad0 	bl	80215a4 <_sbrk_r>
 8021004:	3001      	adds	r0, #1
 8021006:	d0cf      	beq.n	8020fa8 <_malloc_r+0x48>
 8021008:	6025      	str	r5, [r4, #0]
 802100a:	e7db      	b.n	8020fc4 <_malloc_r+0x64>
 802100c:	200126b0 	.word	0x200126b0
 8021010:	200126b4 	.word	0x200126b4

08021014 <__sfputc_r>:
 8021014:	6893      	ldr	r3, [r2, #8]
 8021016:	3b01      	subs	r3, #1
 8021018:	2b00      	cmp	r3, #0
 802101a:	b410      	push	{r4}
 802101c:	6093      	str	r3, [r2, #8]
 802101e:	da08      	bge.n	8021032 <__sfputc_r+0x1e>
 8021020:	6994      	ldr	r4, [r2, #24]
 8021022:	42a3      	cmp	r3, r4
 8021024:	db01      	blt.n	802102a <__sfputc_r+0x16>
 8021026:	290a      	cmp	r1, #10
 8021028:	d103      	bne.n	8021032 <__sfputc_r+0x1e>
 802102a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802102e:	f000 bb0d 	b.w	802164c <__swbuf_r>
 8021032:	6813      	ldr	r3, [r2, #0]
 8021034:	1c58      	adds	r0, r3, #1
 8021036:	6010      	str	r0, [r2, #0]
 8021038:	7019      	strb	r1, [r3, #0]
 802103a:	4608      	mov	r0, r1
 802103c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021040:	4770      	bx	lr

08021042 <__sfputs_r>:
 8021042:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021044:	4606      	mov	r6, r0
 8021046:	460f      	mov	r7, r1
 8021048:	4614      	mov	r4, r2
 802104a:	18d5      	adds	r5, r2, r3
 802104c:	42ac      	cmp	r4, r5
 802104e:	d101      	bne.n	8021054 <__sfputs_r+0x12>
 8021050:	2000      	movs	r0, #0
 8021052:	e007      	b.n	8021064 <__sfputs_r+0x22>
 8021054:	463a      	mov	r2, r7
 8021056:	f814 1b01 	ldrb.w	r1, [r4], #1
 802105a:	4630      	mov	r0, r6
 802105c:	f7ff ffda 	bl	8021014 <__sfputc_r>
 8021060:	1c43      	adds	r3, r0, #1
 8021062:	d1f3      	bne.n	802104c <__sfputs_r+0xa>
 8021064:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08021068 <_vfiprintf_r>:
 8021068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802106c:	460c      	mov	r4, r1
 802106e:	b09d      	sub	sp, #116	; 0x74
 8021070:	4617      	mov	r7, r2
 8021072:	461d      	mov	r5, r3
 8021074:	4606      	mov	r6, r0
 8021076:	b118      	cbz	r0, 8021080 <_vfiprintf_r+0x18>
 8021078:	6983      	ldr	r3, [r0, #24]
 802107a:	b90b      	cbnz	r3, 8021080 <_vfiprintf_r+0x18>
 802107c:	f000 fcfa 	bl	8021a74 <__sinit>
 8021080:	4b7c      	ldr	r3, [pc, #496]	; (8021274 <_vfiprintf_r+0x20c>)
 8021082:	429c      	cmp	r4, r3
 8021084:	d158      	bne.n	8021138 <_vfiprintf_r+0xd0>
 8021086:	6874      	ldr	r4, [r6, #4]
 8021088:	89a3      	ldrh	r3, [r4, #12]
 802108a:	0718      	lsls	r0, r3, #28
 802108c:	d55e      	bpl.n	802114c <_vfiprintf_r+0xe4>
 802108e:	6923      	ldr	r3, [r4, #16]
 8021090:	2b00      	cmp	r3, #0
 8021092:	d05b      	beq.n	802114c <_vfiprintf_r+0xe4>
 8021094:	2300      	movs	r3, #0
 8021096:	9309      	str	r3, [sp, #36]	; 0x24
 8021098:	2320      	movs	r3, #32
 802109a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802109e:	2330      	movs	r3, #48	; 0x30
 80210a0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80210a4:	9503      	str	r5, [sp, #12]
 80210a6:	f04f 0b01 	mov.w	fp, #1
 80210aa:	46b8      	mov	r8, r7
 80210ac:	4645      	mov	r5, r8
 80210ae:	f815 3b01 	ldrb.w	r3, [r5], #1
 80210b2:	b10b      	cbz	r3, 80210b8 <_vfiprintf_r+0x50>
 80210b4:	2b25      	cmp	r3, #37	; 0x25
 80210b6:	d154      	bne.n	8021162 <_vfiprintf_r+0xfa>
 80210b8:	ebb8 0a07 	subs.w	sl, r8, r7
 80210bc:	d00b      	beq.n	80210d6 <_vfiprintf_r+0x6e>
 80210be:	4653      	mov	r3, sl
 80210c0:	463a      	mov	r2, r7
 80210c2:	4621      	mov	r1, r4
 80210c4:	4630      	mov	r0, r6
 80210c6:	f7ff ffbc 	bl	8021042 <__sfputs_r>
 80210ca:	3001      	adds	r0, #1
 80210cc:	f000 80c2 	beq.w	8021254 <_vfiprintf_r+0x1ec>
 80210d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80210d2:	4453      	add	r3, sl
 80210d4:	9309      	str	r3, [sp, #36]	; 0x24
 80210d6:	f898 3000 	ldrb.w	r3, [r8]
 80210da:	2b00      	cmp	r3, #0
 80210dc:	f000 80ba 	beq.w	8021254 <_vfiprintf_r+0x1ec>
 80210e0:	2300      	movs	r3, #0
 80210e2:	f04f 32ff 	mov.w	r2, #4294967295
 80210e6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80210ea:	9304      	str	r3, [sp, #16]
 80210ec:	9307      	str	r3, [sp, #28]
 80210ee:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80210f2:	931a      	str	r3, [sp, #104]	; 0x68
 80210f4:	46a8      	mov	r8, r5
 80210f6:	2205      	movs	r2, #5
 80210f8:	f818 1b01 	ldrb.w	r1, [r8], #1
 80210fc:	485e      	ldr	r0, [pc, #376]	; (8021278 <_vfiprintf_r+0x210>)
 80210fe:	f7df f89f 	bl	8000240 <memchr>
 8021102:	9b04      	ldr	r3, [sp, #16]
 8021104:	bb78      	cbnz	r0, 8021166 <_vfiprintf_r+0xfe>
 8021106:	06d9      	lsls	r1, r3, #27
 8021108:	bf44      	itt	mi
 802110a:	2220      	movmi	r2, #32
 802110c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8021110:	071a      	lsls	r2, r3, #28
 8021112:	bf44      	itt	mi
 8021114:	222b      	movmi	r2, #43	; 0x2b
 8021116:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 802111a:	782a      	ldrb	r2, [r5, #0]
 802111c:	2a2a      	cmp	r2, #42	; 0x2a
 802111e:	d02a      	beq.n	8021176 <_vfiprintf_r+0x10e>
 8021120:	9a07      	ldr	r2, [sp, #28]
 8021122:	46a8      	mov	r8, r5
 8021124:	2000      	movs	r0, #0
 8021126:	250a      	movs	r5, #10
 8021128:	4641      	mov	r1, r8
 802112a:	f811 3b01 	ldrb.w	r3, [r1], #1
 802112e:	3b30      	subs	r3, #48	; 0x30
 8021130:	2b09      	cmp	r3, #9
 8021132:	d969      	bls.n	8021208 <_vfiprintf_r+0x1a0>
 8021134:	b360      	cbz	r0, 8021190 <_vfiprintf_r+0x128>
 8021136:	e024      	b.n	8021182 <_vfiprintf_r+0x11a>
 8021138:	4b50      	ldr	r3, [pc, #320]	; (802127c <_vfiprintf_r+0x214>)
 802113a:	429c      	cmp	r4, r3
 802113c:	d101      	bne.n	8021142 <_vfiprintf_r+0xda>
 802113e:	68b4      	ldr	r4, [r6, #8]
 8021140:	e7a2      	b.n	8021088 <_vfiprintf_r+0x20>
 8021142:	4b4f      	ldr	r3, [pc, #316]	; (8021280 <_vfiprintf_r+0x218>)
 8021144:	429c      	cmp	r4, r3
 8021146:	bf08      	it	eq
 8021148:	68f4      	ldreq	r4, [r6, #12]
 802114a:	e79d      	b.n	8021088 <_vfiprintf_r+0x20>
 802114c:	4621      	mov	r1, r4
 802114e:	4630      	mov	r0, r6
 8021150:	f000 face 	bl	80216f0 <__swsetup_r>
 8021154:	2800      	cmp	r0, #0
 8021156:	d09d      	beq.n	8021094 <_vfiprintf_r+0x2c>
 8021158:	f04f 30ff 	mov.w	r0, #4294967295
 802115c:	b01d      	add	sp, #116	; 0x74
 802115e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021162:	46a8      	mov	r8, r5
 8021164:	e7a2      	b.n	80210ac <_vfiprintf_r+0x44>
 8021166:	4a44      	ldr	r2, [pc, #272]	; (8021278 <_vfiprintf_r+0x210>)
 8021168:	1a80      	subs	r0, r0, r2
 802116a:	fa0b f000 	lsl.w	r0, fp, r0
 802116e:	4318      	orrs	r0, r3
 8021170:	9004      	str	r0, [sp, #16]
 8021172:	4645      	mov	r5, r8
 8021174:	e7be      	b.n	80210f4 <_vfiprintf_r+0x8c>
 8021176:	9a03      	ldr	r2, [sp, #12]
 8021178:	1d11      	adds	r1, r2, #4
 802117a:	6812      	ldr	r2, [r2, #0]
 802117c:	9103      	str	r1, [sp, #12]
 802117e:	2a00      	cmp	r2, #0
 8021180:	db01      	blt.n	8021186 <_vfiprintf_r+0x11e>
 8021182:	9207      	str	r2, [sp, #28]
 8021184:	e004      	b.n	8021190 <_vfiprintf_r+0x128>
 8021186:	4252      	negs	r2, r2
 8021188:	f043 0302 	orr.w	r3, r3, #2
 802118c:	9207      	str	r2, [sp, #28]
 802118e:	9304      	str	r3, [sp, #16]
 8021190:	f898 3000 	ldrb.w	r3, [r8]
 8021194:	2b2e      	cmp	r3, #46	; 0x2e
 8021196:	d10e      	bne.n	80211b6 <_vfiprintf_r+0x14e>
 8021198:	f898 3001 	ldrb.w	r3, [r8, #1]
 802119c:	2b2a      	cmp	r3, #42	; 0x2a
 802119e:	d138      	bne.n	8021212 <_vfiprintf_r+0x1aa>
 80211a0:	9b03      	ldr	r3, [sp, #12]
 80211a2:	1d1a      	adds	r2, r3, #4
 80211a4:	681b      	ldr	r3, [r3, #0]
 80211a6:	9203      	str	r2, [sp, #12]
 80211a8:	2b00      	cmp	r3, #0
 80211aa:	bfb8      	it	lt
 80211ac:	f04f 33ff 	movlt.w	r3, #4294967295
 80211b0:	f108 0802 	add.w	r8, r8, #2
 80211b4:	9305      	str	r3, [sp, #20]
 80211b6:	4d33      	ldr	r5, [pc, #204]	; (8021284 <_vfiprintf_r+0x21c>)
 80211b8:	f898 1000 	ldrb.w	r1, [r8]
 80211bc:	2203      	movs	r2, #3
 80211be:	4628      	mov	r0, r5
 80211c0:	f7df f83e 	bl	8000240 <memchr>
 80211c4:	b140      	cbz	r0, 80211d8 <_vfiprintf_r+0x170>
 80211c6:	2340      	movs	r3, #64	; 0x40
 80211c8:	1b40      	subs	r0, r0, r5
 80211ca:	fa03 f000 	lsl.w	r0, r3, r0
 80211ce:	9b04      	ldr	r3, [sp, #16]
 80211d0:	4303      	orrs	r3, r0
 80211d2:	f108 0801 	add.w	r8, r8, #1
 80211d6:	9304      	str	r3, [sp, #16]
 80211d8:	f898 1000 	ldrb.w	r1, [r8]
 80211dc:	482a      	ldr	r0, [pc, #168]	; (8021288 <_vfiprintf_r+0x220>)
 80211de:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80211e2:	2206      	movs	r2, #6
 80211e4:	f108 0701 	add.w	r7, r8, #1
 80211e8:	f7df f82a 	bl	8000240 <memchr>
 80211ec:	2800      	cmp	r0, #0
 80211ee:	d037      	beq.n	8021260 <_vfiprintf_r+0x1f8>
 80211f0:	4b26      	ldr	r3, [pc, #152]	; (802128c <_vfiprintf_r+0x224>)
 80211f2:	bb1b      	cbnz	r3, 802123c <_vfiprintf_r+0x1d4>
 80211f4:	9b03      	ldr	r3, [sp, #12]
 80211f6:	3307      	adds	r3, #7
 80211f8:	f023 0307 	bic.w	r3, r3, #7
 80211fc:	3308      	adds	r3, #8
 80211fe:	9303      	str	r3, [sp, #12]
 8021200:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021202:	444b      	add	r3, r9
 8021204:	9309      	str	r3, [sp, #36]	; 0x24
 8021206:	e750      	b.n	80210aa <_vfiprintf_r+0x42>
 8021208:	fb05 3202 	mla	r2, r5, r2, r3
 802120c:	2001      	movs	r0, #1
 802120e:	4688      	mov	r8, r1
 8021210:	e78a      	b.n	8021128 <_vfiprintf_r+0xc0>
 8021212:	2300      	movs	r3, #0
 8021214:	f108 0801 	add.w	r8, r8, #1
 8021218:	9305      	str	r3, [sp, #20]
 802121a:	4619      	mov	r1, r3
 802121c:	250a      	movs	r5, #10
 802121e:	4640      	mov	r0, r8
 8021220:	f810 2b01 	ldrb.w	r2, [r0], #1
 8021224:	3a30      	subs	r2, #48	; 0x30
 8021226:	2a09      	cmp	r2, #9
 8021228:	d903      	bls.n	8021232 <_vfiprintf_r+0x1ca>
 802122a:	2b00      	cmp	r3, #0
 802122c:	d0c3      	beq.n	80211b6 <_vfiprintf_r+0x14e>
 802122e:	9105      	str	r1, [sp, #20]
 8021230:	e7c1      	b.n	80211b6 <_vfiprintf_r+0x14e>
 8021232:	fb05 2101 	mla	r1, r5, r1, r2
 8021236:	2301      	movs	r3, #1
 8021238:	4680      	mov	r8, r0
 802123a:	e7f0      	b.n	802121e <_vfiprintf_r+0x1b6>
 802123c:	ab03      	add	r3, sp, #12
 802123e:	9300      	str	r3, [sp, #0]
 8021240:	4622      	mov	r2, r4
 8021242:	4b13      	ldr	r3, [pc, #76]	; (8021290 <_vfiprintf_r+0x228>)
 8021244:	a904      	add	r1, sp, #16
 8021246:	4630      	mov	r0, r6
 8021248:	f3af 8000 	nop.w
 802124c:	f1b0 3fff 	cmp.w	r0, #4294967295
 8021250:	4681      	mov	r9, r0
 8021252:	d1d5      	bne.n	8021200 <_vfiprintf_r+0x198>
 8021254:	89a3      	ldrh	r3, [r4, #12]
 8021256:	065b      	lsls	r3, r3, #25
 8021258:	f53f af7e 	bmi.w	8021158 <_vfiprintf_r+0xf0>
 802125c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802125e:	e77d      	b.n	802115c <_vfiprintf_r+0xf4>
 8021260:	ab03      	add	r3, sp, #12
 8021262:	9300      	str	r3, [sp, #0]
 8021264:	4622      	mov	r2, r4
 8021266:	4b0a      	ldr	r3, [pc, #40]	; (8021290 <_vfiprintf_r+0x228>)
 8021268:	a904      	add	r1, sp, #16
 802126a:	4630      	mov	r0, r6
 802126c:	f000 f888 	bl	8021380 <_printf_i>
 8021270:	e7ec      	b.n	802124c <_vfiprintf_r+0x1e4>
 8021272:	bf00      	nop
 8021274:	08025f28 	.word	0x08025f28
 8021278:	08025ed0 	.word	0x08025ed0
 802127c:	08025f48 	.word	0x08025f48
 8021280:	08025f08 	.word	0x08025f08
 8021284:	08025ed6 	.word	0x08025ed6
 8021288:	08025eda 	.word	0x08025eda
 802128c:	00000000 	.word	0x00000000
 8021290:	08021043 	.word	0x08021043

08021294 <_printf_common>:
 8021294:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021298:	4691      	mov	r9, r2
 802129a:	461f      	mov	r7, r3
 802129c:	688a      	ldr	r2, [r1, #8]
 802129e:	690b      	ldr	r3, [r1, #16]
 80212a0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80212a4:	4293      	cmp	r3, r2
 80212a6:	bfb8      	it	lt
 80212a8:	4613      	movlt	r3, r2
 80212aa:	f8c9 3000 	str.w	r3, [r9]
 80212ae:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80212b2:	4606      	mov	r6, r0
 80212b4:	460c      	mov	r4, r1
 80212b6:	b112      	cbz	r2, 80212be <_printf_common+0x2a>
 80212b8:	3301      	adds	r3, #1
 80212ba:	f8c9 3000 	str.w	r3, [r9]
 80212be:	6823      	ldr	r3, [r4, #0]
 80212c0:	0699      	lsls	r1, r3, #26
 80212c2:	bf42      	ittt	mi
 80212c4:	f8d9 3000 	ldrmi.w	r3, [r9]
 80212c8:	3302      	addmi	r3, #2
 80212ca:	f8c9 3000 	strmi.w	r3, [r9]
 80212ce:	6825      	ldr	r5, [r4, #0]
 80212d0:	f015 0506 	ands.w	r5, r5, #6
 80212d4:	d107      	bne.n	80212e6 <_printf_common+0x52>
 80212d6:	f104 0a19 	add.w	sl, r4, #25
 80212da:	68e3      	ldr	r3, [r4, #12]
 80212dc:	f8d9 2000 	ldr.w	r2, [r9]
 80212e0:	1a9b      	subs	r3, r3, r2
 80212e2:	42ab      	cmp	r3, r5
 80212e4:	dc28      	bgt.n	8021338 <_printf_common+0xa4>
 80212e6:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80212ea:	6822      	ldr	r2, [r4, #0]
 80212ec:	3300      	adds	r3, #0
 80212ee:	bf18      	it	ne
 80212f0:	2301      	movne	r3, #1
 80212f2:	0692      	lsls	r2, r2, #26
 80212f4:	d42d      	bmi.n	8021352 <_printf_common+0xbe>
 80212f6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80212fa:	4639      	mov	r1, r7
 80212fc:	4630      	mov	r0, r6
 80212fe:	47c0      	blx	r8
 8021300:	3001      	adds	r0, #1
 8021302:	d020      	beq.n	8021346 <_printf_common+0xb2>
 8021304:	6823      	ldr	r3, [r4, #0]
 8021306:	68e5      	ldr	r5, [r4, #12]
 8021308:	f8d9 2000 	ldr.w	r2, [r9]
 802130c:	f003 0306 	and.w	r3, r3, #6
 8021310:	2b04      	cmp	r3, #4
 8021312:	bf08      	it	eq
 8021314:	1aad      	subeq	r5, r5, r2
 8021316:	68a3      	ldr	r3, [r4, #8]
 8021318:	6922      	ldr	r2, [r4, #16]
 802131a:	bf0c      	ite	eq
 802131c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8021320:	2500      	movne	r5, #0
 8021322:	4293      	cmp	r3, r2
 8021324:	bfc4      	itt	gt
 8021326:	1a9b      	subgt	r3, r3, r2
 8021328:	18ed      	addgt	r5, r5, r3
 802132a:	f04f 0900 	mov.w	r9, #0
 802132e:	341a      	adds	r4, #26
 8021330:	454d      	cmp	r5, r9
 8021332:	d11a      	bne.n	802136a <_printf_common+0xd6>
 8021334:	2000      	movs	r0, #0
 8021336:	e008      	b.n	802134a <_printf_common+0xb6>
 8021338:	2301      	movs	r3, #1
 802133a:	4652      	mov	r2, sl
 802133c:	4639      	mov	r1, r7
 802133e:	4630      	mov	r0, r6
 8021340:	47c0      	blx	r8
 8021342:	3001      	adds	r0, #1
 8021344:	d103      	bne.n	802134e <_printf_common+0xba>
 8021346:	f04f 30ff 	mov.w	r0, #4294967295
 802134a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802134e:	3501      	adds	r5, #1
 8021350:	e7c3      	b.n	80212da <_printf_common+0x46>
 8021352:	18e1      	adds	r1, r4, r3
 8021354:	1c5a      	adds	r2, r3, #1
 8021356:	2030      	movs	r0, #48	; 0x30
 8021358:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802135c:	4422      	add	r2, r4
 802135e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8021362:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8021366:	3302      	adds	r3, #2
 8021368:	e7c5      	b.n	80212f6 <_printf_common+0x62>
 802136a:	2301      	movs	r3, #1
 802136c:	4622      	mov	r2, r4
 802136e:	4639      	mov	r1, r7
 8021370:	4630      	mov	r0, r6
 8021372:	47c0      	blx	r8
 8021374:	3001      	adds	r0, #1
 8021376:	d0e6      	beq.n	8021346 <_printf_common+0xb2>
 8021378:	f109 0901 	add.w	r9, r9, #1
 802137c:	e7d8      	b.n	8021330 <_printf_common+0x9c>
	...

08021380 <_printf_i>:
 8021380:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8021384:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8021388:	460c      	mov	r4, r1
 802138a:	7e09      	ldrb	r1, [r1, #24]
 802138c:	b085      	sub	sp, #20
 802138e:	296e      	cmp	r1, #110	; 0x6e
 8021390:	4617      	mov	r7, r2
 8021392:	4606      	mov	r6, r0
 8021394:	4698      	mov	r8, r3
 8021396:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021398:	f000 80b3 	beq.w	8021502 <_printf_i+0x182>
 802139c:	d822      	bhi.n	80213e4 <_printf_i+0x64>
 802139e:	2963      	cmp	r1, #99	; 0x63
 80213a0:	d036      	beq.n	8021410 <_printf_i+0x90>
 80213a2:	d80a      	bhi.n	80213ba <_printf_i+0x3a>
 80213a4:	2900      	cmp	r1, #0
 80213a6:	f000 80b9 	beq.w	802151c <_printf_i+0x19c>
 80213aa:	2958      	cmp	r1, #88	; 0x58
 80213ac:	f000 8083 	beq.w	80214b6 <_printf_i+0x136>
 80213b0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80213b4:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 80213b8:	e032      	b.n	8021420 <_printf_i+0xa0>
 80213ba:	2964      	cmp	r1, #100	; 0x64
 80213bc:	d001      	beq.n	80213c2 <_printf_i+0x42>
 80213be:	2969      	cmp	r1, #105	; 0x69
 80213c0:	d1f6      	bne.n	80213b0 <_printf_i+0x30>
 80213c2:	6820      	ldr	r0, [r4, #0]
 80213c4:	6813      	ldr	r3, [r2, #0]
 80213c6:	0605      	lsls	r5, r0, #24
 80213c8:	f103 0104 	add.w	r1, r3, #4
 80213cc:	d52a      	bpl.n	8021424 <_printf_i+0xa4>
 80213ce:	681b      	ldr	r3, [r3, #0]
 80213d0:	6011      	str	r1, [r2, #0]
 80213d2:	2b00      	cmp	r3, #0
 80213d4:	da03      	bge.n	80213de <_printf_i+0x5e>
 80213d6:	222d      	movs	r2, #45	; 0x2d
 80213d8:	425b      	negs	r3, r3
 80213da:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80213de:	486f      	ldr	r0, [pc, #444]	; (802159c <_printf_i+0x21c>)
 80213e0:	220a      	movs	r2, #10
 80213e2:	e039      	b.n	8021458 <_printf_i+0xd8>
 80213e4:	2973      	cmp	r1, #115	; 0x73
 80213e6:	f000 809d 	beq.w	8021524 <_printf_i+0x1a4>
 80213ea:	d808      	bhi.n	80213fe <_printf_i+0x7e>
 80213ec:	296f      	cmp	r1, #111	; 0x6f
 80213ee:	d020      	beq.n	8021432 <_printf_i+0xb2>
 80213f0:	2970      	cmp	r1, #112	; 0x70
 80213f2:	d1dd      	bne.n	80213b0 <_printf_i+0x30>
 80213f4:	6823      	ldr	r3, [r4, #0]
 80213f6:	f043 0320 	orr.w	r3, r3, #32
 80213fa:	6023      	str	r3, [r4, #0]
 80213fc:	e003      	b.n	8021406 <_printf_i+0x86>
 80213fe:	2975      	cmp	r1, #117	; 0x75
 8021400:	d017      	beq.n	8021432 <_printf_i+0xb2>
 8021402:	2978      	cmp	r1, #120	; 0x78
 8021404:	d1d4      	bne.n	80213b0 <_printf_i+0x30>
 8021406:	2378      	movs	r3, #120	; 0x78
 8021408:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 802140c:	4864      	ldr	r0, [pc, #400]	; (80215a0 <_printf_i+0x220>)
 802140e:	e055      	b.n	80214bc <_printf_i+0x13c>
 8021410:	6813      	ldr	r3, [r2, #0]
 8021412:	1d19      	adds	r1, r3, #4
 8021414:	681b      	ldr	r3, [r3, #0]
 8021416:	6011      	str	r1, [r2, #0]
 8021418:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802141c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8021420:	2301      	movs	r3, #1
 8021422:	e08c      	b.n	802153e <_printf_i+0x1be>
 8021424:	681b      	ldr	r3, [r3, #0]
 8021426:	6011      	str	r1, [r2, #0]
 8021428:	f010 0f40 	tst.w	r0, #64	; 0x40
 802142c:	bf18      	it	ne
 802142e:	b21b      	sxthne	r3, r3
 8021430:	e7cf      	b.n	80213d2 <_printf_i+0x52>
 8021432:	6813      	ldr	r3, [r2, #0]
 8021434:	6825      	ldr	r5, [r4, #0]
 8021436:	1d18      	adds	r0, r3, #4
 8021438:	6010      	str	r0, [r2, #0]
 802143a:	0628      	lsls	r0, r5, #24
 802143c:	d501      	bpl.n	8021442 <_printf_i+0xc2>
 802143e:	681b      	ldr	r3, [r3, #0]
 8021440:	e002      	b.n	8021448 <_printf_i+0xc8>
 8021442:	0668      	lsls	r0, r5, #25
 8021444:	d5fb      	bpl.n	802143e <_printf_i+0xbe>
 8021446:	881b      	ldrh	r3, [r3, #0]
 8021448:	4854      	ldr	r0, [pc, #336]	; (802159c <_printf_i+0x21c>)
 802144a:	296f      	cmp	r1, #111	; 0x6f
 802144c:	bf14      	ite	ne
 802144e:	220a      	movne	r2, #10
 8021450:	2208      	moveq	r2, #8
 8021452:	2100      	movs	r1, #0
 8021454:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8021458:	6865      	ldr	r5, [r4, #4]
 802145a:	60a5      	str	r5, [r4, #8]
 802145c:	2d00      	cmp	r5, #0
 802145e:	f2c0 8095 	blt.w	802158c <_printf_i+0x20c>
 8021462:	6821      	ldr	r1, [r4, #0]
 8021464:	f021 0104 	bic.w	r1, r1, #4
 8021468:	6021      	str	r1, [r4, #0]
 802146a:	2b00      	cmp	r3, #0
 802146c:	d13d      	bne.n	80214ea <_printf_i+0x16a>
 802146e:	2d00      	cmp	r5, #0
 8021470:	f040 808e 	bne.w	8021590 <_printf_i+0x210>
 8021474:	4665      	mov	r5, ip
 8021476:	2a08      	cmp	r2, #8
 8021478:	d10b      	bne.n	8021492 <_printf_i+0x112>
 802147a:	6823      	ldr	r3, [r4, #0]
 802147c:	07db      	lsls	r3, r3, #31
 802147e:	d508      	bpl.n	8021492 <_printf_i+0x112>
 8021480:	6923      	ldr	r3, [r4, #16]
 8021482:	6862      	ldr	r2, [r4, #4]
 8021484:	429a      	cmp	r2, r3
 8021486:	bfde      	ittt	le
 8021488:	2330      	movle	r3, #48	; 0x30
 802148a:	f805 3c01 	strble.w	r3, [r5, #-1]
 802148e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8021492:	ebac 0305 	sub.w	r3, ip, r5
 8021496:	6123      	str	r3, [r4, #16]
 8021498:	f8cd 8000 	str.w	r8, [sp]
 802149c:	463b      	mov	r3, r7
 802149e:	aa03      	add	r2, sp, #12
 80214a0:	4621      	mov	r1, r4
 80214a2:	4630      	mov	r0, r6
 80214a4:	f7ff fef6 	bl	8021294 <_printf_common>
 80214a8:	3001      	adds	r0, #1
 80214aa:	d14d      	bne.n	8021548 <_printf_i+0x1c8>
 80214ac:	f04f 30ff 	mov.w	r0, #4294967295
 80214b0:	b005      	add	sp, #20
 80214b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80214b6:	4839      	ldr	r0, [pc, #228]	; (802159c <_printf_i+0x21c>)
 80214b8:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 80214bc:	6813      	ldr	r3, [r2, #0]
 80214be:	6821      	ldr	r1, [r4, #0]
 80214c0:	1d1d      	adds	r5, r3, #4
 80214c2:	681b      	ldr	r3, [r3, #0]
 80214c4:	6015      	str	r5, [r2, #0]
 80214c6:	060a      	lsls	r2, r1, #24
 80214c8:	d50b      	bpl.n	80214e2 <_printf_i+0x162>
 80214ca:	07ca      	lsls	r2, r1, #31
 80214cc:	bf44      	itt	mi
 80214ce:	f041 0120 	orrmi.w	r1, r1, #32
 80214d2:	6021      	strmi	r1, [r4, #0]
 80214d4:	b91b      	cbnz	r3, 80214de <_printf_i+0x15e>
 80214d6:	6822      	ldr	r2, [r4, #0]
 80214d8:	f022 0220 	bic.w	r2, r2, #32
 80214dc:	6022      	str	r2, [r4, #0]
 80214de:	2210      	movs	r2, #16
 80214e0:	e7b7      	b.n	8021452 <_printf_i+0xd2>
 80214e2:	064d      	lsls	r5, r1, #25
 80214e4:	bf48      	it	mi
 80214e6:	b29b      	uxthmi	r3, r3
 80214e8:	e7ef      	b.n	80214ca <_printf_i+0x14a>
 80214ea:	4665      	mov	r5, ip
 80214ec:	fbb3 f1f2 	udiv	r1, r3, r2
 80214f0:	fb02 3311 	mls	r3, r2, r1, r3
 80214f4:	5cc3      	ldrb	r3, [r0, r3]
 80214f6:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80214fa:	460b      	mov	r3, r1
 80214fc:	2900      	cmp	r1, #0
 80214fe:	d1f5      	bne.n	80214ec <_printf_i+0x16c>
 8021500:	e7b9      	b.n	8021476 <_printf_i+0xf6>
 8021502:	6813      	ldr	r3, [r2, #0]
 8021504:	6825      	ldr	r5, [r4, #0]
 8021506:	6961      	ldr	r1, [r4, #20]
 8021508:	1d18      	adds	r0, r3, #4
 802150a:	6010      	str	r0, [r2, #0]
 802150c:	0628      	lsls	r0, r5, #24
 802150e:	681b      	ldr	r3, [r3, #0]
 8021510:	d501      	bpl.n	8021516 <_printf_i+0x196>
 8021512:	6019      	str	r1, [r3, #0]
 8021514:	e002      	b.n	802151c <_printf_i+0x19c>
 8021516:	066a      	lsls	r2, r5, #25
 8021518:	d5fb      	bpl.n	8021512 <_printf_i+0x192>
 802151a:	8019      	strh	r1, [r3, #0]
 802151c:	2300      	movs	r3, #0
 802151e:	6123      	str	r3, [r4, #16]
 8021520:	4665      	mov	r5, ip
 8021522:	e7b9      	b.n	8021498 <_printf_i+0x118>
 8021524:	6813      	ldr	r3, [r2, #0]
 8021526:	1d19      	adds	r1, r3, #4
 8021528:	6011      	str	r1, [r2, #0]
 802152a:	681d      	ldr	r5, [r3, #0]
 802152c:	6862      	ldr	r2, [r4, #4]
 802152e:	2100      	movs	r1, #0
 8021530:	4628      	mov	r0, r5
 8021532:	f7de fe85 	bl	8000240 <memchr>
 8021536:	b108      	cbz	r0, 802153c <_printf_i+0x1bc>
 8021538:	1b40      	subs	r0, r0, r5
 802153a:	6060      	str	r0, [r4, #4]
 802153c:	6863      	ldr	r3, [r4, #4]
 802153e:	6123      	str	r3, [r4, #16]
 8021540:	2300      	movs	r3, #0
 8021542:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021546:	e7a7      	b.n	8021498 <_printf_i+0x118>
 8021548:	6923      	ldr	r3, [r4, #16]
 802154a:	462a      	mov	r2, r5
 802154c:	4639      	mov	r1, r7
 802154e:	4630      	mov	r0, r6
 8021550:	47c0      	blx	r8
 8021552:	3001      	adds	r0, #1
 8021554:	d0aa      	beq.n	80214ac <_printf_i+0x12c>
 8021556:	6823      	ldr	r3, [r4, #0]
 8021558:	079b      	lsls	r3, r3, #30
 802155a:	d413      	bmi.n	8021584 <_printf_i+0x204>
 802155c:	68e0      	ldr	r0, [r4, #12]
 802155e:	9b03      	ldr	r3, [sp, #12]
 8021560:	4298      	cmp	r0, r3
 8021562:	bfb8      	it	lt
 8021564:	4618      	movlt	r0, r3
 8021566:	e7a3      	b.n	80214b0 <_printf_i+0x130>
 8021568:	2301      	movs	r3, #1
 802156a:	464a      	mov	r2, r9
 802156c:	4639      	mov	r1, r7
 802156e:	4630      	mov	r0, r6
 8021570:	47c0      	blx	r8
 8021572:	3001      	adds	r0, #1
 8021574:	d09a      	beq.n	80214ac <_printf_i+0x12c>
 8021576:	3501      	adds	r5, #1
 8021578:	68e3      	ldr	r3, [r4, #12]
 802157a:	9a03      	ldr	r2, [sp, #12]
 802157c:	1a9b      	subs	r3, r3, r2
 802157e:	42ab      	cmp	r3, r5
 8021580:	dcf2      	bgt.n	8021568 <_printf_i+0x1e8>
 8021582:	e7eb      	b.n	802155c <_printf_i+0x1dc>
 8021584:	2500      	movs	r5, #0
 8021586:	f104 0919 	add.w	r9, r4, #25
 802158a:	e7f5      	b.n	8021578 <_printf_i+0x1f8>
 802158c:	2b00      	cmp	r3, #0
 802158e:	d1ac      	bne.n	80214ea <_printf_i+0x16a>
 8021590:	7803      	ldrb	r3, [r0, #0]
 8021592:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8021596:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802159a:	e76c      	b.n	8021476 <_printf_i+0xf6>
 802159c:	08025ee1 	.word	0x08025ee1
 80215a0:	08025ef2 	.word	0x08025ef2

080215a4 <_sbrk_r>:
 80215a4:	b538      	push	{r3, r4, r5, lr}
 80215a6:	4c06      	ldr	r4, [pc, #24]	; (80215c0 <_sbrk_r+0x1c>)
 80215a8:	2300      	movs	r3, #0
 80215aa:	4605      	mov	r5, r0
 80215ac:	4608      	mov	r0, r1
 80215ae:	6023      	str	r3, [r4, #0]
 80215b0:	f7e0 fc48 	bl	8001e44 <_sbrk>
 80215b4:	1c43      	adds	r3, r0, #1
 80215b6:	d102      	bne.n	80215be <_sbrk_r+0x1a>
 80215b8:	6823      	ldr	r3, [r4, #0]
 80215ba:	b103      	cbz	r3, 80215be <_sbrk_r+0x1a>
 80215bc:	602b      	str	r3, [r5, #0]
 80215be:	bd38      	pop	{r3, r4, r5, pc}
 80215c0:	20016cd0 	.word	0x20016cd0

080215c4 <_raise_r>:
 80215c4:	291f      	cmp	r1, #31
 80215c6:	b538      	push	{r3, r4, r5, lr}
 80215c8:	4604      	mov	r4, r0
 80215ca:	460d      	mov	r5, r1
 80215cc:	d904      	bls.n	80215d8 <_raise_r+0x14>
 80215ce:	2316      	movs	r3, #22
 80215d0:	6003      	str	r3, [r0, #0]
 80215d2:	f04f 30ff 	mov.w	r0, #4294967295
 80215d6:	bd38      	pop	{r3, r4, r5, pc}
 80215d8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80215da:	b112      	cbz	r2, 80215e2 <_raise_r+0x1e>
 80215dc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80215e0:	b94b      	cbnz	r3, 80215f6 <_raise_r+0x32>
 80215e2:	4620      	mov	r0, r4
 80215e4:	f000 f830 	bl	8021648 <_getpid_r>
 80215e8:	462a      	mov	r2, r5
 80215ea:	4601      	mov	r1, r0
 80215ec:	4620      	mov	r0, r4
 80215ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80215f2:	f000 b817 	b.w	8021624 <_kill_r>
 80215f6:	2b01      	cmp	r3, #1
 80215f8:	d00a      	beq.n	8021610 <_raise_r+0x4c>
 80215fa:	1c59      	adds	r1, r3, #1
 80215fc:	d103      	bne.n	8021606 <_raise_r+0x42>
 80215fe:	2316      	movs	r3, #22
 8021600:	6003      	str	r3, [r0, #0]
 8021602:	2001      	movs	r0, #1
 8021604:	e7e7      	b.n	80215d6 <_raise_r+0x12>
 8021606:	2400      	movs	r4, #0
 8021608:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802160c:	4628      	mov	r0, r5
 802160e:	4798      	blx	r3
 8021610:	2000      	movs	r0, #0
 8021612:	e7e0      	b.n	80215d6 <_raise_r+0x12>

08021614 <raise>:
 8021614:	4b02      	ldr	r3, [pc, #8]	; (8021620 <raise+0xc>)
 8021616:	4601      	mov	r1, r0
 8021618:	6818      	ldr	r0, [r3, #0]
 802161a:	f7ff bfd3 	b.w	80215c4 <_raise_r>
 802161e:	bf00      	nop
 8021620:	200000f0 	.word	0x200000f0

08021624 <_kill_r>:
 8021624:	b538      	push	{r3, r4, r5, lr}
 8021626:	4c07      	ldr	r4, [pc, #28]	; (8021644 <_kill_r+0x20>)
 8021628:	2300      	movs	r3, #0
 802162a:	4605      	mov	r5, r0
 802162c:	4608      	mov	r0, r1
 802162e:	4611      	mov	r1, r2
 8021630:	6023      	str	r3, [r4, #0]
 8021632:	f7e0 fbd1 	bl	8001dd8 <_kill>
 8021636:	1c43      	adds	r3, r0, #1
 8021638:	d102      	bne.n	8021640 <_kill_r+0x1c>
 802163a:	6823      	ldr	r3, [r4, #0]
 802163c:	b103      	cbz	r3, 8021640 <_kill_r+0x1c>
 802163e:	602b      	str	r3, [r5, #0]
 8021640:	bd38      	pop	{r3, r4, r5, pc}
 8021642:	bf00      	nop
 8021644:	20016cd0 	.word	0x20016cd0

08021648 <_getpid_r>:
 8021648:	f7e0 bbc4 	b.w	8001dd4 <_getpid>

0802164c <__swbuf_r>:
 802164c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802164e:	460e      	mov	r6, r1
 8021650:	4614      	mov	r4, r2
 8021652:	4605      	mov	r5, r0
 8021654:	b118      	cbz	r0, 802165e <__swbuf_r+0x12>
 8021656:	6983      	ldr	r3, [r0, #24]
 8021658:	b90b      	cbnz	r3, 802165e <__swbuf_r+0x12>
 802165a:	f000 fa0b 	bl	8021a74 <__sinit>
 802165e:	4b21      	ldr	r3, [pc, #132]	; (80216e4 <__swbuf_r+0x98>)
 8021660:	429c      	cmp	r4, r3
 8021662:	d12a      	bne.n	80216ba <__swbuf_r+0x6e>
 8021664:	686c      	ldr	r4, [r5, #4]
 8021666:	69a3      	ldr	r3, [r4, #24]
 8021668:	60a3      	str	r3, [r4, #8]
 802166a:	89a3      	ldrh	r3, [r4, #12]
 802166c:	071a      	lsls	r2, r3, #28
 802166e:	d52e      	bpl.n	80216ce <__swbuf_r+0x82>
 8021670:	6923      	ldr	r3, [r4, #16]
 8021672:	b363      	cbz	r3, 80216ce <__swbuf_r+0x82>
 8021674:	6923      	ldr	r3, [r4, #16]
 8021676:	6820      	ldr	r0, [r4, #0]
 8021678:	1ac0      	subs	r0, r0, r3
 802167a:	6963      	ldr	r3, [r4, #20]
 802167c:	b2f6      	uxtb	r6, r6
 802167e:	4283      	cmp	r3, r0
 8021680:	4637      	mov	r7, r6
 8021682:	dc04      	bgt.n	802168e <__swbuf_r+0x42>
 8021684:	4621      	mov	r1, r4
 8021686:	4628      	mov	r0, r5
 8021688:	f000 f98a 	bl	80219a0 <_fflush_r>
 802168c:	bb28      	cbnz	r0, 80216da <__swbuf_r+0x8e>
 802168e:	68a3      	ldr	r3, [r4, #8]
 8021690:	3b01      	subs	r3, #1
 8021692:	60a3      	str	r3, [r4, #8]
 8021694:	6823      	ldr	r3, [r4, #0]
 8021696:	1c5a      	adds	r2, r3, #1
 8021698:	6022      	str	r2, [r4, #0]
 802169a:	701e      	strb	r6, [r3, #0]
 802169c:	6963      	ldr	r3, [r4, #20]
 802169e:	3001      	adds	r0, #1
 80216a0:	4283      	cmp	r3, r0
 80216a2:	d004      	beq.n	80216ae <__swbuf_r+0x62>
 80216a4:	89a3      	ldrh	r3, [r4, #12]
 80216a6:	07db      	lsls	r3, r3, #31
 80216a8:	d519      	bpl.n	80216de <__swbuf_r+0x92>
 80216aa:	2e0a      	cmp	r6, #10
 80216ac:	d117      	bne.n	80216de <__swbuf_r+0x92>
 80216ae:	4621      	mov	r1, r4
 80216b0:	4628      	mov	r0, r5
 80216b2:	f000 f975 	bl	80219a0 <_fflush_r>
 80216b6:	b190      	cbz	r0, 80216de <__swbuf_r+0x92>
 80216b8:	e00f      	b.n	80216da <__swbuf_r+0x8e>
 80216ba:	4b0b      	ldr	r3, [pc, #44]	; (80216e8 <__swbuf_r+0x9c>)
 80216bc:	429c      	cmp	r4, r3
 80216be:	d101      	bne.n	80216c4 <__swbuf_r+0x78>
 80216c0:	68ac      	ldr	r4, [r5, #8]
 80216c2:	e7d0      	b.n	8021666 <__swbuf_r+0x1a>
 80216c4:	4b09      	ldr	r3, [pc, #36]	; (80216ec <__swbuf_r+0xa0>)
 80216c6:	429c      	cmp	r4, r3
 80216c8:	bf08      	it	eq
 80216ca:	68ec      	ldreq	r4, [r5, #12]
 80216cc:	e7cb      	b.n	8021666 <__swbuf_r+0x1a>
 80216ce:	4621      	mov	r1, r4
 80216d0:	4628      	mov	r0, r5
 80216d2:	f000 f80d 	bl	80216f0 <__swsetup_r>
 80216d6:	2800      	cmp	r0, #0
 80216d8:	d0cc      	beq.n	8021674 <__swbuf_r+0x28>
 80216da:	f04f 37ff 	mov.w	r7, #4294967295
 80216de:	4638      	mov	r0, r7
 80216e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80216e2:	bf00      	nop
 80216e4:	08025f28 	.word	0x08025f28
 80216e8:	08025f48 	.word	0x08025f48
 80216ec:	08025f08 	.word	0x08025f08

080216f0 <__swsetup_r>:
 80216f0:	4b32      	ldr	r3, [pc, #200]	; (80217bc <__swsetup_r+0xcc>)
 80216f2:	b570      	push	{r4, r5, r6, lr}
 80216f4:	681d      	ldr	r5, [r3, #0]
 80216f6:	4606      	mov	r6, r0
 80216f8:	460c      	mov	r4, r1
 80216fa:	b125      	cbz	r5, 8021706 <__swsetup_r+0x16>
 80216fc:	69ab      	ldr	r3, [r5, #24]
 80216fe:	b913      	cbnz	r3, 8021706 <__swsetup_r+0x16>
 8021700:	4628      	mov	r0, r5
 8021702:	f000 f9b7 	bl	8021a74 <__sinit>
 8021706:	4b2e      	ldr	r3, [pc, #184]	; (80217c0 <__swsetup_r+0xd0>)
 8021708:	429c      	cmp	r4, r3
 802170a:	d10f      	bne.n	802172c <__swsetup_r+0x3c>
 802170c:	686c      	ldr	r4, [r5, #4]
 802170e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021712:	b29a      	uxth	r2, r3
 8021714:	0715      	lsls	r5, r2, #28
 8021716:	d42c      	bmi.n	8021772 <__swsetup_r+0x82>
 8021718:	06d0      	lsls	r0, r2, #27
 802171a:	d411      	bmi.n	8021740 <__swsetup_r+0x50>
 802171c:	2209      	movs	r2, #9
 802171e:	6032      	str	r2, [r6, #0]
 8021720:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021724:	81a3      	strh	r3, [r4, #12]
 8021726:	f04f 30ff 	mov.w	r0, #4294967295
 802172a:	e03e      	b.n	80217aa <__swsetup_r+0xba>
 802172c:	4b25      	ldr	r3, [pc, #148]	; (80217c4 <__swsetup_r+0xd4>)
 802172e:	429c      	cmp	r4, r3
 8021730:	d101      	bne.n	8021736 <__swsetup_r+0x46>
 8021732:	68ac      	ldr	r4, [r5, #8]
 8021734:	e7eb      	b.n	802170e <__swsetup_r+0x1e>
 8021736:	4b24      	ldr	r3, [pc, #144]	; (80217c8 <__swsetup_r+0xd8>)
 8021738:	429c      	cmp	r4, r3
 802173a:	bf08      	it	eq
 802173c:	68ec      	ldreq	r4, [r5, #12]
 802173e:	e7e6      	b.n	802170e <__swsetup_r+0x1e>
 8021740:	0751      	lsls	r1, r2, #29
 8021742:	d512      	bpl.n	802176a <__swsetup_r+0x7a>
 8021744:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021746:	b141      	cbz	r1, 802175a <__swsetup_r+0x6a>
 8021748:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802174c:	4299      	cmp	r1, r3
 802174e:	d002      	beq.n	8021756 <__swsetup_r+0x66>
 8021750:	4630      	mov	r0, r6
 8021752:	f7ff fbb7 	bl	8020ec4 <_free_r>
 8021756:	2300      	movs	r3, #0
 8021758:	6363      	str	r3, [r4, #52]	; 0x34
 802175a:	89a3      	ldrh	r3, [r4, #12]
 802175c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8021760:	81a3      	strh	r3, [r4, #12]
 8021762:	2300      	movs	r3, #0
 8021764:	6063      	str	r3, [r4, #4]
 8021766:	6923      	ldr	r3, [r4, #16]
 8021768:	6023      	str	r3, [r4, #0]
 802176a:	89a3      	ldrh	r3, [r4, #12]
 802176c:	f043 0308 	orr.w	r3, r3, #8
 8021770:	81a3      	strh	r3, [r4, #12]
 8021772:	6923      	ldr	r3, [r4, #16]
 8021774:	b94b      	cbnz	r3, 802178a <__swsetup_r+0x9a>
 8021776:	89a3      	ldrh	r3, [r4, #12]
 8021778:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802177c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021780:	d003      	beq.n	802178a <__swsetup_r+0x9a>
 8021782:	4621      	mov	r1, r4
 8021784:	4630      	mov	r0, r6
 8021786:	f000 fa23 	bl	8021bd0 <__smakebuf_r>
 802178a:	89a2      	ldrh	r2, [r4, #12]
 802178c:	f012 0301 	ands.w	r3, r2, #1
 8021790:	d00c      	beq.n	80217ac <__swsetup_r+0xbc>
 8021792:	2300      	movs	r3, #0
 8021794:	60a3      	str	r3, [r4, #8]
 8021796:	6963      	ldr	r3, [r4, #20]
 8021798:	425b      	negs	r3, r3
 802179a:	61a3      	str	r3, [r4, #24]
 802179c:	6923      	ldr	r3, [r4, #16]
 802179e:	b953      	cbnz	r3, 80217b6 <__swsetup_r+0xc6>
 80217a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80217a4:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80217a8:	d1ba      	bne.n	8021720 <__swsetup_r+0x30>
 80217aa:	bd70      	pop	{r4, r5, r6, pc}
 80217ac:	0792      	lsls	r2, r2, #30
 80217ae:	bf58      	it	pl
 80217b0:	6963      	ldrpl	r3, [r4, #20]
 80217b2:	60a3      	str	r3, [r4, #8]
 80217b4:	e7f2      	b.n	802179c <__swsetup_r+0xac>
 80217b6:	2000      	movs	r0, #0
 80217b8:	e7f7      	b.n	80217aa <__swsetup_r+0xba>
 80217ba:	bf00      	nop
 80217bc:	200000f0 	.word	0x200000f0
 80217c0:	08025f28 	.word	0x08025f28
 80217c4:	08025f48 	.word	0x08025f48
 80217c8:	08025f08 	.word	0x08025f08

080217cc <__register_exitproc>:
 80217cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80217d0:	4d2c      	ldr	r5, [pc, #176]	; (8021884 <__register_exitproc+0xb8>)
 80217d2:	682c      	ldr	r4, [r5, #0]
 80217d4:	4607      	mov	r7, r0
 80217d6:	460e      	mov	r6, r1
 80217d8:	4691      	mov	r9, r2
 80217da:	4698      	mov	r8, r3
 80217dc:	b934      	cbnz	r4, 80217ec <__register_exitproc+0x20>
 80217de:	4b2a      	ldr	r3, [pc, #168]	; (8021888 <__register_exitproc+0xbc>)
 80217e0:	4c2a      	ldr	r4, [pc, #168]	; (802188c <__register_exitproc+0xc0>)
 80217e2:	602c      	str	r4, [r5, #0]
 80217e4:	b113      	cbz	r3, 80217ec <__register_exitproc+0x20>
 80217e6:	681b      	ldr	r3, [r3, #0]
 80217e8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80217ec:	6863      	ldr	r3, [r4, #4]
 80217ee:	2b1f      	cmp	r3, #31
 80217f0:	dd3d      	ble.n	802186e <__register_exitproc+0xa2>
 80217f2:	4b27      	ldr	r3, [pc, #156]	; (8021890 <__register_exitproc+0xc4>)
 80217f4:	b91b      	cbnz	r3, 80217fe <__register_exitproc+0x32>
 80217f6:	f04f 30ff 	mov.w	r0, #4294967295
 80217fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80217fe:	208c      	movs	r0, #140	; 0x8c
 8021800:	f7ff fb24 	bl	8020e4c <malloc>
 8021804:	4604      	mov	r4, r0
 8021806:	2800      	cmp	r0, #0
 8021808:	d0f5      	beq.n	80217f6 <__register_exitproc+0x2a>
 802180a:	2300      	movs	r3, #0
 802180c:	682a      	ldr	r2, [r5, #0]
 802180e:	6002      	str	r2, [r0, #0]
 8021810:	6043      	str	r3, [r0, #4]
 8021812:	6028      	str	r0, [r5, #0]
 8021814:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 8021818:	b30f      	cbz	r7, 802185e <__register_exitproc+0x92>
 802181a:	f44f 7084 	mov.w	r0, #264	; 0x108
 802181e:	f7ff fb15 	bl	8020e4c <malloc>
 8021822:	2800      	cmp	r0, #0
 8021824:	d0e7      	beq.n	80217f6 <__register_exitproc+0x2a>
 8021826:	2300      	movs	r3, #0
 8021828:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802182c:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 8021830:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8021834:	6862      	ldr	r2, [r4, #4]
 8021836:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 802183a:	2301      	movs	r3, #1
 802183c:	4093      	lsls	r3, r2
 802183e:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 8021842:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 8021846:	431a      	orrs	r2, r3
 8021848:	2f02      	cmp	r7, #2
 802184a:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 802184e:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 8021852:	bf02      	ittt	eq
 8021854:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 8021858:	4313      	orreq	r3, r2
 802185a:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802185e:	6863      	ldr	r3, [r4, #4]
 8021860:	1c5a      	adds	r2, r3, #1
 8021862:	3302      	adds	r3, #2
 8021864:	6062      	str	r2, [r4, #4]
 8021866:	2000      	movs	r0, #0
 8021868:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802186c:	e7c5      	b.n	80217fa <__register_exitproc+0x2e>
 802186e:	2f00      	cmp	r7, #0
 8021870:	d0f5      	beq.n	802185e <__register_exitproc+0x92>
 8021872:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8021876:	2800      	cmp	r0, #0
 8021878:	d1dc      	bne.n	8021834 <__register_exitproc+0x68>
 802187a:	4b05      	ldr	r3, [pc, #20]	; (8021890 <__register_exitproc+0xc4>)
 802187c:	2b00      	cmp	r3, #0
 802187e:	d0ba      	beq.n	80217f6 <__register_exitproc+0x2a>
 8021880:	e7cb      	b.n	802181a <__register_exitproc+0x4e>
 8021882:	bf00      	nop
 8021884:	2001284c 	.word	0x2001284c
 8021888:	08025f04 	.word	0x08025f04
 802188c:	200127c0 	.word	0x200127c0
 8021890:	08020e4d 	.word	0x08020e4d

08021894 <__sflush_r>:
 8021894:	898a      	ldrh	r2, [r1, #12]
 8021896:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802189a:	4605      	mov	r5, r0
 802189c:	0710      	lsls	r0, r2, #28
 802189e:	460c      	mov	r4, r1
 80218a0:	d458      	bmi.n	8021954 <__sflush_r+0xc0>
 80218a2:	684b      	ldr	r3, [r1, #4]
 80218a4:	2b00      	cmp	r3, #0
 80218a6:	dc05      	bgt.n	80218b4 <__sflush_r+0x20>
 80218a8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80218aa:	2b00      	cmp	r3, #0
 80218ac:	dc02      	bgt.n	80218b4 <__sflush_r+0x20>
 80218ae:	2000      	movs	r0, #0
 80218b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80218b4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80218b6:	2e00      	cmp	r6, #0
 80218b8:	d0f9      	beq.n	80218ae <__sflush_r+0x1a>
 80218ba:	2300      	movs	r3, #0
 80218bc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80218c0:	682f      	ldr	r7, [r5, #0]
 80218c2:	6a21      	ldr	r1, [r4, #32]
 80218c4:	602b      	str	r3, [r5, #0]
 80218c6:	d032      	beq.n	802192e <__sflush_r+0x9a>
 80218c8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80218ca:	89a3      	ldrh	r3, [r4, #12]
 80218cc:	075a      	lsls	r2, r3, #29
 80218ce:	d505      	bpl.n	80218dc <__sflush_r+0x48>
 80218d0:	6863      	ldr	r3, [r4, #4]
 80218d2:	1ac0      	subs	r0, r0, r3
 80218d4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80218d6:	b10b      	cbz	r3, 80218dc <__sflush_r+0x48>
 80218d8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80218da:	1ac0      	subs	r0, r0, r3
 80218dc:	2300      	movs	r3, #0
 80218de:	4602      	mov	r2, r0
 80218e0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80218e2:	6a21      	ldr	r1, [r4, #32]
 80218e4:	4628      	mov	r0, r5
 80218e6:	47b0      	blx	r6
 80218e8:	1c43      	adds	r3, r0, #1
 80218ea:	89a3      	ldrh	r3, [r4, #12]
 80218ec:	d106      	bne.n	80218fc <__sflush_r+0x68>
 80218ee:	6829      	ldr	r1, [r5, #0]
 80218f0:	291d      	cmp	r1, #29
 80218f2:	d848      	bhi.n	8021986 <__sflush_r+0xf2>
 80218f4:	4a29      	ldr	r2, [pc, #164]	; (802199c <__sflush_r+0x108>)
 80218f6:	40ca      	lsrs	r2, r1
 80218f8:	07d6      	lsls	r6, r2, #31
 80218fa:	d544      	bpl.n	8021986 <__sflush_r+0xf2>
 80218fc:	2200      	movs	r2, #0
 80218fe:	6062      	str	r2, [r4, #4]
 8021900:	04d9      	lsls	r1, r3, #19
 8021902:	6922      	ldr	r2, [r4, #16]
 8021904:	6022      	str	r2, [r4, #0]
 8021906:	d504      	bpl.n	8021912 <__sflush_r+0x7e>
 8021908:	1c42      	adds	r2, r0, #1
 802190a:	d101      	bne.n	8021910 <__sflush_r+0x7c>
 802190c:	682b      	ldr	r3, [r5, #0]
 802190e:	b903      	cbnz	r3, 8021912 <__sflush_r+0x7e>
 8021910:	6560      	str	r0, [r4, #84]	; 0x54
 8021912:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021914:	602f      	str	r7, [r5, #0]
 8021916:	2900      	cmp	r1, #0
 8021918:	d0c9      	beq.n	80218ae <__sflush_r+0x1a>
 802191a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802191e:	4299      	cmp	r1, r3
 8021920:	d002      	beq.n	8021928 <__sflush_r+0x94>
 8021922:	4628      	mov	r0, r5
 8021924:	f7ff face 	bl	8020ec4 <_free_r>
 8021928:	2000      	movs	r0, #0
 802192a:	6360      	str	r0, [r4, #52]	; 0x34
 802192c:	e7c0      	b.n	80218b0 <__sflush_r+0x1c>
 802192e:	2301      	movs	r3, #1
 8021930:	4628      	mov	r0, r5
 8021932:	47b0      	blx	r6
 8021934:	1c41      	adds	r1, r0, #1
 8021936:	d1c8      	bne.n	80218ca <__sflush_r+0x36>
 8021938:	682b      	ldr	r3, [r5, #0]
 802193a:	2b00      	cmp	r3, #0
 802193c:	d0c5      	beq.n	80218ca <__sflush_r+0x36>
 802193e:	2b1d      	cmp	r3, #29
 8021940:	d001      	beq.n	8021946 <__sflush_r+0xb2>
 8021942:	2b16      	cmp	r3, #22
 8021944:	d101      	bne.n	802194a <__sflush_r+0xb6>
 8021946:	602f      	str	r7, [r5, #0]
 8021948:	e7b1      	b.n	80218ae <__sflush_r+0x1a>
 802194a:	89a3      	ldrh	r3, [r4, #12]
 802194c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021950:	81a3      	strh	r3, [r4, #12]
 8021952:	e7ad      	b.n	80218b0 <__sflush_r+0x1c>
 8021954:	690f      	ldr	r7, [r1, #16]
 8021956:	2f00      	cmp	r7, #0
 8021958:	d0a9      	beq.n	80218ae <__sflush_r+0x1a>
 802195a:	0793      	lsls	r3, r2, #30
 802195c:	680e      	ldr	r6, [r1, #0]
 802195e:	bf08      	it	eq
 8021960:	694b      	ldreq	r3, [r1, #20]
 8021962:	600f      	str	r7, [r1, #0]
 8021964:	bf18      	it	ne
 8021966:	2300      	movne	r3, #0
 8021968:	eba6 0807 	sub.w	r8, r6, r7
 802196c:	608b      	str	r3, [r1, #8]
 802196e:	f1b8 0f00 	cmp.w	r8, #0
 8021972:	dd9c      	ble.n	80218ae <__sflush_r+0x1a>
 8021974:	4643      	mov	r3, r8
 8021976:	463a      	mov	r2, r7
 8021978:	6a21      	ldr	r1, [r4, #32]
 802197a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802197c:	4628      	mov	r0, r5
 802197e:	47b0      	blx	r6
 8021980:	2800      	cmp	r0, #0
 8021982:	dc06      	bgt.n	8021992 <__sflush_r+0xfe>
 8021984:	89a3      	ldrh	r3, [r4, #12]
 8021986:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802198a:	81a3      	strh	r3, [r4, #12]
 802198c:	f04f 30ff 	mov.w	r0, #4294967295
 8021990:	e78e      	b.n	80218b0 <__sflush_r+0x1c>
 8021992:	4407      	add	r7, r0
 8021994:	eba8 0800 	sub.w	r8, r8, r0
 8021998:	e7e9      	b.n	802196e <__sflush_r+0xda>
 802199a:	bf00      	nop
 802199c:	20400001 	.word	0x20400001

080219a0 <_fflush_r>:
 80219a0:	b538      	push	{r3, r4, r5, lr}
 80219a2:	690b      	ldr	r3, [r1, #16]
 80219a4:	4605      	mov	r5, r0
 80219a6:	460c      	mov	r4, r1
 80219a8:	b1db      	cbz	r3, 80219e2 <_fflush_r+0x42>
 80219aa:	b118      	cbz	r0, 80219b4 <_fflush_r+0x14>
 80219ac:	6983      	ldr	r3, [r0, #24]
 80219ae:	b90b      	cbnz	r3, 80219b4 <_fflush_r+0x14>
 80219b0:	f000 f860 	bl	8021a74 <__sinit>
 80219b4:	4b0c      	ldr	r3, [pc, #48]	; (80219e8 <_fflush_r+0x48>)
 80219b6:	429c      	cmp	r4, r3
 80219b8:	d109      	bne.n	80219ce <_fflush_r+0x2e>
 80219ba:	686c      	ldr	r4, [r5, #4]
 80219bc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80219c0:	b17b      	cbz	r3, 80219e2 <_fflush_r+0x42>
 80219c2:	4621      	mov	r1, r4
 80219c4:	4628      	mov	r0, r5
 80219c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80219ca:	f7ff bf63 	b.w	8021894 <__sflush_r>
 80219ce:	4b07      	ldr	r3, [pc, #28]	; (80219ec <_fflush_r+0x4c>)
 80219d0:	429c      	cmp	r4, r3
 80219d2:	d101      	bne.n	80219d8 <_fflush_r+0x38>
 80219d4:	68ac      	ldr	r4, [r5, #8]
 80219d6:	e7f1      	b.n	80219bc <_fflush_r+0x1c>
 80219d8:	4b05      	ldr	r3, [pc, #20]	; (80219f0 <_fflush_r+0x50>)
 80219da:	429c      	cmp	r4, r3
 80219dc:	bf08      	it	eq
 80219de:	68ec      	ldreq	r4, [r5, #12]
 80219e0:	e7ec      	b.n	80219bc <_fflush_r+0x1c>
 80219e2:	2000      	movs	r0, #0
 80219e4:	bd38      	pop	{r3, r4, r5, pc}
 80219e6:	bf00      	nop
 80219e8:	08025f28 	.word	0x08025f28
 80219ec:	08025f48 	.word	0x08025f48
 80219f0:	08025f08 	.word	0x08025f08

080219f4 <std>:
 80219f4:	2300      	movs	r3, #0
 80219f6:	b510      	push	{r4, lr}
 80219f8:	4604      	mov	r4, r0
 80219fa:	e9c0 3300 	strd	r3, r3, [r0]
 80219fe:	6083      	str	r3, [r0, #8]
 8021a00:	8181      	strh	r1, [r0, #12]
 8021a02:	6643      	str	r3, [r0, #100]	; 0x64
 8021a04:	81c2      	strh	r2, [r0, #14]
 8021a06:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8021a0a:	6183      	str	r3, [r0, #24]
 8021a0c:	4619      	mov	r1, r3
 8021a0e:	2208      	movs	r2, #8
 8021a10:	305c      	adds	r0, #92	; 0x5c
 8021a12:	f7ff fa4f 	bl	8020eb4 <memset>
 8021a16:	4b05      	ldr	r3, [pc, #20]	; (8021a2c <std+0x38>)
 8021a18:	6263      	str	r3, [r4, #36]	; 0x24
 8021a1a:	4b05      	ldr	r3, [pc, #20]	; (8021a30 <std+0x3c>)
 8021a1c:	62a3      	str	r3, [r4, #40]	; 0x28
 8021a1e:	4b05      	ldr	r3, [pc, #20]	; (8021a34 <std+0x40>)
 8021a20:	62e3      	str	r3, [r4, #44]	; 0x2c
 8021a22:	4b05      	ldr	r3, [pc, #20]	; (8021a38 <std+0x44>)
 8021a24:	6224      	str	r4, [r4, #32]
 8021a26:	6323      	str	r3, [r4, #48]	; 0x30
 8021a28:	bd10      	pop	{r4, pc}
 8021a2a:	bf00      	nop
 8021a2c:	08021c55 	.word	0x08021c55
 8021a30:	08021c77 	.word	0x08021c77
 8021a34:	08021caf 	.word	0x08021caf
 8021a38:	08021cd3 	.word	0x08021cd3

08021a3c <_cleanup_r>:
 8021a3c:	4901      	ldr	r1, [pc, #4]	; (8021a44 <_cleanup_r+0x8>)
 8021a3e:	f000 b885 	b.w	8021b4c <_fwalk_reent>
 8021a42:	bf00      	nop
 8021a44:	080219a1 	.word	0x080219a1

08021a48 <__sfmoreglue>:
 8021a48:	b570      	push	{r4, r5, r6, lr}
 8021a4a:	1e4a      	subs	r2, r1, #1
 8021a4c:	2568      	movs	r5, #104	; 0x68
 8021a4e:	4355      	muls	r5, r2
 8021a50:	460e      	mov	r6, r1
 8021a52:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8021a56:	f7ff fa83 	bl	8020f60 <_malloc_r>
 8021a5a:	4604      	mov	r4, r0
 8021a5c:	b140      	cbz	r0, 8021a70 <__sfmoreglue+0x28>
 8021a5e:	2100      	movs	r1, #0
 8021a60:	e9c0 1600 	strd	r1, r6, [r0]
 8021a64:	300c      	adds	r0, #12
 8021a66:	60a0      	str	r0, [r4, #8]
 8021a68:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8021a6c:	f7ff fa22 	bl	8020eb4 <memset>
 8021a70:	4620      	mov	r0, r4
 8021a72:	bd70      	pop	{r4, r5, r6, pc}

08021a74 <__sinit>:
 8021a74:	6983      	ldr	r3, [r0, #24]
 8021a76:	b510      	push	{r4, lr}
 8021a78:	4604      	mov	r4, r0
 8021a7a:	bb33      	cbnz	r3, 8021aca <__sinit+0x56>
 8021a7c:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8021a80:	6503      	str	r3, [r0, #80]	; 0x50
 8021a82:	4b12      	ldr	r3, [pc, #72]	; (8021acc <__sinit+0x58>)
 8021a84:	4a12      	ldr	r2, [pc, #72]	; (8021ad0 <__sinit+0x5c>)
 8021a86:	681b      	ldr	r3, [r3, #0]
 8021a88:	6282      	str	r2, [r0, #40]	; 0x28
 8021a8a:	4298      	cmp	r0, r3
 8021a8c:	bf04      	itt	eq
 8021a8e:	2301      	moveq	r3, #1
 8021a90:	6183      	streq	r3, [r0, #24]
 8021a92:	f000 f81f 	bl	8021ad4 <__sfp>
 8021a96:	6060      	str	r0, [r4, #4]
 8021a98:	4620      	mov	r0, r4
 8021a9a:	f000 f81b 	bl	8021ad4 <__sfp>
 8021a9e:	60a0      	str	r0, [r4, #8]
 8021aa0:	4620      	mov	r0, r4
 8021aa2:	f000 f817 	bl	8021ad4 <__sfp>
 8021aa6:	2200      	movs	r2, #0
 8021aa8:	60e0      	str	r0, [r4, #12]
 8021aaa:	2104      	movs	r1, #4
 8021aac:	6860      	ldr	r0, [r4, #4]
 8021aae:	f7ff ffa1 	bl	80219f4 <std>
 8021ab2:	2201      	movs	r2, #1
 8021ab4:	2109      	movs	r1, #9
 8021ab6:	68a0      	ldr	r0, [r4, #8]
 8021ab8:	f7ff ff9c 	bl	80219f4 <std>
 8021abc:	2202      	movs	r2, #2
 8021abe:	2112      	movs	r1, #18
 8021ac0:	68e0      	ldr	r0, [r4, #12]
 8021ac2:	f7ff ff97 	bl	80219f4 <std>
 8021ac6:	2301      	movs	r3, #1
 8021ac8:	61a3      	str	r3, [r4, #24]
 8021aca:	bd10      	pop	{r4, pc}
 8021acc:	08025ecc 	.word	0x08025ecc
 8021ad0:	08021a3d 	.word	0x08021a3d

08021ad4 <__sfp>:
 8021ad4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021ad6:	4b1b      	ldr	r3, [pc, #108]	; (8021b44 <__sfp+0x70>)
 8021ad8:	681e      	ldr	r6, [r3, #0]
 8021ada:	69b3      	ldr	r3, [r6, #24]
 8021adc:	4607      	mov	r7, r0
 8021ade:	b913      	cbnz	r3, 8021ae6 <__sfp+0x12>
 8021ae0:	4630      	mov	r0, r6
 8021ae2:	f7ff ffc7 	bl	8021a74 <__sinit>
 8021ae6:	3648      	adds	r6, #72	; 0x48
 8021ae8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8021aec:	3b01      	subs	r3, #1
 8021aee:	d503      	bpl.n	8021af8 <__sfp+0x24>
 8021af0:	6833      	ldr	r3, [r6, #0]
 8021af2:	b133      	cbz	r3, 8021b02 <__sfp+0x2e>
 8021af4:	6836      	ldr	r6, [r6, #0]
 8021af6:	e7f7      	b.n	8021ae8 <__sfp+0x14>
 8021af8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8021afc:	b16d      	cbz	r5, 8021b1a <__sfp+0x46>
 8021afe:	3468      	adds	r4, #104	; 0x68
 8021b00:	e7f4      	b.n	8021aec <__sfp+0x18>
 8021b02:	2104      	movs	r1, #4
 8021b04:	4638      	mov	r0, r7
 8021b06:	f7ff ff9f 	bl	8021a48 <__sfmoreglue>
 8021b0a:	6030      	str	r0, [r6, #0]
 8021b0c:	2800      	cmp	r0, #0
 8021b0e:	d1f1      	bne.n	8021af4 <__sfp+0x20>
 8021b10:	230c      	movs	r3, #12
 8021b12:	603b      	str	r3, [r7, #0]
 8021b14:	4604      	mov	r4, r0
 8021b16:	4620      	mov	r0, r4
 8021b18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021b1a:	4b0b      	ldr	r3, [pc, #44]	; (8021b48 <__sfp+0x74>)
 8021b1c:	6665      	str	r5, [r4, #100]	; 0x64
 8021b1e:	e9c4 5500 	strd	r5, r5, [r4]
 8021b22:	60a5      	str	r5, [r4, #8]
 8021b24:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8021b28:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8021b2c:	2208      	movs	r2, #8
 8021b2e:	4629      	mov	r1, r5
 8021b30:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8021b34:	f7ff f9be 	bl	8020eb4 <memset>
 8021b38:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8021b3c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8021b40:	e7e9      	b.n	8021b16 <__sfp+0x42>
 8021b42:	bf00      	nop
 8021b44:	08025ecc 	.word	0x08025ecc
 8021b48:	ffff0001 	.word	0xffff0001

08021b4c <_fwalk_reent>:
 8021b4c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021b50:	4680      	mov	r8, r0
 8021b52:	4689      	mov	r9, r1
 8021b54:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8021b58:	2600      	movs	r6, #0
 8021b5a:	b914      	cbnz	r4, 8021b62 <_fwalk_reent+0x16>
 8021b5c:	4630      	mov	r0, r6
 8021b5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021b62:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8021b66:	3f01      	subs	r7, #1
 8021b68:	d501      	bpl.n	8021b6e <_fwalk_reent+0x22>
 8021b6a:	6824      	ldr	r4, [r4, #0]
 8021b6c:	e7f5      	b.n	8021b5a <_fwalk_reent+0xe>
 8021b6e:	89ab      	ldrh	r3, [r5, #12]
 8021b70:	2b01      	cmp	r3, #1
 8021b72:	d907      	bls.n	8021b84 <_fwalk_reent+0x38>
 8021b74:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8021b78:	3301      	adds	r3, #1
 8021b7a:	d003      	beq.n	8021b84 <_fwalk_reent+0x38>
 8021b7c:	4629      	mov	r1, r5
 8021b7e:	4640      	mov	r0, r8
 8021b80:	47c8      	blx	r9
 8021b82:	4306      	orrs	r6, r0
 8021b84:	3568      	adds	r5, #104	; 0x68
 8021b86:	e7ee      	b.n	8021b66 <_fwalk_reent+0x1a>

08021b88 <__swhatbuf_r>:
 8021b88:	b570      	push	{r4, r5, r6, lr}
 8021b8a:	460e      	mov	r6, r1
 8021b8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021b90:	2900      	cmp	r1, #0
 8021b92:	b096      	sub	sp, #88	; 0x58
 8021b94:	4614      	mov	r4, r2
 8021b96:	461d      	mov	r5, r3
 8021b98:	da07      	bge.n	8021baa <__swhatbuf_r+0x22>
 8021b9a:	2300      	movs	r3, #0
 8021b9c:	602b      	str	r3, [r5, #0]
 8021b9e:	89b3      	ldrh	r3, [r6, #12]
 8021ba0:	061a      	lsls	r2, r3, #24
 8021ba2:	d410      	bmi.n	8021bc6 <__swhatbuf_r+0x3e>
 8021ba4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8021ba8:	e00e      	b.n	8021bc8 <__swhatbuf_r+0x40>
 8021baa:	466a      	mov	r2, sp
 8021bac:	f000 f8b8 	bl	8021d20 <_fstat_r>
 8021bb0:	2800      	cmp	r0, #0
 8021bb2:	dbf2      	blt.n	8021b9a <__swhatbuf_r+0x12>
 8021bb4:	9a01      	ldr	r2, [sp, #4]
 8021bb6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8021bba:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8021bbe:	425a      	negs	r2, r3
 8021bc0:	415a      	adcs	r2, r3
 8021bc2:	602a      	str	r2, [r5, #0]
 8021bc4:	e7ee      	b.n	8021ba4 <__swhatbuf_r+0x1c>
 8021bc6:	2340      	movs	r3, #64	; 0x40
 8021bc8:	2000      	movs	r0, #0
 8021bca:	6023      	str	r3, [r4, #0]
 8021bcc:	b016      	add	sp, #88	; 0x58
 8021bce:	bd70      	pop	{r4, r5, r6, pc}

08021bd0 <__smakebuf_r>:
 8021bd0:	898b      	ldrh	r3, [r1, #12]
 8021bd2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021bd4:	079d      	lsls	r5, r3, #30
 8021bd6:	4606      	mov	r6, r0
 8021bd8:	460c      	mov	r4, r1
 8021bda:	d507      	bpl.n	8021bec <__smakebuf_r+0x1c>
 8021bdc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021be0:	6023      	str	r3, [r4, #0]
 8021be2:	6123      	str	r3, [r4, #16]
 8021be4:	2301      	movs	r3, #1
 8021be6:	6163      	str	r3, [r4, #20]
 8021be8:	b002      	add	sp, #8
 8021bea:	bd70      	pop	{r4, r5, r6, pc}
 8021bec:	ab01      	add	r3, sp, #4
 8021bee:	466a      	mov	r2, sp
 8021bf0:	f7ff ffca 	bl	8021b88 <__swhatbuf_r>
 8021bf4:	9900      	ldr	r1, [sp, #0]
 8021bf6:	4605      	mov	r5, r0
 8021bf8:	4630      	mov	r0, r6
 8021bfa:	f7ff f9b1 	bl	8020f60 <_malloc_r>
 8021bfe:	b948      	cbnz	r0, 8021c14 <__smakebuf_r+0x44>
 8021c00:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021c04:	059a      	lsls	r2, r3, #22
 8021c06:	d4ef      	bmi.n	8021be8 <__smakebuf_r+0x18>
 8021c08:	f023 0303 	bic.w	r3, r3, #3
 8021c0c:	f043 0302 	orr.w	r3, r3, #2
 8021c10:	81a3      	strh	r3, [r4, #12]
 8021c12:	e7e3      	b.n	8021bdc <__smakebuf_r+0xc>
 8021c14:	4b0d      	ldr	r3, [pc, #52]	; (8021c4c <__smakebuf_r+0x7c>)
 8021c16:	62b3      	str	r3, [r6, #40]	; 0x28
 8021c18:	89a3      	ldrh	r3, [r4, #12]
 8021c1a:	6020      	str	r0, [r4, #0]
 8021c1c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021c20:	81a3      	strh	r3, [r4, #12]
 8021c22:	9b00      	ldr	r3, [sp, #0]
 8021c24:	6163      	str	r3, [r4, #20]
 8021c26:	9b01      	ldr	r3, [sp, #4]
 8021c28:	6120      	str	r0, [r4, #16]
 8021c2a:	b15b      	cbz	r3, 8021c44 <__smakebuf_r+0x74>
 8021c2c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021c30:	4630      	mov	r0, r6
 8021c32:	f000 f887 	bl	8021d44 <_isatty_r>
 8021c36:	b128      	cbz	r0, 8021c44 <__smakebuf_r+0x74>
 8021c38:	89a3      	ldrh	r3, [r4, #12]
 8021c3a:	f023 0303 	bic.w	r3, r3, #3
 8021c3e:	f043 0301 	orr.w	r3, r3, #1
 8021c42:	81a3      	strh	r3, [r4, #12]
 8021c44:	89a3      	ldrh	r3, [r4, #12]
 8021c46:	431d      	orrs	r5, r3
 8021c48:	81a5      	strh	r5, [r4, #12]
 8021c4a:	e7cd      	b.n	8021be8 <__smakebuf_r+0x18>
 8021c4c:	08021a3d 	.word	0x08021a3d

08021c50 <__malloc_lock>:
 8021c50:	4770      	bx	lr

08021c52 <__malloc_unlock>:
 8021c52:	4770      	bx	lr

08021c54 <__sread>:
 8021c54:	b510      	push	{r4, lr}
 8021c56:	460c      	mov	r4, r1
 8021c58:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021c5c:	f000 f894 	bl	8021d88 <_read_r>
 8021c60:	2800      	cmp	r0, #0
 8021c62:	bfab      	itete	ge
 8021c64:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021c66:	89a3      	ldrhlt	r3, [r4, #12]
 8021c68:	181b      	addge	r3, r3, r0
 8021c6a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8021c6e:	bfac      	ite	ge
 8021c70:	6563      	strge	r3, [r4, #84]	; 0x54
 8021c72:	81a3      	strhlt	r3, [r4, #12]
 8021c74:	bd10      	pop	{r4, pc}

08021c76 <__swrite>:
 8021c76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021c7a:	461f      	mov	r7, r3
 8021c7c:	898b      	ldrh	r3, [r1, #12]
 8021c7e:	05db      	lsls	r3, r3, #23
 8021c80:	4605      	mov	r5, r0
 8021c82:	460c      	mov	r4, r1
 8021c84:	4616      	mov	r6, r2
 8021c86:	d505      	bpl.n	8021c94 <__swrite+0x1e>
 8021c88:	2302      	movs	r3, #2
 8021c8a:	2200      	movs	r2, #0
 8021c8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021c90:	f000 f868 	bl	8021d64 <_lseek_r>
 8021c94:	89a3      	ldrh	r3, [r4, #12]
 8021c96:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021c9a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8021c9e:	81a3      	strh	r3, [r4, #12]
 8021ca0:	4632      	mov	r2, r6
 8021ca2:	463b      	mov	r3, r7
 8021ca4:	4628      	mov	r0, r5
 8021ca6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021caa:	f000 b817 	b.w	8021cdc <_write_r>

08021cae <__sseek>:
 8021cae:	b510      	push	{r4, lr}
 8021cb0:	460c      	mov	r4, r1
 8021cb2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021cb6:	f000 f855 	bl	8021d64 <_lseek_r>
 8021cba:	1c43      	adds	r3, r0, #1
 8021cbc:	89a3      	ldrh	r3, [r4, #12]
 8021cbe:	bf15      	itete	ne
 8021cc0:	6560      	strne	r0, [r4, #84]	; 0x54
 8021cc2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8021cc6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8021cca:	81a3      	strheq	r3, [r4, #12]
 8021ccc:	bf18      	it	ne
 8021cce:	81a3      	strhne	r3, [r4, #12]
 8021cd0:	bd10      	pop	{r4, pc}

08021cd2 <__sclose>:
 8021cd2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021cd6:	f000 b813 	b.w	8021d00 <_close_r>
	...

08021cdc <_write_r>:
 8021cdc:	b538      	push	{r3, r4, r5, lr}
 8021cde:	4c07      	ldr	r4, [pc, #28]	; (8021cfc <_write_r+0x20>)
 8021ce0:	4605      	mov	r5, r0
 8021ce2:	4608      	mov	r0, r1
 8021ce4:	4611      	mov	r1, r2
 8021ce6:	2200      	movs	r2, #0
 8021ce8:	6022      	str	r2, [r4, #0]
 8021cea:	461a      	mov	r2, r3
 8021cec:	f7e0 f890 	bl	8001e10 <_write>
 8021cf0:	1c43      	adds	r3, r0, #1
 8021cf2:	d102      	bne.n	8021cfa <_write_r+0x1e>
 8021cf4:	6823      	ldr	r3, [r4, #0]
 8021cf6:	b103      	cbz	r3, 8021cfa <_write_r+0x1e>
 8021cf8:	602b      	str	r3, [r5, #0]
 8021cfa:	bd38      	pop	{r3, r4, r5, pc}
 8021cfc:	20016cd0 	.word	0x20016cd0

08021d00 <_close_r>:
 8021d00:	b538      	push	{r3, r4, r5, lr}
 8021d02:	4c06      	ldr	r4, [pc, #24]	; (8021d1c <_close_r+0x1c>)
 8021d04:	2300      	movs	r3, #0
 8021d06:	4605      	mov	r5, r0
 8021d08:	4608      	mov	r0, r1
 8021d0a:	6023      	str	r3, [r4, #0]
 8021d0c:	f7e0 f88e 	bl	8001e2c <_close>
 8021d10:	1c43      	adds	r3, r0, #1
 8021d12:	d102      	bne.n	8021d1a <_close_r+0x1a>
 8021d14:	6823      	ldr	r3, [r4, #0]
 8021d16:	b103      	cbz	r3, 8021d1a <_close_r+0x1a>
 8021d18:	602b      	str	r3, [r5, #0]
 8021d1a:	bd38      	pop	{r3, r4, r5, pc}
 8021d1c:	20016cd0 	.word	0x20016cd0

08021d20 <_fstat_r>:
 8021d20:	b538      	push	{r3, r4, r5, lr}
 8021d22:	4c07      	ldr	r4, [pc, #28]	; (8021d40 <_fstat_r+0x20>)
 8021d24:	2300      	movs	r3, #0
 8021d26:	4605      	mov	r5, r0
 8021d28:	4608      	mov	r0, r1
 8021d2a:	4611      	mov	r1, r2
 8021d2c:	6023      	str	r3, [r4, #0]
 8021d2e:	f7e0 f880 	bl	8001e32 <_fstat>
 8021d32:	1c43      	adds	r3, r0, #1
 8021d34:	d102      	bne.n	8021d3c <_fstat_r+0x1c>
 8021d36:	6823      	ldr	r3, [r4, #0]
 8021d38:	b103      	cbz	r3, 8021d3c <_fstat_r+0x1c>
 8021d3a:	602b      	str	r3, [r5, #0]
 8021d3c:	bd38      	pop	{r3, r4, r5, pc}
 8021d3e:	bf00      	nop
 8021d40:	20016cd0 	.word	0x20016cd0

08021d44 <_isatty_r>:
 8021d44:	b538      	push	{r3, r4, r5, lr}
 8021d46:	4c06      	ldr	r4, [pc, #24]	; (8021d60 <_isatty_r+0x1c>)
 8021d48:	2300      	movs	r3, #0
 8021d4a:	4605      	mov	r5, r0
 8021d4c:	4608      	mov	r0, r1
 8021d4e:	6023      	str	r3, [r4, #0]
 8021d50:	f7e0 f874 	bl	8001e3c <_isatty>
 8021d54:	1c43      	adds	r3, r0, #1
 8021d56:	d102      	bne.n	8021d5e <_isatty_r+0x1a>
 8021d58:	6823      	ldr	r3, [r4, #0]
 8021d5a:	b103      	cbz	r3, 8021d5e <_isatty_r+0x1a>
 8021d5c:	602b      	str	r3, [r5, #0]
 8021d5e:	bd38      	pop	{r3, r4, r5, pc}
 8021d60:	20016cd0 	.word	0x20016cd0

08021d64 <_lseek_r>:
 8021d64:	b538      	push	{r3, r4, r5, lr}
 8021d66:	4c07      	ldr	r4, [pc, #28]	; (8021d84 <_lseek_r+0x20>)
 8021d68:	4605      	mov	r5, r0
 8021d6a:	4608      	mov	r0, r1
 8021d6c:	4611      	mov	r1, r2
 8021d6e:	2200      	movs	r2, #0
 8021d70:	6022      	str	r2, [r4, #0]
 8021d72:	461a      	mov	r2, r3
 8021d74:	f7e0 f864 	bl	8001e40 <_lseek>
 8021d78:	1c43      	adds	r3, r0, #1
 8021d7a:	d102      	bne.n	8021d82 <_lseek_r+0x1e>
 8021d7c:	6823      	ldr	r3, [r4, #0]
 8021d7e:	b103      	cbz	r3, 8021d82 <_lseek_r+0x1e>
 8021d80:	602b      	str	r3, [r5, #0]
 8021d82:	bd38      	pop	{r3, r4, r5, pc}
 8021d84:	20016cd0 	.word	0x20016cd0

08021d88 <_read_r>:
 8021d88:	b538      	push	{r3, r4, r5, lr}
 8021d8a:	4c07      	ldr	r4, [pc, #28]	; (8021da8 <_read_r+0x20>)
 8021d8c:	4605      	mov	r5, r0
 8021d8e:	4608      	mov	r0, r1
 8021d90:	4611      	mov	r1, r2
 8021d92:	2200      	movs	r2, #0
 8021d94:	6022      	str	r2, [r4, #0]
 8021d96:	461a      	mov	r2, r3
 8021d98:	f7e0 f82c 	bl	8001df4 <_read>
 8021d9c:	1c43      	adds	r3, r0, #1
 8021d9e:	d102      	bne.n	8021da6 <_read_r+0x1e>
 8021da0:	6823      	ldr	r3, [r4, #0]
 8021da2:	b103      	cbz	r3, 8021da6 <_read_r+0x1e>
 8021da4:	602b      	str	r3, [r5, #0]
 8021da6:	bd38      	pop	{r3, r4, r5, pc}
 8021da8:	20016cd0 	.word	0x20016cd0

08021dac <_init>:
 8021dac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021dae:	bf00      	nop
 8021db0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021db2:	bc08      	pop	{r3}
 8021db4:	469e      	mov	lr, r3
 8021db6:	4770      	bx	lr

08021db8 <_fini>:
 8021db8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021dba:	bf00      	nop
 8021dbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021dbe:	bc08      	pop	{r3}
 8021dc0:	469e      	mov	lr, r3
 8021dc2:	4770      	bx	lr
